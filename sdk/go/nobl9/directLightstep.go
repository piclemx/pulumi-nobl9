// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nobl9

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Lightstep is an observability platform that enables distributed tracing, that can be used to rapidly pinpoint the causes of failures and poor performance across the deeply complex dependencies among services, teams, and workloads in modern production systems. Nobl9 integration with Lightstep enables organizations to establish service level objectives from performance data captured through distributed traces in the Lightstep platform. Nobl9 connects with Lightstep to collect SLI measurements and compare them to SLO targets.
//
// For more information, refer to [Lightstep Direct | Nobl9 Documentation](https://docs.nobl9.com/Sources/lightstep#lightstep-direct).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-nobl9/sdk/go/nobl9"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nobl9.NewDirectLightstep(ctx, "test-lightstep", &nobl9.DirectLightstepArgs{
//				AppToken:    pulumi.String("secret"),
//				Description: pulumi.String("desc"),
//				HistoricalDataRetrieval: &DirectLightstepHistoricalDataRetrievalArgs{
//					DefaultDurations: DirectLightstepHistoricalDataRetrievalDefaultDurationArray{
//						&DirectLightstepHistoricalDataRetrievalDefaultDurationArgs{
//							Unit:  pulumi.String("Day"),
//							Value: pulumi.Int(0),
//						},
//					},
//					MaxDurations: DirectLightstepHistoricalDataRetrievalMaxDurationArray{
//						&DirectLightstepHistoricalDataRetrievalMaxDurationArgs{
//							Unit:  pulumi.String("Day"),
//							Value: pulumi.Int(30),
//						},
//					},
//				},
//				LightstepOrganization: pulumi.String("acme"),
//				LightstepProject:      pulumi.String("project1"),
//				Project:               pulumi.String("terraform"),
//				SourceOfs: pulumi.StringArray{
//					pulumi.String("Metrics"),
//					pulumi.String("Services"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## Nobl9 Official Documentation
//
// https://docs.nobl9.com/
type DirectLightstep struct {
	pulumi.CustomResourceState

	// [required] | Lightstep App Token.
	AppToken pulumi.StringOutput `pulumi:"appToken"`
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// User-friendly display name of the resource.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// [Replay configuration documentation](https://docs.nobl9.com/replay)
	HistoricalDataRetrieval DirectLightstepHistoricalDataRetrievalPtrOutput `pulumi:"historicalDataRetrieval"`
	// Organization name registered in Lightstep.
	LightstepOrganization pulumi.StringOutput `pulumi:"lightstepOrganization"`
	// Name of the Lightstep project.
	LightstepProject pulumi.StringOutput `pulumi:"lightstepProject"`
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name pulumi.StringOutput `pulumi:"name"`
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project pulumi.StringOutput `pulumi:"project"`
	// [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
	QueryDelay DirectLightstepQueryDelayPtrOutput `pulumi:"queryDelay"`
	// Source of Metrics and/or Services.
	SourceOfs pulumi.StringArrayOutput `pulumi:"sourceOfs"`
	// The status of the created direct.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewDirectLightstep registers a new resource with the given unique name, arguments, and options.
func NewDirectLightstep(ctx *pulumi.Context,
	name string, args *DirectLightstepArgs, opts ...pulumi.ResourceOption) (*DirectLightstep, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.LightstepOrganization == nil {
		return nil, errors.New("invalid value for required argument 'LightstepOrganization'")
	}
	if args.LightstepProject == nil {
		return nil, errors.New("invalid value for required argument 'LightstepProject'")
	}
	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.SourceOfs == nil {
		return nil, errors.New("invalid value for required argument 'SourceOfs'")
	}
	var resource DirectLightstep
	err := ctx.RegisterResource("nobl9:index/directLightstep:DirectLightstep", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDirectLightstep gets an existing DirectLightstep resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDirectLightstep(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DirectLightstepState, opts ...pulumi.ResourceOption) (*DirectLightstep, error) {
	var resource DirectLightstep
	err := ctx.ReadResource("nobl9:index/directLightstep:DirectLightstep", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DirectLightstep resources.
type directLightstepState struct {
	// [required] | Lightstep App Token.
	AppToken *string `pulumi:"appToken"`
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description *string `pulumi:"description"`
	// User-friendly display name of the resource.
	DisplayName *string `pulumi:"displayName"`
	// [Replay configuration documentation](https://docs.nobl9.com/replay)
	HistoricalDataRetrieval *DirectLightstepHistoricalDataRetrieval `pulumi:"historicalDataRetrieval"`
	// Organization name registered in Lightstep.
	LightstepOrganization *string `pulumi:"lightstepOrganization"`
	// Name of the Lightstep project.
	LightstepProject *string `pulumi:"lightstepProject"`
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name *string `pulumi:"name"`
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project *string `pulumi:"project"`
	// [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
	QueryDelay *DirectLightstepQueryDelay `pulumi:"queryDelay"`
	// Source of Metrics and/or Services.
	SourceOfs []string `pulumi:"sourceOfs"`
	// The status of the created direct.
	Status *string `pulumi:"status"`
}

type DirectLightstepState struct {
	// [required] | Lightstep App Token.
	AppToken pulumi.StringPtrInput
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description pulumi.StringPtrInput
	// User-friendly display name of the resource.
	DisplayName pulumi.StringPtrInput
	// [Replay configuration documentation](https://docs.nobl9.com/replay)
	HistoricalDataRetrieval DirectLightstepHistoricalDataRetrievalPtrInput
	// Organization name registered in Lightstep.
	LightstepOrganization pulumi.StringPtrInput
	// Name of the Lightstep project.
	LightstepProject pulumi.StringPtrInput
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name pulumi.StringPtrInput
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project pulumi.StringPtrInput
	// [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
	QueryDelay DirectLightstepQueryDelayPtrInput
	// Source of Metrics and/or Services.
	SourceOfs pulumi.StringArrayInput
	// The status of the created direct.
	Status pulumi.StringPtrInput
}

func (DirectLightstepState) ElementType() reflect.Type {
	return reflect.TypeOf((*directLightstepState)(nil)).Elem()
}

type directLightstepArgs struct {
	// [required] | Lightstep App Token.
	AppToken *string `pulumi:"appToken"`
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description *string `pulumi:"description"`
	// User-friendly display name of the resource.
	DisplayName *string `pulumi:"displayName"`
	// [Replay configuration documentation](https://docs.nobl9.com/replay)
	HistoricalDataRetrieval *DirectLightstepHistoricalDataRetrieval `pulumi:"historicalDataRetrieval"`
	// Organization name registered in Lightstep.
	LightstepOrganization string `pulumi:"lightstepOrganization"`
	// Name of the Lightstep project.
	LightstepProject string `pulumi:"lightstepProject"`
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name *string `pulumi:"name"`
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project string `pulumi:"project"`
	// [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
	QueryDelay *DirectLightstepQueryDelay `pulumi:"queryDelay"`
	// Source of Metrics and/or Services.
	SourceOfs []string `pulumi:"sourceOfs"`
}

// The set of arguments for constructing a DirectLightstep resource.
type DirectLightstepArgs struct {
	// [required] | Lightstep App Token.
	AppToken pulumi.StringPtrInput
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description pulumi.StringPtrInput
	// User-friendly display name of the resource.
	DisplayName pulumi.StringPtrInput
	// [Replay configuration documentation](https://docs.nobl9.com/replay)
	HistoricalDataRetrieval DirectLightstepHistoricalDataRetrievalPtrInput
	// Organization name registered in Lightstep.
	LightstepOrganization pulumi.StringInput
	// Name of the Lightstep project.
	LightstepProject pulumi.StringInput
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name pulumi.StringPtrInput
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project pulumi.StringInput
	// [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
	QueryDelay DirectLightstepQueryDelayPtrInput
	// Source of Metrics and/or Services.
	SourceOfs pulumi.StringArrayInput
}

func (DirectLightstepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*directLightstepArgs)(nil)).Elem()
}

type DirectLightstepInput interface {
	pulumi.Input

	ToDirectLightstepOutput() DirectLightstepOutput
	ToDirectLightstepOutputWithContext(ctx context.Context) DirectLightstepOutput
}

func (*DirectLightstep) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectLightstep)(nil)).Elem()
}

func (i *DirectLightstep) ToDirectLightstepOutput() DirectLightstepOutput {
	return i.ToDirectLightstepOutputWithContext(context.Background())
}

func (i *DirectLightstep) ToDirectLightstepOutputWithContext(ctx context.Context) DirectLightstepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectLightstepOutput)
}

// DirectLightstepArrayInput is an input type that accepts DirectLightstepArray and DirectLightstepArrayOutput values.
// You can construct a concrete instance of `DirectLightstepArrayInput` via:
//
//	DirectLightstepArray{ DirectLightstepArgs{...} }
type DirectLightstepArrayInput interface {
	pulumi.Input

	ToDirectLightstepArrayOutput() DirectLightstepArrayOutput
	ToDirectLightstepArrayOutputWithContext(context.Context) DirectLightstepArrayOutput
}

type DirectLightstepArray []DirectLightstepInput

func (DirectLightstepArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DirectLightstep)(nil)).Elem()
}

func (i DirectLightstepArray) ToDirectLightstepArrayOutput() DirectLightstepArrayOutput {
	return i.ToDirectLightstepArrayOutputWithContext(context.Background())
}

func (i DirectLightstepArray) ToDirectLightstepArrayOutputWithContext(ctx context.Context) DirectLightstepArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectLightstepArrayOutput)
}

// DirectLightstepMapInput is an input type that accepts DirectLightstepMap and DirectLightstepMapOutput values.
// You can construct a concrete instance of `DirectLightstepMapInput` via:
//
//	DirectLightstepMap{ "key": DirectLightstepArgs{...} }
type DirectLightstepMapInput interface {
	pulumi.Input

	ToDirectLightstepMapOutput() DirectLightstepMapOutput
	ToDirectLightstepMapOutputWithContext(context.Context) DirectLightstepMapOutput
}

type DirectLightstepMap map[string]DirectLightstepInput

func (DirectLightstepMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DirectLightstep)(nil)).Elem()
}

func (i DirectLightstepMap) ToDirectLightstepMapOutput() DirectLightstepMapOutput {
	return i.ToDirectLightstepMapOutputWithContext(context.Background())
}

func (i DirectLightstepMap) ToDirectLightstepMapOutputWithContext(ctx context.Context) DirectLightstepMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectLightstepMapOutput)
}

type DirectLightstepOutput struct{ *pulumi.OutputState }

func (DirectLightstepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectLightstep)(nil)).Elem()
}

func (o DirectLightstepOutput) ToDirectLightstepOutput() DirectLightstepOutput {
	return o
}

func (o DirectLightstepOutput) ToDirectLightstepOutputWithContext(ctx context.Context) DirectLightstepOutput {
	return o
}

// [required] | Lightstep App Token.
func (o DirectLightstepOutput) AppToken() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectLightstep) pulumi.StringOutput { return v.AppToken }).(pulumi.StringOutput)
}

// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
func (o DirectLightstepOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectLightstep) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// User-friendly display name of the resource.
func (o DirectLightstepOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectLightstep) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// [Replay configuration documentation](https://docs.nobl9.com/replay)
func (o DirectLightstepOutput) HistoricalDataRetrieval() DirectLightstepHistoricalDataRetrievalPtrOutput {
	return o.ApplyT(func(v *DirectLightstep) DirectLightstepHistoricalDataRetrievalPtrOutput {
		return v.HistoricalDataRetrieval
	}).(DirectLightstepHistoricalDataRetrievalPtrOutput)
}

// Organization name registered in Lightstep.
func (o DirectLightstepOutput) LightstepOrganization() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectLightstep) pulumi.StringOutput { return v.LightstepOrganization }).(pulumi.StringOutput)
}

// Name of the Lightstep project.
func (o DirectLightstepOutput) LightstepProject() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectLightstep) pulumi.StringOutput { return v.LightstepProject }).(pulumi.StringOutput)
}

// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
func (o DirectLightstepOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectLightstep) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
func (o DirectLightstepOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectLightstep) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
func (o DirectLightstepOutput) QueryDelay() DirectLightstepQueryDelayPtrOutput {
	return o.ApplyT(func(v *DirectLightstep) DirectLightstepQueryDelayPtrOutput { return v.QueryDelay }).(DirectLightstepQueryDelayPtrOutput)
}

// Source of Metrics and/or Services.
func (o DirectLightstepOutput) SourceOfs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DirectLightstep) pulumi.StringArrayOutput { return v.SourceOfs }).(pulumi.StringArrayOutput)
}

// The status of the created direct.
func (o DirectLightstepOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectLightstep) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type DirectLightstepArrayOutput struct{ *pulumi.OutputState }

func (DirectLightstepArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DirectLightstep)(nil)).Elem()
}

func (o DirectLightstepArrayOutput) ToDirectLightstepArrayOutput() DirectLightstepArrayOutput {
	return o
}

func (o DirectLightstepArrayOutput) ToDirectLightstepArrayOutputWithContext(ctx context.Context) DirectLightstepArrayOutput {
	return o
}

func (o DirectLightstepArrayOutput) Index(i pulumi.IntInput) DirectLightstepOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DirectLightstep {
		return vs[0].([]*DirectLightstep)[vs[1].(int)]
	}).(DirectLightstepOutput)
}

type DirectLightstepMapOutput struct{ *pulumi.OutputState }

func (DirectLightstepMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DirectLightstep)(nil)).Elem()
}

func (o DirectLightstepMapOutput) ToDirectLightstepMapOutput() DirectLightstepMapOutput {
	return o
}

func (o DirectLightstepMapOutput) ToDirectLightstepMapOutputWithContext(ctx context.Context) DirectLightstepMapOutput {
	return o
}

func (o DirectLightstepMapOutput) MapIndex(k pulumi.StringInput) DirectLightstepOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DirectLightstep {
		return vs[0].(map[string]*DirectLightstep)[vs[1].(string)]
	}).(DirectLightstepOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DirectLightstepInput)(nil)).Elem(), &DirectLightstep{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectLightstepArrayInput)(nil)).Elem(), DirectLightstepArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectLightstepMapInput)(nil)).Elem(), DirectLightstepMap{})
	pulumi.RegisterOutputType(DirectLightstepOutput{})
	pulumi.RegisterOutputType(DirectLightstepArrayOutput{})
	pulumi.RegisterOutputType(DirectLightstepMapOutput{})
}

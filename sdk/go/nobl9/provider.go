// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nobl9

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The provider type for the nobl9 package. By default, resources use package-wide configuration
// settings, however an explicit `Provider` instance may be created and passed during resource
// construction to achieve fine-grained programmatic control over provider settings. See the
// [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
type Provider struct {
	pulumi.ProviderResourceState

	// the [Client ID](https://docs.nobl9.com/sloctl-user-guide/#configuration) of your Nobl9 account required to connect to
	// Nobl9.
	ClientId pulumi.StringOutput `pulumi:"clientId"`
	// the [Client Secret](https://docs.nobl9.com/sloctl-user-guide/#configuration) of your Nobl9 account required to connect
	// to Nobl9.
	ClientSecret pulumi.StringOutput `pulumi:"clientSecret"`
	// Nobl9 API URL.
	IngestUrl pulumi.StringPtrOutput `pulumi:"ingestUrl"`
	// Authorization service configuration.
	OktaAuthServer pulumi.StringPtrOutput `pulumi:"oktaAuthServer"`
	// Authorization service URL.
	OktaOrgUrl pulumi.StringPtrOutput `pulumi:"oktaOrgUrl"`
	// Nobl9 [Organization ID](https://docs.nobl9.com/API_Documentation/api-endpoints-for-slo-annotations/#common-headers) that
	// contains resources managed by the Nobl9 Terraform provider.
	Organization pulumi.StringOutput `pulumi:"organization"`
	// Nobl9 project used when importing resources.
	Project pulumi.StringOutput `pulumi:"project"`
}

// NewProvider registers a new resource with the given unique name, arguments, and options.
func NewProvider(ctx *pulumi.Context,
	name string, args *ProviderArgs, opts ...pulumi.ResourceOption) (*Provider, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClientId == nil {
		return nil, errors.New("invalid value for required argument 'ClientId'")
	}
	if args.ClientSecret == nil {
		return nil, errors.New("invalid value for required argument 'ClientSecret'")
	}
	if args.Organization == nil {
		return nil, errors.New("invalid value for required argument 'Organization'")
	}
	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	var resource Provider
	err := ctx.RegisterResource("pulumi:providers:nobl9", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type providerArgs struct {
	// the [Client ID](https://docs.nobl9.com/sloctl-user-guide/#configuration) of your Nobl9 account required to connect to
	// Nobl9.
	ClientId string `pulumi:"clientId"`
	// the [Client Secret](https://docs.nobl9.com/sloctl-user-guide/#configuration) of your Nobl9 account required to connect
	// to Nobl9.
	ClientSecret string `pulumi:"clientSecret"`
	// Nobl9 API URL.
	IngestUrl *string `pulumi:"ingestUrl"`
	// Authorization service configuration.
	OktaAuthServer *string `pulumi:"oktaAuthServer"`
	// Authorization service URL.
	OktaOrgUrl *string `pulumi:"oktaOrgUrl"`
	// Nobl9 [Organization ID](https://docs.nobl9.com/API_Documentation/api-endpoints-for-slo-annotations/#common-headers) that
	// contains resources managed by the Nobl9 Terraform provider.
	Organization string `pulumi:"organization"`
	// Nobl9 project used when importing resources.
	Project string `pulumi:"project"`
}

// The set of arguments for constructing a Provider resource.
type ProviderArgs struct {
	// the [Client ID](https://docs.nobl9.com/sloctl-user-guide/#configuration) of your Nobl9 account required to connect to
	// Nobl9.
	ClientId pulumi.StringInput
	// the [Client Secret](https://docs.nobl9.com/sloctl-user-guide/#configuration) of your Nobl9 account required to connect
	// to Nobl9.
	ClientSecret pulumi.StringInput
	// Nobl9 API URL.
	IngestUrl pulumi.StringPtrInput
	// Authorization service configuration.
	OktaAuthServer pulumi.StringPtrInput
	// Authorization service URL.
	OktaOrgUrl pulumi.StringPtrInput
	// Nobl9 [Organization ID](https://docs.nobl9.com/API_Documentation/api-endpoints-for-slo-annotations/#common-headers) that
	// contains resources managed by the Nobl9 Terraform provider.
	Organization pulumi.StringInput
	// Nobl9 project used when importing resources.
	Project pulumi.StringInput
}

func (ProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*providerArgs)(nil)).Elem()
}

type ProviderInput interface {
	pulumi.Input

	ToProviderOutput() ProviderOutput
	ToProviderOutputWithContext(ctx context.Context) ProviderOutput
}

func (*Provider) ElementType() reflect.Type {
	return reflect.TypeOf((**Provider)(nil)).Elem()
}

func (i *Provider) ToProviderOutput() ProviderOutput {
	return i.ToProviderOutputWithContext(context.Background())
}

func (i *Provider) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderOutput)
}

type ProviderOutput struct{ *pulumi.OutputState }

func (ProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Provider)(nil)).Elem()
}

func (o ProviderOutput) ToProviderOutput() ProviderOutput {
	return o
}

func (o ProviderOutput) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return o
}

// the [Client ID](https://docs.nobl9.com/sloctl-user-guide/#configuration) of your Nobl9 account required to connect to
// Nobl9.
func (o ProviderOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringOutput { return v.ClientId }).(pulumi.StringOutput)
}

// the [Client Secret](https://docs.nobl9.com/sloctl-user-guide/#configuration) of your Nobl9 account required to connect
// to Nobl9.
func (o ProviderOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringOutput { return v.ClientSecret }).(pulumi.StringOutput)
}

// Nobl9 API URL.
func (o ProviderOutput) IngestUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.IngestUrl }).(pulumi.StringPtrOutput)
}

// Authorization service configuration.
func (o ProviderOutput) OktaAuthServer() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.OktaAuthServer }).(pulumi.StringPtrOutput)
}

// Authorization service URL.
func (o ProviderOutput) OktaOrgUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.OktaOrgUrl }).(pulumi.StringPtrOutput)
}

// Nobl9 [Organization ID](https://docs.nobl9.com/API_Documentation/api-endpoints-for-slo-annotations/#common-headers) that
// contains resources managed by the Nobl9 Terraform provider.
func (o ProviderOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringOutput { return v.Organization }).(pulumi.StringOutput)
}

// Nobl9 project used when importing resources.
func (o ProviderOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderInput)(nil)).Elem(), &Provider{})
	pulumi.RegisterOutputType(ProviderOutput{})
}

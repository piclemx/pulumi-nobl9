// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nobl9

import (
	"context"
	"reflect"

	"errors"
	"github.com/piclemx/pulumi-nobl9/sdk/go/nobl9/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Agent is a lightweight application that executes the queries defined for your Nobl9 SLOs. Queries are written in the language supported by the data source in question and executed via native APIs.
//
// The Agent then sends your SLI metrics back to Nobl9 for processing and error budget calculation.
//
// For more information, refer to [Agent configuration | Nobl9 Documentation](https://docs.nobl9.com/nobl9_agent)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/piclemx/pulumi-nobl9/sdk/go/nobl9"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			thisProject, err := nobl9.NewProject(ctx, "thisProject", &nobl9.ProjectArgs{
//				DisplayName: pulumi.String("Test N9 Terraform"),
//				Description: pulumi.String("An example N9 Terraform project"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = nobl9.NewAgent(ctx, "thisAgent", &nobl9.AgentArgs{
//				Project:        thisProject.Name,
//				AgentType:      pulumi.String("prometheus"),
//				ReleaseChannel: pulumi.String("stable"),
//				PrometheusConfig: &nobl9.AgentPrometheusConfigArgs{
//					Url: pulumi.String("http://web.net"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## Nobl9 Official Documentation
//
// https://docs.nobl9.com/
type Agent struct {
	pulumi.CustomResourceState

	// The type of the Agent. Check [Supported Agent types | Nobl9 Documentation](https://docs.nobl9.com/Sources/)
	AgentType pulumi.StringOutput `pulumi:"agentType"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Prometheus/#ams-prometheus-agent)
	AmazonPrometheusConfig AgentAmazonPrometheusConfigPtrOutput `pulumi:"amazonPrometheusConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/appdynamics#appdynamics-agent)
	AppdynamicsConfig AgentAppdynamicsConfigPtrOutput `pulumi:"appdynamicsConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/azure-monitor#azure-monitor-agent)
	AzureMonitorConfig AgentAzureMonitorConfigPtrOutput `pulumi:"azureMonitorConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/bigquery#bigquery-agent)
	BigqueryConfig AgentBigqueryConfigPtrOutput `pulumi:"bigqueryConfig"`
	// client_id of created agent.
	ClientId pulumi.StringOutput `pulumi:"clientId"`
	// client_secret of created agent.
	ClientSecret pulumi.StringOutput `pulumi:"clientSecret"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_CloudWatch/#cloudwatch-agent)
	CloudwatchConfig AgentCloudwatchConfigPtrOutput `pulumi:"cloudwatchConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/datadog#datadog-agent)
	DatadogConfig AgentDatadogConfigPtrOutput `pulumi:"datadogConfig"`
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// User-friendly display name of the resource.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/dynatrace#dynatrace-agent)
	DynatraceConfig AgentDynatraceConfigPtrOutput `pulumi:"dynatraceConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/elasticsearch#elasticsearch-agent)
	ElasticsearchConfig AgentElasticsearchConfigPtrOutput `pulumi:"elasticsearchConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/google-cloud-monitoring#google-cloud-monitoring-agent)
	GcmConfig AgentGcmConfigPtrOutput `pulumi:"gcmConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/grafana-loki#grafana-loki-agent)
	GrafanaLokiConfig AgentGrafanaLokiConfigPtrOutput `pulumi:"grafanaLokiConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/graphite#graphite-agent)
	GraphiteConfig AgentGraphiteConfigPtrOutput `pulumi:"graphiteConfig"`
	// [Replay configuration documentation](https://docs.nobl9.com/replay)
	HistoricalDataRetrieval AgentHistoricalDataRetrievalOutput `pulumi:"historicalDataRetrieval"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/honeycomb#hc-agent)
	HoneycombConfig AgentHoneycombConfigPtrOutput `pulumi:"honeycombConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/influxdb#influxdb-agent)
	InfluxdbConfig AgentInfluxdbConfigPtrOutput `pulumi:"influxdbConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/instana#instana-agent)
	InstanaConfig AgentInstanaConfigPtrOutput `pulumi:"instanaConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/lightstep#lightstep-agent)
	LightstepConfig AgentLightstepConfigPtrOutput `pulumi:"lightstepConfig"`
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name pulumi.StringOutput `pulumi:"name"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/new-relic#new-relic-agent)
	NewrelicConfig AgentNewrelicConfigPtrOutput `pulumi:"newrelicConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/opentsdb#opentsdb-agent)
	OpentsdbConfig AgentOpentsdbConfigPtrOutput `pulumi:"opentsdbConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/pingdom#pingdom-agent)
	PingdomConfig AgentPingdomConfigPtrOutput `pulumi:"pingdomConfig"`
	// Name of the Lightstep project.
	Project pulumi.StringOutput `pulumi:"project"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/prometheus#prometheus-agent)
	PrometheusConfig AgentPrometheusConfigPtrOutput `pulumi:"prometheusConfig"`
	// [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
	QueryDelay AgentQueryDelayOutput `pulumi:"queryDelay"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Redshift/?_highlight=redshift#amazon-redshift-agent)
	RedshiftConfig AgentRedshiftConfigPtrOutput `pulumi:"redshiftConfig"`
	// Release channel of the created datasource [stable/beta]
	ReleaseChannel pulumi.StringOutput `pulumi:"releaseChannel"`
	// This value indicated whether the field was a source of metrics and/or services. 'source_of' is deprecated and not used anywhere; however, it's kept for backward compatibility.
	//
	// Deprecated: 'source_of' is deprecated and not used anywhere. You can safely remove it from your configuration file.
	SourceOfs pulumi.StringArrayOutput `pulumi:"sourceOfs"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/splunk#splunk-agent)
	SplunkConfig AgentSplunkConfigPtrOutput `pulumi:"splunkConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/splunk-observability/#splunk-observability-agent)
	SplunkObservabilityConfig AgentSplunkObservabilityConfigPtrOutput `pulumi:"splunkObservabilityConfig"`
	// Status of the created agent.
	Status pulumi.MapOutput `pulumi:"status"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/sumo-logic#sumo-logic-agent)
	SumologicConfig AgentSumologicConfigPtrOutput `pulumi:"sumologicConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/thousandeyes#thousandeyes-agent)
	ThousandeyesConfig AgentThousandeyesConfigPtrOutput `pulumi:"thousandeyesConfig"`
}

// NewAgent registers a new resource with the given unique name, arguments, and options.
func NewAgent(ctx *pulumi.Context,
	name string, args *AgentArgs, opts ...pulumi.ResourceOption) (*Agent, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AgentType == nil {
		return nil, errors.New("invalid value for required argument 'AgentType'")
	}
	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Agent
	err := ctx.RegisterResource("nobl9:index/agent:Agent", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAgent gets an existing Agent resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAgent(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AgentState, opts ...pulumi.ResourceOption) (*Agent, error) {
	var resource Agent
	err := ctx.ReadResource("nobl9:index/agent:Agent", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Agent resources.
type agentState struct {
	// The type of the Agent. Check [Supported Agent types | Nobl9 Documentation](https://docs.nobl9.com/Sources/)
	AgentType *string `pulumi:"agentType"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Prometheus/#ams-prometheus-agent)
	AmazonPrometheusConfig *AgentAmazonPrometheusConfig `pulumi:"amazonPrometheusConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/appdynamics#appdynamics-agent)
	AppdynamicsConfig *AgentAppdynamicsConfig `pulumi:"appdynamicsConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/azure-monitor#azure-monitor-agent)
	AzureMonitorConfig *AgentAzureMonitorConfig `pulumi:"azureMonitorConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/bigquery#bigquery-agent)
	BigqueryConfig *AgentBigqueryConfig `pulumi:"bigqueryConfig"`
	// client_id of created agent.
	ClientId *string `pulumi:"clientId"`
	// client_secret of created agent.
	ClientSecret *string `pulumi:"clientSecret"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_CloudWatch/#cloudwatch-agent)
	CloudwatchConfig *AgentCloudwatchConfig `pulumi:"cloudwatchConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/datadog#datadog-agent)
	DatadogConfig *AgentDatadogConfig `pulumi:"datadogConfig"`
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description *string `pulumi:"description"`
	// User-friendly display name of the resource.
	DisplayName *string `pulumi:"displayName"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/dynatrace#dynatrace-agent)
	DynatraceConfig *AgentDynatraceConfig `pulumi:"dynatraceConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/elasticsearch#elasticsearch-agent)
	ElasticsearchConfig *AgentElasticsearchConfig `pulumi:"elasticsearchConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/google-cloud-monitoring#google-cloud-monitoring-agent)
	GcmConfig *AgentGcmConfig `pulumi:"gcmConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/grafana-loki#grafana-loki-agent)
	GrafanaLokiConfig *AgentGrafanaLokiConfig `pulumi:"grafanaLokiConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/graphite#graphite-agent)
	GraphiteConfig *AgentGraphiteConfig `pulumi:"graphiteConfig"`
	// [Replay configuration documentation](https://docs.nobl9.com/replay)
	HistoricalDataRetrieval *AgentHistoricalDataRetrieval `pulumi:"historicalDataRetrieval"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/honeycomb#hc-agent)
	HoneycombConfig *AgentHoneycombConfig `pulumi:"honeycombConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/influxdb#influxdb-agent)
	InfluxdbConfig *AgentInfluxdbConfig `pulumi:"influxdbConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/instana#instana-agent)
	InstanaConfig *AgentInstanaConfig `pulumi:"instanaConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/lightstep#lightstep-agent)
	LightstepConfig *AgentLightstepConfig `pulumi:"lightstepConfig"`
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name *string `pulumi:"name"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/new-relic#new-relic-agent)
	NewrelicConfig *AgentNewrelicConfig `pulumi:"newrelicConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/opentsdb#opentsdb-agent)
	OpentsdbConfig *AgentOpentsdbConfig `pulumi:"opentsdbConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/pingdom#pingdom-agent)
	PingdomConfig *AgentPingdomConfig `pulumi:"pingdomConfig"`
	// Name of the Lightstep project.
	Project *string `pulumi:"project"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/prometheus#prometheus-agent)
	PrometheusConfig *AgentPrometheusConfig `pulumi:"prometheusConfig"`
	// [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
	QueryDelay *AgentQueryDelay `pulumi:"queryDelay"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Redshift/?_highlight=redshift#amazon-redshift-agent)
	RedshiftConfig *AgentRedshiftConfig `pulumi:"redshiftConfig"`
	// Release channel of the created datasource [stable/beta]
	ReleaseChannel *string `pulumi:"releaseChannel"`
	// This value indicated whether the field was a source of metrics and/or services. 'source_of' is deprecated and not used anywhere; however, it's kept for backward compatibility.
	//
	// Deprecated: 'source_of' is deprecated and not used anywhere. You can safely remove it from your configuration file.
	SourceOfs []string `pulumi:"sourceOfs"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/splunk#splunk-agent)
	SplunkConfig *AgentSplunkConfig `pulumi:"splunkConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/splunk-observability/#splunk-observability-agent)
	SplunkObservabilityConfig *AgentSplunkObservabilityConfig `pulumi:"splunkObservabilityConfig"`
	// Status of the created agent.
	Status map[string]interface{} `pulumi:"status"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/sumo-logic#sumo-logic-agent)
	SumologicConfig *AgentSumologicConfig `pulumi:"sumologicConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/thousandeyes#thousandeyes-agent)
	ThousandeyesConfig *AgentThousandeyesConfig `pulumi:"thousandeyesConfig"`
}

type AgentState struct {
	// The type of the Agent. Check [Supported Agent types | Nobl9 Documentation](https://docs.nobl9.com/Sources/)
	AgentType pulumi.StringPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Prometheus/#ams-prometheus-agent)
	AmazonPrometheusConfig AgentAmazonPrometheusConfigPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/appdynamics#appdynamics-agent)
	AppdynamicsConfig AgentAppdynamicsConfigPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/azure-monitor#azure-monitor-agent)
	AzureMonitorConfig AgentAzureMonitorConfigPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/bigquery#bigquery-agent)
	BigqueryConfig AgentBigqueryConfigPtrInput
	// client_id of created agent.
	ClientId pulumi.StringPtrInput
	// client_secret of created agent.
	ClientSecret pulumi.StringPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_CloudWatch/#cloudwatch-agent)
	CloudwatchConfig AgentCloudwatchConfigPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/datadog#datadog-agent)
	DatadogConfig AgentDatadogConfigPtrInput
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description pulumi.StringPtrInput
	// User-friendly display name of the resource.
	DisplayName pulumi.StringPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/dynatrace#dynatrace-agent)
	DynatraceConfig AgentDynatraceConfigPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/elasticsearch#elasticsearch-agent)
	ElasticsearchConfig AgentElasticsearchConfigPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/google-cloud-monitoring#google-cloud-monitoring-agent)
	GcmConfig AgentGcmConfigPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/grafana-loki#grafana-loki-agent)
	GrafanaLokiConfig AgentGrafanaLokiConfigPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/graphite#graphite-agent)
	GraphiteConfig AgentGraphiteConfigPtrInput
	// [Replay configuration documentation](https://docs.nobl9.com/replay)
	HistoricalDataRetrieval AgentHistoricalDataRetrievalPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/honeycomb#hc-agent)
	HoneycombConfig AgentHoneycombConfigPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/influxdb#influxdb-agent)
	InfluxdbConfig AgentInfluxdbConfigPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/instana#instana-agent)
	InstanaConfig AgentInstanaConfigPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/lightstep#lightstep-agent)
	LightstepConfig AgentLightstepConfigPtrInput
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name pulumi.StringPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/new-relic#new-relic-agent)
	NewrelicConfig AgentNewrelicConfigPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/opentsdb#opentsdb-agent)
	OpentsdbConfig AgentOpentsdbConfigPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/pingdom#pingdom-agent)
	PingdomConfig AgentPingdomConfigPtrInput
	// Name of the Lightstep project.
	Project pulumi.StringPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/prometheus#prometheus-agent)
	PrometheusConfig AgentPrometheusConfigPtrInput
	// [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
	QueryDelay AgentQueryDelayPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Redshift/?_highlight=redshift#amazon-redshift-agent)
	RedshiftConfig AgentRedshiftConfigPtrInput
	// Release channel of the created datasource [stable/beta]
	ReleaseChannel pulumi.StringPtrInput
	// This value indicated whether the field was a source of metrics and/or services. 'source_of' is deprecated and not used anywhere; however, it's kept for backward compatibility.
	//
	// Deprecated: 'source_of' is deprecated and not used anywhere. You can safely remove it from your configuration file.
	SourceOfs pulumi.StringArrayInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/splunk#splunk-agent)
	SplunkConfig AgentSplunkConfigPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/splunk-observability/#splunk-observability-agent)
	SplunkObservabilityConfig AgentSplunkObservabilityConfigPtrInput
	// Status of the created agent.
	Status pulumi.MapInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/sumo-logic#sumo-logic-agent)
	SumologicConfig AgentSumologicConfigPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/thousandeyes#thousandeyes-agent)
	ThousandeyesConfig AgentThousandeyesConfigPtrInput
}

func (AgentState) ElementType() reflect.Type {
	return reflect.TypeOf((*agentState)(nil)).Elem()
}

type agentArgs struct {
	// The type of the Agent. Check [Supported Agent types | Nobl9 Documentation](https://docs.nobl9.com/Sources/)
	AgentType string `pulumi:"agentType"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Prometheus/#ams-prometheus-agent)
	AmazonPrometheusConfig *AgentAmazonPrometheusConfig `pulumi:"amazonPrometheusConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/appdynamics#appdynamics-agent)
	AppdynamicsConfig *AgentAppdynamicsConfig `pulumi:"appdynamicsConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/azure-monitor#azure-monitor-agent)
	AzureMonitorConfig *AgentAzureMonitorConfig `pulumi:"azureMonitorConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/bigquery#bigquery-agent)
	BigqueryConfig *AgentBigqueryConfig `pulumi:"bigqueryConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_CloudWatch/#cloudwatch-agent)
	CloudwatchConfig *AgentCloudwatchConfig `pulumi:"cloudwatchConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/datadog#datadog-agent)
	DatadogConfig *AgentDatadogConfig `pulumi:"datadogConfig"`
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description *string `pulumi:"description"`
	// User-friendly display name of the resource.
	DisplayName *string `pulumi:"displayName"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/dynatrace#dynatrace-agent)
	DynatraceConfig *AgentDynatraceConfig `pulumi:"dynatraceConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/elasticsearch#elasticsearch-agent)
	ElasticsearchConfig *AgentElasticsearchConfig `pulumi:"elasticsearchConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/google-cloud-monitoring#google-cloud-monitoring-agent)
	GcmConfig *AgentGcmConfig `pulumi:"gcmConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/grafana-loki#grafana-loki-agent)
	GrafanaLokiConfig *AgentGrafanaLokiConfig `pulumi:"grafanaLokiConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/graphite#graphite-agent)
	GraphiteConfig *AgentGraphiteConfig `pulumi:"graphiteConfig"`
	// [Replay configuration documentation](https://docs.nobl9.com/replay)
	HistoricalDataRetrieval *AgentHistoricalDataRetrieval `pulumi:"historicalDataRetrieval"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/honeycomb#hc-agent)
	HoneycombConfig *AgentHoneycombConfig `pulumi:"honeycombConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/influxdb#influxdb-agent)
	InfluxdbConfig *AgentInfluxdbConfig `pulumi:"influxdbConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/instana#instana-agent)
	InstanaConfig *AgentInstanaConfig `pulumi:"instanaConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/lightstep#lightstep-agent)
	LightstepConfig *AgentLightstepConfig `pulumi:"lightstepConfig"`
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name *string `pulumi:"name"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/new-relic#new-relic-agent)
	NewrelicConfig *AgentNewrelicConfig `pulumi:"newrelicConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/opentsdb#opentsdb-agent)
	OpentsdbConfig *AgentOpentsdbConfig `pulumi:"opentsdbConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/pingdom#pingdom-agent)
	PingdomConfig *AgentPingdomConfig `pulumi:"pingdomConfig"`
	// Name of the Lightstep project.
	Project string `pulumi:"project"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/prometheus#prometheus-agent)
	PrometheusConfig *AgentPrometheusConfig `pulumi:"prometheusConfig"`
	// [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
	QueryDelay *AgentQueryDelay `pulumi:"queryDelay"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Redshift/?_highlight=redshift#amazon-redshift-agent)
	RedshiftConfig *AgentRedshiftConfig `pulumi:"redshiftConfig"`
	// Release channel of the created datasource [stable/beta]
	ReleaseChannel *string `pulumi:"releaseChannel"`
	// This value indicated whether the field was a source of metrics and/or services. 'source_of' is deprecated and not used anywhere; however, it's kept for backward compatibility.
	//
	// Deprecated: 'source_of' is deprecated and not used anywhere. You can safely remove it from your configuration file.
	SourceOfs []string `pulumi:"sourceOfs"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/splunk#splunk-agent)
	SplunkConfig *AgentSplunkConfig `pulumi:"splunkConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/splunk-observability/#splunk-observability-agent)
	SplunkObservabilityConfig *AgentSplunkObservabilityConfig `pulumi:"splunkObservabilityConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/sumo-logic#sumo-logic-agent)
	SumologicConfig *AgentSumologicConfig `pulumi:"sumologicConfig"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/thousandeyes#thousandeyes-agent)
	ThousandeyesConfig *AgentThousandeyesConfig `pulumi:"thousandeyesConfig"`
}

// The set of arguments for constructing a Agent resource.
type AgentArgs struct {
	// The type of the Agent. Check [Supported Agent types | Nobl9 Documentation](https://docs.nobl9.com/Sources/)
	AgentType pulumi.StringInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Prometheus/#ams-prometheus-agent)
	AmazonPrometheusConfig AgentAmazonPrometheusConfigPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/appdynamics#appdynamics-agent)
	AppdynamicsConfig AgentAppdynamicsConfigPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/azure-monitor#azure-monitor-agent)
	AzureMonitorConfig AgentAzureMonitorConfigPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/bigquery#bigquery-agent)
	BigqueryConfig AgentBigqueryConfigPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_CloudWatch/#cloudwatch-agent)
	CloudwatchConfig AgentCloudwatchConfigPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/datadog#datadog-agent)
	DatadogConfig AgentDatadogConfigPtrInput
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description pulumi.StringPtrInput
	// User-friendly display name of the resource.
	DisplayName pulumi.StringPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/dynatrace#dynatrace-agent)
	DynatraceConfig AgentDynatraceConfigPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/elasticsearch#elasticsearch-agent)
	ElasticsearchConfig AgentElasticsearchConfigPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/google-cloud-monitoring#google-cloud-monitoring-agent)
	GcmConfig AgentGcmConfigPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/grafana-loki#grafana-loki-agent)
	GrafanaLokiConfig AgentGrafanaLokiConfigPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/graphite#graphite-agent)
	GraphiteConfig AgentGraphiteConfigPtrInput
	// [Replay configuration documentation](https://docs.nobl9.com/replay)
	HistoricalDataRetrieval AgentHistoricalDataRetrievalPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/honeycomb#hc-agent)
	HoneycombConfig AgentHoneycombConfigPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/influxdb#influxdb-agent)
	InfluxdbConfig AgentInfluxdbConfigPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/instana#instana-agent)
	InstanaConfig AgentInstanaConfigPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/lightstep#lightstep-agent)
	LightstepConfig AgentLightstepConfigPtrInput
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name pulumi.StringPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/new-relic#new-relic-agent)
	NewrelicConfig AgentNewrelicConfigPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/opentsdb#opentsdb-agent)
	OpentsdbConfig AgentOpentsdbConfigPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/pingdom#pingdom-agent)
	PingdomConfig AgentPingdomConfigPtrInput
	// Name of the Lightstep project.
	Project pulumi.StringInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/prometheus#prometheus-agent)
	PrometheusConfig AgentPrometheusConfigPtrInput
	// [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
	QueryDelay AgentQueryDelayPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Redshift/?_highlight=redshift#amazon-redshift-agent)
	RedshiftConfig AgentRedshiftConfigPtrInput
	// Release channel of the created datasource [stable/beta]
	ReleaseChannel pulumi.StringPtrInput
	// This value indicated whether the field was a source of metrics and/or services. 'source_of' is deprecated and not used anywhere; however, it's kept for backward compatibility.
	//
	// Deprecated: 'source_of' is deprecated and not used anywhere. You can safely remove it from your configuration file.
	SourceOfs pulumi.StringArrayInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/splunk#splunk-agent)
	SplunkConfig AgentSplunkConfigPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/splunk-observability/#splunk-observability-agent)
	SplunkObservabilityConfig AgentSplunkObservabilityConfigPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/sumo-logic#sumo-logic-agent)
	SumologicConfig AgentSumologicConfigPtrInput
	// [Configuration documentation](https://docs.nobl9.com/Sources/thousandeyes#thousandeyes-agent)
	ThousandeyesConfig AgentThousandeyesConfigPtrInput
}

func (AgentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*agentArgs)(nil)).Elem()
}

type AgentInput interface {
	pulumi.Input

	ToAgentOutput() AgentOutput
	ToAgentOutputWithContext(ctx context.Context) AgentOutput
}

func (*Agent) ElementType() reflect.Type {
	return reflect.TypeOf((**Agent)(nil)).Elem()
}

func (i *Agent) ToAgentOutput() AgentOutput {
	return i.ToAgentOutputWithContext(context.Background())
}

func (i *Agent) ToAgentOutputWithContext(ctx context.Context) AgentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentOutput)
}

// AgentArrayInput is an input type that accepts AgentArray and AgentArrayOutput values.
// You can construct a concrete instance of `AgentArrayInput` via:
//
//	AgentArray{ AgentArgs{...} }
type AgentArrayInput interface {
	pulumi.Input

	ToAgentArrayOutput() AgentArrayOutput
	ToAgentArrayOutputWithContext(context.Context) AgentArrayOutput
}

type AgentArray []AgentInput

func (AgentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Agent)(nil)).Elem()
}

func (i AgentArray) ToAgentArrayOutput() AgentArrayOutput {
	return i.ToAgentArrayOutputWithContext(context.Background())
}

func (i AgentArray) ToAgentArrayOutputWithContext(ctx context.Context) AgentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentArrayOutput)
}

// AgentMapInput is an input type that accepts AgentMap and AgentMapOutput values.
// You can construct a concrete instance of `AgentMapInput` via:
//
//	AgentMap{ "key": AgentArgs{...} }
type AgentMapInput interface {
	pulumi.Input

	ToAgentMapOutput() AgentMapOutput
	ToAgentMapOutputWithContext(context.Context) AgentMapOutput
}

type AgentMap map[string]AgentInput

func (AgentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Agent)(nil)).Elem()
}

func (i AgentMap) ToAgentMapOutput() AgentMapOutput {
	return i.ToAgentMapOutputWithContext(context.Background())
}

func (i AgentMap) ToAgentMapOutputWithContext(ctx context.Context) AgentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentMapOutput)
}

type AgentOutput struct{ *pulumi.OutputState }

func (AgentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Agent)(nil)).Elem()
}

func (o AgentOutput) ToAgentOutput() AgentOutput {
	return o
}

func (o AgentOutput) ToAgentOutputWithContext(ctx context.Context) AgentOutput {
	return o
}

// The type of the Agent. Check [Supported Agent types | Nobl9 Documentation](https://docs.nobl9.com/Sources/)
func (o AgentOutput) AgentType() pulumi.StringOutput {
	return o.ApplyT(func(v *Agent) pulumi.StringOutput { return v.AgentType }).(pulumi.StringOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Prometheus/#ams-prometheus-agent)
func (o AgentOutput) AmazonPrometheusConfig() AgentAmazonPrometheusConfigPtrOutput {
	return o.ApplyT(func(v *Agent) AgentAmazonPrometheusConfigPtrOutput { return v.AmazonPrometheusConfig }).(AgentAmazonPrometheusConfigPtrOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/appdynamics#appdynamics-agent)
func (o AgentOutput) AppdynamicsConfig() AgentAppdynamicsConfigPtrOutput {
	return o.ApplyT(func(v *Agent) AgentAppdynamicsConfigPtrOutput { return v.AppdynamicsConfig }).(AgentAppdynamicsConfigPtrOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/azure-monitor#azure-monitor-agent)
func (o AgentOutput) AzureMonitorConfig() AgentAzureMonitorConfigPtrOutput {
	return o.ApplyT(func(v *Agent) AgentAzureMonitorConfigPtrOutput { return v.AzureMonitorConfig }).(AgentAzureMonitorConfigPtrOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/bigquery#bigquery-agent)
func (o AgentOutput) BigqueryConfig() AgentBigqueryConfigPtrOutput {
	return o.ApplyT(func(v *Agent) AgentBigqueryConfigPtrOutput { return v.BigqueryConfig }).(AgentBigqueryConfigPtrOutput)
}

// client_id of created agent.
func (o AgentOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v *Agent) pulumi.StringOutput { return v.ClientId }).(pulumi.StringOutput)
}

// client_secret of created agent.
func (o AgentOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v *Agent) pulumi.StringOutput { return v.ClientSecret }).(pulumi.StringOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_CloudWatch/#cloudwatch-agent)
func (o AgentOutput) CloudwatchConfig() AgentCloudwatchConfigPtrOutput {
	return o.ApplyT(func(v *Agent) AgentCloudwatchConfigPtrOutput { return v.CloudwatchConfig }).(AgentCloudwatchConfigPtrOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/datadog#datadog-agent)
func (o AgentOutput) DatadogConfig() AgentDatadogConfigPtrOutput {
	return o.ApplyT(func(v *Agent) AgentDatadogConfigPtrOutput { return v.DatadogConfig }).(AgentDatadogConfigPtrOutput)
}

// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
func (o AgentOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Agent) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// User-friendly display name of the resource.
func (o AgentOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Agent) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/dynatrace#dynatrace-agent)
func (o AgentOutput) DynatraceConfig() AgentDynatraceConfigPtrOutput {
	return o.ApplyT(func(v *Agent) AgentDynatraceConfigPtrOutput { return v.DynatraceConfig }).(AgentDynatraceConfigPtrOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/elasticsearch#elasticsearch-agent)
func (o AgentOutput) ElasticsearchConfig() AgentElasticsearchConfigPtrOutput {
	return o.ApplyT(func(v *Agent) AgentElasticsearchConfigPtrOutput { return v.ElasticsearchConfig }).(AgentElasticsearchConfigPtrOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/google-cloud-monitoring#google-cloud-monitoring-agent)
func (o AgentOutput) GcmConfig() AgentGcmConfigPtrOutput {
	return o.ApplyT(func(v *Agent) AgentGcmConfigPtrOutput { return v.GcmConfig }).(AgentGcmConfigPtrOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/grafana-loki#grafana-loki-agent)
func (o AgentOutput) GrafanaLokiConfig() AgentGrafanaLokiConfigPtrOutput {
	return o.ApplyT(func(v *Agent) AgentGrafanaLokiConfigPtrOutput { return v.GrafanaLokiConfig }).(AgentGrafanaLokiConfigPtrOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/graphite#graphite-agent)
func (o AgentOutput) GraphiteConfig() AgentGraphiteConfigPtrOutput {
	return o.ApplyT(func(v *Agent) AgentGraphiteConfigPtrOutput { return v.GraphiteConfig }).(AgentGraphiteConfigPtrOutput)
}

// [Replay configuration documentation](https://docs.nobl9.com/replay)
func (o AgentOutput) HistoricalDataRetrieval() AgentHistoricalDataRetrievalOutput {
	return o.ApplyT(func(v *Agent) AgentHistoricalDataRetrievalOutput { return v.HistoricalDataRetrieval }).(AgentHistoricalDataRetrievalOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/honeycomb#hc-agent)
func (o AgentOutput) HoneycombConfig() AgentHoneycombConfigPtrOutput {
	return o.ApplyT(func(v *Agent) AgentHoneycombConfigPtrOutput { return v.HoneycombConfig }).(AgentHoneycombConfigPtrOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/influxdb#influxdb-agent)
func (o AgentOutput) InfluxdbConfig() AgentInfluxdbConfigPtrOutput {
	return o.ApplyT(func(v *Agent) AgentInfluxdbConfigPtrOutput { return v.InfluxdbConfig }).(AgentInfluxdbConfigPtrOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/instana#instana-agent)
func (o AgentOutput) InstanaConfig() AgentInstanaConfigPtrOutput {
	return o.ApplyT(func(v *Agent) AgentInstanaConfigPtrOutput { return v.InstanaConfig }).(AgentInstanaConfigPtrOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/lightstep#lightstep-agent)
func (o AgentOutput) LightstepConfig() AgentLightstepConfigPtrOutput {
	return o.ApplyT(func(v *Agent) AgentLightstepConfigPtrOutput { return v.LightstepConfig }).(AgentLightstepConfigPtrOutput)
}

// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
func (o AgentOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Agent) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/new-relic#new-relic-agent)
func (o AgentOutput) NewrelicConfig() AgentNewrelicConfigPtrOutput {
	return o.ApplyT(func(v *Agent) AgentNewrelicConfigPtrOutput { return v.NewrelicConfig }).(AgentNewrelicConfigPtrOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/opentsdb#opentsdb-agent)
func (o AgentOutput) OpentsdbConfig() AgentOpentsdbConfigPtrOutput {
	return o.ApplyT(func(v *Agent) AgentOpentsdbConfigPtrOutput { return v.OpentsdbConfig }).(AgentOpentsdbConfigPtrOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/pingdom#pingdom-agent)
func (o AgentOutput) PingdomConfig() AgentPingdomConfigPtrOutput {
	return o.ApplyT(func(v *Agent) AgentPingdomConfigPtrOutput { return v.PingdomConfig }).(AgentPingdomConfigPtrOutput)
}

// Name of the Lightstep project.
func (o AgentOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *Agent) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/prometheus#prometheus-agent)
func (o AgentOutput) PrometheusConfig() AgentPrometheusConfigPtrOutput {
	return o.ApplyT(func(v *Agent) AgentPrometheusConfigPtrOutput { return v.PrometheusConfig }).(AgentPrometheusConfigPtrOutput)
}

// [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
func (o AgentOutput) QueryDelay() AgentQueryDelayOutput {
	return o.ApplyT(func(v *Agent) AgentQueryDelayOutput { return v.QueryDelay }).(AgentQueryDelayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Redshift/?_highlight=redshift#amazon-redshift-agent)
func (o AgentOutput) RedshiftConfig() AgentRedshiftConfigPtrOutput {
	return o.ApplyT(func(v *Agent) AgentRedshiftConfigPtrOutput { return v.RedshiftConfig }).(AgentRedshiftConfigPtrOutput)
}

// Release channel of the created datasource [stable/beta]
func (o AgentOutput) ReleaseChannel() pulumi.StringOutput {
	return o.ApplyT(func(v *Agent) pulumi.StringOutput { return v.ReleaseChannel }).(pulumi.StringOutput)
}

// This value indicated whether the field was a source of metrics and/or services. 'source_of' is deprecated and not used anywhere; however, it's kept for backward compatibility.
//
// Deprecated: 'source_of' is deprecated and not used anywhere. You can safely remove it from your configuration file.
func (o AgentOutput) SourceOfs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Agent) pulumi.StringArrayOutput { return v.SourceOfs }).(pulumi.StringArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/splunk#splunk-agent)
func (o AgentOutput) SplunkConfig() AgentSplunkConfigPtrOutput {
	return o.ApplyT(func(v *Agent) AgentSplunkConfigPtrOutput { return v.SplunkConfig }).(AgentSplunkConfigPtrOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/splunk-observability/#splunk-observability-agent)
func (o AgentOutput) SplunkObservabilityConfig() AgentSplunkObservabilityConfigPtrOutput {
	return o.ApplyT(func(v *Agent) AgentSplunkObservabilityConfigPtrOutput { return v.SplunkObservabilityConfig }).(AgentSplunkObservabilityConfigPtrOutput)
}

// Status of the created agent.
func (o AgentOutput) Status() pulumi.MapOutput {
	return o.ApplyT(func(v *Agent) pulumi.MapOutput { return v.Status }).(pulumi.MapOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/sumo-logic#sumo-logic-agent)
func (o AgentOutput) SumologicConfig() AgentSumologicConfigPtrOutput {
	return o.ApplyT(func(v *Agent) AgentSumologicConfigPtrOutput { return v.SumologicConfig }).(AgentSumologicConfigPtrOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/thousandeyes#thousandeyes-agent)
func (o AgentOutput) ThousandeyesConfig() AgentThousandeyesConfigPtrOutput {
	return o.ApplyT(func(v *Agent) AgentThousandeyesConfigPtrOutput { return v.ThousandeyesConfig }).(AgentThousandeyesConfigPtrOutput)
}

type AgentArrayOutput struct{ *pulumi.OutputState }

func (AgentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Agent)(nil)).Elem()
}

func (o AgentArrayOutput) ToAgentArrayOutput() AgentArrayOutput {
	return o
}

func (o AgentArrayOutput) ToAgentArrayOutputWithContext(ctx context.Context) AgentArrayOutput {
	return o
}

func (o AgentArrayOutput) Index(i pulumi.IntInput) AgentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Agent {
		return vs[0].([]*Agent)[vs[1].(int)]
	}).(AgentOutput)
}

type AgentMapOutput struct{ *pulumi.OutputState }

func (AgentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Agent)(nil)).Elem()
}

func (o AgentMapOutput) ToAgentMapOutput() AgentMapOutput {
	return o
}

func (o AgentMapOutput) ToAgentMapOutputWithContext(ctx context.Context) AgentMapOutput {
	return o
}

func (o AgentMapOutput) MapIndex(k pulumi.StringInput) AgentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Agent {
		return vs[0].(map[string]*Agent)[vs[1].(string)]
	}).(AgentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AgentInput)(nil)).Elem(), &Agent{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentArrayInput)(nil)).Elem(), AgentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentMapInput)(nil)).Elem(), AgentMap{})
	pulumi.RegisterOutputType(AgentOutput{})
	pulumi.RegisterOutputType(AgentArrayOutput{})
	pulumi.RegisterOutputType(AgentMapOutput{})
}

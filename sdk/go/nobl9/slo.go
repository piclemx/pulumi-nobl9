// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nobl9

import (
	"context"
	"reflect"

	"errors"
	"github.com/piclemx/pulumi-nobl9/sdk/go/nobl9/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// An SLO is a target value or range of values for a service that is measured by a service level indicator (SLI). SLOs allows you to define the reliability of your products and services in terms of customer expectations. You can create SLOs for user journeys, internal services, or even infrastructure.
//
// For more information, refer to [SLO configuration documentation](https://docs.nobl9.com/yaml-guide#slo)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/piclemx/pulumi-nobl9/sdk/go/nobl9"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			thisProject, err := nobl9.NewProject(ctx, "thisProject", &nobl9.ProjectArgs{
//				DisplayName: pulumi.String("Test N9 Terraform"),
//				Description: pulumi.String("An example N9 Terraform project"),
//			})
//			if err != nil {
//				return err
//			}
//			thisService, err := nobl9.NewService(ctx, "thisService", &nobl9.ServiceArgs{
//				Project: thisProject.Name,
//				DisplayName: thisProject.DisplayName.ApplyT(func(displayName *string) (string, error) {
//					return fmt.Sprintf("%v Front Page", displayName), nil
//				}).(pulumi.StringOutput),
//				Description: pulumi.String("Front page service"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = nobl9.NewSlo(ctx, "thisSlo", &nobl9.SloArgs{
//				Service:         thisService.Name,
//				BudgetingMethod: pulumi.String("Occurrences"),
//				Project:         thisProject.Name,
//				Labels: nobl9.SloLabelArray{
//					&nobl9.SloLabelArgs{
//						Key: pulumi.String("env"),
//						Values: pulumi.StringArray{
//							pulumi.String("dev"),
//							pulumi.String("prod"),
//						},
//					},
//					&nobl9.SloLabelArgs{
//						Key: pulumi.String("team"),
//						Values: pulumi.StringArray{
//							pulumi.String("red"),
//						},
//					},
//				},
//				Attachments: nobl9.SloAttachmentArray{
//					&nobl9.SloAttachmentArgs{
//						Url:         pulumi.String("https://www.nobl9.com/"),
//						DisplayName: pulumi.String("Nobl9 Reliability Center"),
//					},
//					&nobl9.SloAttachmentArgs{
//						Url:         pulumi.String("https://duckduckgo.com/"),
//						DisplayName: pulumi.String("Nice search engine"),
//					},
//				},
//				AlertPolicies: pulumi.StringArray{
//					pulumi.String("foo-front-page-latency"),
//				},
//				TimeWindow: &nobl9.SloTimeWindowArgs{
//					Unit:      pulumi.String("Day"),
//					Count:     pulumi.Int(30),
//					IsRolling: pulumi.Bool(true),
//				},
//				Objectives: nobl9.SloObjectiveArray{
//					&nobl9.SloObjectiveArgs{
//						Name:        pulumi.String("tf-objective-1"),
//						Target:      pulumi.Float64(0.99),
//						DisplayName: pulumi.String("OK"),
//						Value:       pulumi.Float64(2000),
//						Op:          pulumi.String("gte"),
//						RawMetrics: nobl9.SloObjectiveRawMetricArray{
//							&nobl9.SloObjectiveRawMetricArgs{
//								Queries: nobl9.SloObjectiveRawMetricQueryArray{
//									&nobl9.SloObjectiveRawMetricQueryArgs{
//										Prometheuses: nobl9.SloObjectiveRawMetricQueryPrometheusArray{
//											&nobl9.SloObjectiveRawMetricQueryPrometheusArgs{
//												Promql: pulumi.String("          latency_west_c7{code=\"ALL\",instance=\"localhost:3000\",job=\"prometheus\",service=\"glob_account\"}\n"),
//											},
//										},
//									},
//								},
//							},
//						},
//					},
//				},
//				Indicator: &nobl9.SloIndicatorArgs{
//					Name: pulumi.String("test-terraform-prom-agent"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = nobl9.NewSlo(ctx, "thisIndex/sloSlo", &nobl9.SloArgs{
//				Service:         thisService.Name,
//				BudgetingMethod: pulumi.String("Occurrences"),
//				Project:         thisProject.Name,
//				TimeWindow: &nobl9.SloTimeWindowArgs{
//					Unit:      pulumi.String("Day"),
//					Count:     pulumi.Int(30),
//					IsRolling: pulumi.Bool(true),
//				},
//				Objectives: nobl9.SloObjectiveArray{
//					&nobl9.SloObjectiveArgs{
//						Name:        pulumi.String("tf-objective-1"),
//						Target:      pulumi.Float64(0.99),
//						DisplayName: pulumi.String("OK"),
//						Value:       pulumi.Float64(1),
//						CountMetrics: nobl9.SloObjectiveCountMetricArray{
//							&nobl9.SloObjectiveCountMetricArgs{
//								Incremental: pulumi.Bool(true),
//								Goods: nobl9.SloObjectiveCountMetricGoodArray{
//									&nobl9.SloObjectiveCountMetricGoodArgs{
//										Prometheuses: nobl9.SloObjectiveCountMetricGoodPrometheusArray{
//											&nobl9.SloObjectiveCountMetricGoodPrometheusArgs{
//												Promql: pulumi.String("1.0"),
//											},
//										},
//									},
//								},
//								Totals: nobl9.SloObjectiveCountMetricTotalArray{
//									&nobl9.SloObjectiveCountMetricTotalArgs{
//										Prometheuses: nobl9.SloObjectiveCountMetricTotalPrometheusArray{
//											&nobl9.SloObjectiveCountMetricTotalPrometheusArgs{
//												Promql: pulumi.String("1.0"),
//											},
//										},
//									},
//								},
//							},
//						},
//					},
//				},
//				Indicator: &nobl9.SloIndicatorArgs{
//					Name: pulumi.String("test-terraform-prom-agent"),
//				},
//				AnomalyConfig: &nobl9.SloAnomalyConfigArgs{
//					NoData: &nobl9.SloAnomalyConfigNoDataArgs{
//						AlertMethods: nobl9.SloAnomalyConfigNoDataAlertMethodArray{
//							&nobl9.SloAnomalyConfigNoDataAlertMethodArgs{
//								Name:    pulumi.String("foo-method-method"),
//								Project: pulumi.String("default"),
//							},
//							&nobl9.SloAnomalyConfigNoDataAlertMethodArgs{
//								Name:    pulumi.String("bar-alert-method"),
//								Project: pulumi.String("default"),
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## Nobl9 Official Documentation
//
// https://docs.nobl9.com/SLOs_as_code/?_highlight=slo
type Slo struct {
	pulumi.CustomResourceState

	// Alert Policies attached to SLO
	AlertPolicies pulumi.StringArrayOutput `pulumi:"alertPolicies"`
	// Configuration for Anomalies. Currently supported Anomaly Type is NoData
	AnomalyConfig SloAnomalyConfigPtrOutput `pulumi:"anomalyConfig"`
	Attachment    SloAttachmentArrayOutput  `pulumi:"attachment"`
	// Deprecated: "attachments" argument is deprecated use "attachment" instead
	Attachments SloAttachmentArrayOutput `pulumi:"attachments"`
	// Method which will be use to calculate budget
	BudgetingMethod pulumi.StringOutput `pulumi:"budgetingMethod"`
	// [Composite SLO documentation](https://docs.nobl9.com/yaml-guide/#slo)
	Composite SloCompositePtrOutput `pulumi:"composite"`
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Name displayed for the attachment. Max. length: 63 characters.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	Indicator   SloIndicatorOutput     `pulumi:"indicator"`
	// [Labels](https://docs.nobl9.com/Features/labels/) containing a single key and a list of values.
	Labels SloLabelArrayOutput `pulumi:"labels"`
	// The name of the previously defined alert method.
	Name pulumi.StringOutput `pulumi:"name"`
	// [Objectives documentation](https://docs.nobl9.com/yaml-guide#objective)
	Objectives SloObjectiveArrayOutput `pulumi:"objectives"`
	// Project name the Alert Method is in,  must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names). If not defined, Nobl9 returns a default value for this field.
	Project pulumi.StringOutput `pulumi:"project"`
	// Name of the service
	Service    pulumi.StringOutput `pulumi:"service"`
	TimeWindow SloTimeWindowOutput `pulumi:"timeWindow"`
}

// NewSlo registers a new resource with the given unique name, arguments, and options.
func NewSlo(ctx *pulumi.Context,
	name string, args *SloArgs, opts ...pulumi.ResourceOption) (*Slo, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.BudgetingMethod == nil {
		return nil, errors.New("invalid value for required argument 'BudgetingMethod'")
	}
	if args.Indicator == nil {
		return nil, errors.New("invalid value for required argument 'Indicator'")
	}
	if args.Objectives == nil {
		return nil, errors.New("invalid value for required argument 'Objectives'")
	}
	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.Service == nil {
		return nil, errors.New("invalid value for required argument 'Service'")
	}
	if args.TimeWindow == nil {
		return nil, errors.New("invalid value for required argument 'TimeWindow'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Slo
	err := ctx.RegisterResource("nobl9:index/slo:Slo", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSlo gets an existing Slo resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSlo(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SloState, opts ...pulumi.ResourceOption) (*Slo, error) {
	var resource Slo
	err := ctx.ReadResource("nobl9:index/slo:Slo", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Slo resources.
type sloState struct {
	// Alert Policies attached to SLO
	AlertPolicies []string `pulumi:"alertPolicies"`
	// Configuration for Anomalies. Currently supported Anomaly Type is NoData
	AnomalyConfig *SloAnomalyConfig `pulumi:"anomalyConfig"`
	Attachment    []SloAttachment   `pulumi:"attachment"`
	// Deprecated: "attachments" argument is deprecated use "attachment" instead
	Attachments []SloAttachment `pulumi:"attachments"`
	// Method which will be use to calculate budget
	BudgetingMethod *string `pulumi:"budgetingMethod"`
	// [Composite SLO documentation](https://docs.nobl9.com/yaml-guide/#slo)
	Composite *SloComposite `pulumi:"composite"`
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description *string `pulumi:"description"`
	// Name displayed for the attachment. Max. length: 63 characters.
	DisplayName *string       `pulumi:"displayName"`
	Indicator   *SloIndicator `pulumi:"indicator"`
	// [Labels](https://docs.nobl9.com/Features/labels/) containing a single key and a list of values.
	Labels []SloLabel `pulumi:"labels"`
	// The name of the previously defined alert method.
	Name *string `pulumi:"name"`
	// [Objectives documentation](https://docs.nobl9.com/yaml-guide#objective)
	Objectives []SloObjective `pulumi:"objectives"`
	// Project name the Alert Method is in,  must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names). If not defined, Nobl9 returns a default value for this field.
	Project *string `pulumi:"project"`
	// Name of the service
	Service    *string        `pulumi:"service"`
	TimeWindow *SloTimeWindow `pulumi:"timeWindow"`
}

type SloState struct {
	// Alert Policies attached to SLO
	AlertPolicies pulumi.StringArrayInput
	// Configuration for Anomalies. Currently supported Anomaly Type is NoData
	AnomalyConfig SloAnomalyConfigPtrInput
	Attachment    SloAttachmentArrayInput
	// Deprecated: "attachments" argument is deprecated use "attachment" instead
	Attachments SloAttachmentArrayInput
	// Method which will be use to calculate budget
	BudgetingMethod pulumi.StringPtrInput
	// [Composite SLO documentation](https://docs.nobl9.com/yaml-guide/#slo)
	Composite SloCompositePtrInput
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description pulumi.StringPtrInput
	// Name displayed for the attachment. Max. length: 63 characters.
	DisplayName pulumi.StringPtrInput
	Indicator   SloIndicatorPtrInput
	// [Labels](https://docs.nobl9.com/Features/labels/) containing a single key and a list of values.
	Labels SloLabelArrayInput
	// The name of the previously defined alert method.
	Name pulumi.StringPtrInput
	// [Objectives documentation](https://docs.nobl9.com/yaml-guide#objective)
	Objectives SloObjectiveArrayInput
	// Project name the Alert Method is in,  must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names). If not defined, Nobl9 returns a default value for this field.
	Project pulumi.StringPtrInput
	// Name of the service
	Service    pulumi.StringPtrInput
	TimeWindow SloTimeWindowPtrInput
}

func (SloState) ElementType() reflect.Type {
	return reflect.TypeOf((*sloState)(nil)).Elem()
}

type sloArgs struct {
	// Alert Policies attached to SLO
	AlertPolicies []string `pulumi:"alertPolicies"`
	// Configuration for Anomalies. Currently supported Anomaly Type is NoData
	AnomalyConfig *SloAnomalyConfig `pulumi:"anomalyConfig"`
	Attachment    []SloAttachment   `pulumi:"attachment"`
	// Deprecated: "attachments" argument is deprecated use "attachment" instead
	Attachments []SloAttachment `pulumi:"attachments"`
	// Method which will be use to calculate budget
	BudgetingMethod string `pulumi:"budgetingMethod"`
	// [Composite SLO documentation](https://docs.nobl9.com/yaml-guide/#slo)
	Composite *SloComposite `pulumi:"composite"`
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description *string `pulumi:"description"`
	// Name displayed for the attachment. Max. length: 63 characters.
	DisplayName *string      `pulumi:"displayName"`
	Indicator   SloIndicator `pulumi:"indicator"`
	// [Labels](https://docs.nobl9.com/Features/labels/) containing a single key and a list of values.
	Labels []SloLabel `pulumi:"labels"`
	// The name of the previously defined alert method.
	Name *string `pulumi:"name"`
	// [Objectives documentation](https://docs.nobl9.com/yaml-guide#objective)
	Objectives []SloObjective `pulumi:"objectives"`
	// Project name the Alert Method is in,  must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names). If not defined, Nobl9 returns a default value for this field.
	Project string `pulumi:"project"`
	// Name of the service
	Service    string        `pulumi:"service"`
	TimeWindow SloTimeWindow `pulumi:"timeWindow"`
}

// The set of arguments for constructing a Slo resource.
type SloArgs struct {
	// Alert Policies attached to SLO
	AlertPolicies pulumi.StringArrayInput
	// Configuration for Anomalies. Currently supported Anomaly Type is NoData
	AnomalyConfig SloAnomalyConfigPtrInput
	Attachment    SloAttachmentArrayInput
	// Deprecated: "attachments" argument is deprecated use "attachment" instead
	Attachments SloAttachmentArrayInput
	// Method which will be use to calculate budget
	BudgetingMethod pulumi.StringInput
	// [Composite SLO documentation](https://docs.nobl9.com/yaml-guide/#slo)
	Composite SloCompositePtrInput
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description pulumi.StringPtrInput
	// Name displayed for the attachment. Max. length: 63 characters.
	DisplayName pulumi.StringPtrInput
	Indicator   SloIndicatorInput
	// [Labels](https://docs.nobl9.com/Features/labels/) containing a single key and a list of values.
	Labels SloLabelArrayInput
	// The name of the previously defined alert method.
	Name pulumi.StringPtrInput
	// [Objectives documentation](https://docs.nobl9.com/yaml-guide#objective)
	Objectives SloObjectiveArrayInput
	// Project name the Alert Method is in,  must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names). If not defined, Nobl9 returns a default value for this field.
	Project pulumi.StringInput
	// Name of the service
	Service    pulumi.StringInput
	TimeWindow SloTimeWindowInput
}

func (SloArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*sloArgs)(nil)).Elem()
}

type SloInput interface {
	pulumi.Input

	ToSloOutput() SloOutput
	ToSloOutputWithContext(ctx context.Context) SloOutput
}

func (*Slo) ElementType() reflect.Type {
	return reflect.TypeOf((**Slo)(nil)).Elem()
}

func (i *Slo) ToSloOutput() SloOutput {
	return i.ToSloOutputWithContext(context.Background())
}

func (i *Slo) ToSloOutputWithContext(ctx context.Context) SloOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloOutput)
}

// SloArrayInput is an input type that accepts SloArray and SloArrayOutput values.
// You can construct a concrete instance of `SloArrayInput` via:
//
//	SloArray{ SloArgs{...} }
type SloArrayInput interface {
	pulumi.Input

	ToSloArrayOutput() SloArrayOutput
	ToSloArrayOutputWithContext(context.Context) SloArrayOutput
}

type SloArray []SloInput

func (SloArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Slo)(nil)).Elem()
}

func (i SloArray) ToSloArrayOutput() SloArrayOutput {
	return i.ToSloArrayOutputWithContext(context.Background())
}

func (i SloArray) ToSloArrayOutputWithContext(ctx context.Context) SloArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloArrayOutput)
}

// SloMapInput is an input type that accepts SloMap and SloMapOutput values.
// You can construct a concrete instance of `SloMapInput` via:
//
//	SloMap{ "key": SloArgs{...} }
type SloMapInput interface {
	pulumi.Input

	ToSloMapOutput() SloMapOutput
	ToSloMapOutputWithContext(context.Context) SloMapOutput
}

type SloMap map[string]SloInput

func (SloMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Slo)(nil)).Elem()
}

func (i SloMap) ToSloMapOutput() SloMapOutput {
	return i.ToSloMapOutputWithContext(context.Background())
}

func (i SloMap) ToSloMapOutputWithContext(ctx context.Context) SloMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloMapOutput)
}

type SloOutput struct{ *pulumi.OutputState }

func (SloOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Slo)(nil)).Elem()
}

func (o SloOutput) ToSloOutput() SloOutput {
	return o
}

func (o SloOutput) ToSloOutputWithContext(ctx context.Context) SloOutput {
	return o
}

// Alert Policies attached to SLO
func (o SloOutput) AlertPolicies() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *Slo) pulumi.StringArrayOutput { return v.AlertPolicies }).(pulumi.StringArrayOutput)
}

// Configuration for Anomalies. Currently supported Anomaly Type is NoData
func (o SloOutput) AnomalyConfig() SloAnomalyConfigPtrOutput {
	return o.ApplyT(func(v *Slo) SloAnomalyConfigPtrOutput { return v.AnomalyConfig }).(SloAnomalyConfigPtrOutput)
}

func (o SloOutput) Attachment() SloAttachmentArrayOutput {
	return o.ApplyT(func(v *Slo) SloAttachmentArrayOutput { return v.Attachment }).(SloAttachmentArrayOutput)
}

// Deprecated: "attachments" argument is deprecated use "attachment" instead
func (o SloOutput) Attachments() SloAttachmentArrayOutput {
	return o.ApplyT(func(v *Slo) SloAttachmentArrayOutput { return v.Attachments }).(SloAttachmentArrayOutput)
}

// Method which will be use to calculate budget
func (o SloOutput) BudgetingMethod() pulumi.StringOutput {
	return o.ApplyT(func(v *Slo) pulumi.StringOutput { return v.BudgetingMethod }).(pulumi.StringOutput)
}

// [Composite SLO documentation](https://docs.nobl9.com/yaml-guide/#slo)
func (o SloOutput) Composite() SloCompositePtrOutput {
	return o.ApplyT(func(v *Slo) SloCompositePtrOutput { return v.Composite }).(SloCompositePtrOutput)
}

// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
func (o SloOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Slo) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Name displayed for the attachment. Max. length: 63 characters.
func (o SloOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Slo) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

func (o SloOutput) Indicator() SloIndicatorOutput {
	return o.ApplyT(func(v *Slo) SloIndicatorOutput { return v.Indicator }).(SloIndicatorOutput)
}

// [Labels](https://docs.nobl9.com/Features/labels/) containing a single key and a list of values.
func (o SloOutput) Labels() SloLabelArrayOutput {
	return o.ApplyT(func(v *Slo) SloLabelArrayOutput { return v.Labels }).(SloLabelArrayOutput)
}

// The name of the previously defined alert method.
func (o SloOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *Slo) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// [Objectives documentation](https://docs.nobl9.com/yaml-guide#objective)
func (o SloOutput) Objectives() SloObjectiveArrayOutput {
	return o.ApplyT(func(v *Slo) SloObjectiveArrayOutput { return v.Objectives }).(SloObjectiveArrayOutput)
}

// Project name the Alert Method is in,  must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names). If not defined, Nobl9 returns a default value for this field.
func (o SloOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *Slo) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Name of the service
func (o SloOutput) Service() pulumi.StringOutput {
	return o.ApplyT(func(v *Slo) pulumi.StringOutput { return v.Service }).(pulumi.StringOutput)
}

func (o SloOutput) TimeWindow() SloTimeWindowOutput {
	return o.ApplyT(func(v *Slo) SloTimeWindowOutput { return v.TimeWindow }).(SloTimeWindowOutput)
}

type SloArrayOutput struct{ *pulumi.OutputState }

func (SloArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Slo)(nil)).Elem()
}

func (o SloArrayOutput) ToSloArrayOutput() SloArrayOutput {
	return o
}

func (o SloArrayOutput) ToSloArrayOutputWithContext(ctx context.Context) SloArrayOutput {
	return o
}

func (o SloArrayOutput) Index(i pulumi.IntInput) SloOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Slo {
		return vs[0].([]*Slo)[vs[1].(int)]
	}).(SloOutput)
}

type SloMapOutput struct{ *pulumi.OutputState }

func (SloMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Slo)(nil)).Elem()
}

func (o SloMapOutput) ToSloMapOutput() SloMapOutput {
	return o
}

func (o SloMapOutput) ToSloMapOutputWithContext(ctx context.Context) SloMapOutput {
	return o
}

func (o SloMapOutput) MapIndex(k pulumi.StringInput) SloOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Slo {
		return vs[0].(map[string]*Slo)[vs[1].(string)]
	}).(SloOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*SloInput)(nil)).Elem(), &Slo{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloArrayInput)(nil)).Elem(), SloArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloMapInput)(nil)).Elem(), SloMap{})
	pulumi.RegisterOutputType(SloOutput{})
	pulumi.RegisterOutputType(SloArrayOutput{})
	pulumi.RegisterOutputType(SloMapOutput{})
}

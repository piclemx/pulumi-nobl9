// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nobl9

import (
	"context"
	"reflect"

	"errors"
	"github.com/piclemx/pulumi-nobl9/sdk/go/nobl9/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AlertMethodPagerduty struct {
	pulumi.CustomResourceState

	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// User-friendly display name of the resource.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// PagerDuty Integration Key. For more details, check [Services and integrations](https://support.pagerduty.com/docs/services-and-integrations).
	IntegrationKey pulumi.StringOutput `pulumi:"integrationKey"`
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name pulumi.StringOutput `pulumi:"name"`
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project pulumi.StringOutput `pulumi:"project"`
	// Sends a notification after the cooldown period is over.
	SendResolution AlertMethodPagerdutySendResolutionPtrOutput `pulumi:"sendResolution"`
}

// NewAlertMethodPagerduty registers a new resource with the given unique name, arguments, and options.
func NewAlertMethodPagerduty(ctx *pulumi.Context,
	name string, args *AlertMethodPagerdutyArgs, opts ...pulumi.ResourceOption) (*AlertMethodPagerduty, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.IntegrationKey != nil {
		args.IntegrationKey = pulumi.ToSecret(args.IntegrationKey).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"integrationKey",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AlertMethodPagerduty
	err := ctx.RegisterResource("nobl9:index/alertMethodPagerduty:AlertMethodPagerduty", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAlertMethodPagerduty gets an existing AlertMethodPagerduty resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAlertMethodPagerduty(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AlertMethodPagerdutyState, opts ...pulumi.ResourceOption) (*AlertMethodPagerduty, error) {
	var resource AlertMethodPagerduty
	err := ctx.ReadResource("nobl9:index/alertMethodPagerduty:AlertMethodPagerduty", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AlertMethodPagerduty resources.
type alertMethodPagerdutyState struct {
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description *string `pulumi:"description"`
	// User-friendly display name of the resource.
	DisplayName *string `pulumi:"displayName"`
	// PagerDuty Integration Key. For more details, check [Services and integrations](https://support.pagerduty.com/docs/services-and-integrations).
	IntegrationKey *string `pulumi:"integrationKey"`
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name *string `pulumi:"name"`
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project *string `pulumi:"project"`
	// Sends a notification after the cooldown period is over.
	SendResolution *AlertMethodPagerdutySendResolution `pulumi:"sendResolution"`
}

type AlertMethodPagerdutyState struct {
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description pulumi.StringPtrInput
	// User-friendly display name of the resource.
	DisplayName pulumi.StringPtrInput
	// PagerDuty Integration Key. For more details, check [Services and integrations](https://support.pagerduty.com/docs/services-and-integrations).
	IntegrationKey pulumi.StringPtrInput
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name pulumi.StringPtrInput
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project pulumi.StringPtrInput
	// Sends a notification after the cooldown period is over.
	SendResolution AlertMethodPagerdutySendResolutionPtrInput
}

func (AlertMethodPagerdutyState) ElementType() reflect.Type {
	return reflect.TypeOf((*alertMethodPagerdutyState)(nil)).Elem()
}

type alertMethodPagerdutyArgs struct {
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description *string `pulumi:"description"`
	// User-friendly display name of the resource.
	DisplayName *string `pulumi:"displayName"`
	// PagerDuty Integration Key. For more details, check [Services and integrations](https://support.pagerduty.com/docs/services-and-integrations).
	IntegrationKey *string `pulumi:"integrationKey"`
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name *string `pulumi:"name"`
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project string `pulumi:"project"`
	// Sends a notification after the cooldown period is over.
	SendResolution *AlertMethodPagerdutySendResolution `pulumi:"sendResolution"`
}

// The set of arguments for constructing a AlertMethodPagerduty resource.
type AlertMethodPagerdutyArgs struct {
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description pulumi.StringPtrInput
	// User-friendly display name of the resource.
	DisplayName pulumi.StringPtrInput
	// PagerDuty Integration Key. For more details, check [Services and integrations](https://support.pagerduty.com/docs/services-and-integrations).
	IntegrationKey pulumi.StringPtrInput
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name pulumi.StringPtrInput
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project pulumi.StringInput
	// Sends a notification after the cooldown period is over.
	SendResolution AlertMethodPagerdutySendResolutionPtrInput
}

func (AlertMethodPagerdutyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*alertMethodPagerdutyArgs)(nil)).Elem()
}

type AlertMethodPagerdutyInput interface {
	pulumi.Input

	ToAlertMethodPagerdutyOutput() AlertMethodPagerdutyOutput
	ToAlertMethodPagerdutyOutputWithContext(ctx context.Context) AlertMethodPagerdutyOutput
}

func (*AlertMethodPagerduty) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertMethodPagerduty)(nil)).Elem()
}

func (i *AlertMethodPagerduty) ToAlertMethodPagerdutyOutput() AlertMethodPagerdutyOutput {
	return i.ToAlertMethodPagerdutyOutputWithContext(context.Background())
}

func (i *AlertMethodPagerduty) ToAlertMethodPagerdutyOutputWithContext(ctx context.Context) AlertMethodPagerdutyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertMethodPagerdutyOutput)
}

// AlertMethodPagerdutyArrayInput is an input type that accepts AlertMethodPagerdutyArray and AlertMethodPagerdutyArrayOutput values.
// You can construct a concrete instance of `AlertMethodPagerdutyArrayInput` via:
//
//	AlertMethodPagerdutyArray{ AlertMethodPagerdutyArgs{...} }
type AlertMethodPagerdutyArrayInput interface {
	pulumi.Input

	ToAlertMethodPagerdutyArrayOutput() AlertMethodPagerdutyArrayOutput
	ToAlertMethodPagerdutyArrayOutputWithContext(context.Context) AlertMethodPagerdutyArrayOutput
}

type AlertMethodPagerdutyArray []AlertMethodPagerdutyInput

func (AlertMethodPagerdutyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlertMethodPagerduty)(nil)).Elem()
}

func (i AlertMethodPagerdutyArray) ToAlertMethodPagerdutyArrayOutput() AlertMethodPagerdutyArrayOutput {
	return i.ToAlertMethodPagerdutyArrayOutputWithContext(context.Background())
}

func (i AlertMethodPagerdutyArray) ToAlertMethodPagerdutyArrayOutputWithContext(ctx context.Context) AlertMethodPagerdutyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertMethodPagerdutyArrayOutput)
}

// AlertMethodPagerdutyMapInput is an input type that accepts AlertMethodPagerdutyMap and AlertMethodPagerdutyMapOutput values.
// You can construct a concrete instance of `AlertMethodPagerdutyMapInput` via:
//
//	AlertMethodPagerdutyMap{ "key": AlertMethodPagerdutyArgs{...} }
type AlertMethodPagerdutyMapInput interface {
	pulumi.Input

	ToAlertMethodPagerdutyMapOutput() AlertMethodPagerdutyMapOutput
	ToAlertMethodPagerdutyMapOutputWithContext(context.Context) AlertMethodPagerdutyMapOutput
}

type AlertMethodPagerdutyMap map[string]AlertMethodPagerdutyInput

func (AlertMethodPagerdutyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlertMethodPagerduty)(nil)).Elem()
}

func (i AlertMethodPagerdutyMap) ToAlertMethodPagerdutyMapOutput() AlertMethodPagerdutyMapOutput {
	return i.ToAlertMethodPagerdutyMapOutputWithContext(context.Background())
}

func (i AlertMethodPagerdutyMap) ToAlertMethodPagerdutyMapOutputWithContext(ctx context.Context) AlertMethodPagerdutyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertMethodPagerdutyMapOutput)
}

type AlertMethodPagerdutyOutput struct{ *pulumi.OutputState }

func (AlertMethodPagerdutyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertMethodPagerduty)(nil)).Elem()
}

func (o AlertMethodPagerdutyOutput) ToAlertMethodPagerdutyOutput() AlertMethodPagerdutyOutput {
	return o
}

func (o AlertMethodPagerdutyOutput) ToAlertMethodPagerdutyOutputWithContext(ctx context.Context) AlertMethodPagerdutyOutput {
	return o
}

// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
func (o AlertMethodPagerdutyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertMethodPagerduty) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// User-friendly display name of the resource.
func (o AlertMethodPagerdutyOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertMethodPagerduty) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// PagerDuty Integration Key. For more details, check [Services and integrations](https://support.pagerduty.com/docs/services-and-integrations).
func (o AlertMethodPagerdutyOutput) IntegrationKey() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertMethodPagerduty) pulumi.StringOutput { return v.IntegrationKey }).(pulumi.StringOutput)
}

// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
func (o AlertMethodPagerdutyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertMethodPagerduty) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
func (o AlertMethodPagerdutyOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertMethodPagerduty) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Sends a notification after the cooldown period is over.
func (o AlertMethodPagerdutyOutput) SendResolution() AlertMethodPagerdutySendResolutionPtrOutput {
	return o.ApplyT(func(v *AlertMethodPagerduty) AlertMethodPagerdutySendResolutionPtrOutput { return v.SendResolution }).(AlertMethodPagerdutySendResolutionPtrOutput)
}

type AlertMethodPagerdutyArrayOutput struct{ *pulumi.OutputState }

func (AlertMethodPagerdutyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlertMethodPagerduty)(nil)).Elem()
}

func (o AlertMethodPagerdutyArrayOutput) ToAlertMethodPagerdutyArrayOutput() AlertMethodPagerdutyArrayOutput {
	return o
}

func (o AlertMethodPagerdutyArrayOutput) ToAlertMethodPagerdutyArrayOutputWithContext(ctx context.Context) AlertMethodPagerdutyArrayOutput {
	return o
}

func (o AlertMethodPagerdutyArrayOutput) Index(i pulumi.IntInput) AlertMethodPagerdutyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AlertMethodPagerduty {
		return vs[0].([]*AlertMethodPagerduty)[vs[1].(int)]
	}).(AlertMethodPagerdutyOutput)
}

type AlertMethodPagerdutyMapOutput struct{ *pulumi.OutputState }

func (AlertMethodPagerdutyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlertMethodPagerduty)(nil)).Elem()
}

func (o AlertMethodPagerdutyMapOutput) ToAlertMethodPagerdutyMapOutput() AlertMethodPagerdutyMapOutput {
	return o
}

func (o AlertMethodPagerdutyMapOutput) ToAlertMethodPagerdutyMapOutputWithContext(ctx context.Context) AlertMethodPagerdutyMapOutput {
	return o
}

func (o AlertMethodPagerdutyMapOutput) MapIndex(k pulumi.StringInput) AlertMethodPagerdutyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AlertMethodPagerduty {
		return vs[0].(map[string]*AlertMethodPagerduty)[vs[1].(string)]
	}).(AlertMethodPagerdutyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AlertMethodPagerdutyInput)(nil)).Elem(), &AlertMethodPagerduty{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertMethodPagerdutyArrayInput)(nil)).Elem(), AlertMethodPagerdutyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertMethodPagerdutyMapInput)(nil)).Elem(), AlertMethodPagerdutyMap{})
	pulumi.RegisterOutputType(AlertMethodPagerdutyOutput{})
	pulumi.RegisterOutputType(AlertMethodPagerdutyArrayOutput{})
	pulumi.RegisterOutputType(AlertMethodPagerdutyMapOutput{})
}

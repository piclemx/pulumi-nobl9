// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nobl9

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AlertMethodServicenow struct {
	pulumi.CustomResourceState

	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// User-friendly display name of the resource.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// ServiceNow InstanceName. For details see [Nobl9 documentation](https://docs.nobl9.com/Alerting/Alert_methods/servicenow#servicenow-credentials).
	InstanceName pulumi.StringOutput `pulumi:"instanceName"`
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name pulumi.StringOutput `pulumi:"name"`
	// ServiceNow password.
	Password pulumi.StringOutput `pulumi:"password"`
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project pulumi.StringOutput `pulumi:"project"`
	// ServiceNow username.
	Username pulumi.StringOutput `pulumi:"username"`
}

// NewAlertMethodServicenow registers a new resource with the given unique name, arguments, and options.
func NewAlertMethodServicenow(ctx *pulumi.Context,
	name string, args *AlertMethodServicenowArgs, opts ...pulumi.ResourceOption) (*AlertMethodServicenow, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceName == nil {
		return nil, errors.New("invalid value for required argument 'InstanceName'")
	}
	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.Username == nil {
		return nil, errors.New("invalid value for required argument 'Username'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource AlertMethodServicenow
	err := ctx.RegisterResource("nobl9:index/alertMethodServicenow:AlertMethodServicenow", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAlertMethodServicenow gets an existing AlertMethodServicenow resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAlertMethodServicenow(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AlertMethodServicenowState, opts ...pulumi.ResourceOption) (*AlertMethodServicenow, error) {
	var resource AlertMethodServicenow
	err := ctx.ReadResource("nobl9:index/alertMethodServicenow:AlertMethodServicenow", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AlertMethodServicenow resources.
type alertMethodServicenowState struct {
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description *string `pulumi:"description"`
	// User-friendly display name of the resource.
	DisplayName *string `pulumi:"displayName"`
	// ServiceNow InstanceName. For details see [Nobl9 documentation](https://docs.nobl9.com/Alerting/Alert_methods/servicenow#servicenow-credentials).
	InstanceName *string `pulumi:"instanceName"`
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name *string `pulumi:"name"`
	// ServiceNow password.
	Password *string `pulumi:"password"`
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project *string `pulumi:"project"`
	// ServiceNow username.
	Username *string `pulumi:"username"`
}

type AlertMethodServicenowState struct {
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description pulumi.StringPtrInput
	// User-friendly display name of the resource.
	DisplayName pulumi.StringPtrInput
	// ServiceNow InstanceName. For details see [Nobl9 documentation](https://docs.nobl9.com/Alerting/Alert_methods/servicenow#servicenow-credentials).
	InstanceName pulumi.StringPtrInput
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name pulumi.StringPtrInput
	// ServiceNow password.
	Password pulumi.StringPtrInput
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project pulumi.StringPtrInput
	// ServiceNow username.
	Username pulumi.StringPtrInput
}

func (AlertMethodServicenowState) ElementType() reflect.Type {
	return reflect.TypeOf((*alertMethodServicenowState)(nil)).Elem()
}

type alertMethodServicenowArgs struct {
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description *string `pulumi:"description"`
	// User-friendly display name of the resource.
	DisplayName *string `pulumi:"displayName"`
	// ServiceNow InstanceName. For details see [Nobl9 documentation](https://docs.nobl9.com/Alerting/Alert_methods/servicenow#servicenow-credentials).
	InstanceName string `pulumi:"instanceName"`
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name *string `pulumi:"name"`
	// ServiceNow password.
	Password *string `pulumi:"password"`
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project string `pulumi:"project"`
	// ServiceNow username.
	Username string `pulumi:"username"`
}

// The set of arguments for constructing a AlertMethodServicenow resource.
type AlertMethodServicenowArgs struct {
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description pulumi.StringPtrInput
	// User-friendly display name of the resource.
	DisplayName pulumi.StringPtrInput
	// ServiceNow InstanceName. For details see [Nobl9 documentation](https://docs.nobl9.com/Alerting/Alert_methods/servicenow#servicenow-credentials).
	InstanceName pulumi.StringInput
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name pulumi.StringPtrInput
	// ServiceNow password.
	Password pulumi.StringPtrInput
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project pulumi.StringInput
	// ServiceNow username.
	Username pulumi.StringInput
}

func (AlertMethodServicenowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*alertMethodServicenowArgs)(nil)).Elem()
}

type AlertMethodServicenowInput interface {
	pulumi.Input

	ToAlertMethodServicenowOutput() AlertMethodServicenowOutput
	ToAlertMethodServicenowOutputWithContext(ctx context.Context) AlertMethodServicenowOutput
}

func (*AlertMethodServicenow) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertMethodServicenow)(nil)).Elem()
}

func (i *AlertMethodServicenow) ToAlertMethodServicenowOutput() AlertMethodServicenowOutput {
	return i.ToAlertMethodServicenowOutputWithContext(context.Background())
}

func (i *AlertMethodServicenow) ToAlertMethodServicenowOutputWithContext(ctx context.Context) AlertMethodServicenowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertMethodServicenowOutput)
}

// AlertMethodServicenowArrayInput is an input type that accepts AlertMethodServicenowArray and AlertMethodServicenowArrayOutput values.
// You can construct a concrete instance of `AlertMethodServicenowArrayInput` via:
//
//          AlertMethodServicenowArray{ AlertMethodServicenowArgs{...} }
type AlertMethodServicenowArrayInput interface {
	pulumi.Input

	ToAlertMethodServicenowArrayOutput() AlertMethodServicenowArrayOutput
	ToAlertMethodServicenowArrayOutputWithContext(context.Context) AlertMethodServicenowArrayOutput
}

type AlertMethodServicenowArray []AlertMethodServicenowInput

func (AlertMethodServicenowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlertMethodServicenow)(nil)).Elem()
}

func (i AlertMethodServicenowArray) ToAlertMethodServicenowArrayOutput() AlertMethodServicenowArrayOutput {
	return i.ToAlertMethodServicenowArrayOutputWithContext(context.Background())
}

func (i AlertMethodServicenowArray) ToAlertMethodServicenowArrayOutputWithContext(ctx context.Context) AlertMethodServicenowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertMethodServicenowArrayOutput)
}

// AlertMethodServicenowMapInput is an input type that accepts AlertMethodServicenowMap and AlertMethodServicenowMapOutput values.
// You can construct a concrete instance of `AlertMethodServicenowMapInput` via:
//
//          AlertMethodServicenowMap{ "key": AlertMethodServicenowArgs{...} }
type AlertMethodServicenowMapInput interface {
	pulumi.Input

	ToAlertMethodServicenowMapOutput() AlertMethodServicenowMapOutput
	ToAlertMethodServicenowMapOutputWithContext(context.Context) AlertMethodServicenowMapOutput
}

type AlertMethodServicenowMap map[string]AlertMethodServicenowInput

func (AlertMethodServicenowMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlertMethodServicenow)(nil)).Elem()
}

func (i AlertMethodServicenowMap) ToAlertMethodServicenowMapOutput() AlertMethodServicenowMapOutput {
	return i.ToAlertMethodServicenowMapOutputWithContext(context.Background())
}

func (i AlertMethodServicenowMap) ToAlertMethodServicenowMapOutputWithContext(ctx context.Context) AlertMethodServicenowMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertMethodServicenowMapOutput)
}

type AlertMethodServicenowOutput struct{ *pulumi.OutputState }

func (AlertMethodServicenowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertMethodServicenow)(nil)).Elem()
}

func (o AlertMethodServicenowOutput) ToAlertMethodServicenowOutput() AlertMethodServicenowOutput {
	return o
}

func (o AlertMethodServicenowOutput) ToAlertMethodServicenowOutputWithContext(ctx context.Context) AlertMethodServicenowOutput {
	return o
}

// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
func (o AlertMethodServicenowOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertMethodServicenow) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// User-friendly display name of the resource.
func (o AlertMethodServicenowOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertMethodServicenow) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// ServiceNow InstanceName. For details see [Nobl9 documentation](https://docs.nobl9.com/Alerting/Alert_methods/servicenow#servicenow-credentials).
func (o AlertMethodServicenowOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertMethodServicenow) pulumi.StringOutput { return v.InstanceName }).(pulumi.StringOutput)
}

// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
func (o AlertMethodServicenowOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertMethodServicenow) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// ServiceNow password.
func (o AlertMethodServicenowOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertMethodServicenow) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
func (o AlertMethodServicenowOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertMethodServicenow) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// ServiceNow username.
func (o AlertMethodServicenowOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertMethodServicenow) pulumi.StringOutput { return v.Username }).(pulumi.StringOutput)
}

type AlertMethodServicenowArrayOutput struct{ *pulumi.OutputState }

func (AlertMethodServicenowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlertMethodServicenow)(nil)).Elem()
}

func (o AlertMethodServicenowArrayOutput) ToAlertMethodServicenowArrayOutput() AlertMethodServicenowArrayOutput {
	return o
}

func (o AlertMethodServicenowArrayOutput) ToAlertMethodServicenowArrayOutputWithContext(ctx context.Context) AlertMethodServicenowArrayOutput {
	return o
}

func (o AlertMethodServicenowArrayOutput) Index(i pulumi.IntInput) AlertMethodServicenowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AlertMethodServicenow {
		return vs[0].([]*AlertMethodServicenow)[vs[1].(int)]
	}).(AlertMethodServicenowOutput)
}

type AlertMethodServicenowMapOutput struct{ *pulumi.OutputState }

func (AlertMethodServicenowMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlertMethodServicenow)(nil)).Elem()
}

func (o AlertMethodServicenowMapOutput) ToAlertMethodServicenowMapOutput() AlertMethodServicenowMapOutput {
	return o
}

func (o AlertMethodServicenowMapOutput) ToAlertMethodServicenowMapOutputWithContext(ctx context.Context) AlertMethodServicenowMapOutput {
	return o
}

func (o AlertMethodServicenowMapOutput) MapIndex(k pulumi.StringInput) AlertMethodServicenowOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AlertMethodServicenow {
		return vs[0].(map[string]*AlertMethodServicenow)[vs[1].(string)]
	}).(AlertMethodServicenowOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AlertMethodServicenowInput)(nil)).Elem(), &AlertMethodServicenow{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertMethodServicenowArrayInput)(nil)).Elem(), AlertMethodServicenowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertMethodServicenowMapInput)(nil)).Elem(), AlertMethodServicenowMap{})
	pulumi.RegisterOutputType(AlertMethodServicenowOutput{})
	pulumi.RegisterOutputType(AlertMethodServicenowArrayOutput{})
	pulumi.RegisterOutputType(AlertMethodServicenowMapOutput{})
}

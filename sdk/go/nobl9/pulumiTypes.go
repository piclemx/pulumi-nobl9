// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nobl9

import (
	"context"
	"reflect"

	"github.com/piclemx/pulumi-nobl9/sdk/go/nobl9/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AgentAmazonPrometheusConfig struct {
	// AWS region e.g., eu-central-1
	Region string `pulumi:"region"`
	// Base URL to Amazon Prometheus server.
	Url string `pulumi:"url"`
}

// AgentAmazonPrometheusConfigInput is an input type that accepts AgentAmazonPrometheusConfigArgs and AgentAmazonPrometheusConfigOutput values.
// You can construct a concrete instance of `AgentAmazonPrometheusConfigInput` via:
//
//	AgentAmazonPrometheusConfigArgs{...}
type AgentAmazonPrometheusConfigInput interface {
	pulumi.Input

	ToAgentAmazonPrometheusConfigOutput() AgentAmazonPrometheusConfigOutput
	ToAgentAmazonPrometheusConfigOutputWithContext(context.Context) AgentAmazonPrometheusConfigOutput
}

type AgentAmazonPrometheusConfigArgs struct {
	// AWS region e.g., eu-central-1
	Region pulumi.StringInput `pulumi:"region"`
	// Base URL to Amazon Prometheus server.
	Url pulumi.StringInput `pulumi:"url"`
}

func (AgentAmazonPrometheusConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentAmazonPrometheusConfig)(nil)).Elem()
}

func (i AgentAmazonPrometheusConfigArgs) ToAgentAmazonPrometheusConfigOutput() AgentAmazonPrometheusConfigOutput {
	return i.ToAgentAmazonPrometheusConfigOutputWithContext(context.Background())
}

func (i AgentAmazonPrometheusConfigArgs) ToAgentAmazonPrometheusConfigOutputWithContext(ctx context.Context) AgentAmazonPrometheusConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentAmazonPrometheusConfigOutput)
}

func (i AgentAmazonPrometheusConfigArgs) ToAgentAmazonPrometheusConfigPtrOutput() AgentAmazonPrometheusConfigPtrOutput {
	return i.ToAgentAmazonPrometheusConfigPtrOutputWithContext(context.Background())
}

func (i AgentAmazonPrometheusConfigArgs) ToAgentAmazonPrometheusConfigPtrOutputWithContext(ctx context.Context) AgentAmazonPrometheusConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentAmazonPrometheusConfigOutput).ToAgentAmazonPrometheusConfigPtrOutputWithContext(ctx)
}

// AgentAmazonPrometheusConfigPtrInput is an input type that accepts AgentAmazonPrometheusConfigArgs, AgentAmazonPrometheusConfigPtr and AgentAmazonPrometheusConfigPtrOutput values.
// You can construct a concrete instance of `AgentAmazonPrometheusConfigPtrInput` via:
//
//	        AgentAmazonPrometheusConfigArgs{...}
//
//	or:
//
//	        nil
type AgentAmazonPrometheusConfigPtrInput interface {
	pulumi.Input

	ToAgentAmazonPrometheusConfigPtrOutput() AgentAmazonPrometheusConfigPtrOutput
	ToAgentAmazonPrometheusConfigPtrOutputWithContext(context.Context) AgentAmazonPrometheusConfigPtrOutput
}

type agentAmazonPrometheusConfigPtrType AgentAmazonPrometheusConfigArgs

func AgentAmazonPrometheusConfigPtr(v *AgentAmazonPrometheusConfigArgs) AgentAmazonPrometheusConfigPtrInput {
	return (*agentAmazonPrometheusConfigPtrType)(v)
}

func (*agentAmazonPrometheusConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentAmazonPrometheusConfig)(nil)).Elem()
}

func (i *agentAmazonPrometheusConfigPtrType) ToAgentAmazonPrometheusConfigPtrOutput() AgentAmazonPrometheusConfigPtrOutput {
	return i.ToAgentAmazonPrometheusConfigPtrOutputWithContext(context.Background())
}

func (i *agentAmazonPrometheusConfigPtrType) ToAgentAmazonPrometheusConfigPtrOutputWithContext(ctx context.Context) AgentAmazonPrometheusConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentAmazonPrometheusConfigPtrOutput)
}

type AgentAmazonPrometheusConfigOutput struct{ *pulumi.OutputState }

func (AgentAmazonPrometheusConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentAmazonPrometheusConfig)(nil)).Elem()
}

func (o AgentAmazonPrometheusConfigOutput) ToAgentAmazonPrometheusConfigOutput() AgentAmazonPrometheusConfigOutput {
	return o
}

func (o AgentAmazonPrometheusConfigOutput) ToAgentAmazonPrometheusConfigOutputWithContext(ctx context.Context) AgentAmazonPrometheusConfigOutput {
	return o
}

func (o AgentAmazonPrometheusConfigOutput) ToAgentAmazonPrometheusConfigPtrOutput() AgentAmazonPrometheusConfigPtrOutput {
	return o.ToAgentAmazonPrometheusConfigPtrOutputWithContext(context.Background())
}

func (o AgentAmazonPrometheusConfigOutput) ToAgentAmazonPrometheusConfigPtrOutputWithContext(ctx context.Context) AgentAmazonPrometheusConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentAmazonPrometheusConfig) *AgentAmazonPrometheusConfig {
		return &v
	}).(AgentAmazonPrometheusConfigPtrOutput)
}

// AWS region e.g., eu-central-1
func (o AgentAmazonPrometheusConfigOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v AgentAmazonPrometheusConfig) string { return v.Region }).(pulumi.StringOutput)
}

// Base URL to Amazon Prometheus server.
func (o AgentAmazonPrometheusConfigOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v AgentAmazonPrometheusConfig) string { return v.Url }).(pulumi.StringOutput)
}

type AgentAmazonPrometheusConfigPtrOutput struct{ *pulumi.OutputState }

func (AgentAmazonPrometheusConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentAmazonPrometheusConfig)(nil)).Elem()
}

func (o AgentAmazonPrometheusConfigPtrOutput) ToAgentAmazonPrometheusConfigPtrOutput() AgentAmazonPrometheusConfigPtrOutput {
	return o
}

func (o AgentAmazonPrometheusConfigPtrOutput) ToAgentAmazonPrometheusConfigPtrOutputWithContext(ctx context.Context) AgentAmazonPrometheusConfigPtrOutput {
	return o
}

func (o AgentAmazonPrometheusConfigPtrOutput) Elem() AgentAmazonPrometheusConfigOutput {
	return o.ApplyT(func(v *AgentAmazonPrometheusConfig) AgentAmazonPrometheusConfig {
		if v != nil {
			return *v
		}
		var ret AgentAmazonPrometheusConfig
		return ret
	}).(AgentAmazonPrometheusConfigOutput)
}

// AWS region e.g., eu-central-1
func (o AgentAmazonPrometheusConfigPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentAmazonPrometheusConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Region
	}).(pulumi.StringPtrOutput)
}

// Base URL to Amazon Prometheus server.
func (o AgentAmazonPrometheusConfigPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentAmazonPrometheusConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type AgentAppdynamicsConfig struct {
	// Base URL to the AppDynamics Controller.
	Url string `pulumi:"url"`
}

// AgentAppdynamicsConfigInput is an input type that accepts AgentAppdynamicsConfigArgs and AgentAppdynamicsConfigOutput values.
// You can construct a concrete instance of `AgentAppdynamicsConfigInput` via:
//
//	AgentAppdynamicsConfigArgs{...}
type AgentAppdynamicsConfigInput interface {
	pulumi.Input

	ToAgentAppdynamicsConfigOutput() AgentAppdynamicsConfigOutput
	ToAgentAppdynamicsConfigOutputWithContext(context.Context) AgentAppdynamicsConfigOutput
}

type AgentAppdynamicsConfigArgs struct {
	// Base URL to the AppDynamics Controller.
	Url pulumi.StringInput `pulumi:"url"`
}

func (AgentAppdynamicsConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentAppdynamicsConfig)(nil)).Elem()
}

func (i AgentAppdynamicsConfigArgs) ToAgentAppdynamicsConfigOutput() AgentAppdynamicsConfigOutput {
	return i.ToAgentAppdynamicsConfigOutputWithContext(context.Background())
}

func (i AgentAppdynamicsConfigArgs) ToAgentAppdynamicsConfigOutputWithContext(ctx context.Context) AgentAppdynamicsConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentAppdynamicsConfigOutput)
}

func (i AgentAppdynamicsConfigArgs) ToAgentAppdynamicsConfigPtrOutput() AgentAppdynamicsConfigPtrOutput {
	return i.ToAgentAppdynamicsConfigPtrOutputWithContext(context.Background())
}

func (i AgentAppdynamicsConfigArgs) ToAgentAppdynamicsConfigPtrOutputWithContext(ctx context.Context) AgentAppdynamicsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentAppdynamicsConfigOutput).ToAgentAppdynamicsConfigPtrOutputWithContext(ctx)
}

// AgentAppdynamicsConfigPtrInput is an input type that accepts AgentAppdynamicsConfigArgs, AgentAppdynamicsConfigPtr and AgentAppdynamicsConfigPtrOutput values.
// You can construct a concrete instance of `AgentAppdynamicsConfigPtrInput` via:
//
//	        AgentAppdynamicsConfigArgs{...}
//
//	or:
//
//	        nil
type AgentAppdynamicsConfigPtrInput interface {
	pulumi.Input

	ToAgentAppdynamicsConfigPtrOutput() AgentAppdynamicsConfigPtrOutput
	ToAgentAppdynamicsConfigPtrOutputWithContext(context.Context) AgentAppdynamicsConfigPtrOutput
}

type agentAppdynamicsConfigPtrType AgentAppdynamicsConfigArgs

func AgentAppdynamicsConfigPtr(v *AgentAppdynamicsConfigArgs) AgentAppdynamicsConfigPtrInput {
	return (*agentAppdynamicsConfigPtrType)(v)
}

func (*agentAppdynamicsConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentAppdynamicsConfig)(nil)).Elem()
}

func (i *agentAppdynamicsConfigPtrType) ToAgentAppdynamicsConfigPtrOutput() AgentAppdynamicsConfigPtrOutput {
	return i.ToAgentAppdynamicsConfigPtrOutputWithContext(context.Background())
}

func (i *agentAppdynamicsConfigPtrType) ToAgentAppdynamicsConfigPtrOutputWithContext(ctx context.Context) AgentAppdynamicsConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentAppdynamicsConfigPtrOutput)
}

type AgentAppdynamicsConfigOutput struct{ *pulumi.OutputState }

func (AgentAppdynamicsConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentAppdynamicsConfig)(nil)).Elem()
}

func (o AgentAppdynamicsConfigOutput) ToAgentAppdynamicsConfigOutput() AgentAppdynamicsConfigOutput {
	return o
}

func (o AgentAppdynamicsConfigOutput) ToAgentAppdynamicsConfigOutputWithContext(ctx context.Context) AgentAppdynamicsConfigOutput {
	return o
}

func (o AgentAppdynamicsConfigOutput) ToAgentAppdynamicsConfigPtrOutput() AgentAppdynamicsConfigPtrOutput {
	return o.ToAgentAppdynamicsConfigPtrOutputWithContext(context.Background())
}

func (o AgentAppdynamicsConfigOutput) ToAgentAppdynamicsConfigPtrOutputWithContext(ctx context.Context) AgentAppdynamicsConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentAppdynamicsConfig) *AgentAppdynamicsConfig {
		return &v
	}).(AgentAppdynamicsConfigPtrOutput)
}

// Base URL to the AppDynamics Controller.
func (o AgentAppdynamicsConfigOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v AgentAppdynamicsConfig) string { return v.Url }).(pulumi.StringOutput)
}

type AgentAppdynamicsConfigPtrOutput struct{ *pulumi.OutputState }

func (AgentAppdynamicsConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentAppdynamicsConfig)(nil)).Elem()
}

func (o AgentAppdynamicsConfigPtrOutput) ToAgentAppdynamicsConfigPtrOutput() AgentAppdynamicsConfigPtrOutput {
	return o
}

func (o AgentAppdynamicsConfigPtrOutput) ToAgentAppdynamicsConfigPtrOutputWithContext(ctx context.Context) AgentAppdynamicsConfigPtrOutput {
	return o
}

func (o AgentAppdynamicsConfigPtrOutput) Elem() AgentAppdynamicsConfigOutput {
	return o.ApplyT(func(v *AgentAppdynamicsConfig) AgentAppdynamicsConfig {
		if v != nil {
			return *v
		}
		var ret AgentAppdynamicsConfig
		return ret
	}).(AgentAppdynamicsConfigOutput)
}

// Base URL to the AppDynamics Controller.
func (o AgentAppdynamicsConfigPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentAppdynamicsConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type AgentAzureMonitorConfig struct {
	// Azure Tenant Id.
	TenantId string `pulumi:"tenantId"`
}

// AgentAzureMonitorConfigInput is an input type that accepts AgentAzureMonitorConfigArgs and AgentAzureMonitorConfigOutput values.
// You can construct a concrete instance of `AgentAzureMonitorConfigInput` via:
//
//	AgentAzureMonitorConfigArgs{...}
type AgentAzureMonitorConfigInput interface {
	pulumi.Input

	ToAgentAzureMonitorConfigOutput() AgentAzureMonitorConfigOutput
	ToAgentAzureMonitorConfigOutputWithContext(context.Context) AgentAzureMonitorConfigOutput
}

type AgentAzureMonitorConfigArgs struct {
	// Azure Tenant Id.
	TenantId pulumi.StringInput `pulumi:"tenantId"`
}

func (AgentAzureMonitorConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentAzureMonitorConfig)(nil)).Elem()
}

func (i AgentAzureMonitorConfigArgs) ToAgentAzureMonitorConfigOutput() AgentAzureMonitorConfigOutput {
	return i.ToAgentAzureMonitorConfigOutputWithContext(context.Background())
}

func (i AgentAzureMonitorConfigArgs) ToAgentAzureMonitorConfigOutputWithContext(ctx context.Context) AgentAzureMonitorConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentAzureMonitorConfigOutput)
}

func (i AgentAzureMonitorConfigArgs) ToAgentAzureMonitorConfigPtrOutput() AgentAzureMonitorConfigPtrOutput {
	return i.ToAgentAzureMonitorConfigPtrOutputWithContext(context.Background())
}

func (i AgentAzureMonitorConfigArgs) ToAgentAzureMonitorConfigPtrOutputWithContext(ctx context.Context) AgentAzureMonitorConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentAzureMonitorConfigOutput).ToAgentAzureMonitorConfigPtrOutputWithContext(ctx)
}

// AgentAzureMonitorConfigPtrInput is an input type that accepts AgentAzureMonitorConfigArgs, AgentAzureMonitorConfigPtr and AgentAzureMonitorConfigPtrOutput values.
// You can construct a concrete instance of `AgentAzureMonitorConfigPtrInput` via:
//
//	        AgentAzureMonitorConfigArgs{...}
//
//	or:
//
//	        nil
type AgentAzureMonitorConfigPtrInput interface {
	pulumi.Input

	ToAgentAzureMonitorConfigPtrOutput() AgentAzureMonitorConfigPtrOutput
	ToAgentAzureMonitorConfigPtrOutputWithContext(context.Context) AgentAzureMonitorConfigPtrOutput
}

type agentAzureMonitorConfigPtrType AgentAzureMonitorConfigArgs

func AgentAzureMonitorConfigPtr(v *AgentAzureMonitorConfigArgs) AgentAzureMonitorConfigPtrInput {
	return (*agentAzureMonitorConfigPtrType)(v)
}

func (*agentAzureMonitorConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentAzureMonitorConfig)(nil)).Elem()
}

func (i *agentAzureMonitorConfigPtrType) ToAgentAzureMonitorConfigPtrOutput() AgentAzureMonitorConfigPtrOutput {
	return i.ToAgentAzureMonitorConfigPtrOutputWithContext(context.Background())
}

func (i *agentAzureMonitorConfigPtrType) ToAgentAzureMonitorConfigPtrOutputWithContext(ctx context.Context) AgentAzureMonitorConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentAzureMonitorConfigPtrOutput)
}

type AgentAzureMonitorConfigOutput struct{ *pulumi.OutputState }

func (AgentAzureMonitorConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentAzureMonitorConfig)(nil)).Elem()
}

func (o AgentAzureMonitorConfigOutput) ToAgentAzureMonitorConfigOutput() AgentAzureMonitorConfigOutput {
	return o
}

func (o AgentAzureMonitorConfigOutput) ToAgentAzureMonitorConfigOutputWithContext(ctx context.Context) AgentAzureMonitorConfigOutput {
	return o
}

func (o AgentAzureMonitorConfigOutput) ToAgentAzureMonitorConfigPtrOutput() AgentAzureMonitorConfigPtrOutput {
	return o.ToAgentAzureMonitorConfigPtrOutputWithContext(context.Background())
}

func (o AgentAzureMonitorConfigOutput) ToAgentAzureMonitorConfigPtrOutputWithContext(ctx context.Context) AgentAzureMonitorConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentAzureMonitorConfig) *AgentAzureMonitorConfig {
		return &v
	}).(AgentAzureMonitorConfigPtrOutput)
}

// Azure Tenant Id.
func (o AgentAzureMonitorConfigOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v AgentAzureMonitorConfig) string { return v.TenantId }).(pulumi.StringOutput)
}

type AgentAzureMonitorConfigPtrOutput struct{ *pulumi.OutputState }

func (AgentAzureMonitorConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentAzureMonitorConfig)(nil)).Elem()
}

func (o AgentAzureMonitorConfigPtrOutput) ToAgentAzureMonitorConfigPtrOutput() AgentAzureMonitorConfigPtrOutput {
	return o
}

func (o AgentAzureMonitorConfigPtrOutput) ToAgentAzureMonitorConfigPtrOutputWithContext(ctx context.Context) AgentAzureMonitorConfigPtrOutput {
	return o
}

func (o AgentAzureMonitorConfigPtrOutput) Elem() AgentAzureMonitorConfigOutput {
	return o.ApplyT(func(v *AgentAzureMonitorConfig) AgentAzureMonitorConfig {
		if v != nil {
			return *v
		}
		var ret AgentAzureMonitorConfig
		return ret
	}).(AgentAzureMonitorConfigOutput)
}

// Azure Tenant Id.
func (o AgentAzureMonitorConfigPtrOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentAzureMonitorConfig) *string {
		if v == nil {
			return nil
		}
		return &v.TenantId
	}).(pulumi.StringPtrOutput)
}

type AgentBigqueryConfig struct {
}

// AgentBigqueryConfigInput is an input type that accepts AgentBigqueryConfigArgs and AgentBigqueryConfigOutput values.
// You can construct a concrete instance of `AgentBigqueryConfigInput` via:
//
//	AgentBigqueryConfigArgs{...}
type AgentBigqueryConfigInput interface {
	pulumi.Input

	ToAgentBigqueryConfigOutput() AgentBigqueryConfigOutput
	ToAgentBigqueryConfigOutputWithContext(context.Context) AgentBigqueryConfigOutput
}

type AgentBigqueryConfigArgs struct {
}

func (AgentBigqueryConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentBigqueryConfig)(nil)).Elem()
}

func (i AgentBigqueryConfigArgs) ToAgentBigqueryConfigOutput() AgentBigqueryConfigOutput {
	return i.ToAgentBigqueryConfigOutputWithContext(context.Background())
}

func (i AgentBigqueryConfigArgs) ToAgentBigqueryConfigOutputWithContext(ctx context.Context) AgentBigqueryConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentBigqueryConfigOutput)
}

func (i AgentBigqueryConfigArgs) ToAgentBigqueryConfigPtrOutput() AgentBigqueryConfigPtrOutput {
	return i.ToAgentBigqueryConfigPtrOutputWithContext(context.Background())
}

func (i AgentBigqueryConfigArgs) ToAgentBigqueryConfigPtrOutputWithContext(ctx context.Context) AgentBigqueryConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentBigqueryConfigOutput).ToAgentBigqueryConfigPtrOutputWithContext(ctx)
}

// AgentBigqueryConfigPtrInput is an input type that accepts AgentBigqueryConfigArgs, AgentBigqueryConfigPtr and AgentBigqueryConfigPtrOutput values.
// You can construct a concrete instance of `AgentBigqueryConfigPtrInput` via:
//
//	        AgentBigqueryConfigArgs{...}
//
//	or:
//
//	        nil
type AgentBigqueryConfigPtrInput interface {
	pulumi.Input

	ToAgentBigqueryConfigPtrOutput() AgentBigqueryConfigPtrOutput
	ToAgentBigqueryConfigPtrOutputWithContext(context.Context) AgentBigqueryConfigPtrOutput
}

type agentBigqueryConfigPtrType AgentBigqueryConfigArgs

func AgentBigqueryConfigPtr(v *AgentBigqueryConfigArgs) AgentBigqueryConfigPtrInput {
	return (*agentBigqueryConfigPtrType)(v)
}

func (*agentBigqueryConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentBigqueryConfig)(nil)).Elem()
}

func (i *agentBigqueryConfigPtrType) ToAgentBigqueryConfigPtrOutput() AgentBigqueryConfigPtrOutput {
	return i.ToAgentBigqueryConfigPtrOutputWithContext(context.Background())
}

func (i *agentBigqueryConfigPtrType) ToAgentBigqueryConfigPtrOutputWithContext(ctx context.Context) AgentBigqueryConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentBigqueryConfigPtrOutput)
}

type AgentBigqueryConfigOutput struct{ *pulumi.OutputState }

func (AgentBigqueryConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentBigqueryConfig)(nil)).Elem()
}

func (o AgentBigqueryConfigOutput) ToAgentBigqueryConfigOutput() AgentBigqueryConfigOutput {
	return o
}

func (o AgentBigqueryConfigOutput) ToAgentBigqueryConfigOutputWithContext(ctx context.Context) AgentBigqueryConfigOutput {
	return o
}

func (o AgentBigqueryConfigOutput) ToAgentBigqueryConfigPtrOutput() AgentBigqueryConfigPtrOutput {
	return o.ToAgentBigqueryConfigPtrOutputWithContext(context.Background())
}

func (o AgentBigqueryConfigOutput) ToAgentBigqueryConfigPtrOutputWithContext(ctx context.Context) AgentBigqueryConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentBigqueryConfig) *AgentBigqueryConfig {
		return &v
	}).(AgentBigqueryConfigPtrOutput)
}

type AgentBigqueryConfigPtrOutput struct{ *pulumi.OutputState }

func (AgentBigqueryConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentBigqueryConfig)(nil)).Elem()
}

func (o AgentBigqueryConfigPtrOutput) ToAgentBigqueryConfigPtrOutput() AgentBigqueryConfigPtrOutput {
	return o
}

func (o AgentBigqueryConfigPtrOutput) ToAgentBigqueryConfigPtrOutputWithContext(ctx context.Context) AgentBigqueryConfigPtrOutput {
	return o
}

func (o AgentBigqueryConfigPtrOutput) Elem() AgentBigqueryConfigOutput {
	return o.ApplyT(func(v *AgentBigqueryConfig) AgentBigqueryConfig {
		if v != nil {
			return *v
		}
		var ret AgentBigqueryConfig
		return ret
	}).(AgentBigqueryConfigOutput)
}

type AgentCloudwatchConfig struct {
}

// AgentCloudwatchConfigInput is an input type that accepts AgentCloudwatchConfigArgs and AgentCloudwatchConfigOutput values.
// You can construct a concrete instance of `AgentCloudwatchConfigInput` via:
//
//	AgentCloudwatchConfigArgs{...}
type AgentCloudwatchConfigInput interface {
	pulumi.Input

	ToAgentCloudwatchConfigOutput() AgentCloudwatchConfigOutput
	ToAgentCloudwatchConfigOutputWithContext(context.Context) AgentCloudwatchConfigOutput
}

type AgentCloudwatchConfigArgs struct {
}

func (AgentCloudwatchConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentCloudwatchConfig)(nil)).Elem()
}

func (i AgentCloudwatchConfigArgs) ToAgentCloudwatchConfigOutput() AgentCloudwatchConfigOutput {
	return i.ToAgentCloudwatchConfigOutputWithContext(context.Background())
}

func (i AgentCloudwatchConfigArgs) ToAgentCloudwatchConfigOutputWithContext(ctx context.Context) AgentCloudwatchConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentCloudwatchConfigOutput)
}

func (i AgentCloudwatchConfigArgs) ToAgentCloudwatchConfigPtrOutput() AgentCloudwatchConfigPtrOutput {
	return i.ToAgentCloudwatchConfigPtrOutputWithContext(context.Background())
}

func (i AgentCloudwatchConfigArgs) ToAgentCloudwatchConfigPtrOutputWithContext(ctx context.Context) AgentCloudwatchConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentCloudwatchConfigOutput).ToAgentCloudwatchConfigPtrOutputWithContext(ctx)
}

// AgentCloudwatchConfigPtrInput is an input type that accepts AgentCloudwatchConfigArgs, AgentCloudwatchConfigPtr and AgentCloudwatchConfigPtrOutput values.
// You can construct a concrete instance of `AgentCloudwatchConfigPtrInput` via:
//
//	        AgentCloudwatchConfigArgs{...}
//
//	or:
//
//	        nil
type AgentCloudwatchConfigPtrInput interface {
	pulumi.Input

	ToAgentCloudwatchConfigPtrOutput() AgentCloudwatchConfigPtrOutput
	ToAgentCloudwatchConfigPtrOutputWithContext(context.Context) AgentCloudwatchConfigPtrOutput
}

type agentCloudwatchConfigPtrType AgentCloudwatchConfigArgs

func AgentCloudwatchConfigPtr(v *AgentCloudwatchConfigArgs) AgentCloudwatchConfigPtrInput {
	return (*agentCloudwatchConfigPtrType)(v)
}

func (*agentCloudwatchConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentCloudwatchConfig)(nil)).Elem()
}

func (i *agentCloudwatchConfigPtrType) ToAgentCloudwatchConfigPtrOutput() AgentCloudwatchConfigPtrOutput {
	return i.ToAgentCloudwatchConfigPtrOutputWithContext(context.Background())
}

func (i *agentCloudwatchConfigPtrType) ToAgentCloudwatchConfigPtrOutputWithContext(ctx context.Context) AgentCloudwatchConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentCloudwatchConfigPtrOutput)
}

type AgentCloudwatchConfigOutput struct{ *pulumi.OutputState }

func (AgentCloudwatchConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentCloudwatchConfig)(nil)).Elem()
}

func (o AgentCloudwatchConfigOutput) ToAgentCloudwatchConfigOutput() AgentCloudwatchConfigOutput {
	return o
}

func (o AgentCloudwatchConfigOutput) ToAgentCloudwatchConfigOutputWithContext(ctx context.Context) AgentCloudwatchConfigOutput {
	return o
}

func (o AgentCloudwatchConfigOutput) ToAgentCloudwatchConfigPtrOutput() AgentCloudwatchConfigPtrOutput {
	return o.ToAgentCloudwatchConfigPtrOutputWithContext(context.Background())
}

func (o AgentCloudwatchConfigOutput) ToAgentCloudwatchConfigPtrOutputWithContext(ctx context.Context) AgentCloudwatchConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentCloudwatchConfig) *AgentCloudwatchConfig {
		return &v
	}).(AgentCloudwatchConfigPtrOutput)
}

type AgentCloudwatchConfigPtrOutput struct{ *pulumi.OutputState }

func (AgentCloudwatchConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentCloudwatchConfig)(nil)).Elem()
}

func (o AgentCloudwatchConfigPtrOutput) ToAgentCloudwatchConfigPtrOutput() AgentCloudwatchConfigPtrOutput {
	return o
}

func (o AgentCloudwatchConfigPtrOutput) ToAgentCloudwatchConfigPtrOutputWithContext(ctx context.Context) AgentCloudwatchConfigPtrOutput {
	return o
}

func (o AgentCloudwatchConfigPtrOutput) Elem() AgentCloudwatchConfigOutput {
	return o.ApplyT(func(v *AgentCloudwatchConfig) AgentCloudwatchConfig {
		if v != nil {
			return *v
		}
		var ret AgentCloudwatchConfig
		return ret
	}).(AgentCloudwatchConfigOutput)
}

type AgentDatadogConfig struct {
	// `com` or `eu`, Datadog SaaS instance, which corresponds to one of Datadog's two locations (https://www.datadoghq.com/ in the U.S. or https://datadoghq.eu/ in the European Union)
	Site string `pulumi:"site"`
}

// AgentDatadogConfigInput is an input type that accepts AgentDatadogConfigArgs and AgentDatadogConfigOutput values.
// You can construct a concrete instance of `AgentDatadogConfigInput` via:
//
//	AgentDatadogConfigArgs{...}
type AgentDatadogConfigInput interface {
	pulumi.Input

	ToAgentDatadogConfigOutput() AgentDatadogConfigOutput
	ToAgentDatadogConfigOutputWithContext(context.Context) AgentDatadogConfigOutput
}

type AgentDatadogConfigArgs struct {
	// `com` or `eu`, Datadog SaaS instance, which corresponds to one of Datadog's two locations (https://www.datadoghq.com/ in the U.S. or https://datadoghq.eu/ in the European Union)
	Site pulumi.StringInput `pulumi:"site"`
}

func (AgentDatadogConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentDatadogConfig)(nil)).Elem()
}

func (i AgentDatadogConfigArgs) ToAgentDatadogConfigOutput() AgentDatadogConfigOutput {
	return i.ToAgentDatadogConfigOutputWithContext(context.Background())
}

func (i AgentDatadogConfigArgs) ToAgentDatadogConfigOutputWithContext(ctx context.Context) AgentDatadogConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentDatadogConfigOutput)
}

func (i AgentDatadogConfigArgs) ToAgentDatadogConfigPtrOutput() AgentDatadogConfigPtrOutput {
	return i.ToAgentDatadogConfigPtrOutputWithContext(context.Background())
}

func (i AgentDatadogConfigArgs) ToAgentDatadogConfigPtrOutputWithContext(ctx context.Context) AgentDatadogConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentDatadogConfigOutput).ToAgentDatadogConfigPtrOutputWithContext(ctx)
}

// AgentDatadogConfigPtrInput is an input type that accepts AgentDatadogConfigArgs, AgentDatadogConfigPtr and AgentDatadogConfigPtrOutput values.
// You can construct a concrete instance of `AgentDatadogConfigPtrInput` via:
//
//	        AgentDatadogConfigArgs{...}
//
//	or:
//
//	        nil
type AgentDatadogConfigPtrInput interface {
	pulumi.Input

	ToAgentDatadogConfigPtrOutput() AgentDatadogConfigPtrOutput
	ToAgentDatadogConfigPtrOutputWithContext(context.Context) AgentDatadogConfigPtrOutput
}

type agentDatadogConfigPtrType AgentDatadogConfigArgs

func AgentDatadogConfigPtr(v *AgentDatadogConfigArgs) AgentDatadogConfigPtrInput {
	return (*agentDatadogConfigPtrType)(v)
}

func (*agentDatadogConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentDatadogConfig)(nil)).Elem()
}

func (i *agentDatadogConfigPtrType) ToAgentDatadogConfigPtrOutput() AgentDatadogConfigPtrOutput {
	return i.ToAgentDatadogConfigPtrOutputWithContext(context.Background())
}

func (i *agentDatadogConfigPtrType) ToAgentDatadogConfigPtrOutputWithContext(ctx context.Context) AgentDatadogConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentDatadogConfigPtrOutput)
}

type AgentDatadogConfigOutput struct{ *pulumi.OutputState }

func (AgentDatadogConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentDatadogConfig)(nil)).Elem()
}

func (o AgentDatadogConfigOutput) ToAgentDatadogConfigOutput() AgentDatadogConfigOutput {
	return o
}

func (o AgentDatadogConfigOutput) ToAgentDatadogConfigOutputWithContext(ctx context.Context) AgentDatadogConfigOutput {
	return o
}

func (o AgentDatadogConfigOutput) ToAgentDatadogConfigPtrOutput() AgentDatadogConfigPtrOutput {
	return o.ToAgentDatadogConfigPtrOutputWithContext(context.Background())
}

func (o AgentDatadogConfigOutput) ToAgentDatadogConfigPtrOutputWithContext(ctx context.Context) AgentDatadogConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentDatadogConfig) *AgentDatadogConfig {
		return &v
	}).(AgentDatadogConfigPtrOutput)
}

// `com` or `eu`, Datadog SaaS instance, which corresponds to one of Datadog's two locations (https://www.datadoghq.com/ in the U.S. or https://datadoghq.eu/ in the European Union)
func (o AgentDatadogConfigOutput) Site() pulumi.StringOutput {
	return o.ApplyT(func(v AgentDatadogConfig) string { return v.Site }).(pulumi.StringOutput)
}

type AgentDatadogConfigPtrOutput struct{ *pulumi.OutputState }

func (AgentDatadogConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentDatadogConfig)(nil)).Elem()
}

func (o AgentDatadogConfigPtrOutput) ToAgentDatadogConfigPtrOutput() AgentDatadogConfigPtrOutput {
	return o
}

func (o AgentDatadogConfigPtrOutput) ToAgentDatadogConfigPtrOutputWithContext(ctx context.Context) AgentDatadogConfigPtrOutput {
	return o
}

func (o AgentDatadogConfigPtrOutput) Elem() AgentDatadogConfigOutput {
	return o.ApplyT(func(v *AgentDatadogConfig) AgentDatadogConfig {
		if v != nil {
			return *v
		}
		var ret AgentDatadogConfig
		return ret
	}).(AgentDatadogConfigOutput)
}

// `com` or `eu`, Datadog SaaS instance, which corresponds to one of Datadog's two locations (https://www.datadoghq.com/ in the U.S. or https://datadoghq.eu/ in the European Union)
func (o AgentDatadogConfigPtrOutput) Site() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentDatadogConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Site
	}).(pulumi.StringPtrOutput)
}

type AgentDynatraceConfig struct {
	// Dynatrace API URL.
	Url string `pulumi:"url"`
}

// AgentDynatraceConfigInput is an input type that accepts AgentDynatraceConfigArgs and AgentDynatraceConfigOutput values.
// You can construct a concrete instance of `AgentDynatraceConfigInput` via:
//
//	AgentDynatraceConfigArgs{...}
type AgentDynatraceConfigInput interface {
	pulumi.Input

	ToAgentDynatraceConfigOutput() AgentDynatraceConfigOutput
	ToAgentDynatraceConfigOutputWithContext(context.Context) AgentDynatraceConfigOutput
}

type AgentDynatraceConfigArgs struct {
	// Dynatrace API URL.
	Url pulumi.StringInput `pulumi:"url"`
}

func (AgentDynatraceConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentDynatraceConfig)(nil)).Elem()
}

func (i AgentDynatraceConfigArgs) ToAgentDynatraceConfigOutput() AgentDynatraceConfigOutput {
	return i.ToAgentDynatraceConfigOutputWithContext(context.Background())
}

func (i AgentDynatraceConfigArgs) ToAgentDynatraceConfigOutputWithContext(ctx context.Context) AgentDynatraceConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentDynatraceConfigOutput)
}

func (i AgentDynatraceConfigArgs) ToAgentDynatraceConfigPtrOutput() AgentDynatraceConfigPtrOutput {
	return i.ToAgentDynatraceConfigPtrOutputWithContext(context.Background())
}

func (i AgentDynatraceConfigArgs) ToAgentDynatraceConfigPtrOutputWithContext(ctx context.Context) AgentDynatraceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentDynatraceConfigOutput).ToAgentDynatraceConfigPtrOutputWithContext(ctx)
}

// AgentDynatraceConfigPtrInput is an input type that accepts AgentDynatraceConfigArgs, AgentDynatraceConfigPtr and AgentDynatraceConfigPtrOutput values.
// You can construct a concrete instance of `AgentDynatraceConfigPtrInput` via:
//
//	        AgentDynatraceConfigArgs{...}
//
//	or:
//
//	        nil
type AgentDynatraceConfigPtrInput interface {
	pulumi.Input

	ToAgentDynatraceConfigPtrOutput() AgentDynatraceConfigPtrOutput
	ToAgentDynatraceConfigPtrOutputWithContext(context.Context) AgentDynatraceConfigPtrOutput
}

type agentDynatraceConfigPtrType AgentDynatraceConfigArgs

func AgentDynatraceConfigPtr(v *AgentDynatraceConfigArgs) AgentDynatraceConfigPtrInput {
	return (*agentDynatraceConfigPtrType)(v)
}

func (*agentDynatraceConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentDynatraceConfig)(nil)).Elem()
}

func (i *agentDynatraceConfigPtrType) ToAgentDynatraceConfigPtrOutput() AgentDynatraceConfigPtrOutput {
	return i.ToAgentDynatraceConfigPtrOutputWithContext(context.Background())
}

func (i *agentDynatraceConfigPtrType) ToAgentDynatraceConfigPtrOutputWithContext(ctx context.Context) AgentDynatraceConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentDynatraceConfigPtrOutput)
}

type AgentDynatraceConfigOutput struct{ *pulumi.OutputState }

func (AgentDynatraceConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentDynatraceConfig)(nil)).Elem()
}

func (o AgentDynatraceConfigOutput) ToAgentDynatraceConfigOutput() AgentDynatraceConfigOutput {
	return o
}

func (o AgentDynatraceConfigOutput) ToAgentDynatraceConfigOutputWithContext(ctx context.Context) AgentDynatraceConfigOutput {
	return o
}

func (o AgentDynatraceConfigOutput) ToAgentDynatraceConfigPtrOutput() AgentDynatraceConfigPtrOutput {
	return o.ToAgentDynatraceConfigPtrOutputWithContext(context.Background())
}

func (o AgentDynatraceConfigOutput) ToAgentDynatraceConfigPtrOutputWithContext(ctx context.Context) AgentDynatraceConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentDynatraceConfig) *AgentDynatraceConfig {
		return &v
	}).(AgentDynatraceConfigPtrOutput)
}

// Dynatrace API URL.
func (o AgentDynatraceConfigOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v AgentDynatraceConfig) string { return v.Url }).(pulumi.StringOutput)
}

type AgentDynatraceConfigPtrOutput struct{ *pulumi.OutputState }

func (AgentDynatraceConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentDynatraceConfig)(nil)).Elem()
}

func (o AgentDynatraceConfigPtrOutput) ToAgentDynatraceConfigPtrOutput() AgentDynatraceConfigPtrOutput {
	return o
}

func (o AgentDynatraceConfigPtrOutput) ToAgentDynatraceConfigPtrOutputWithContext(ctx context.Context) AgentDynatraceConfigPtrOutput {
	return o
}

func (o AgentDynatraceConfigPtrOutput) Elem() AgentDynatraceConfigOutput {
	return o.ApplyT(func(v *AgentDynatraceConfig) AgentDynatraceConfig {
		if v != nil {
			return *v
		}
		var ret AgentDynatraceConfig
		return ret
	}).(AgentDynatraceConfigOutput)
}

// Dynatrace API URL.
func (o AgentDynatraceConfigPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentDynatraceConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type AgentElasticsearchConfig struct {
	// API URL endpoint to the Elasticsearch's instance.
	Url string `pulumi:"url"`
}

// AgentElasticsearchConfigInput is an input type that accepts AgentElasticsearchConfigArgs and AgentElasticsearchConfigOutput values.
// You can construct a concrete instance of `AgentElasticsearchConfigInput` via:
//
//	AgentElasticsearchConfigArgs{...}
type AgentElasticsearchConfigInput interface {
	pulumi.Input

	ToAgentElasticsearchConfigOutput() AgentElasticsearchConfigOutput
	ToAgentElasticsearchConfigOutputWithContext(context.Context) AgentElasticsearchConfigOutput
}

type AgentElasticsearchConfigArgs struct {
	// API URL endpoint to the Elasticsearch's instance.
	Url pulumi.StringInput `pulumi:"url"`
}

func (AgentElasticsearchConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentElasticsearchConfig)(nil)).Elem()
}

func (i AgentElasticsearchConfigArgs) ToAgentElasticsearchConfigOutput() AgentElasticsearchConfigOutput {
	return i.ToAgentElasticsearchConfigOutputWithContext(context.Background())
}

func (i AgentElasticsearchConfigArgs) ToAgentElasticsearchConfigOutputWithContext(ctx context.Context) AgentElasticsearchConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentElasticsearchConfigOutput)
}

func (i AgentElasticsearchConfigArgs) ToAgentElasticsearchConfigPtrOutput() AgentElasticsearchConfigPtrOutput {
	return i.ToAgentElasticsearchConfigPtrOutputWithContext(context.Background())
}

func (i AgentElasticsearchConfigArgs) ToAgentElasticsearchConfigPtrOutputWithContext(ctx context.Context) AgentElasticsearchConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentElasticsearchConfigOutput).ToAgentElasticsearchConfigPtrOutputWithContext(ctx)
}

// AgentElasticsearchConfigPtrInput is an input type that accepts AgentElasticsearchConfigArgs, AgentElasticsearchConfigPtr and AgentElasticsearchConfigPtrOutput values.
// You can construct a concrete instance of `AgentElasticsearchConfigPtrInput` via:
//
//	        AgentElasticsearchConfigArgs{...}
//
//	or:
//
//	        nil
type AgentElasticsearchConfigPtrInput interface {
	pulumi.Input

	ToAgentElasticsearchConfigPtrOutput() AgentElasticsearchConfigPtrOutput
	ToAgentElasticsearchConfigPtrOutputWithContext(context.Context) AgentElasticsearchConfigPtrOutput
}

type agentElasticsearchConfigPtrType AgentElasticsearchConfigArgs

func AgentElasticsearchConfigPtr(v *AgentElasticsearchConfigArgs) AgentElasticsearchConfigPtrInput {
	return (*agentElasticsearchConfigPtrType)(v)
}

func (*agentElasticsearchConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentElasticsearchConfig)(nil)).Elem()
}

func (i *agentElasticsearchConfigPtrType) ToAgentElasticsearchConfigPtrOutput() AgentElasticsearchConfigPtrOutput {
	return i.ToAgentElasticsearchConfigPtrOutputWithContext(context.Background())
}

func (i *agentElasticsearchConfigPtrType) ToAgentElasticsearchConfigPtrOutputWithContext(ctx context.Context) AgentElasticsearchConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentElasticsearchConfigPtrOutput)
}

type AgentElasticsearchConfigOutput struct{ *pulumi.OutputState }

func (AgentElasticsearchConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentElasticsearchConfig)(nil)).Elem()
}

func (o AgentElasticsearchConfigOutput) ToAgentElasticsearchConfigOutput() AgentElasticsearchConfigOutput {
	return o
}

func (o AgentElasticsearchConfigOutput) ToAgentElasticsearchConfigOutputWithContext(ctx context.Context) AgentElasticsearchConfigOutput {
	return o
}

func (o AgentElasticsearchConfigOutput) ToAgentElasticsearchConfigPtrOutput() AgentElasticsearchConfigPtrOutput {
	return o.ToAgentElasticsearchConfigPtrOutputWithContext(context.Background())
}

func (o AgentElasticsearchConfigOutput) ToAgentElasticsearchConfigPtrOutputWithContext(ctx context.Context) AgentElasticsearchConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentElasticsearchConfig) *AgentElasticsearchConfig {
		return &v
	}).(AgentElasticsearchConfigPtrOutput)
}

// API URL endpoint to the Elasticsearch's instance.
func (o AgentElasticsearchConfigOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v AgentElasticsearchConfig) string { return v.Url }).(pulumi.StringOutput)
}

type AgentElasticsearchConfigPtrOutput struct{ *pulumi.OutputState }

func (AgentElasticsearchConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentElasticsearchConfig)(nil)).Elem()
}

func (o AgentElasticsearchConfigPtrOutput) ToAgentElasticsearchConfigPtrOutput() AgentElasticsearchConfigPtrOutput {
	return o
}

func (o AgentElasticsearchConfigPtrOutput) ToAgentElasticsearchConfigPtrOutputWithContext(ctx context.Context) AgentElasticsearchConfigPtrOutput {
	return o
}

func (o AgentElasticsearchConfigPtrOutput) Elem() AgentElasticsearchConfigOutput {
	return o.ApplyT(func(v *AgentElasticsearchConfig) AgentElasticsearchConfig {
		if v != nil {
			return *v
		}
		var ret AgentElasticsearchConfig
		return ret
	}).(AgentElasticsearchConfigOutput)
}

// API URL endpoint to the Elasticsearch's instance.
func (o AgentElasticsearchConfigPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentElasticsearchConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type AgentGcmConfig struct {
}

// AgentGcmConfigInput is an input type that accepts AgentGcmConfigArgs and AgentGcmConfigOutput values.
// You can construct a concrete instance of `AgentGcmConfigInput` via:
//
//	AgentGcmConfigArgs{...}
type AgentGcmConfigInput interface {
	pulumi.Input

	ToAgentGcmConfigOutput() AgentGcmConfigOutput
	ToAgentGcmConfigOutputWithContext(context.Context) AgentGcmConfigOutput
}

type AgentGcmConfigArgs struct {
}

func (AgentGcmConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentGcmConfig)(nil)).Elem()
}

func (i AgentGcmConfigArgs) ToAgentGcmConfigOutput() AgentGcmConfigOutput {
	return i.ToAgentGcmConfigOutputWithContext(context.Background())
}

func (i AgentGcmConfigArgs) ToAgentGcmConfigOutputWithContext(ctx context.Context) AgentGcmConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentGcmConfigOutput)
}

func (i AgentGcmConfigArgs) ToAgentGcmConfigPtrOutput() AgentGcmConfigPtrOutput {
	return i.ToAgentGcmConfigPtrOutputWithContext(context.Background())
}

func (i AgentGcmConfigArgs) ToAgentGcmConfigPtrOutputWithContext(ctx context.Context) AgentGcmConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentGcmConfigOutput).ToAgentGcmConfigPtrOutputWithContext(ctx)
}

// AgentGcmConfigPtrInput is an input type that accepts AgentGcmConfigArgs, AgentGcmConfigPtr and AgentGcmConfigPtrOutput values.
// You can construct a concrete instance of `AgentGcmConfigPtrInput` via:
//
//	        AgentGcmConfigArgs{...}
//
//	or:
//
//	        nil
type AgentGcmConfigPtrInput interface {
	pulumi.Input

	ToAgentGcmConfigPtrOutput() AgentGcmConfigPtrOutput
	ToAgentGcmConfigPtrOutputWithContext(context.Context) AgentGcmConfigPtrOutput
}

type agentGcmConfigPtrType AgentGcmConfigArgs

func AgentGcmConfigPtr(v *AgentGcmConfigArgs) AgentGcmConfigPtrInput {
	return (*agentGcmConfigPtrType)(v)
}

func (*agentGcmConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentGcmConfig)(nil)).Elem()
}

func (i *agentGcmConfigPtrType) ToAgentGcmConfigPtrOutput() AgentGcmConfigPtrOutput {
	return i.ToAgentGcmConfigPtrOutputWithContext(context.Background())
}

func (i *agentGcmConfigPtrType) ToAgentGcmConfigPtrOutputWithContext(ctx context.Context) AgentGcmConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentGcmConfigPtrOutput)
}

type AgentGcmConfigOutput struct{ *pulumi.OutputState }

func (AgentGcmConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentGcmConfig)(nil)).Elem()
}

func (o AgentGcmConfigOutput) ToAgentGcmConfigOutput() AgentGcmConfigOutput {
	return o
}

func (o AgentGcmConfigOutput) ToAgentGcmConfigOutputWithContext(ctx context.Context) AgentGcmConfigOutput {
	return o
}

func (o AgentGcmConfigOutput) ToAgentGcmConfigPtrOutput() AgentGcmConfigPtrOutput {
	return o.ToAgentGcmConfigPtrOutputWithContext(context.Background())
}

func (o AgentGcmConfigOutput) ToAgentGcmConfigPtrOutputWithContext(ctx context.Context) AgentGcmConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentGcmConfig) *AgentGcmConfig {
		return &v
	}).(AgentGcmConfigPtrOutput)
}

type AgentGcmConfigPtrOutput struct{ *pulumi.OutputState }

func (AgentGcmConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentGcmConfig)(nil)).Elem()
}

func (o AgentGcmConfigPtrOutput) ToAgentGcmConfigPtrOutput() AgentGcmConfigPtrOutput {
	return o
}

func (o AgentGcmConfigPtrOutput) ToAgentGcmConfigPtrOutputWithContext(ctx context.Context) AgentGcmConfigPtrOutput {
	return o
}

func (o AgentGcmConfigPtrOutput) Elem() AgentGcmConfigOutput {
	return o.ApplyT(func(v *AgentGcmConfig) AgentGcmConfig {
		if v != nil {
			return *v
		}
		var ret AgentGcmConfig
		return ret
	}).(AgentGcmConfigOutput)
}

type AgentGrafanaLokiConfig struct {
	// API URL endpoint to the Grafana Loki instance.
	Url string `pulumi:"url"`
}

// AgentGrafanaLokiConfigInput is an input type that accepts AgentGrafanaLokiConfigArgs and AgentGrafanaLokiConfigOutput values.
// You can construct a concrete instance of `AgentGrafanaLokiConfigInput` via:
//
//	AgentGrafanaLokiConfigArgs{...}
type AgentGrafanaLokiConfigInput interface {
	pulumi.Input

	ToAgentGrafanaLokiConfigOutput() AgentGrafanaLokiConfigOutput
	ToAgentGrafanaLokiConfigOutputWithContext(context.Context) AgentGrafanaLokiConfigOutput
}

type AgentGrafanaLokiConfigArgs struct {
	// API URL endpoint to the Grafana Loki instance.
	Url pulumi.StringInput `pulumi:"url"`
}

func (AgentGrafanaLokiConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentGrafanaLokiConfig)(nil)).Elem()
}

func (i AgentGrafanaLokiConfigArgs) ToAgentGrafanaLokiConfigOutput() AgentGrafanaLokiConfigOutput {
	return i.ToAgentGrafanaLokiConfigOutputWithContext(context.Background())
}

func (i AgentGrafanaLokiConfigArgs) ToAgentGrafanaLokiConfigOutputWithContext(ctx context.Context) AgentGrafanaLokiConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentGrafanaLokiConfigOutput)
}

func (i AgentGrafanaLokiConfigArgs) ToAgentGrafanaLokiConfigPtrOutput() AgentGrafanaLokiConfigPtrOutput {
	return i.ToAgentGrafanaLokiConfigPtrOutputWithContext(context.Background())
}

func (i AgentGrafanaLokiConfigArgs) ToAgentGrafanaLokiConfigPtrOutputWithContext(ctx context.Context) AgentGrafanaLokiConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentGrafanaLokiConfigOutput).ToAgentGrafanaLokiConfigPtrOutputWithContext(ctx)
}

// AgentGrafanaLokiConfigPtrInput is an input type that accepts AgentGrafanaLokiConfigArgs, AgentGrafanaLokiConfigPtr and AgentGrafanaLokiConfigPtrOutput values.
// You can construct a concrete instance of `AgentGrafanaLokiConfigPtrInput` via:
//
//	        AgentGrafanaLokiConfigArgs{...}
//
//	or:
//
//	        nil
type AgentGrafanaLokiConfigPtrInput interface {
	pulumi.Input

	ToAgentGrafanaLokiConfigPtrOutput() AgentGrafanaLokiConfigPtrOutput
	ToAgentGrafanaLokiConfigPtrOutputWithContext(context.Context) AgentGrafanaLokiConfigPtrOutput
}

type agentGrafanaLokiConfigPtrType AgentGrafanaLokiConfigArgs

func AgentGrafanaLokiConfigPtr(v *AgentGrafanaLokiConfigArgs) AgentGrafanaLokiConfigPtrInput {
	return (*agentGrafanaLokiConfigPtrType)(v)
}

func (*agentGrafanaLokiConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentGrafanaLokiConfig)(nil)).Elem()
}

func (i *agentGrafanaLokiConfigPtrType) ToAgentGrafanaLokiConfigPtrOutput() AgentGrafanaLokiConfigPtrOutput {
	return i.ToAgentGrafanaLokiConfigPtrOutputWithContext(context.Background())
}

func (i *agentGrafanaLokiConfigPtrType) ToAgentGrafanaLokiConfigPtrOutputWithContext(ctx context.Context) AgentGrafanaLokiConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentGrafanaLokiConfigPtrOutput)
}

type AgentGrafanaLokiConfigOutput struct{ *pulumi.OutputState }

func (AgentGrafanaLokiConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentGrafanaLokiConfig)(nil)).Elem()
}

func (o AgentGrafanaLokiConfigOutput) ToAgentGrafanaLokiConfigOutput() AgentGrafanaLokiConfigOutput {
	return o
}

func (o AgentGrafanaLokiConfigOutput) ToAgentGrafanaLokiConfigOutputWithContext(ctx context.Context) AgentGrafanaLokiConfigOutput {
	return o
}

func (o AgentGrafanaLokiConfigOutput) ToAgentGrafanaLokiConfigPtrOutput() AgentGrafanaLokiConfigPtrOutput {
	return o.ToAgentGrafanaLokiConfigPtrOutputWithContext(context.Background())
}

func (o AgentGrafanaLokiConfigOutput) ToAgentGrafanaLokiConfigPtrOutputWithContext(ctx context.Context) AgentGrafanaLokiConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentGrafanaLokiConfig) *AgentGrafanaLokiConfig {
		return &v
	}).(AgentGrafanaLokiConfigPtrOutput)
}

// API URL endpoint to the Grafana Loki instance.
func (o AgentGrafanaLokiConfigOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v AgentGrafanaLokiConfig) string { return v.Url }).(pulumi.StringOutput)
}

type AgentGrafanaLokiConfigPtrOutput struct{ *pulumi.OutputState }

func (AgentGrafanaLokiConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentGrafanaLokiConfig)(nil)).Elem()
}

func (o AgentGrafanaLokiConfigPtrOutput) ToAgentGrafanaLokiConfigPtrOutput() AgentGrafanaLokiConfigPtrOutput {
	return o
}

func (o AgentGrafanaLokiConfigPtrOutput) ToAgentGrafanaLokiConfigPtrOutputWithContext(ctx context.Context) AgentGrafanaLokiConfigPtrOutput {
	return o
}

func (o AgentGrafanaLokiConfigPtrOutput) Elem() AgentGrafanaLokiConfigOutput {
	return o.ApplyT(func(v *AgentGrafanaLokiConfig) AgentGrafanaLokiConfig {
		if v != nil {
			return *v
		}
		var ret AgentGrafanaLokiConfig
		return ret
	}).(AgentGrafanaLokiConfigOutput)
}

// API URL endpoint to the Grafana Loki instance.
func (o AgentGrafanaLokiConfigPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentGrafanaLokiConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type AgentGraphiteConfig struct {
	// API URL endpoint to the Graphite's instance.
	Url string `pulumi:"url"`
}

// AgentGraphiteConfigInput is an input type that accepts AgentGraphiteConfigArgs and AgentGraphiteConfigOutput values.
// You can construct a concrete instance of `AgentGraphiteConfigInput` via:
//
//	AgentGraphiteConfigArgs{...}
type AgentGraphiteConfigInput interface {
	pulumi.Input

	ToAgentGraphiteConfigOutput() AgentGraphiteConfigOutput
	ToAgentGraphiteConfigOutputWithContext(context.Context) AgentGraphiteConfigOutput
}

type AgentGraphiteConfigArgs struct {
	// API URL endpoint to the Graphite's instance.
	Url pulumi.StringInput `pulumi:"url"`
}

func (AgentGraphiteConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentGraphiteConfig)(nil)).Elem()
}

func (i AgentGraphiteConfigArgs) ToAgentGraphiteConfigOutput() AgentGraphiteConfigOutput {
	return i.ToAgentGraphiteConfigOutputWithContext(context.Background())
}

func (i AgentGraphiteConfigArgs) ToAgentGraphiteConfigOutputWithContext(ctx context.Context) AgentGraphiteConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentGraphiteConfigOutput)
}

func (i AgentGraphiteConfigArgs) ToAgentGraphiteConfigPtrOutput() AgentGraphiteConfigPtrOutput {
	return i.ToAgentGraphiteConfigPtrOutputWithContext(context.Background())
}

func (i AgentGraphiteConfigArgs) ToAgentGraphiteConfigPtrOutputWithContext(ctx context.Context) AgentGraphiteConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentGraphiteConfigOutput).ToAgentGraphiteConfigPtrOutputWithContext(ctx)
}

// AgentGraphiteConfigPtrInput is an input type that accepts AgentGraphiteConfigArgs, AgentGraphiteConfigPtr and AgentGraphiteConfigPtrOutput values.
// You can construct a concrete instance of `AgentGraphiteConfigPtrInput` via:
//
//	        AgentGraphiteConfigArgs{...}
//
//	or:
//
//	        nil
type AgentGraphiteConfigPtrInput interface {
	pulumi.Input

	ToAgentGraphiteConfigPtrOutput() AgentGraphiteConfigPtrOutput
	ToAgentGraphiteConfigPtrOutputWithContext(context.Context) AgentGraphiteConfigPtrOutput
}

type agentGraphiteConfigPtrType AgentGraphiteConfigArgs

func AgentGraphiteConfigPtr(v *AgentGraphiteConfigArgs) AgentGraphiteConfigPtrInput {
	return (*agentGraphiteConfigPtrType)(v)
}

func (*agentGraphiteConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentGraphiteConfig)(nil)).Elem()
}

func (i *agentGraphiteConfigPtrType) ToAgentGraphiteConfigPtrOutput() AgentGraphiteConfigPtrOutput {
	return i.ToAgentGraphiteConfigPtrOutputWithContext(context.Background())
}

func (i *agentGraphiteConfigPtrType) ToAgentGraphiteConfigPtrOutputWithContext(ctx context.Context) AgentGraphiteConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentGraphiteConfigPtrOutput)
}

type AgentGraphiteConfigOutput struct{ *pulumi.OutputState }

func (AgentGraphiteConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentGraphiteConfig)(nil)).Elem()
}

func (o AgentGraphiteConfigOutput) ToAgentGraphiteConfigOutput() AgentGraphiteConfigOutput {
	return o
}

func (o AgentGraphiteConfigOutput) ToAgentGraphiteConfigOutputWithContext(ctx context.Context) AgentGraphiteConfigOutput {
	return o
}

func (o AgentGraphiteConfigOutput) ToAgentGraphiteConfigPtrOutput() AgentGraphiteConfigPtrOutput {
	return o.ToAgentGraphiteConfigPtrOutputWithContext(context.Background())
}

func (o AgentGraphiteConfigOutput) ToAgentGraphiteConfigPtrOutputWithContext(ctx context.Context) AgentGraphiteConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentGraphiteConfig) *AgentGraphiteConfig {
		return &v
	}).(AgentGraphiteConfigPtrOutput)
}

// API URL endpoint to the Graphite's instance.
func (o AgentGraphiteConfigOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v AgentGraphiteConfig) string { return v.Url }).(pulumi.StringOutput)
}

type AgentGraphiteConfigPtrOutput struct{ *pulumi.OutputState }

func (AgentGraphiteConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentGraphiteConfig)(nil)).Elem()
}

func (o AgentGraphiteConfigPtrOutput) ToAgentGraphiteConfigPtrOutput() AgentGraphiteConfigPtrOutput {
	return o
}

func (o AgentGraphiteConfigPtrOutput) ToAgentGraphiteConfigPtrOutputWithContext(ctx context.Context) AgentGraphiteConfigPtrOutput {
	return o
}

func (o AgentGraphiteConfigPtrOutput) Elem() AgentGraphiteConfigOutput {
	return o.ApplyT(func(v *AgentGraphiteConfig) AgentGraphiteConfig {
		if v != nil {
			return *v
		}
		var ret AgentGraphiteConfig
		return ret
	}).(AgentGraphiteConfigOutput)
}

// API URL endpoint to the Graphite's instance.
func (o AgentGraphiteConfigPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentGraphiteConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type AgentHistoricalDataRetrieval struct {
	// Used by default for any SLOs connected to this data source.
	DefaultDurations []AgentHistoricalDataRetrievalDefaultDuration `pulumi:"defaultDurations"`
	// Defines the maximum period for which data can be retrieved.
	MaxDurations []AgentHistoricalDataRetrievalMaxDuration `pulumi:"maxDurations"`
}

// AgentHistoricalDataRetrievalInput is an input type that accepts AgentHistoricalDataRetrievalArgs and AgentHistoricalDataRetrievalOutput values.
// You can construct a concrete instance of `AgentHistoricalDataRetrievalInput` via:
//
//	AgentHistoricalDataRetrievalArgs{...}
type AgentHistoricalDataRetrievalInput interface {
	pulumi.Input

	ToAgentHistoricalDataRetrievalOutput() AgentHistoricalDataRetrievalOutput
	ToAgentHistoricalDataRetrievalOutputWithContext(context.Context) AgentHistoricalDataRetrievalOutput
}

type AgentHistoricalDataRetrievalArgs struct {
	// Used by default for any SLOs connected to this data source.
	DefaultDurations AgentHistoricalDataRetrievalDefaultDurationArrayInput `pulumi:"defaultDurations"`
	// Defines the maximum period for which data can be retrieved.
	MaxDurations AgentHistoricalDataRetrievalMaxDurationArrayInput `pulumi:"maxDurations"`
}

func (AgentHistoricalDataRetrievalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentHistoricalDataRetrieval)(nil)).Elem()
}

func (i AgentHistoricalDataRetrievalArgs) ToAgentHistoricalDataRetrievalOutput() AgentHistoricalDataRetrievalOutput {
	return i.ToAgentHistoricalDataRetrievalOutputWithContext(context.Background())
}

func (i AgentHistoricalDataRetrievalArgs) ToAgentHistoricalDataRetrievalOutputWithContext(ctx context.Context) AgentHistoricalDataRetrievalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentHistoricalDataRetrievalOutput)
}

func (i AgentHistoricalDataRetrievalArgs) ToAgentHistoricalDataRetrievalPtrOutput() AgentHistoricalDataRetrievalPtrOutput {
	return i.ToAgentHistoricalDataRetrievalPtrOutputWithContext(context.Background())
}

func (i AgentHistoricalDataRetrievalArgs) ToAgentHistoricalDataRetrievalPtrOutputWithContext(ctx context.Context) AgentHistoricalDataRetrievalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentHistoricalDataRetrievalOutput).ToAgentHistoricalDataRetrievalPtrOutputWithContext(ctx)
}

// AgentHistoricalDataRetrievalPtrInput is an input type that accepts AgentHistoricalDataRetrievalArgs, AgentHistoricalDataRetrievalPtr and AgentHistoricalDataRetrievalPtrOutput values.
// You can construct a concrete instance of `AgentHistoricalDataRetrievalPtrInput` via:
//
//	        AgentHistoricalDataRetrievalArgs{...}
//
//	or:
//
//	        nil
type AgentHistoricalDataRetrievalPtrInput interface {
	pulumi.Input

	ToAgentHistoricalDataRetrievalPtrOutput() AgentHistoricalDataRetrievalPtrOutput
	ToAgentHistoricalDataRetrievalPtrOutputWithContext(context.Context) AgentHistoricalDataRetrievalPtrOutput
}

type agentHistoricalDataRetrievalPtrType AgentHistoricalDataRetrievalArgs

func AgentHistoricalDataRetrievalPtr(v *AgentHistoricalDataRetrievalArgs) AgentHistoricalDataRetrievalPtrInput {
	return (*agentHistoricalDataRetrievalPtrType)(v)
}

func (*agentHistoricalDataRetrievalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentHistoricalDataRetrieval)(nil)).Elem()
}

func (i *agentHistoricalDataRetrievalPtrType) ToAgentHistoricalDataRetrievalPtrOutput() AgentHistoricalDataRetrievalPtrOutput {
	return i.ToAgentHistoricalDataRetrievalPtrOutputWithContext(context.Background())
}

func (i *agentHistoricalDataRetrievalPtrType) ToAgentHistoricalDataRetrievalPtrOutputWithContext(ctx context.Context) AgentHistoricalDataRetrievalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentHistoricalDataRetrievalPtrOutput)
}

type AgentHistoricalDataRetrievalOutput struct{ *pulumi.OutputState }

func (AgentHistoricalDataRetrievalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentHistoricalDataRetrieval)(nil)).Elem()
}

func (o AgentHistoricalDataRetrievalOutput) ToAgentHistoricalDataRetrievalOutput() AgentHistoricalDataRetrievalOutput {
	return o
}

func (o AgentHistoricalDataRetrievalOutput) ToAgentHistoricalDataRetrievalOutputWithContext(ctx context.Context) AgentHistoricalDataRetrievalOutput {
	return o
}

func (o AgentHistoricalDataRetrievalOutput) ToAgentHistoricalDataRetrievalPtrOutput() AgentHistoricalDataRetrievalPtrOutput {
	return o.ToAgentHistoricalDataRetrievalPtrOutputWithContext(context.Background())
}

func (o AgentHistoricalDataRetrievalOutput) ToAgentHistoricalDataRetrievalPtrOutputWithContext(ctx context.Context) AgentHistoricalDataRetrievalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentHistoricalDataRetrieval) *AgentHistoricalDataRetrieval {
		return &v
	}).(AgentHistoricalDataRetrievalPtrOutput)
}

// Used by default for any SLOs connected to this data source.
func (o AgentHistoricalDataRetrievalOutput) DefaultDurations() AgentHistoricalDataRetrievalDefaultDurationArrayOutput {
	return o.ApplyT(func(v AgentHistoricalDataRetrieval) []AgentHistoricalDataRetrievalDefaultDuration {
		return v.DefaultDurations
	}).(AgentHistoricalDataRetrievalDefaultDurationArrayOutput)
}

// Defines the maximum period for which data can be retrieved.
func (o AgentHistoricalDataRetrievalOutput) MaxDurations() AgentHistoricalDataRetrievalMaxDurationArrayOutput {
	return o.ApplyT(func(v AgentHistoricalDataRetrieval) []AgentHistoricalDataRetrievalMaxDuration { return v.MaxDurations }).(AgentHistoricalDataRetrievalMaxDurationArrayOutput)
}

type AgentHistoricalDataRetrievalPtrOutput struct{ *pulumi.OutputState }

func (AgentHistoricalDataRetrievalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentHistoricalDataRetrieval)(nil)).Elem()
}

func (o AgentHistoricalDataRetrievalPtrOutput) ToAgentHistoricalDataRetrievalPtrOutput() AgentHistoricalDataRetrievalPtrOutput {
	return o
}

func (o AgentHistoricalDataRetrievalPtrOutput) ToAgentHistoricalDataRetrievalPtrOutputWithContext(ctx context.Context) AgentHistoricalDataRetrievalPtrOutput {
	return o
}

func (o AgentHistoricalDataRetrievalPtrOutput) Elem() AgentHistoricalDataRetrievalOutput {
	return o.ApplyT(func(v *AgentHistoricalDataRetrieval) AgentHistoricalDataRetrieval {
		if v != nil {
			return *v
		}
		var ret AgentHistoricalDataRetrieval
		return ret
	}).(AgentHistoricalDataRetrievalOutput)
}

// Used by default for any SLOs connected to this data source.
func (o AgentHistoricalDataRetrievalPtrOutput) DefaultDurations() AgentHistoricalDataRetrievalDefaultDurationArrayOutput {
	return o.ApplyT(func(v *AgentHistoricalDataRetrieval) []AgentHistoricalDataRetrievalDefaultDuration {
		if v == nil {
			return nil
		}
		return v.DefaultDurations
	}).(AgentHistoricalDataRetrievalDefaultDurationArrayOutput)
}

// Defines the maximum period for which data can be retrieved.
func (o AgentHistoricalDataRetrievalPtrOutput) MaxDurations() AgentHistoricalDataRetrievalMaxDurationArrayOutput {
	return o.ApplyT(func(v *AgentHistoricalDataRetrieval) []AgentHistoricalDataRetrievalMaxDuration {
		if v == nil {
			return nil
		}
		return v.MaxDurations
	}).(AgentHistoricalDataRetrievalMaxDurationArrayOutput)
}

type AgentHistoricalDataRetrievalDefaultDuration struct {
	// Must be one of Minute, Hour, or Day.
	Unit string `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value int `pulumi:"value"`
}

// AgentHistoricalDataRetrievalDefaultDurationInput is an input type that accepts AgentHistoricalDataRetrievalDefaultDurationArgs and AgentHistoricalDataRetrievalDefaultDurationOutput values.
// You can construct a concrete instance of `AgentHistoricalDataRetrievalDefaultDurationInput` via:
//
//	AgentHistoricalDataRetrievalDefaultDurationArgs{...}
type AgentHistoricalDataRetrievalDefaultDurationInput interface {
	pulumi.Input

	ToAgentHistoricalDataRetrievalDefaultDurationOutput() AgentHistoricalDataRetrievalDefaultDurationOutput
	ToAgentHistoricalDataRetrievalDefaultDurationOutputWithContext(context.Context) AgentHistoricalDataRetrievalDefaultDurationOutput
}

type AgentHistoricalDataRetrievalDefaultDurationArgs struct {
	// Must be one of Minute, Hour, or Day.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value pulumi.IntInput `pulumi:"value"`
}

func (AgentHistoricalDataRetrievalDefaultDurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentHistoricalDataRetrievalDefaultDuration)(nil)).Elem()
}

func (i AgentHistoricalDataRetrievalDefaultDurationArgs) ToAgentHistoricalDataRetrievalDefaultDurationOutput() AgentHistoricalDataRetrievalDefaultDurationOutput {
	return i.ToAgentHistoricalDataRetrievalDefaultDurationOutputWithContext(context.Background())
}

func (i AgentHistoricalDataRetrievalDefaultDurationArgs) ToAgentHistoricalDataRetrievalDefaultDurationOutputWithContext(ctx context.Context) AgentHistoricalDataRetrievalDefaultDurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentHistoricalDataRetrievalDefaultDurationOutput)
}

// AgentHistoricalDataRetrievalDefaultDurationArrayInput is an input type that accepts AgentHistoricalDataRetrievalDefaultDurationArray and AgentHistoricalDataRetrievalDefaultDurationArrayOutput values.
// You can construct a concrete instance of `AgentHistoricalDataRetrievalDefaultDurationArrayInput` via:
//
//	AgentHistoricalDataRetrievalDefaultDurationArray{ AgentHistoricalDataRetrievalDefaultDurationArgs{...} }
type AgentHistoricalDataRetrievalDefaultDurationArrayInput interface {
	pulumi.Input

	ToAgentHistoricalDataRetrievalDefaultDurationArrayOutput() AgentHistoricalDataRetrievalDefaultDurationArrayOutput
	ToAgentHistoricalDataRetrievalDefaultDurationArrayOutputWithContext(context.Context) AgentHistoricalDataRetrievalDefaultDurationArrayOutput
}

type AgentHistoricalDataRetrievalDefaultDurationArray []AgentHistoricalDataRetrievalDefaultDurationInput

func (AgentHistoricalDataRetrievalDefaultDurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentHistoricalDataRetrievalDefaultDuration)(nil)).Elem()
}

func (i AgentHistoricalDataRetrievalDefaultDurationArray) ToAgentHistoricalDataRetrievalDefaultDurationArrayOutput() AgentHistoricalDataRetrievalDefaultDurationArrayOutput {
	return i.ToAgentHistoricalDataRetrievalDefaultDurationArrayOutputWithContext(context.Background())
}

func (i AgentHistoricalDataRetrievalDefaultDurationArray) ToAgentHistoricalDataRetrievalDefaultDurationArrayOutputWithContext(ctx context.Context) AgentHistoricalDataRetrievalDefaultDurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentHistoricalDataRetrievalDefaultDurationArrayOutput)
}

type AgentHistoricalDataRetrievalDefaultDurationOutput struct{ *pulumi.OutputState }

func (AgentHistoricalDataRetrievalDefaultDurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentHistoricalDataRetrievalDefaultDuration)(nil)).Elem()
}

func (o AgentHistoricalDataRetrievalDefaultDurationOutput) ToAgentHistoricalDataRetrievalDefaultDurationOutput() AgentHistoricalDataRetrievalDefaultDurationOutput {
	return o
}

func (o AgentHistoricalDataRetrievalDefaultDurationOutput) ToAgentHistoricalDataRetrievalDefaultDurationOutputWithContext(ctx context.Context) AgentHistoricalDataRetrievalDefaultDurationOutput {
	return o
}

// Must be one of Minute, Hour, or Day.
func (o AgentHistoricalDataRetrievalDefaultDurationOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v AgentHistoricalDataRetrievalDefaultDuration) string { return v.Unit }).(pulumi.StringOutput)
}

// Must be an integer greater than or equal to 0.
func (o AgentHistoricalDataRetrievalDefaultDurationOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v AgentHistoricalDataRetrievalDefaultDuration) int { return v.Value }).(pulumi.IntOutput)
}

type AgentHistoricalDataRetrievalDefaultDurationArrayOutput struct{ *pulumi.OutputState }

func (AgentHistoricalDataRetrievalDefaultDurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentHistoricalDataRetrievalDefaultDuration)(nil)).Elem()
}

func (o AgentHistoricalDataRetrievalDefaultDurationArrayOutput) ToAgentHistoricalDataRetrievalDefaultDurationArrayOutput() AgentHistoricalDataRetrievalDefaultDurationArrayOutput {
	return o
}

func (o AgentHistoricalDataRetrievalDefaultDurationArrayOutput) ToAgentHistoricalDataRetrievalDefaultDurationArrayOutputWithContext(ctx context.Context) AgentHistoricalDataRetrievalDefaultDurationArrayOutput {
	return o
}

func (o AgentHistoricalDataRetrievalDefaultDurationArrayOutput) Index(i pulumi.IntInput) AgentHistoricalDataRetrievalDefaultDurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AgentHistoricalDataRetrievalDefaultDuration {
		return vs[0].([]AgentHistoricalDataRetrievalDefaultDuration)[vs[1].(int)]
	}).(AgentHistoricalDataRetrievalDefaultDurationOutput)
}

type AgentHistoricalDataRetrievalMaxDuration struct {
	// Must be one of Minute, Hour, or Day.
	Unit string `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value int `pulumi:"value"`
}

// AgentHistoricalDataRetrievalMaxDurationInput is an input type that accepts AgentHistoricalDataRetrievalMaxDurationArgs and AgentHistoricalDataRetrievalMaxDurationOutput values.
// You can construct a concrete instance of `AgentHistoricalDataRetrievalMaxDurationInput` via:
//
//	AgentHistoricalDataRetrievalMaxDurationArgs{...}
type AgentHistoricalDataRetrievalMaxDurationInput interface {
	pulumi.Input

	ToAgentHistoricalDataRetrievalMaxDurationOutput() AgentHistoricalDataRetrievalMaxDurationOutput
	ToAgentHistoricalDataRetrievalMaxDurationOutputWithContext(context.Context) AgentHistoricalDataRetrievalMaxDurationOutput
}

type AgentHistoricalDataRetrievalMaxDurationArgs struct {
	// Must be one of Minute, Hour, or Day.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value pulumi.IntInput `pulumi:"value"`
}

func (AgentHistoricalDataRetrievalMaxDurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentHistoricalDataRetrievalMaxDuration)(nil)).Elem()
}

func (i AgentHistoricalDataRetrievalMaxDurationArgs) ToAgentHistoricalDataRetrievalMaxDurationOutput() AgentHistoricalDataRetrievalMaxDurationOutput {
	return i.ToAgentHistoricalDataRetrievalMaxDurationOutputWithContext(context.Background())
}

func (i AgentHistoricalDataRetrievalMaxDurationArgs) ToAgentHistoricalDataRetrievalMaxDurationOutputWithContext(ctx context.Context) AgentHistoricalDataRetrievalMaxDurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentHistoricalDataRetrievalMaxDurationOutput)
}

// AgentHistoricalDataRetrievalMaxDurationArrayInput is an input type that accepts AgentHistoricalDataRetrievalMaxDurationArray and AgentHistoricalDataRetrievalMaxDurationArrayOutput values.
// You can construct a concrete instance of `AgentHistoricalDataRetrievalMaxDurationArrayInput` via:
//
//	AgentHistoricalDataRetrievalMaxDurationArray{ AgentHistoricalDataRetrievalMaxDurationArgs{...} }
type AgentHistoricalDataRetrievalMaxDurationArrayInput interface {
	pulumi.Input

	ToAgentHistoricalDataRetrievalMaxDurationArrayOutput() AgentHistoricalDataRetrievalMaxDurationArrayOutput
	ToAgentHistoricalDataRetrievalMaxDurationArrayOutputWithContext(context.Context) AgentHistoricalDataRetrievalMaxDurationArrayOutput
}

type AgentHistoricalDataRetrievalMaxDurationArray []AgentHistoricalDataRetrievalMaxDurationInput

func (AgentHistoricalDataRetrievalMaxDurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentHistoricalDataRetrievalMaxDuration)(nil)).Elem()
}

func (i AgentHistoricalDataRetrievalMaxDurationArray) ToAgentHistoricalDataRetrievalMaxDurationArrayOutput() AgentHistoricalDataRetrievalMaxDurationArrayOutput {
	return i.ToAgentHistoricalDataRetrievalMaxDurationArrayOutputWithContext(context.Background())
}

func (i AgentHistoricalDataRetrievalMaxDurationArray) ToAgentHistoricalDataRetrievalMaxDurationArrayOutputWithContext(ctx context.Context) AgentHistoricalDataRetrievalMaxDurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentHistoricalDataRetrievalMaxDurationArrayOutput)
}

type AgentHistoricalDataRetrievalMaxDurationOutput struct{ *pulumi.OutputState }

func (AgentHistoricalDataRetrievalMaxDurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentHistoricalDataRetrievalMaxDuration)(nil)).Elem()
}

func (o AgentHistoricalDataRetrievalMaxDurationOutput) ToAgentHistoricalDataRetrievalMaxDurationOutput() AgentHistoricalDataRetrievalMaxDurationOutput {
	return o
}

func (o AgentHistoricalDataRetrievalMaxDurationOutput) ToAgentHistoricalDataRetrievalMaxDurationOutputWithContext(ctx context.Context) AgentHistoricalDataRetrievalMaxDurationOutput {
	return o
}

// Must be one of Minute, Hour, or Day.
func (o AgentHistoricalDataRetrievalMaxDurationOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v AgentHistoricalDataRetrievalMaxDuration) string { return v.Unit }).(pulumi.StringOutput)
}

// Must be an integer greater than or equal to 0.
func (o AgentHistoricalDataRetrievalMaxDurationOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v AgentHistoricalDataRetrievalMaxDuration) int { return v.Value }).(pulumi.IntOutput)
}

type AgentHistoricalDataRetrievalMaxDurationArrayOutput struct{ *pulumi.OutputState }

func (AgentHistoricalDataRetrievalMaxDurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AgentHistoricalDataRetrievalMaxDuration)(nil)).Elem()
}

func (o AgentHistoricalDataRetrievalMaxDurationArrayOutput) ToAgentHistoricalDataRetrievalMaxDurationArrayOutput() AgentHistoricalDataRetrievalMaxDurationArrayOutput {
	return o
}

func (o AgentHistoricalDataRetrievalMaxDurationArrayOutput) ToAgentHistoricalDataRetrievalMaxDurationArrayOutputWithContext(ctx context.Context) AgentHistoricalDataRetrievalMaxDurationArrayOutput {
	return o
}

func (o AgentHistoricalDataRetrievalMaxDurationArrayOutput) Index(i pulumi.IntInput) AgentHistoricalDataRetrievalMaxDurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AgentHistoricalDataRetrievalMaxDuration {
		return vs[0].([]AgentHistoricalDataRetrievalMaxDuration)[vs[1].(int)]
	}).(AgentHistoricalDataRetrievalMaxDurationOutput)
}

type AgentHoneycombConfig struct {
}

// AgentHoneycombConfigInput is an input type that accepts AgentHoneycombConfigArgs and AgentHoneycombConfigOutput values.
// You can construct a concrete instance of `AgentHoneycombConfigInput` via:
//
//	AgentHoneycombConfigArgs{...}
type AgentHoneycombConfigInput interface {
	pulumi.Input

	ToAgentHoneycombConfigOutput() AgentHoneycombConfigOutput
	ToAgentHoneycombConfigOutputWithContext(context.Context) AgentHoneycombConfigOutput
}

type AgentHoneycombConfigArgs struct {
}

func (AgentHoneycombConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentHoneycombConfig)(nil)).Elem()
}

func (i AgentHoneycombConfigArgs) ToAgentHoneycombConfigOutput() AgentHoneycombConfigOutput {
	return i.ToAgentHoneycombConfigOutputWithContext(context.Background())
}

func (i AgentHoneycombConfigArgs) ToAgentHoneycombConfigOutputWithContext(ctx context.Context) AgentHoneycombConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentHoneycombConfigOutput)
}

func (i AgentHoneycombConfigArgs) ToAgentHoneycombConfigPtrOutput() AgentHoneycombConfigPtrOutput {
	return i.ToAgentHoneycombConfigPtrOutputWithContext(context.Background())
}

func (i AgentHoneycombConfigArgs) ToAgentHoneycombConfigPtrOutputWithContext(ctx context.Context) AgentHoneycombConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentHoneycombConfigOutput).ToAgentHoneycombConfigPtrOutputWithContext(ctx)
}

// AgentHoneycombConfigPtrInput is an input type that accepts AgentHoneycombConfigArgs, AgentHoneycombConfigPtr and AgentHoneycombConfigPtrOutput values.
// You can construct a concrete instance of `AgentHoneycombConfigPtrInput` via:
//
//	        AgentHoneycombConfigArgs{...}
//
//	or:
//
//	        nil
type AgentHoneycombConfigPtrInput interface {
	pulumi.Input

	ToAgentHoneycombConfigPtrOutput() AgentHoneycombConfigPtrOutput
	ToAgentHoneycombConfigPtrOutputWithContext(context.Context) AgentHoneycombConfigPtrOutput
}

type agentHoneycombConfigPtrType AgentHoneycombConfigArgs

func AgentHoneycombConfigPtr(v *AgentHoneycombConfigArgs) AgentHoneycombConfigPtrInput {
	return (*agentHoneycombConfigPtrType)(v)
}

func (*agentHoneycombConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentHoneycombConfig)(nil)).Elem()
}

func (i *agentHoneycombConfigPtrType) ToAgentHoneycombConfigPtrOutput() AgentHoneycombConfigPtrOutput {
	return i.ToAgentHoneycombConfigPtrOutputWithContext(context.Background())
}

func (i *agentHoneycombConfigPtrType) ToAgentHoneycombConfigPtrOutputWithContext(ctx context.Context) AgentHoneycombConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentHoneycombConfigPtrOutput)
}

type AgentHoneycombConfigOutput struct{ *pulumi.OutputState }

func (AgentHoneycombConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentHoneycombConfig)(nil)).Elem()
}

func (o AgentHoneycombConfigOutput) ToAgentHoneycombConfigOutput() AgentHoneycombConfigOutput {
	return o
}

func (o AgentHoneycombConfigOutput) ToAgentHoneycombConfigOutputWithContext(ctx context.Context) AgentHoneycombConfigOutput {
	return o
}

func (o AgentHoneycombConfigOutput) ToAgentHoneycombConfigPtrOutput() AgentHoneycombConfigPtrOutput {
	return o.ToAgentHoneycombConfigPtrOutputWithContext(context.Background())
}

func (o AgentHoneycombConfigOutput) ToAgentHoneycombConfigPtrOutputWithContext(ctx context.Context) AgentHoneycombConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentHoneycombConfig) *AgentHoneycombConfig {
		return &v
	}).(AgentHoneycombConfigPtrOutput)
}

type AgentHoneycombConfigPtrOutput struct{ *pulumi.OutputState }

func (AgentHoneycombConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentHoneycombConfig)(nil)).Elem()
}

func (o AgentHoneycombConfigPtrOutput) ToAgentHoneycombConfigPtrOutput() AgentHoneycombConfigPtrOutput {
	return o
}

func (o AgentHoneycombConfigPtrOutput) ToAgentHoneycombConfigPtrOutputWithContext(ctx context.Context) AgentHoneycombConfigPtrOutput {
	return o
}

func (o AgentHoneycombConfigPtrOutput) Elem() AgentHoneycombConfigOutput {
	return o.ApplyT(func(v *AgentHoneycombConfig) AgentHoneycombConfig {
		if v != nil {
			return *v
		}
		var ret AgentHoneycombConfig
		return ret
	}).(AgentHoneycombConfigOutput)
}

type AgentInfluxdbConfig struct {
	// API URL endpoint to the InfluxDB's instance.
	Url string `pulumi:"url"`
}

// AgentInfluxdbConfigInput is an input type that accepts AgentInfluxdbConfigArgs and AgentInfluxdbConfigOutput values.
// You can construct a concrete instance of `AgentInfluxdbConfigInput` via:
//
//	AgentInfluxdbConfigArgs{...}
type AgentInfluxdbConfigInput interface {
	pulumi.Input

	ToAgentInfluxdbConfigOutput() AgentInfluxdbConfigOutput
	ToAgentInfluxdbConfigOutputWithContext(context.Context) AgentInfluxdbConfigOutput
}

type AgentInfluxdbConfigArgs struct {
	// API URL endpoint to the InfluxDB's instance.
	Url pulumi.StringInput `pulumi:"url"`
}

func (AgentInfluxdbConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentInfluxdbConfig)(nil)).Elem()
}

func (i AgentInfluxdbConfigArgs) ToAgentInfluxdbConfigOutput() AgentInfluxdbConfigOutput {
	return i.ToAgentInfluxdbConfigOutputWithContext(context.Background())
}

func (i AgentInfluxdbConfigArgs) ToAgentInfluxdbConfigOutputWithContext(ctx context.Context) AgentInfluxdbConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentInfluxdbConfigOutput)
}

func (i AgentInfluxdbConfigArgs) ToAgentInfluxdbConfigPtrOutput() AgentInfluxdbConfigPtrOutput {
	return i.ToAgentInfluxdbConfigPtrOutputWithContext(context.Background())
}

func (i AgentInfluxdbConfigArgs) ToAgentInfluxdbConfigPtrOutputWithContext(ctx context.Context) AgentInfluxdbConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentInfluxdbConfigOutput).ToAgentInfluxdbConfigPtrOutputWithContext(ctx)
}

// AgentInfluxdbConfigPtrInput is an input type that accepts AgentInfluxdbConfigArgs, AgentInfluxdbConfigPtr and AgentInfluxdbConfigPtrOutput values.
// You can construct a concrete instance of `AgentInfluxdbConfigPtrInput` via:
//
//	        AgentInfluxdbConfigArgs{...}
//
//	or:
//
//	        nil
type AgentInfluxdbConfigPtrInput interface {
	pulumi.Input

	ToAgentInfluxdbConfigPtrOutput() AgentInfluxdbConfigPtrOutput
	ToAgentInfluxdbConfigPtrOutputWithContext(context.Context) AgentInfluxdbConfigPtrOutput
}

type agentInfluxdbConfigPtrType AgentInfluxdbConfigArgs

func AgentInfluxdbConfigPtr(v *AgentInfluxdbConfigArgs) AgentInfluxdbConfigPtrInput {
	return (*agentInfluxdbConfigPtrType)(v)
}

func (*agentInfluxdbConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentInfluxdbConfig)(nil)).Elem()
}

func (i *agentInfluxdbConfigPtrType) ToAgentInfluxdbConfigPtrOutput() AgentInfluxdbConfigPtrOutput {
	return i.ToAgentInfluxdbConfigPtrOutputWithContext(context.Background())
}

func (i *agentInfluxdbConfigPtrType) ToAgentInfluxdbConfigPtrOutputWithContext(ctx context.Context) AgentInfluxdbConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentInfluxdbConfigPtrOutput)
}

type AgentInfluxdbConfigOutput struct{ *pulumi.OutputState }

func (AgentInfluxdbConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentInfluxdbConfig)(nil)).Elem()
}

func (o AgentInfluxdbConfigOutput) ToAgentInfluxdbConfigOutput() AgentInfluxdbConfigOutput {
	return o
}

func (o AgentInfluxdbConfigOutput) ToAgentInfluxdbConfigOutputWithContext(ctx context.Context) AgentInfluxdbConfigOutput {
	return o
}

func (o AgentInfluxdbConfigOutput) ToAgentInfluxdbConfigPtrOutput() AgentInfluxdbConfigPtrOutput {
	return o.ToAgentInfluxdbConfigPtrOutputWithContext(context.Background())
}

func (o AgentInfluxdbConfigOutput) ToAgentInfluxdbConfigPtrOutputWithContext(ctx context.Context) AgentInfluxdbConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentInfluxdbConfig) *AgentInfluxdbConfig {
		return &v
	}).(AgentInfluxdbConfigPtrOutput)
}

// API URL endpoint to the InfluxDB's instance.
func (o AgentInfluxdbConfigOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v AgentInfluxdbConfig) string { return v.Url }).(pulumi.StringOutput)
}

type AgentInfluxdbConfigPtrOutput struct{ *pulumi.OutputState }

func (AgentInfluxdbConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentInfluxdbConfig)(nil)).Elem()
}

func (o AgentInfluxdbConfigPtrOutput) ToAgentInfluxdbConfigPtrOutput() AgentInfluxdbConfigPtrOutput {
	return o
}

func (o AgentInfluxdbConfigPtrOutput) ToAgentInfluxdbConfigPtrOutputWithContext(ctx context.Context) AgentInfluxdbConfigPtrOutput {
	return o
}

func (o AgentInfluxdbConfigPtrOutput) Elem() AgentInfluxdbConfigOutput {
	return o.ApplyT(func(v *AgentInfluxdbConfig) AgentInfluxdbConfig {
		if v != nil {
			return *v
		}
		var ret AgentInfluxdbConfig
		return ret
	}).(AgentInfluxdbConfigOutput)
}

// API URL endpoint to the InfluxDB's instance.
func (o AgentInfluxdbConfigPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentInfluxdbConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type AgentInstanaConfig struct {
	// API URL endpoint to the InfluxDB's instance.
	Url string `pulumi:"url"`
}

// AgentInstanaConfigInput is an input type that accepts AgentInstanaConfigArgs and AgentInstanaConfigOutput values.
// You can construct a concrete instance of `AgentInstanaConfigInput` via:
//
//	AgentInstanaConfigArgs{...}
type AgentInstanaConfigInput interface {
	pulumi.Input

	ToAgentInstanaConfigOutput() AgentInstanaConfigOutput
	ToAgentInstanaConfigOutputWithContext(context.Context) AgentInstanaConfigOutput
}

type AgentInstanaConfigArgs struct {
	// API URL endpoint to the InfluxDB's instance.
	Url pulumi.StringInput `pulumi:"url"`
}

func (AgentInstanaConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentInstanaConfig)(nil)).Elem()
}

func (i AgentInstanaConfigArgs) ToAgentInstanaConfigOutput() AgentInstanaConfigOutput {
	return i.ToAgentInstanaConfigOutputWithContext(context.Background())
}

func (i AgentInstanaConfigArgs) ToAgentInstanaConfigOutputWithContext(ctx context.Context) AgentInstanaConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentInstanaConfigOutput)
}

func (i AgentInstanaConfigArgs) ToAgentInstanaConfigPtrOutput() AgentInstanaConfigPtrOutput {
	return i.ToAgentInstanaConfigPtrOutputWithContext(context.Background())
}

func (i AgentInstanaConfigArgs) ToAgentInstanaConfigPtrOutputWithContext(ctx context.Context) AgentInstanaConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentInstanaConfigOutput).ToAgentInstanaConfigPtrOutputWithContext(ctx)
}

// AgentInstanaConfigPtrInput is an input type that accepts AgentInstanaConfigArgs, AgentInstanaConfigPtr and AgentInstanaConfigPtrOutput values.
// You can construct a concrete instance of `AgentInstanaConfigPtrInput` via:
//
//	        AgentInstanaConfigArgs{...}
//
//	or:
//
//	        nil
type AgentInstanaConfigPtrInput interface {
	pulumi.Input

	ToAgentInstanaConfigPtrOutput() AgentInstanaConfigPtrOutput
	ToAgentInstanaConfigPtrOutputWithContext(context.Context) AgentInstanaConfigPtrOutput
}

type agentInstanaConfigPtrType AgentInstanaConfigArgs

func AgentInstanaConfigPtr(v *AgentInstanaConfigArgs) AgentInstanaConfigPtrInput {
	return (*agentInstanaConfigPtrType)(v)
}

func (*agentInstanaConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentInstanaConfig)(nil)).Elem()
}

func (i *agentInstanaConfigPtrType) ToAgentInstanaConfigPtrOutput() AgentInstanaConfigPtrOutput {
	return i.ToAgentInstanaConfigPtrOutputWithContext(context.Background())
}

func (i *agentInstanaConfigPtrType) ToAgentInstanaConfigPtrOutputWithContext(ctx context.Context) AgentInstanaConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentInstanaConfigPtrOutput)
}

type AgentInstanaConfigOutput struct{ *pulumi.OutputState }

func (AgentInstanaConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentInstanaConfig)(nil)).Elem()
}

func (o AgentInstanaConfigOutput) ToAgentInstanaConfigOutput() AgentInstanaConfigOutput {
	return o
}

func (o AgentInstanaConfigOutput) ToAgentInstanaConfigOutputWithContext(ctx context.Context) AgentInstanaConfigOutput {
	return o
}

func (o AgentInstanaConfigOutput) ToAgentInstanaConfigPtrOutput() AgentInstanaConfigPtrOutput {
	return o.ToAgentInstanaConfigPtrOutputWithContext(context.Background())
}

func (o AgentInstanaConfigOutput) ToAgentInstanaConfigPtrOutputWithContext(ctx context.Context) AgentInstanaConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentInstanaConfig) *AgentInstanaConfig {
		return &v
	}).(AgentInstanaConfigPtrOutput)
}

// API URL endpoint to the InfluxDB's instance.
func (o AgentInstanaConfigOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v AgentInstanaConfig) string { return v.Url }).(pulumi.StringOutput)
}

type AgentInstanaConfigPtrOutput struct{ *pulumi.OutputState }

func (AgentInstanaConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentInstanaConfig)(nil)).Elem()
}

func (o AgentInstanaConfigPtrOutput) ToAgentInstanaConfigPtrOutput() AgentInstanaConfigPtrOutput {
	return o
}

func (o AgentInstanaConfigPtrOutput) ToAgentInstanaConfigPtrOutputWithContext(ctx context.Context) AgentInstanaConfigPtrOutput {
	return o
}

func (o AgentInstanaConfigPtrOutput) Elem() AgentInstanaConfigOutput {
	return o.ApplyT(func(v *AgentInstanaConfig) AgentInstanaConfig {
		if v != nil {
			return *v
		}
		var ret AgentInstanaConfig
		return ret
	}).(AgentInstanaConfigOutput)
}

// API URL endpoint to the InfluxDB's instance.
func (o AgentInstanaConfigPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentInstanaConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type AgentLightstepConfig struct {
	// Organization name registered in Lightstep.
	Organization string `pulumi:"organization"`
	// Name of the Lightstep project.
	Project string `pulumi:"project"`
	// Lightstep API URL. Nobl9 will use https://api.lightstep.com if empty.
	Url *string `pulumi:"url"`
}

// AgentLightstepConfigInput is an input type that accepts AgentLightstepConfigArgs and AgentLightstepConfigOutput values.
// You can construct a concrete instance of `AgentLightstepConfigInput` via:
//
//	AgentLightstepConfigArgs{...}
type AgentLightstepConfigInput interface {
	pulumi.Input

	ToAgentLightstepConfigOutput() AgentLightstepConfigOutput
	ToAgentLightstepConfigOutputWithContext(context.Context) AgentLightstepConfigOutput
}

type AgentLightstepConfigArgs struct {
	// Organization name registered in Lightstep.
	Organization pulumi.StringInput `pulumi:"organization"`
	// Name of the Lightstep project.
	Project pulumi.StringInput `pulumi:"project"`
	// Lightstep API URL. Nobl9 will use https://api.lightstep.com if empty.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (AgentLightstepConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentLightstepConfig)(nil)).Elem()
}

func (i AgentLightstepConfigArgs) ToAgentLightstepConfigOutput() AgentLightstepConfigOutput {
	return i.ToAgentLightstepConfigOutputWithContext(context.Background())
}

func (i AgentLightstepConfigArgs) ToAgentLightstepConfigOutputWithContext(ctx context.Context) AgentLightstepConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentLightstepConfigOutput)
}

func (i AgentLightstepConfigArgs) ToAgentLightstepConfigPtrOutput() AgentLightstepConfigPtrOutput {
	return i.ToAgentLightstepConfigPtrOutputWithContext(context.Background())
}

func (i AgentLightstepConfigArgs) ToAgentLightstepConfigPtrOutputWithContext(ctx context.Context) AgentLightstepConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentLightstepConfigOutput).ToAgentLightstepConfigPtrOutputWithContext(ctx)
}

// AgentLightstepConfigPtrInput is an input type that accepts AgentLightstepConfigArgs, AgentLightstepConfigPtr and AgentLightstepConfigPtrOutput values.
// You can construct a concrete instance of `AgentLightstepConfigPtrInput` via:
//
//	        AgentLightstepConfigArgs{...}
//
//	or:
//
//	        nil
type AgentLightstepConfigPtrInput interface {
	pulumi.Input

	ToAgentLightstepConfigPtrOutput() AgentLightstepConfigPtrOutput
	ToAgentLightstepConfigPtrOutputWithContext(context.Context) AgentLightstepConfigPtrOutput
}

type agentLightstepConfigPtrType AgentLightstepConfigArgs

func AgentLightstepConfigPtr(v *AgentLightstepConfigArgs) AgentLightstepConfigPtrInput {
	return (*agentLightstepConfigPtrType)(v)
}

func (*agentLightstepConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentLightstepConfig)(nil)).Elem()
}

func (i *agentLightstepConfigPtrType) ToAgentLightstepConfigPtrOutput() AgentLightstepConfigPtrOutput {
	return i.ToAgentLightstepConfigPtrOutputWithContext(context.Background())
}

func (i *agentLightstepConfigPtrType) ToAgentLightstepConfigPtrOutputWithContext(ctx context.Context) AgentLightstepConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentLightstepConfigPtrOutput)
}

type AgentLightstepConfigOutput struct{ *pulumi.OutputState }

func (AgentLightstepConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentLightstepConfig)(nil)).Elem()
}

func (o AgentLightstepConfigOutput) ToAgentLightstepConfigOutput() AgentLightstepConfigOutput {
	return o
}

func (o AgentLightstepConfigOutput) ToAgentLightstepConfigOutputWithContext(ctx context.Context) AgentLightstepConfigOutput {
	return o
}

func (o AgentLightstepConfigOutput) ToAgentLightstepConfigPtrOutput() AgentLightstepConfigPtrOutput {
	return o.ToAgentLightstepConfigPtrOutputWithContext(context.Background())
}

func (o AgentLightstepConfigOutput) ToAgentLightstepConfigPtrOutputWithContext(ctx context.Context) AgentLightstepConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentLightstepConfig) *AgentLightstepConfig {
		return &v
	}).(AgentLightstepConfigPtrOutput)
}

// Organization name registered in Lightstep.
func (o AgentLightstepConfigOutput) Organization() pulumi.StringOutput {
	return o.ApplyT(func(v AgentLightstepConfig) string { return v.Organization }).(pulumi.StringOutput)
}

// Name of the Lightstep project.
func (o AgentLightstepConfigOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v AgentLightstepConfig) string { return v.Project }).(pulumi.StringOutput)
}

// Lightstep API URL. Nobl9 will use https://api.lightstep.com if empty.
func (o AgentLightstepConfigOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AgentLightstepConfig) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type AgentLightstepConfigPtrOutput struct{ *pulumi.OutputState }

func (AgentLightstepConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentLightstepConfig)(nil)).Elem()
}

func (o AgentLightstepConfigPtrOutput) ToAgentLightstepConfigPtrOutput() AgentLightstepConfigPtrOutput {
	return o
}

func (o AgentLightstepConfigPtrOutput) ToAgentLightstepConfigPtrOutputWithContext(ctx context.Context) AgentLightstepConfigPtrOutput {
	return o
}

func (o AgentLightstepConfigPtrOutput) Elem() AgentLightstepConfigOutput {
	return o.ApplyT(func(v *AgentLightstepConfig) AgentLightstepConfig {
		if v != nil {
			return *v
		}
		var ret AgentLightstepConfig
		return ret
	}).(AgentLightstepConfigOutput)
}

// Organization name registered in Lightstep.
func (o AgentLightstepConfigPtrOutput) Organization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentLightstepConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Organization
	}).(pulumi.StringPtrOutput)
}

// Name of the Lightstep project.
func (o AgentLightstepConfigPtrOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentLightstepConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Project
	}).(pulumi.StringPtrOutput)
}

// Lightstep API URL. Nobl9 will use https://api.lightstep.com if empty.
func (o AgentLightstepConfigPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentLightstepConfig) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

type AgentNewrelicConfig struct {
	// ID number assigned to the New Relic user account.
	AccountId string `pulumi:"accountId"`
}

// AgentNewrelicConfigInput is an input type that accepts AgentNewrelicConfigArgs and AgentNewrelicConfigOutput values.
// You can construct a concrete instance of `AgentNewrelicConfigInput` via:
//
//	AgentNewrelicConfigArgs{...}
type AgentNewrelicConfigInput interface {
	pulumi.Input

	ToAgentNewrelicConfigOutput() AgentNewrelicConfigOutput
	ToAgentNewrelicConfigOutputWithContext(context.Context) AgentNewrelicConfigOutput
}

type AgentNewrelicConfigArgs struct {
	// ID number assigned to the New Relic user account.
	AccountId pulumi.StringInput `pulumi:"accountId"`
}

func (AgentNewrelicConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentNewrelicConfig)(nil)).Elem()
}

func (i AgentNewrelicConfigArgs) ToAgentNewrelicConfigOutput() AgentNewrelicConfigOutput {
	return i.ToAgentNewrelicConfigOutputWithContext(context.Background())
}

func (i AgentNewrelicConfigArgs) ToAgentNewrelicConfigOutputWithContext(ctx context.Context) AgentNewrelicConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentNewrelicConfigOutput)
}

func (i AgentNewrelicConfigArgs) ToAgentNewrelicConfigPtrOutput() AgentNewrelicConfigPtrOutput {
	return i.ToAgentNewrelicConfigPtrOutputWithContext(context.Background())
}

func (i AgentNewrelicConfigArgs) ToAgentNewrelicConfigPtrOutputWithContext(ctx context.Context) AgentNewrelicConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentNewrelicConfigOutput).ToAgentNewrelicConfigPtrOutputWithContext(ctx)
}

// AgentNewrelicConfigPtrInput is an input type that accepts AgentNewrelicConfigArgs, AgentNewrelicConfigPtr and AgentNewrelicConfigPtrOutput values.
// You can construct a concrete instance of `AgentNewrelicConfigPtrInput` via:
//
//	        AgentNewrelicConfigArgs{...}
//
//	or:
//
//	        nil
type AgentNewrelicConfigPtrInput interface {
	pulumi.Input

	ToAgentNewrelicConfigPtrOutput() AgentNewrelicConfigPtrOutput
	ToAgentNewrelicConfigPtrOutputWithContext(context.Context) AgentNewrelicConfigPtrOutput
}

type agentNewrelicConfigPtrType AgentNewrelicConfigArgs

func AgentNewrelicConfigPtr(v *AgentNewrelicConfigArgs) AgentNewrelicConfigPtrInput {
	return (*agentNewrelicConfigPtrType)(v)
}

func (*agentNewrelicConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentNewrelicConfig)(nil)).Elem()
}

func (i *agentNewrelicConfigPtrType) ToAgentNewrelicConfigPtrOutput() AgentNewrelicConfigPtrOutput {
	return i.ToAgentNewrelicConfigPtrOutputWithContext(context.Background())
}

func (i *agentNewrelicConfigPtrType) ToAgentNewrelicConfigPtrOutputWithContext(ctx context.Context) AgentNewrelicConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentNewrelicConfigPtrOutput)
}

type AgentNewrelicConfigOutput struct{ *pulumi.OutputState }

func (AgentNewrelicConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentNewrelicConfig)(nil)).Elem()
}

func (o AgentNewrelicConfigOutput) ToAgentNewrelicConfigOutput() AgentNewrelicConfigOutput {
	return o
}

func (o AgentNewrelicConfigOutput) ToAgentNewrelicConfigOutputWithContext(ctx context.Context) AgentNewrelicConfigOutput {
	return o
}

func (o AgentNewrelicConfigOutput) ToAgentNewrelicConfigPtrOutput() AgentNewrelicConfigPtrOutput {
	return o.ToAgentNewrelicConfigPtrOutputWithContext(context.Background())
}

func (o AgentNewrelicConfigOutput) ToAgentNewrelicConfigPtrOutputWithContext(ctx context.Context) AgentNewrelicConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentNewrelicConfig) *AgentNewrelicConfig {
		return &v
	}).(AgentNewrelicConfigPtrOutput)
}

// ID number assigned to the New Relic user account.
func (o AgentNewrelicConfigOutput) AccountId() pulumi.StringOutput {
	return o.ApplyT(func(v AgentNewrelicConfig) string { return v.AccountId }).(pulumi.StringOutput)
}

type AgentNewrelicConfigPtrOutput struct{ *pulumi.OutputState }

func (AgentNewrelicConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentNewrelicConfig)(nil)).Elem()
}

func (o AgentNewrelicConfigPtrOutput) ToAgentNewrelicConfigPtrOutput() AgentNewrelicConfigPtrOutput {
	return o
}

func (o AgentNewrelicConfigPtrOutput) ToAgentNewrelicConfigPtrOutputWithContext(ctx context.Context) AgentNewrelicConfigPtrOutput {
	return o
}

func (o AgentNewrelicConfigPtrOutput) Elem() AgentNewrelicConfigOutput {
	return o.ApplyT(func(v *AgentNewrelicConfig) AgentNewrelicConfig {
		if v != nil {
			return *v
		}
		var ret AgentNewrelicConfig
		return ret
	}).(AgentNewrelicConfigOutput)
}

// ID number assigned to the New Relic user account.
func (o AgentNewrelicConfigPtrOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentNewrelicConfig) *string {
		if v == nil {
			return nil
		}
		return &v.AccountId
	}).(pulumi.StringPtrOutput)
}

type AgentOpentsdbConfig struct {
	// OpenTSDB cluster URL.
	Url string `pulumi:"url"`
}

// AgentOpentsdbConfigInput is an input type that accepts AgentOpentsdbConfigArgs and AgentOpentsdbConfigOutput values.
// You can construct a concrete instance of `AgentOpentsdbConfigInput` via:
//
//	AgentOpentsdbConfigArgs{...}
type AgentOpentsdbConfigInput interface {
	pulumi.Input

	ToAgentOpentsdbConfigOutput() AgentOpentsdbConfigOutput
	ToAgentOpentsdbConfigOutputWithContext(context.Context) AgentOpentsdbConfigOutput
}

type AgentOpentsdbConfigArgs struct {
	// OpenTSDB cluster URL.
	Url pulumi.StringInput `pulumi:"url"`
}

func (AgentOpentsdbConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentOpentsdbConfig)(nil)).Elem()
}

func (i AgentOpentsdbConfigArgs) ToAgentOpentsdbConfigOutput() AgentOpentsdbConfigOutput {
	return i.ToAgentOpentsdbConfigOutputWithContext(context.Background())
}

func (i AgentOpentsdbConfigArgs) ToAgentOpentsdbConfigOutputWithContext(ctx context.Context) AgentOpentsdbConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentOpentsdbConfigOutput)
}

func (i AgentOpentsdbConfigArgs) ToAgentOpentsdbConfigPtrOutput() AgentOpentsdbConfigPtrOutput {
	return i.ToAgentOpentsdbConfigPtrOutputWithContext(context.Background())
}

func (i AgentOpentsdbConfigArgs) ToAgentOpentsdbConfigPtrOutputWithContext(ctx context.Context) AgentOpentsdbConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentOpentsdbConfigOutput).ToAgentOpentsdbConfigPtrOutputWithContext(ctx)
}

// AgentOpentsdbConfigPtrInput is an input type that accepts AgentOpentsdbConfigArgs, AgentOpentsdbConfigPtr and AgentOpentsdbConfigPtrOutput values.
// You can construct a concrete instance of `AgentOpentsdbConfigPtrInput` via:
//
//	        AgentOpentsdbConfigArgs{...}
//
//	or:
//
//	        nil
type AgentOpentsdbConfigPtrInput interface {
	pulumi.Input

	ToAgentOpentsdbConfigPtrOutput() AgentOpentsdbConfigPtrOutput
	ToAgentOpentsdbConfigPtrOutputWithContext(context.Context) AgentOpentsdbConfigPtrOutput
}

type agentOpentsdbConfigPtrType AgentOpentsdbConfigArgs

func AgentOpentsdbConfigPtr(v *AgentOpentsdbConfigArgs) AgentOpentsdbConfigPtrInput {
	return (*agentOpentsdbConfigPtrType)(v)
}

func (*agentOpentsdbConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentOpentsdbConfig)(nil)).Elem()
}

func (i *agentOpentsdbConfigPtrType) ToAgentOpentsdbConfigPtrOutput() AgentOpentsdbConfigPtrOutput {
	return i.ToAgentOpentsdbConfigPtrOutputWithContext(context.Background())
}

func (i *agentOpentsdbConfigPtrType) ToAgentOpentsdbConfigPtrOutputWithContext(ctx context.Context) AgentOpentsdbConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentOpentsdbConfigPtrOutput)
}

type AgentOpentsdbConfigOutput struct{ *pulumi.OutputState }

func (AgentOpentsdbConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentOpentsdbConfig)(nil)).Elem()
}

func (o AgentOpentsdbConfigOutput) ToAgentOpentsdbConfigOutput() AgentOpentsdbConfigOutput {
	return o
}

func (o AgentOpentsdbConfigOutput) ToAgentOpentsdbConfigOutputWithContext(ctx context.Context) AgentOpentsdbConfigOutput {
	return o
}

func (o AgentOpentsdbConfigOutput) ToAgentOpentsdbConfigPtrOutput() AgentOpentsdbConfigPtrOutput {
	return o.ToAgentOpentsdbConfigPtrOutputWithContext(context.Background())
}

func (o AgentOpentsdbConfigOutput) ToAgentOpentsdbConfigPtrOutputWithContext(ctx context.Context) AgentOpentsdbConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentOpentsdbConfig) *AgentOpentsdbConfig {
		return &v
	}).(AgentOpentsdbConfigPtrOutput)
}

// OpenTSDB cluster URL.
func (o AgentOpentsdbConfigOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v AgentOpentsdbConfig) string { return v.Url }).(pulumi.StringOutput)
}

type AgentOpentsdbConfigPtrOutput struct{ *pulumi.OutputState }

func (AgentOpentsdbConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentOpentsdbConfig)(nil)).Elem()
}

func (o AgentOpentsdbConfigPtrOutput) ToAgentOpentsdbConfigPtrOutput() AgentOpentsdbConfigPtrOutput {
	return o
}

func (o AgentOpentsdbConfigPtrOutput) ToAgentOpentsdbConfigPtrOutputWithContext(ctx context.Context) AgentOpentsdbConfigPtrOutput {
	return o
}

func (o AgentOpentsdbConfigPtrOutput) Elem() AgentOpentsdbConfigOutput {
	return o.ApplyT(func(v *AgentOpentsdbConfig) AgentOpentsdbConfig {
		if v != nil {
			return *v
		}
		var ret AgentOpentsdbConfig
		return ret
	}).(AgentOpentsdbConfigOutput)
}

// OpenTSDB cluster URL.
func (o AgentOpentsdbConfigPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentOpentsdbConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type AgentPingdomConfig struct {
}

// AgentPingdomConfigInput is an input type that accepts AgentPingdomConfigArgs and AgentPingdomConfigOutput values.
// You can construct a concrete instance of `AgentPingdomConfigInput` via:
//
//	AgentPingdomConfigArgs{...}
type AgentPingdomConfigInput interface {
	pulumi.Input

	ToAgentPingdomConfigOutput() AgentPingdomConfigOutput
	ToAgentPingdomConfigOutputWithContext(context.Context) AgentPingdomConfigOutput
}

type AgentPingdomConfigArgs struct {
}

func (AgentPingdomConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPingdomConfig)(nil)).Elem()
}

func (i AgentPingdomConfigArgs) ToAgentPingdomConfigOutput() AgentPingdomConfigOutput {
	return i.ToAgentPingdomConfigOutputWithContext(context.Background())
}

func (i AgentPingdomConfigArgs) ToAgentPingdomConfigOutputWithContext(ctx context.Context) AgentPingdomConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPingdomConfigOutput)
}

func (i AgentPingdomConfigArgs) ToAgentPingdomConfigPtrOutput() AgentPingdomConfigPtrOutput {
	return i.ToAgentPingdomConfigPtrOutputWithContext(context.Background())
}

func (i AgentPingdomConfigArgs) ToAgentPingdomConfigPtrOutputWithContext(ctx context.Context) AgentPingdomConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPingdomConfigOutput).ToAgentPingdomConfigPtrOutputWithContext(ctx)
}

// AgentPingdomConfigPtrInput is an input type that accepts AgentPingdomConfigArgs, AgentPingdomConfigPtr and AgentPingdomConfigPtrOutput values.
// You can construct a concrete instance of `AgentPingdomConfigPtrInput` via:
//
//	        AgentPingdomConfigArgs{...}
//
//	or:
//
//	        nil
type AgentPingdomConfigPtrInput interface {
	pulumi.Input

	ToAgentPingdomConfigPtrOutput() AgentPingdomConfigPtrOutput
	ToAgentPingdomConfigPtrOutputWithContext(context.Context) AgentPingdomConfigPtrOutput
}

type agentPingdomConfigPtrType AgentPingdomConfigArgs

func AgentPingdomConfigPtr(v *AgentPingdomConfigArgs) AgentPingdomConfigPtrInput {
	return (*agentPingdomConfigPtrType)(v)
}

func (*agentPingdomConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentPingdomConfig)(nil)).Elem()
}

func (i *agentPingdomConfigPtrType) ToAgentPingdomConfigPtrOutput() AgentPingdomConfigPtrOutput {
	return i.ToAgentPingdomConfigPtrOutputWithContext(context.Background())
}

func (i *agentPingdomConfigPtrType) ToAgentPingdomConfigPtrOutputWithContext(ctx context.Context) AgentPingdomConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPingdomConfigPtrOutput)
}

type AgentPingdomConfigOutput struct{ *pulumi.OutputState }

func (AgentPingdomConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPingdomConfig)(nil)).Elem()
}

func (o AgentPingdomConfigOutput) ToAgentPingdomConfigOutput() AgentPingdomConfigOutput {
	return o
}

func (o AgentPingdomConfigOutput) ToAgentPingdomConfigOutputWithContext(ctx context.Context) AgentPingdomConfigOutput {
	return o
}

func (o AgentPingdomConfigOutput) ToAgentPingdomConfigPtrOutput() AgentPingdomConfigPtrOutput {
	return o.ToAgentPingdomConfigPtrOutputWithContext(context.Background())
}

func (o AgentPingdomConfigOutput) ToAgentPingdomConfigPtrOutputWithContext(ctx context.Context) AgentPingdomConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentPingdomConfig) *AgentPingdomConfig {
		return &v
	}).(AgentPingdomConfigPtrOutput)
}

type AgentPingdomConfigPtrOutput struct{ *pulumi.OutputState }

func (AgentPingdomConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentPingdomConfig)(nil)).Elem()
}

func (o AgentPingdomConfigPtrOutput) ToAgentPingdomConfigPtrOutput() AgentPingdomConfigPtrOutput {
	return o
}

func (o AgentPingdomConfigPtrOutput) ToAgentPingdomConfigPtrOutputWithContext(ctx context.Context) AgentPingdomConfigPtrOutput {
	return o
}

func (o AgentPingdomConfigPtrOutput) Elem() AgentPingdomConfigOutput {
	return o.ApplyT(func(v *AgentPingdomConfig) AgentPingdomConfig {
		if v != nil {
			return *v
		}
		var ret AgentPingdomConfig
		return ret
	}).(AgentPingdomConfigOutput)
}

type AgentPrometheusConfig struct {
	// Base URL to Prometheus server.
	Url string `pulumi:"url"`
}

// AgentPrometheusConfigInput is an input type that accepts AgentPrometheusConfigArgs and AgentPrometheusConfigOutput values.
// You can construct a concrete instance of `AgentPrometheusConfigInput` via:
//
//	AgentPrometheusConfigArgs{...}
type AgentPrometheusConfigInput interface {
	pulumi.Input

	ToAgentPrometheusConfigOutput() AgentPrometheusConfigOutput
	ToAgentPrometheusConfigOutputWithContext(context.Context) AgentPrometheusConfigOutput
}

type AgentPrometheusConfigArgs struct {
	// Base URL to Prometheus server.
	Url pulumi.StringInput `pulumi:"url"`
}

func (AgentPrometheusConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPrometheusConfig)(nil)).Elem()
}

func (i AgentPrometheusConfigArgs) ToAgentPrometheusConfigOutput() AgentPrometheusConfigOutput {
	return i.ToAgentPrometheusConfigOutputWithContext(context.Background())
}

func (i AgentPrometheusConfigArgs) ToAgentPrometheusConfigOutputWithContext(ctx context.Context) AgentPrometheusConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPrometheusConfigOutput)
}

func (i AgentPrometheusConfigArgs) ToAgentPrometheusConfigPtrOutput() AgentPrometheusConfigPtrOutput {
	return i.ToAgentPrometheusConfigPtrOutputWithContext(context.Background())
}

func (i AgentPrometheusConfigArgs) ToAgentPrometheusConfigPtrOutputWithContext(ctx context.Context) AgentPrometheusConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPrometheusConfigOutput).ToAgentPrometheusConfigPtrOutputWithContext(ctx)
}

// AgentPrometheusConfigPtrInput is an input type that accepts AgentPrometheusConfigArgs, AgentPrometheusConfigPtr and AgentPrometheusConfigPtrOutput values.
// You can construct a concrete instance of `AgentPrometheusConfigPtrInput` via:
//
//	        AgentPrometheusConfigArgs{...}
//
//	or:
//
//	        nil
type AgentPrometheusConfigPtrInput interface {
	pulumi.Input

	ToAgentPrometheusConfigPtrOutput() AgentPrometheusConfigPtrOutput
	ToAgentPrometheusConfigPtrOutputWithContext(context.Context) AgentPrometheusConfigPtrOutput
}

type agentPrometheusConfigPtrType AgentPrometheusConfigArgs

func AgentPrometheusConfigPtr(v *AgentPrometheusConfigArgs) AgentPrometheusConfigPtrInput {
	return (*agentPrometheusConfigPtrType)(v)
}

func (*agentPrometheusConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentPrometheusConfig)(nil)).Elem()
}

func (i *agentPrometheusConfigPtrType) ToAgentPrometheusConfigPtrOutput() AgentPrometheusConfigPtrOutput {
	return i.ToAgentPrometheusConfigPtrOutputWithContext(context.Background())
}

func (i *agentPrometheusConfigPtrType) ToAgentPrometheusConfigPtrOutputWithContext(ctx context.Context) AgentPrometheusConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentPrometheusConfigPtrOutput)
}

type AgentPrometheusConfigOutput struct{ *pulumi.OutputState }

func (AgentPrometheusConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentPrometheusConfig)(nil)).Elem()
}

func (o AgentPrometheusConfigOutput) ToAgentPrometheusConfigOutput() AgentPrometheusConfigOutput {
	return o
}

func (o AgentPrometheusConfigOutput) ToAgentPrometheusConfigOutputWithContext(ctx context.Context) AgentPrometheusConfigOutput {
	return o
}

func (o AgentPrometheusConfigOutput) ToAgentPrometheusConfigPtrOutput() AgentPrometheusConfigPtrOutput {
	return o.ToAgentPrometheusConfigPtrOutputWithContext(context.Background())
}

func (o AgentPrometheusConfigOutput) ToAgentPrometheusConfigPtrOutputWithContext(ctx context.Context) AgentPrometheusConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentPrometheusConfig) *AgentPrometheusConfig {
		return &v
	}).(AgentPrometheusConfigPtrOutput)
}

// Base URL to Prometheus server.
func (o AgentPrometheusConfigOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v AgentPrometheusConfig) string { return v.Url }).(pulumi.StringOutput)
}

type AgentPrometheusConfigPtrOutput struct{ *pulumi.OutputState }

func (AgentPrometheusConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentPrometheusConfig)(nil)).Elem()
}

func (o AgentPrometheusConfigPtrOutput) ToAgentPrometheusConfigPtrOutput() AgentPrometheusConfigPtrOutput {
	return o
}

func (o AgentPrometheusConfigPtrOutput) ToAgentPrometheusConfigPtrOutputWithContext(ctx context.Context) AgentPrometheusConfigPtrOutput {
	return o
}

func (o AgentPrometheusConfigPtrOutput) Elem() AgentPrometheusConfigOutput {
	return o.ApplyT(func(v *AgentPrometheusConfig) AgentPrometheusConfig {
		if v != nil {
			return *v
		}
		var ret AgentPrometheusConfig
		return ret
	}).(AgentPrometheusConfigOutput)
}

// Base URL to Prometheus server.
func (o AgentPrometheusConfigPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentPrometheusConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type AgentQueryDelay struct {
	// Must be one of Minute or Second.
	Unit string `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value int `pulumi:"value"`
}

// AgentQueryDelayInput is an input type that accepts AgentQueryDelayArgs and AgentQueryDelayOutput values.
// You can construct a concrete instance of `AgentQueryDelayInput` via:
//
//	AgentQueryDelayArgs{...}
type AgentQueryDelayInput interface {
	pulumi.Input

	ToAgentQueryDelayOutput() AgentQueryDelayOutput
	ToAgentQueryDelayOutputWithContext(context.Context) AgentQueryDelayOutput
}

type AgentQueryDelayArgs struct {
	// Must be one of Minute or Second.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value pulumi.IntInput `pulumi:"value"`
}

func (AgentQueryDelayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentQueryDelay)(nil)).Elem()
}

func (i AgentQueryDelayArgs) ToAgentQueryDelayOutput() AgentQueryDelayOutput {
	return i.ToAgentQueryDelayOutputWithContext(context.Background())
}

func (i AgentQueryDelayArgs) ToAgentQueryDelayOutputWithContext(ctx context.Context) AgentQueryDelayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentQueryDelayOutput)
}

func (i AgentQueryDelayArgs) ToAgentQueryDelayPtrOutput() AgentQueryDelayPtrOutput {
	return i.ToAgentQueryDelayPtrOutputWithContext(context.Background())
}

func (i AgentQueryDelayArgs) ToAgentQueryDelayPtrOutputWithContext(ctx context.Context) AgentQueryDelayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentQueryDelayOutput).ToAgentQueryDelayPtrOutputWithContext(ctx)
}

// AgentQueryDelayPtrInput is an input type that accepts AgentQueryDelayArgs, AgentQueryDelayPtr and AgentQueryDelayPtrOutput values.
// You can construct a concrete instance of `AgentQueryDelayPtrInput` via:
//
//	        AgentQueryDelayArgs{...}
//
//	or:
//
//	        nil
type AgentQueryDelayPtrInput interface {
	pulumi.Input

	ToAgentQueryDelayPtrOutput() AgentQueryDelayPtrOutput
	ToAgentQueryDelayPtrOutputWithContext(context.Context) AgentQueryDelayPtrOutput
}

type agentQueryDelayPtrType AgentQueryDelayArgs

func AgentQueryDelayPtr(v *AgentQueryDelayArgs) AgentQueryDelayPtrInput {
	return (*agentQueryDelayPtrType)(v)
}

func (*agentQueryDelayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentQueryDelay)(nil)).Elem()
}

func (i *agentQueryDelayPtrType) ToAgentQueryDelayPtrOutput() AgentQueryDelayPtrOutput {
	return i.ToAgentQueryDelayPtrOutputWithContext(context.Background())
}

func (i *agentQueryDelayPtrType) ToAgentQueryDelayPtrOutputWithContext(ctx context.Context) AgentQueryDelayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentQueryDelayPtrOutput)
}

type AgentQueryDelayOutput struct{ *pulumi.OutputState }

func (AgentQueryDelayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentQueryDelay)(nil)).Elem()
}

func (o AgentQueryDelayOutput) ToAgentQueryDelayOutput() AgentQueryDelayOutput {
	return o
}

func (o AgentQueryDelayOutput) ToAgentQueryDelayOutputWithContext(ctx context.Context) AgentQueryDelayOutput {
	return o
}

func (o AgentQueryDelayOutput) ToAgentQueryDelayPtrOutput() AgentQueryDelayPtrOutput {
	return o.ToAgentQueryDelayPtrOutputWithContext(context.Background())
}

func (o AgentQueryDelayOutput) ToAgentQueryDelayPtrOutputWithContext(ctx context.Context) AgentQueryDelayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentQueryDelay) *AgentQueryDelay {
		return &v
	}).(AgentQueryDelayPtrOutput)
}

// Must be one of Minute or Second.
func (o AgentQueryDelayOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v AgentQueryDelay) string { return v.Unit }).(pulumi.StringOutput)
}

// Must be an integer greater than or equal to 0.
func (o AgentQueryDelayOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v AgentQueryDelay) int { return v.Value }).(pulumi.IntOutput)
}

type AgentQueryDelayPtrOutput struct{ *pulumi.OutputState }

func (AgentQueryDelayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentQueryDelay)(nil)).Elem()
}

func (o AgentQueryDelayPtrOutput) ToAgentQueryDelayPtrOutput() AgentQueryDelayPtrOutput {
	return o
}

func (o AgentQueryDelayPtrOutput) ToAgentQueryDelayPtrOutputWithContext(ctx context.Context) AgentQueryDelayPtrOutput {
	return o
}

func (o AgentQueryDelayPtrOutput) Elem() AgentQueryDelayOutput {
	return o.ApplyT(func(v *AgentQueryDelay) AgentQueryDelay {
		if v != nil {
			return *v
		}
		var ret AgentQueryDelay
		return ret
	}).(AgentQueryDelayOutput)
}

// Must be one of Minute or Second.
func (o AgentQueryDelayPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentQueryDelay) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// Must be an integer greater than or equal to 0.
func (o AgentQueryDelayPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AgentQueryDelay) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type AgentRedshiftConfig struct {
}

// AgentRedshiftConfigInput is an input type that accepts AgentRedshiftConfigArgs and AgentRedshiftConfigOutput values.
// You can construct a concrete instance of `AgentRedshiftConfigInput` via:
//
//	AgentRedshiftConfigArgs{...}
type AgentRedshiftConfigInput interface {
	pulumi.Input

	ToAgentRedshiftConfigOutput() AgentRedshiftConfigOutput
	ToAgentRedshiftConfigOutputWithContext(context.Context) AgentRedshiftConfigOutput
}

type AgentRedshiftConfigArgs struct {
}

func (AgentRedshiftConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentRedshiftConfig)(nil)).Elem()
}

func (i AgentRedshiftConfigArgs) ToAgentRedshiftConfigOutput() AgentRedshiftConfigOutput {
	return i.ToAgentRedshiftConfigOutputWithContext(context.Background())
}

func (i AgentRedshiftConfigArgs) ToAgentRedshiftConfigOutputWithContext(ctx context.Context) AgentRedshiftConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentRedshiftConfigOutput)
}

func (i AgentRedshiftConfigArgs) ToAgentRedshiftConfigPtrOutput() AgentRedshiftConfigPtrOutput {
	return i.ToAgentRedshiftConfigPtrOutputWithContext(context.Background())
}

func (i AgentRedshiftConfigArgs) ToAgentRedshiftConfigPtrOutputWithContext(ctx context.Context) AgentRedshiftConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentRedshiftConfigOutput).ToAgentRedshiftConfigPtrOutputWithContext(ctx)
}

// AgentRedshiftConfigPtrInput is an input type that accepts AgentRedshiftConfigArgs, AgentRedshiftConfigPtr and AgentRedshiftConfigPtrOutput values.
// You can construct a concrete instance of `AgentRedshiftConfigPtrInput` via:
//
//	        AgentRedshiftConfigArgs{...}
//
//	or:
//
//	        nil
type AgentRedshiftConfigPtrInput interface {
	pulumi.Input

	ToAgentRedshiftConfigPtrOutput() AgentRedshiftConfigPtrOutput
	ToAgentRedshiftConfigPtrOutputWithContext(context.Context) AgentRedshiftConfigPtrOutput
}

type agentRedshiftConfigPtrType AgentRedshiftConfigArgs

func AgentRedshiftConfigPtr(v *AgentRedshiftConfigArgs) AgentRedshiftConfigPtrInput {
	return (*agentRedshiftConfigPtrType)(v)
}

func (*agentRedshiftConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentRedshiftConfig)(nil)).Elem()
}

func (i *agentRedshiftConfigPtrType) ToAgentRedshiftConfigPtrOutput() AgentRedshiftConfigPtrOutput {
	return i.ToAgentRedshiftConfigPtrOutputWithContext(context.Background())
}

func (i *agentRedshiftConfigPtrType) ToAgentRedshiftConfigPtrOutputWithContext(ctx context.Context) AgentRedshiftConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentRedshiftConfigPtrOutput)
}

type AgentRedshiftConfigOutput struct{ *pulumi.OutputState }

func (AgentRedshiftConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentRedshiftConfig)(nil)).Elem()
}

func (o AgentRedshiftConfigOutput) ToAgentRedshiftConfigOutput() AgentRedshiftConfigOutput {
	return o
}

func (o AgentRedshiftConfigOutput) ToAgentRedshiftConfigOutputWithContext(ctx context.Context) AgentRedshiftConfigOutput {
	return o
}

func (o AgentRedshiftConfigOutput) ToAgentRedshiftConfigPtrOutput() AgentRedshiftConfigPtrOutput {
	return o.ToAgentRedshiftConfigPtrOutputWithContext(context.Background())
}

func (o AgentRedshiftConfigOutput) ToAgentRedshiftConfigPtrOutputWithContext(ctx context.Context) AgentRedshiftConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentRedshiftConfig) *AgentRedshiftConfig {
		return &v
	}).(AgentRedshiftConfigPtrOutput)
}

type AgentRedshiftConfigPtrOutput struct{ *pulumi.OutputState }

func (AgentRedshiftConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentRedshiftConfig)(nil)).Elem()
}

func (o AgentRedshiftConfigPtrOutput) ToAgentRedshiftConfigPtrOutput() AgentRedshiftConfigPtrOutput {
	return o
}

func (o AgentRedshiftConfigPtrOutput) ToAgentRedshiftConfigPtrOutputWithContext(ctx context.Context) AgentRedshiftConfigPtrOutput {
	return o
}

func (o AgentRedshiftConfigPtrOutput) Elem() AgentRedshiftConfigOutput {
	return o.ApplyT(func(v *AgentRedshiftConfig) AgentRedshiftConfig {
		if v != nil {
			return *v
		}
		var ret AgentRedshiftConfig
		return ret
	}).(AgentRedshiftConfigOutput)
}

type AgentSplunkConfig struct {
	// Base API URL to the Splunk Search app.
	Url string `pulumi:"url"`
}

// AgentSplunkConfigInput is an input type that accepts AgentSplunkConfigArgs and AgentSplunkConfigOutput values.
// You can construct a concrete instance of `AgentSplunkConfigInput` via:
//
//	AgentSplunkConfigArgs{...}
type AgentSplunkConfigInput interface {
	pulumi.Input

	ToAgentSplunkConfigOutput() AgentSplunkConfigOutput
	ToAgentSplunkConfigOutputWithContext(context.Context) AgentSplunkConfigOutput
}

type AgentSplunkConfigArgs struct {
	// Base API URL to the Splunk Search app.
	Url pulumi.StringInput `pulumi:"url"`
}

func (AgentSplunkConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSplunkConfig)(nil)).Elem()
}

func (i AgentSplunkConfigArgs) ToAgentSplunkConfigOutput() AgentSplunkConfigOutput {
	return i.ToAgentSplunkConfigOutputWithContext(context.Background())
}

func (i AgentSplunkConfigArgs) ToAgentSplunkConfigOutputWithContext(ctx context.Context) AgentSplunkConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSplunkConfigOutput)
}

func (i AgentSplunkConfigArgs) ToAgentSplunkConfigPtrOutput() AgentSplunkConfigPtrOutput {
	return i.ToAgentSplunkConfigPtrOutputWithContext(context.Background())
}

func (i AgentSplunkConfigArgs) ToAgentSplunkConfigPtrOutputWithContext(ctx context.Context) AgentSplunkConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSplunkConfigOutput).ToAgentSplunkConfigPtrOutputWithContext(ctx)
}

// AgentSplunkConfigPtrInput is an input type that accepts AgentSplunkConfigArgs, AgentSplunkConfigPtr and AgentSplunkConfigPtrOutput values.
// You can construct a concrete instance of `AgentSplunkConfigPtrInput` via:
//
//	        AgentSplunkConfigArgs{...}
//
//	or:
//
//	        nil
type AgentSplunkConfigPtrInput interface {
	pulumi.Input

	ToAgentSplunkConfigPtrOutput() AgentSplunkConfigPtrOutput
	ToAgentSplunkConfigPtrOutputWithContext(context.Context) AgentSplunkConfigPtrOutput
}

type agentSplunkConfigPtrType AgentSplunkConfigArgs

func AgentSplunkConfigPtr(v *AgentSplunkConfigArgs) AgentSplunkConfigPtrInput {
	return (*agentSplunkConfigPtrType)(v)
}

func (*agentSplunkConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSplunkConfig)(nil)).Elem()
}

func (i *agentSplunkConfigPtrType) ToAgentSplunkConfigPtrOutput() AgentSplunkConfigPtrOutput {
	return i.ToAgentSplunkConfigPtrOutputWithContext(context.Background())
}

func (i *agentSplunkConfigPtrType) ToAgentSplunkConfigPtrOutputWithContext(ctx context.Context) AgentSplunkConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSplunkConfigPtrOutput)
}

type AgentSplunkConfigOutput struct{ *pulumi.OutputState }

func (AgentSplunkConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSplunkConfig)(nil)).Elem()
}

func (o AgentSplunkConfigOutput) ToAgentSplunkConfigOutput() AgentSplunkConfigOutput {
	return o
}

func (o AgentSplunkConfigOutput) ToAgentSplunkConfigOutputWithContext(ctx context.Context) AgentSplunkConfigOutput {
	return o
}

func (o AgentSplunkConfigOutput) ToAgentSplunkConfigPtrOutput() AgentSplunkConfigPtrOutput {
	return o.ToAgentSplunkConfigPtrOutputWithContext(context.Background())
}

func (o AgentSplunkConfigOutput) ToAgentSplunkConfigPtrOutputWithContext(ctx context.Context) AgentSplunkConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSplunkConfig) *AgentSplunkConfig {
		return &v
	}).(AgentSplunkConfigPtrOutput)
}

// Base API URL to the Splunk Search app.
func (o AgentSplunkConfigOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v AgentSplunkConfig) string { return v.Url }).(pulumi.StringOutput)
}

type AgentSplunkConfigPtrOutput struct{ *pulumi.OutputState }

func (AgentSplunkConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSplunkConfig)(nil)).Elem()
}

func (o AgentSplunkConfigPtrOutput) ToAgentSplunkConfigPtrOutput() AgentSplunkConfigPtrOutput {
	return o
}

func (o AgentSplunkConfigPtrOutput) ToAgentSplunkConfigPtrOutputWithContext(ctx context.Context) AgentSplunkConfigPtrOutput {
	return o
}

func (o AgentSplunkConfigPtrOutput) Elem() AgentSplunkConfigOutput {
	return o.ApplyT(func(v *AgentSplunkConfig) AgentSplunkConfig {
		if v != nil {
			return *v
		}
		var ret AgentSplunkConfig
		return ret
	}).(AgentSplunkConfigOutput)
}

// Base API URL to the Splunk Search app.
func (o AgentSplunkConfigPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSplunkConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type AgentSplunkObservabilityConfig struct {
	// SplunkObservability Realm.
	Realm string `pulumi:"realm"`
}

// AgentSplunkObservabilityConfigInput is an input type that accepts AgentSplunkObservabilityConfigArgs and AgentSplunkObservabilityConfigOutput values.
// You can construct a concrete instance of `AgentSplunkObservabilityConfigInput` via:
//
//	AgentSplunkObservabilityConfigArgs{...}
type AgentSplunkObservabilityConfigInput interface {
	pulumi.Input

	ToAgentSplunkObservabilityConfigOutput() AgentSplunkObservabilityConfigOutput
	ToAgentSplunkObservabilityConfigOutputWithContext(context.Context) AgentSplunkObservabilityConfigOutput
}

type AgentSplunkObservabilityConfigArgs struct {
	// SplunkObservability Realm.
	Realm pulumi.StringInput `pulumi:"realm"`
}

func (AgentSplunkObservabilityConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSplunkObservabilityConfig)(nil)).Elem()
}

func (i AgentSplunkObservabilityConfigArgs) ToAgentSplunkObservabilityConfigOutput() AgentSplunkObservabilityConfigOutput {
	return i.ToAgentSplunkObservabilityConfigOutputWithContext(context.Background())
}

func (i AgentSplunkObservabilityConfigArgs) ToAgentSplunkObservabilityConfigOutputWithContext(ctx context.Context) AgentSplunkObservabilityConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSplunkObservabilityConfigOutput)
}

func (i AgentSplunkObservabilityConfigArgs) ToAgentSplunkObservabilityConfigPtrOutput() AgentSplunkObservabilityConfigPtrOutput {
	return i.ToAgentSplunkObservabilityConfigPtrOutputWithContext(context.Background())
}

func (i AgentSplunkObservabilityConfigArgs) ToAgentSplunkObservabilityConfigPtrOutputWithContext(ctx context.Context) AgentSplunkObservabilityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSplunkObservabilityConfigOutput).ToAgentSplunkObservabilityConfigPtrOutputWithContext(ctx)
}

// AgentSplunkObservabilityConfigPtrInput is an input type that accepts AgentSplunkObservabilityConfigArgs, AgentSplunkObservabilityConfigPtr and AgentSplunkObservabilityConfigPtrOutput values.
// You can construct a concrete instance of `AgentSplunkObservabilityConfigPtrInput` via:
//
//	        AgentSplunkObservabilityConfigArgs{...}
//
//	or:
//
//	        nil
type AgentSplunkObservabilityConfigPtrInput interface {
	pulumi.Input

	ToAgentSplunkObservabilityConfigPtrOutput() AgentSplunkObservabilityConfigPtrOutput
	ToAgentSplunkObservabilityConfigPtrOutputWithContext(context.Context) AgentSplunkObservabilityConfigPtrOutput
}

type agentSplunkObservabilityConfigPtrType AgentSplunkObservabilityConfigArgs

func AgentSplunkObservabilityConfigPtr(v *AgentSplunkObservabilityConfigArgs) AgentSplunkObservabilityConfigPtrInput {
	return (*agentSplunkObservabilityConfigPtrType)(v)
}

func (*agentSplunkObservabilityConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSplunkObservabilityConfig)(nil)).Elem()
}

func (i *agentSplunkObservabilityConfigPtrType) ToAgentSplunkObservabilityConfigPtrOutput() AgentSplunkObservabilityConfigPtrOutput {
	return i.ToAgentSplunkObservabilityConfigPtrOutputWithContext(context.Background())
}

func (i *agentSplunkObservabilityConfigPtrType) ToAgentSplunkObservabilityConfigPtrOutputWithContext(ctx context.Context) AgentSplunkObservabilityConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSplunkObservabilityConfigPtrOutput)
}

type AgentSplunkObservabilityConfigOutput struct{ *pulumi.OutputState }

func (AgentSplunkObservabilityConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSplunkObservabilityConfig)(nil)).Elem()
}

func (o AgentSplunkObservabilityConfigOutput) ToAgentSplunkObservabilityConfigOutput() AgentSplunkObservabilityConfigOutput {
	return o
}

func (o AgentSplunkObservabilityConfigOutput) ToAgentSplunkObservabilityConfigOutputWithContext(ctx context.Context) AgentSplunkObservabilityConfigOutput {
	return o
}

func (o AgentSplunkObservabilityConfigOutput) ToAgentSplunkObservabilityConfigPtrOutput() AgentSplunkObservabilityConfigPtrOutput {
	return o.ToAgentSplunkObservabilityConfigPtrOutputWithContext(context.Background())
}

func (o AgentSplunkObservabilityConfigOutput) ToAgentSplunkObservabilityConfigPtrOutputWithContext(ctx context.Context) AgentSplunkObservabilityConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSplunkObservabilityConfig) *AgentSplunkObservabilityConfig {
		return &v
	}).(AgentSplunkObservabilityConfigPtrOutput)
}

// SplunkObservability Realm.
func (o AgentSplunkObservabilityConfigOutput) Realm() pulumi.StringOutput {
	return o.ApplyT(func(v AgentSplunkObservabilityConfig) string { return v.Realm }).(pulumi.StringOutput)
}

type AgentSplunkObservabilityConfigPtrOutput struct{ *pulumi.OutputState }

func (AgentSplunkObservabilityConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSplunkObservabilityConfig)(nil)).Elem()
}

func (o AgentSplunkObservabilityConfigPtrOutput) ToAgentSplunkObservabilityConfigPtrOutput() AgentSplunkObservabilityConfigPtrOutput {
	return o
}

func (o AgentSplunkObservabilityConfigPtrOutput) ToAgentSplunkObservabilityConfigPtrOutputWithContext(ctx context.Context) AgentSplunkObservabilityConfigPtrOutput {
	return o
}

func (o AgentSplunkObservabilityConfigPtrOutput) Elem() AgentSplunkObservabilityConfigOutput {
	return o.ApplyT(func(v *AgentSplunkObservabilityConfig) AgentSplunkObservabilityConfig {
		if v != nil {
			return *v
		}
		var ret AgentSplunkObservabilityConfig
		return ret
	}).(AgentSplunkObservabilityConfigOutput)
}

// SplunkObservability Realm.
func (o AgentSplunkObservabilityConfigPtrOutput) Realm() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSplunkObservabilityConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Realm
	}).(pulumi.StringPtrOutput)
}

type AgentSumologicConfig struct {
	// Sumo Logic API URL.
	Url string `pulumi:"url"`
}

// AgentSumologicConfigInput is an input type that accepts AgentSumologicConfigArgs and AgentSumologicConfigOutput values.
// You can construct a concrete instance of `AgentSumologicConfigInput` via:
//
//	AgentSumologicConfigArgs{...}
type AgentSumologicConfigInput interface {
	pulumi.Input

	ToAgentSumologicConfigOutput() AgentSumologicConfigOutput
	ToAgentSumologicConfigOutputWithContext(context.Context) AgentSumologicConfigOutput
}

type AgentSumologicConfigArgs struct {
	// Sumo Logic API URL.
	Url pulumi.StringInput `pulumi:"url"`
}

func (AgentSumologicConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSumologicConfig)(nil)).Elem()
}

func (i AgentSumologicConfigArgs) ToAgentSumologicConfigOutput() AgentSumologicConfigOutput {
	return i.ToAgentSumologicConfigOutputWithContext(context.Background())
}

func (i AgentSumologicConfigArgs) ToAgentSumologicConfigOutputWithContext(ctx context.Context) AgentSumologicConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSumologicConfigOutput)
}

func (i AgentSumologicConfigArgs) ToAgentSumologicConfigPtrOutput() AgentSumologicConfigPtrOutput {
	return i.ToAgentSumologicConfigPtrOutputWithContext(context.Background())
}

func (i AgentSumologicConfigArgs) ToAgentSumologicConfigPtrOutputWithContext(ctx context.Context) AgentSumologicConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSumologicConfigOutput).ToAgentSumologicConfigPtrOutputWithContext(ctx)
}

// AgentSumologicConfigPtrInput is an input type that accepts AgentSumologicConfigArgs, AgentSumologicConfigPtr and AgentSumologicConfigPtrOutput values.
// You can construct a concrete instance of `AgentSumologicConfigPtrInput` via:
//
//	        AgentSumologicConfigArgs{...}
//
//	or:
//
//	        nil
type AgentSumologicConfigPtrInput interface {
	pulumi.Input

	ToAgentSumologicConfigPtrOutput() AgentSumologicConfigPtrOutput
	ToAgentSumologicConfigPtrOutputWithContext(context.Context) AgentSumologicConfigPtrOutput
}

type agentSumologicConfigPtrType AgentSumologicConfigArgs

func AgentSumologicConfigPtr(v *AgentSumologicConfigArgs) AgentSumologicConfigPtrInput {
	return (*agentSumologicConfigPtrType)(v)
}

func (*agentSumologicConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSumologicConfig)(nil)).Elem()
}

func (i *agentSumologicConfigPtrType) ToAgentSumologicConfigPtrOutput() AgentSumologicConfigPtrOutput {
	return i.ToAgentSumologicConfigPtrOutputWithContext(context.Background())
}

func (i *agentSumologicConfigPtrType) ToAgentSumologicConfigPtrOutputWithContext(ctx context.Context) AgentSumologicConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentSumologicConfigPtrOutput)
}

type AgentSumologicConfigOutput struct{ *pulumi.OutputState }

func (AgentSumologicConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentSumologicConfig)(nil)).Elem()
}

func (o AgentSumologicConfigOutput) ToAgentSumologicConfigOutput() AgentSumologicConfigOutput {
	return o
}

func (o AgentSumologicConfigOutput) ToAgentSumologicConfigOutputWithContext(ctx context.Context) AgentSumologicConfigOutput {
	return o
}

func (o AgentSumologicConfigOutput) ToAgentSumologicConfigPtrOutput() AgentSumologicConfigPtrOutput {
	return o.ToAgentSumologicConfigPtrOutputWithContext(context.Background())
}

func (o AgentSumologicConfigOutput) ToAgentSumologicConfigPtrOutputWithContext(ctx context.Context) AgentSumologicConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentSumologicConfig) *AgentSumologicConfig {
		return &v
	}).(AgentSumologicConfigPtrOutput)
}

// Sumo Logic API URL.
func (o AgentSumologicConfigOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v AgentSumologicConfig) string { return v.Url }).(pulumi.StringOutput)
}

type AgentSumologicConfigPtrOutput struct{ *pulumi.OutputState }

func (AgentSumologicConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentSumologicConfig)(nil)).Elem()
}

func (o AgentSumologicConfigPtrOutput) ToAgentSumologicConfigPtrOutput() AgentSumologicConfigPtrOutput {
	return o
}

func (o AgentSumologicConfigPtrOutput) ToAgentSumologicConfigPtrOutputWithContext(ctx context.Context) AgentSumologicConfigPtrOutput {
	return o
}

func (o AgentSumologicConfigPtrOutput) Elem() AgentSumologicConfigOutput {
	return o.ApplyT(func(v *AgentSumologicConfig) AgentSumologicConfig {
		if v != nil {
			return *v
		}
		var ret AgentSumologicConfig
		return ret
	}).(AgentSumologicConfigOutput)
}

// Sumo Logic API URL.
func (o AgentSumologicConfigPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AgentSumologicConfig) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type AgentThousandeyesConfig struct {
}

// AgentThousandeyesConfigInput is an input type that accepts AgentThousandeyesConfigArgs and AgentThousandeyesConfigOutput values.
// You can construct a concrete instance of `AgentThousandeyesConfigInput` via:
//
//	AgentThousandeyesConfigArgs{...}
type AgentThousandeyesConfigInput interface {
	pulumi.Input

	ToAgentThousandeyesConfigOutput() AgentThousandeyesConfigOutput
	ToAgentThousandeyesConfigOutputWithContext(context.Context) AgentThousandeyesConfigOutput
}

type AgentThousandeyesConfigArgs struct {
}

func (AgentThousandeyesConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentThousandeyesConfig)(nil)).Elem()
}

func (i AgentThousandeyesConfigArgs) ToAgentThousandeyesConfigOutput() AgentThousandeyesConfigOutput {
	return i.ToAgentThousandeyesConfigOutputWithContext(context.Background())
}

func (i AgentThousandeyesConfigArgs) ToAgentThousandeyesConfigOutputWithContext(ctx context.Context) AgentThousandeyesConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentThousandeyesConfigOutput)
}

func (i AgentThousandeyesConfigArgs) ToAgentThousandeyesConfigPtrOutput() AgentThousandeyesConfigPtrOutput {
	return i.ToAgentThousandeyesConfigPtrOutputWithContext(context.Background())
}

func (i AgentThousandeyesConfigArgs) ToAgentThousandeyesConfigPtrOutputWithContext(ctx context.Context) AgentThousandeyesConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentThousandeyesConfigOutput).ToAgentThousandeyesConfigPtrOutputWithContext(ctx)
}

// AgentThousandeyesConfigPtrInput is an input type that accepts AgentThousandeyesConfigArgs, AgentThousandeyesConfigPtr and AgentThousandeyesConfigPtrOutput values.
// You can construct a concrete instance of `AgentThousandeyesConfigPtrInput` via:
//
//	        AgentThousandeyesConfigArgs{...}
//
//	or:
//
//	        nil
type AgentThousandeyesConfigPtrInput interface {
	pulumi.Input

	ToAgentThousandeyesConfigPtrOutput() AgentThousandeyesConfigPtrOutput
	ToAgentThousandeyesConfigPtrOutputWithContext(context.Context) AgentThousandeyesConfigPtrOutput
}

type agentThousandeyesConfigPtrType AgentThousandeyesConfigArgs

func AgentThousandeyesConfigPtr(v *AgentThousandeyesConfigArgs) AgentThousandeyesConfigPtrInput {
	return (*agentThousandeyesConfigPtrType)(v)
}

func (*agentThousandeyesConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentThousandeyesConfig)(nil)).Elem()
}

func (i *agentThousandeyesConfigPtrType) ToAgentThousandeyesConfigPtrOutput() AgentThousandeyesConfigPtrOutput {
	return i.ToAgentThousandeyesConfigPtrOutputWithContext(context.Background())
}

func (i *agentThousandeyesConfigPtrType) ToAgentThousandeyesConfigPtrOutputWithContext(ctx context.Context) AgentThousandeyesConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AgentThousandeyesConfigPtrOutput)
}

type AgentThousandeyesConfigOutput struct{ *pulumi.OutputState }

func (AgentThousandeyesConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AgentThousandeyesConfig)(nil)).Elem()
}

func (o AgentThousandeyesConfigOutput) ToAgentThousandeyesConfigOutput() AgentThousandeyesConfigOutput {
	return o
}

func (o AgentThousandeyesConfigOutput) ToAgentThousandeyesConfigOutputWithContext(ctx context.Context) AgentThousandeyesConfigOutput {
	return o
}

func (o AgentThousandeyesConfigOutput) ToAgentThousandeyesConfigPtrOutput() AgentThousandeyesConfigPtrOutput {
	return o.ToAgentThousandeyesConfigPtrOutputWithContext(context.Background())
}

func (o AgentThousandeyesConfigOutput) ToAgentThousandeyesConfigPtrOutputWithContext(ctx context.Context) AgentThousandeyesConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AgentThousandeyesConfig) *AgentThousandeyesConfig {
		return &v
	}).(AgentThousandeyesConfigPtrOutput)
}

type AgentThousandeyesConfigPtrOutput struct{ *pulumi.OutputState }

func (AgentThousandeyesConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AgentThousandeyesConfig)(nil)).Elem()
}

func (o AgentThousandeyesConfigPtrOutput) ToAgentThousandeyesConfigPtrOutput() AgentThousandeyesConfigPtrOutput {
	return o
}

func (o AgentThousandeyesConfigPtrOutput) ToAgentThousandeyesConfigPtrOutputWithContext(ctx context.Context) AgentThousandeyesConfigPtrOutput {
	return o
}

func (o AgentThousandeyesConfigPtrOutput) Elem() AgentThousandeyesConfigOutput {
	return o.ApplyT(func(v *AgentThousandeyesConfig) AgentThousandeyesConfig {
		if v != nil {
			return *v
		}
		var ret AgentThousandeyesConfig
		return ret
	}).(AgentThousandeyesConfigOutput)
}

type AlertMethodPagerdutySendResolution struct {
	// A message that will be attached to your 'all clear' notification.
	Message *string `pulumi:"message"`
}

// AlertMethodPagerdutySendResolutionInput is an input type that accepts AlertMethodPagerdutySendResolutionArgs and AlertMethodPagerdutySendResolutionOutput values.
// You can construct a concrete instance of `AlertMethodPagerdutySendResolutionInput` via:
//
//	AlertMethodPagerdutySendResolutionArgs{...}
type AlertMethodPagerdutySendResolutionInput interface {
	pulumi.Input

	ToAlertMethodPagerdutySendResolutionOutput() AlertMethodPagerdutySendResolutionOutput
	ToAlertMethodPagerdutySendResolutionOutputWithContext(context.Context) AlertMethodPagerdutySendResolutionOutput
}

type AlertMethodPagerdutySendResolutionArgs struct {
	// A message that will be attached to your 'all clear' notification.
	Message pulumi.StringPtrInput `pulumi:"message"`
}

func (AlertMethodPagerdutySendResolutionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertMethodPagerdutySendResolution)(nil)).Elem()
}

func (i AlertMethodPagerdutySendResolutionArgs) ToAlertMethodPagerdutySendResolutionOutput() AlertMethodPagerdutySendResolutionOutput {
	return i.ToAlertMethodPagerdutySendResolutionOutputWithContext(context.Background())
}

func (i AlertMethodPagerdutySendResolutionArgs) ToAlertMethodPagerdutySendResolutionOutputWithContext(ctx context.Context) AlertMethodPagerdutySendResolutionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertMethodPagerdutySendResolutionOutput)
}

func (i AlertMethodPagerdutySendResolutionArgs) ToAlertMethodPagerdutySendResolutionPtrOutput() AlertMethodPagerdutySendResolutionPtrOutput {
	return i.ToAlertMethodPagerdutySendResolutionPtrOutputWithContext(context.Background())
}

func (i AlertMethodPagerdutySendResolutionArgs) ToAlertMethodPagerdutySendResolutionPtrOutputWithContext(ctx context.Context) AlertMethodPagerdutySendResolutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertMethodPagerdutySendResolutionOutput).ToAlertMethodPagerdutySendResolutionPtrOutputWithContext(ctx)
}

// AlertMethodPagerdutySendResolutionPtrInput is an input type that accepts AlertMethodPagerdutySendResolutionArgs, AlertMethodPagerdutySendResolutionPtr and AlertMethodPagerdutySendResolutionPtrOutput values.
// You can construct a concrete instance of `AlertMethodPagerdutySendResolutionPtrInput` via:
//
//	        AlertMethodPagerdutySendResolutionArgs{...}
//
//	or:
//
//	        nil
type AlertMethodPagerdutySendResolutionPtrInput interface {
	pulumi.Input

	ToAlertMethodPagerdutySendResolutionPtrOutput() AlertMethodPagerdutySendResolutionPtrOutput
	ToAlertMethodPagerdutySendResolutionPtrOutputWithContext(context.Context) AlertMethodPagerdutySendResolutionPtrOutput
}

type alertMethodPagerdutySendResolutionPtrType AlertMethodPagerdutySendResolutionArgs

func AlertMethodPagerdutySendResolutionPtr(v *AlertMethodPagerdutySendResolutionArgs) AlertMethodPagerdutySendResolutionPtrInput {
	return (*alertMethodPagerdutySendResolutionPtrType)(v)
}

func (*alertMethodPagerdutySendResolutionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertMethodPagerdutySendResolution)(nil)).Elem()
}

func (i *alertMethodPagerdutySendResolutionPtrType) ToAlertMethodPagerdutySendResolutionPtrOutput() AlertMethodPagerdutySendResolutionPtrOutput {
	return i.ToAlertMethodPagerdutySendResolutionPtrOutputWithContext(context.Background())
}

func (i *alertMethodPagerdutySendResolutionPtrType) ToAlertMethodPagerdutySendResolutionPtrOutputWithContext(ctx context.Context) AlertMethodPagerdutySendResolutionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertMethodPagerdutySendResolutionPtrOutput)
}

type AlertMethodPagerdutySendResolutionOutput struct{ *pulumi.OutputState }

func (AlertMethodPagerdutySendResolutionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertMethodPagerdutySendResolution)(nil)).Elem()
}

func (o AlertMethodPagerdutySendResolutionOutput) ToAlertMethodPagerdutySendResolutionOutput() AlertMethodPagerdutySendResolutionOutput {
	return o
}

func (o AlertMethodPagerdutySendResolutionOutput) ToAlertMethodPagerdutySendResolutionOutputWithContext(ctx context.Context) AlertMethodPagerdutySendResolutionOutput {
	return o
}

func (o AlertMethodPagerdutySendResolutionOutput) ToAlertMethodPagerdutySendResolutionPtrOutput() AlertMethodPagerdutySendResolutionPtrOutput {
	return o.ToAlertMethodPagerdutySendResolutionPtrOutputWithContext(context.Background())
}

func (o AlertMethodPagerdutySendResolutionOutput) ToAlertMethodPagerdutySendResolutionPtrOutputWithContext(ctx context.Context) AlertMethodPagerdutySendResolutionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AlertMethodPagerdutySendResolution) *AlertMethodPagerdutySendResolution {
		return &v
	}).(AlertMethodPagerdutySendResolutionPtrOutput)
}

// A message that will be attached to your 'all clear' notification.
func (o AlertMethodPagerdutySendResolutionOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertMethodPagerdutySendResolution) *string { return v.Message }).(pulumi.StringPtrOutput)
}

type AlertMethodPagerdutySendResolutionPtrOutput struct{ *pulumi.OutputState }

func (AlertMethodPagerdutySendResolutionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertMethodPagerdutySendResolution)(nil)).Elem()
}

func (o AlertMethodPagerdutySendResolutionPtrOutput) ToAlertMethodPagerdutySendResolutionPtrOutput() AlertMethodPagerdutySendResolutionPtrOutput {
	return o
}

func (o AlertMethodPagerdutySendResolutionPtrOutput) ToAlertMethodPagerdutySendResolutionPtrOutputWithContext(ctx context.Context) AlertMethodPagerdutySendResolutionPtrOutput {
	return o
}

func (o AlertMethodPagerdutySendResolutionPtrOutput) Elem() AlertMethodPagerdutySendResolutionOutput {
	return o.ApplyT(func(v *AlertMethodPagerdutySendResolution) AlertMethodPagerdutySendResolution {
		if v != nil {
			return *v
		}
		var ret AlertMethodPagerdutySendResolution
		return ret
	}).(AlertMethodPagerdutySendResolutionOutput)
}

// A message that will be attached to your 'all clear' notification.
func (o AlertMethodPagerdutySendResolutionPtrOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertMethodPagerdutySendResolution) *string {
		if v == nil {
			return nil
		}
		return v.Message
	}).(pulumi.StringPtrOutput)
}

type AlertPolicyAlertMethod struct {
	// The name of the previously defined alert method.
	Name string `pulumi:"name"`
	// Project name the Alert Method is in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names). If not defined, Nobl9 returns a default value for this field.
	Project *string `pulumi:"project"`
}

// AlertPolicyAlertMethodInput is an input type that accepts AlertPolicyAlertMethodArgs and AlertPolicyAlertMethodOutput values.
// You can construct a concrete instance of `AlertPolicyAlertMethodInput` via:
//
//	AlertPolicyAlertMethodArgs{...}
type AlertPolicyAlertMethodInput interface {
	pulumi.Input

	ToAlertPolicyAlertMethodOutput() AlertPolicyAlertMethodOutput
	ToAlertPolicyAlertMethodOutputWithContext(context.Context) AlertPolicyAlertMethodOutput
}

type AlertPolicyAlertMethodArgs struct {
	// The name of the previously defined alert method.
	Name pulumi.StringInput `pulumi:"name"`
	// Project name the Alert Method is in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names). If not defined, Nobl9 returns a default value for this field.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (AlertPolicyAlertMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertPolicyAlertMethod)(nil)).Elem()
}

func (i AlertPolicyAlertMethodArgs) ToAlertPolicyAlertMethodOutput() AlertPolicyAlertMethodOutput {
	return i.ToAlertPolicyAlertMethodOutputWithContext(context.Background())
}

func (i AlertPolicyAlertMethodArgs) ToAlertPolicyAlertMethodOutputWithContext(ctx context.Context) AlertPolicyAlertMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertPolicyAlertMethodOutput)
}

// AlertPolicyAlertMethodArrayInput is an input type that accepts AlertPolicyAlertMethodArray and AlertPolicyAlertMethodArrayOutput values.
// You can construct a concrete instance of `AlertPolicyAlertMethodArrayInput` via:
//
//	AlertPolicyAlertMethodArray{ AlertPolicyAlertMethodArgs{...} }
type AlertPolicyAlertMethodArrayInput interface {
	pulumi.Input

	ToAlertPolicyAlertMethodArrayOutput() AlertPolicyAlertMethodArrayOutput
	ToAlertPolicyAlertMethodArrayOutputWithContext(context.Context) AlertPolicyAlertMethodArrayOutput
}

type AlertPolicyAlertMethodArray []AlertPolicyAlertMethodInput

func (AlertPolicyAlertMethodArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertPolicyAlertMethod)(nil)).Elem()
}

func (i AlertPolicyAlertMethodArray) ToAlertPolicyAlertMethodArrayOutput() AlertPolicyAlertMethodArrayOutput {
	return i.ToAlertPolicyAlertMethodArrayOutputWithContext(context.Background())
}

func (i AlertPolicyAlertMethodArray) ToAlertPolicyAlertMethodArrayOutputWithContext(ctx context.Context) AlertPolicyAlertMethodArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertPolicyAlertMethodArrayOutput)
}

type AlertPolicyAlertMethodOutput struct{ *pulumi.OutputState }

func (AlertPolicyAlertMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertPolicyAlertMethod)(nil)).Elem()
}

func (o AlertPolicyAlertMethodOutput) ToAlertPolicyAlertMethodOutput() AlertPolicyAlertMethodOutput {
	return o
}

func (o AlertPolicyAlertMethodOutput) ToAlertPolicyAlertMethodOutputWithContext(ctx context.Context) AlertPolicyAlertMethodOutput {
	return o
}

// The name of the previously defined alert method.
func (o AlertPolicyAlertMethodOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AlertPolicyAlertMethod) string { return v.Name }).(pulumi.StringOutput)
}

// Project name the Alert Method is in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names). If not defined, Nobl9 returns a default value for this field.
func (o AlertPolicyAlertMethodOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertPolicyAlertMethod) *string { return v.Project }).(pulumi.StringPtrOutput)
}

type AlertPolicyAlertMethodArrayOutput struct{ *pulumi.OutputState }

func (AlertPolicyAlertMethodArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertPolicyAlertMethod)(nil)).Elem()
}

func (o AlertPolicyAlertMethodArrayOutput) ToAlertPolicyAlertMethodArrayOutput() AlertPolicyAlertMethodArrayOutput {
	return o
}

func (o AlertPolicyAlertMethodArrayOutput) ToAlertPolicyAlertMethodArrayOutputWithContext(ctx context.Context) AlertPolicyAlertMethodArrayOutput {
	return o
}

func (o AlertPolicyAlertMethodArrayOutput) Index(i pulumi.IntInput) AlertPolicyAlertMethodOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertPolicyAlertMethod {
		return vs[0].([]AlertPolicyAlertMethod)[vs[1].(int)]
	}).(AlertPolicyAlertMethodOutput)
}

type AlertPolicyCondition struct {
	// Duration over which the burn rate is evaluated.
	AlertingWindow *string `pulumi:"alertingWindow"`
	// Indicates how long a given condition needs to be valid to mark the condition as true.
	LastsFor *string `pulumi:"lastsFor"`
	// One of `timeToBurnBudget` | `timeToBurnEntireBudget` | `burnRate` | `burnedBudget`.
	Measurement string `pulumi:"measurement"`
	// For `averageBurnRate`, it indicates how fast the error budget is burning. For `burnedBudget`, it tells how much error budget is already burned.
	Value *float64 `pulumi:"value"`
	// Used with `timeToBurnBudget` or `timeToBurnEntireBudget`, indicates when the budget would be exhausted. The expected value is a string in time duration string format.
	ValueString *string `pulumi:"valueString"`
}

// AlertPolicyConditionInput is an input type that accepts AlertPolicyConditionArgs and AlertPolicyConditionOutput values.
// You can construct a concrete instance of `AlertPolicyConditionInput` via:
//
//	AlertPolicyConditionArgs{...}
type AlertPolicyConditionInput interface {
	pulumi.Input

	ToAlertPolicyConditionOutput() AlertPolicyConditionOutput
	ToAlertPolicyConditionOutputWithContext(context.Context) AlertPolicyConditionOutput
}

type AlertPolicyConditionArgs struct {
	// Duration over which the burn rate is evaluated.
	AlertingWindow pulumi.StringPtrInput `pulumi:"alertingWindow"`
	// Indicates how long a given condition needs to be valid to mark the condition as true.
	LastsFor pulumi.StringPtrInput `pulumi:"lastsFor"`
	// One of `timeToBurnBudget` | `timeToBurnEntireBudget` | `burnRate` | `burnedBudget`.
	Measurement pulumi.StringInput `pulumi:"measurement"`
	// For `averageBurnRate`, it indicates how fast the error budget is burning. For `burnedBudget`, it tells how much error budget is already burned.
	Value pulumi.Float64PtrInput `pulumi:"value"`
	// Used with `timeToBurnBudget` or `timeToBurnEntireBudget`, indicates when the budget would be exhausted. The expected value is a string in time duration string format.
	ValueString pulumi.StringPtrInput `pulumi:"valueString"`
}

func (AlertPolicyConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertPolicyCondition)(nil)).Elem()
}

func (i AlertPolicyConditionArgs) ToAlertPolicyConditionOutput() AlertPolicyConditionOutput {
	return i.ToAlertPolicyConditionOutputWithContext(context.Background())
}

func (i AlertPolicyConditionArgs) ToAlertPolicyConditionOutputWithContext(ctx context.Context) AlertPolicyConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertPolicyConditionOutput)
}

// AlertPolicyConditionArrayInput is an input type that accepts AlertPolicyConditionArray and AlertPolicyConditionArrayOutput values.
// You can construct a concrete instance of `AlertPolicyConditionArrayInput` via:
//
//	AlertPolicyConditionArray{ AlertPolicyConditionArgs{...} }
type AlertPolicyConditionArrayInput interface {
	pulumi.Input

	ToAlertPolicyConditionArrayOutput() AlertPolicyConditionArrayOutput
	ToAlertPolicyConditionArrayOutputWithContext(context.Context) AlertPolicyConditionArrayOutput
}

type AlertPolicyConditionArray []AlertPolicyConditionInput

func (AlertPolicyConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertPolicyCondition)(nil)).Elem()
}

func (i AlertPolicyConditionArray) ToAlertPolicyConditionArrayOutput() AlertPolicyConditionArrayOutput {
	return i.ToAlertPolicyConditionArrayOutputWithContext(context.Background())
}

func (i AlertPolicyConditionArray) ToAlertPolicyConditionArrayOutputWithContext(ctx context.Context) AlertPolicyConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertPolicyConditionArrayOutput)
}

type AlertPolicyConditionOutput struct{ *pulumi.OutputState }

func (AlertPolicyConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AlertPolicyCondition)(nil)).Elem()
}

func (o AlertPolicyConditionOutput) ToAlertPolicyConditionOutput() AlertPolicyConditionOutput {
	return o
}

func (o AlertPolicyConditionOutput) ToAlertPolicyConditionOutputWithContext(ctx context.Context) AlertPolicyConditionOutput {
	return o
}

// Duration over which the burn rate is evaluated.
func (o AlertPolicyConditionOutput) AlertingWindow() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertPolicyCondition) *string { return v.AlertingWindow }).(pulumi.StringPtrOutput)
}

// Indicates how long a given condition needs to be valid to mark the condition as true.
func (o AlertPolicyConditionOutput) LastsFor() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertPolicyCondition) *string { return v.LastsFor }).(pulumi.StringPtrOutput)
}

// One of `timeToBurnBudget` | `timeToBurnEntireBudget` | `burnRate` | `burnedBudget`.
func (o AlertPolicyConditionOutput) Measurement() pulumi.StringOutput {
	return o.ApplyT(func(v AlertPolicyCondition) string { return v.Measurement }).(pulumi.StringOutput)
}

// For `averageBurnRate`, it indicates how fast the error budget is burning. For `burnedBudget`, it tells how much error budget is already burned.
func (o AlertPolicyConditionOutput) Value() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v AlertPolicyCondition) *float64 { return v.Value }).(pulumi.Float64PtrOutput)
}

// Used with `timeToBurnBudget` or `timeToBurnEntireBudget`, indicates when the budget would be exhausted. The expected value is a string in time duration string format.
func (o AlertPolicyConditionOutput) ValueString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AlertPolicyCondition) *string { return v.ValueString }).(pulumi.StringPtrOutput)
}

type AlertPolicyConditionArrayOutput struct{ *pulumi.OutputState }

func (AlertPolicyConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AlertPolicyCondition)(nil)).Elem()
}

func (o AlertPolicyConditionArrayOutput) ToAlertPolicyConditionArrayOutput() AlertPolicyConditionArrayOutput {
	return o
}

func (o AlertPolicyConditionArrayOutput) ToAlertPolicyConditionArrayOutputWithContext(ctx context.Context) AlertPolicyConditionArrayOutput {
	return o
}

func (o AlertPolicyConditionArrayOutput) Index(i pulumi.IntInput) AlertPolicyConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AlertPolicyCondition {
		return vs[0].([]AlertPolicyCondition)[vs[1].(int)]
	}).(AlertPolicyConditionOutput)
}

type DirectAppdynamicsHistoricalDataRetrieval struct {
	// Used by default for any SLOs connected to this data source.
	DefaultDurations []DirectAppdynamicsHistoricalDataRetrievalDefaultDuration `pulumi:"defaultDurations"`
	// Defines the maximum period for which data can be retrieved.
	MaxDurations []DirectAppdynamicsHistoricalDataRetrievalMaxDuration `pulumi:"maxDurations"`
}

// DirectAppdynamicsHistoricalDataRetrievalInput is an input type that accepts DirectAppdynamicsHistoricalDataRetrievalArgs and DirectAppdynamicsHistoricalDataRetrievalOutput values.
// You can construct a concrete instance of `DirectAppdynamicsHistoricalDataRetrievalInput` via:
//
//	DirectAppdynamicsHistoricalDataRetrievalArgs{...}
type DirectAppdynamicsHistoricalDataRetrievalInput interface {
	pulumi.Input

	ToDirectAppdynamicsHistoricalDataRetrievalOutput() DirectAppdynamicsHistoricalDataRetrievalOutput
	ToDirectAppdynamicsHistoricalDataRetrievalOutputWithContext(context.Context) DirectAppdynamicsHistoricalDataRetrievalOutput
}

type DirectAppdynamicsHistoricalDataRetrievalArgs struct {
	// Used by default for any SLOs connected to this data source.
	DefaultDurations DirectAppdynamicsHistoricalDataRetrievalDefaultDurationArrayInput `pulumi:"defaultDurations"`
	// Defines the maximum period for which data can be retrieved.
	MaxDurations DirectAppdynamicsHistoricalDataRetrievalMaxDurationArrayInput `pulumi:"maxDurations"`
}

func (DirectAppdynamicsHistoricalDataRetrievalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectAppdynamicsHistoricalDataRetrieval)(nil)).Elem()
}

func (i DirectAppdynamicsHistoricalDataRetrievalArgs) ToDirectAppdynamicsHistoricalDataRetrievalOutput() DirectAppdynamicsHistoricalDataRetrievalOutput {
	return i.ToDirectAppdynamicsHistoricalDataRetrievalOutputWithContext(context.Background())
}

func (i DirectAppdynamicsHistoricalDataRetrievalArgs) ToDirectAppdynamicsHistoricalDataRetrievalOutputWithContext(ctx context.Context) DirectAppdynamicsHistoricalDataRetrievalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectAppdynamicsHistoricalDataRetrievalOutput)
}

func (i DirectAppdynamicsHistoricalDataRetrievalArgs) ToDirectAppdynamicsHistoricalDataRetrievalPtrOutput() DirectAppdynamicsHistoricalDataRetrievalPtrOutput {
	return i.ToDirectAppdynamicsHistoricalDataRetrievalPtrOutputWithContext(context.Background())
}

func (i DirectAppdynamicsHistoricalDataRetrievalArgs) ToDirectAppdynamicsHistoricalDataRetrievalPtrOutputWithContext(ctx context.Context) DirectAppdynamicsHistoricalDataRetrievalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectAppdynamicsHistoricalDataRetrievalOutput).ToDirectAppdynamicsHistoricalDataRetrievalPtrOutputWithContext(ctx)
}

// DirectAppdynamicsHistoricalDataRetrievalPtrInput is an input type that accepts DirectAppdynamicsHistoricalDataRetrievalArgs, DirectAppdynamicsHistoricalDataRetrievalPtr and DirectAppdynamicsHistoricalDataRetrievalPtrOutput values.
// You can construct a concrete instance of `DirectAppdynamicsHistoricalDataRetrievalPtrInput` via:
//
//	        DirectAppdynamicsHistoricalDataRetrievalArgs{...}
//
//	or:
//
//	        nil
type DirectAppdynamicsHistoricalDataRetrievalPtrInput interface {
	pulumi.Input

	ToDirectAppdynamicsHistoricalDataRetrievalPtrOutput() DirectAppdynamicsHistoricalDataRetrievalPtrOutput
	ToDirectAppdynamicsHistoricalDataRetrievalPtrOutputWithContext(context.Context) DirectAppdynamicsHistoricalDataRetrievalPtrOutput
}

type directAppdynamicsHistoricalDataRetrievalPtrType DirectAppdynamicsHistoricalDataRetrievalArgs

func DirectAppdynamicsHistoricalDataRetrievalPtr(v *DirectAppdynamicsHistoricalDataRetrievalArgs) DirectAppdynamicsHistoricalDataRetrievalPtrInput {
	return (*directAppdynamicsHistoricalDataRetrievalPtrType)(v)
}

func (*directAppdynamicsHistoricalDataRetrievalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectAppdynamicsHistoricalDataRetrieval)(nil)).Elem()
}

func (i *directAppdynamicsHistoricalDataRetrievalPtrType) ToDirectAppdynamicsHistoricalDataRetrievalPtrOutput() DirectAppdynamicsHistoricalDataRetrievalPtrOutput {
	return i.ToDirectAppdynamicsHistoricalDataRetrievalPtrOutputWithContext(context.Background())
}

func (i *directAppdynamicsHistoricalDataRetrievalPtrType) ToDirectAppdynamicsHistoricalDataRetrievalPtrOutputWithContext(ctx context.Context) DirectAppdynamicsHistoricalDataRetrievalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectAppdynamicsHistoricalDataRetrievalPtrOutput)
}

type DirectAppdynamicsHistoricalDataRetrievalOutput struct{ *pulumi.OutputState }

func (DirectAppdynamicsHistoricalDataRetrievalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectAppdynamicsHistoricalDataRetrieval)(nil)).Elem()
}

func (o DirectAppdynamicsHistoricalDataRetrievalOutput) ToDirectAppdynamicsHistoricalDataRetrievalOutput() DirectAppdynamicsHistoricalDataRetrievalOutput {
	return o
}

func (o DirectAppdynamicsHistoricalDataRetrievalOutput) ToDirectAppdynamicsHistoricalDataRetrievalOutputWithContext(ctx context.Context) DirectAppdynamicsHistoricalDataRetrievalOutput {
	return o
}

func (o DirectAppdynamicsHistoricalDataRetrievalOutput) ToDirectAppdynamicsHistoricalDataRetrievalPtrOutput() DirectAppdynamicsHistoricalDataRetrievalPtrOutput {
	return o.ToDirectAppdynamicsHistoricalDataRetrievalPtrOutputWithContext(context.Background())
}

func (o DirectAppdynamicsHistoricalDataRetrievalOutput) ToDirectAppdynamicsHistoricalDataRetrievalPtrOutputWithContext(ctx context.Context) DirectAppdynamicsHistoricalDataRetrievalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectAppdynamicsHistoricalDataRetrieval) *DirectAppdynamicsHistoricalDataRetrieval {
		return &v
	}).(DirectAppdynamicsHistoricalDataRetrievalPtrOutput)
}

// Used by default for any SLOs connected to this data source.
func (o DirectAppdynamicsHistoricalDataRetrievalOutput) DefaultDurations() DirectAppdynamicsHistoricalDataRetrievalDefaultDurationArrayOutput {
	return o.ApplyT(func(v DirectAppdynamicsHistoricalDataRetrieval) []DirectAppdynamicsHistoricalDataRetrievalDefaultDuration {
		return v.DefaultDurations
	}).(DirectAppdynamicsHistoricalDataRetrievalDefaultDurationArrayOutput)
}

// Defines the maximum period for which data can be retrieved.
func (o DirectAppdynamicsHistoricalDataRetrievalOutput) MaxDurations() DirectAppdynamicsHistoricalDataRetrievalMaxDurationArrayOutput {
	return o.ApplyT(func(v DirectAppdynamicsHistoricalDataRetrieval) []DirectAppdynamicsHistoricalDataRetrievalMaxDuration {
		return v.MaxDurations
	}).(DirectAppdynamicsHistoricalDataRetrievalMaxDurationArrayOutput)
}

type DirectAppdynamicsHistoricalDataRetrievalPtrOutput struct{ *pulumi.OutputState }

func (DirectAppdynamicsHistoricalDataRetrievalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectAppdynamicsHistoricalDataRetrieval)(nil)).Elem()
}

func (o DirectAppdynamicsHistoricalDataRetrievalPtrOutput) ToDirectAppdynamicsHistoricalDataRetrievalPtrOutput() DirectAppdynamicsHistoricalDataRetrievalPtrOutput {
	return o
}

func (o DirectAppdynamicsHistoricalDataRetrievalPtrOutput) ToDirectAppdynamicsHistoricalDataRetrievalPtrOutputWithContext(ctx context.Context) DirectAppdynamicsHistoricalDataRetrievalPtrOutput {
	return o
}

func (o DirectAppdynamicsHistoricalDataRetrievalPtrOutput) Elem() DirectAppdynamicsHistoricalDataRetrievalOutput {
	return o.ApplyT(func(v *DirectAppdynamicsHistoricalDataRetrieval) DirectAppdynamicsHistoricalDataRetrieval {
		if v != nil {
			return *v
		}
		var ret DirectAppdynamicsHistoricalDataRetrieval
		return ret
	}).(DirectAppdynamicsHistoricalDataRetrievalOutput)
}

// Used by default for any SLOs connected to this data source.
func (o DirectAppdynamicsHistoricalDataRetrievalPtrOutput) DefaultDurations() DirectAppdynamicsHistoricalDataRetrievalDefaultDurationArrayOutput {
	return o.ApplyT(func(v *DirectAppdynamicsHistoricalDataRetrieval) []DirectAppdynamicsHistoricalDataRetrievalDefaultDuration {
		if v == nil {
			return nil
		}
		return v.DefaultDurations
	}).(DirectAppdynamicsHistoricalDataRetrievalDefaultDurationArrayOutput)
}

// Defines the maximum period for which data can be retrieved.
func (o DirectAppdynamicsHistoricalDataRetrievalPtrOutput) MaxDurations() DirectAppdynamicsHistoricalDataRetrievalMaxDurationArrayOutput {
	return o.ApplyT(func(v *DirectAppdynamicsHistoricalDataRetrieval) []DirectAppdynamicsHistoricalDataRetrievalMaxDuration {
		if v == nil {
			return nil
		}
		return v.MaxDurations
	}).(DirectAppdynamicsHistoricalDataRetrievalMaxDurationArrayOutput)
}

type DirectAppdynamicsHistoricalDataRetrievalDefaultDuration struct {
	// Must be one of Minute, Hour, or Day.
	Unit string `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value int `pulumi:"value"`
}

// DirectAppdynamicsHistoricalDataRetrievalDefaultDurationInput is an input type that accepts DirectAppdynamicsHistoricalDataRetrievalDefaultDurationArgs and DirectAppdynamicsHistoricalDataRetrievalDefaultDurationOutput values.
// You can construct a concrete instance of `DirectAppdynamicsHistoricalDataRetrievalDefaultDurationInput` via:
//
//	DirectAppdynamicsHistoricalDataRetrievalDefaultDurationArgs{...}
type DirectAppdynamicsHistoricalDataRetrievalDefaultDurationInput interface {
	pulumi.Input

	ToDirectAppdynamicsHistoricalDataRetrievalDefaultDurationOutput() DirectAppdynamicsHistoricalDataRetrievalDefaultDurationOutput
	ToDirectAppdynamicsHistoricalDataRetrievalDefaultDurationOutputWithContext(context.Context) DirectAppdynamicsHistoricalDataRetrievalDefaultDurationOutput
}

type DirectAppdynamicsHistoricalDataRetrievalDefaultDurationArgs struct {
	// Must be one of Minute, Hour, or Day.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value pulumi.IntInput `pulumi:"value"`
}

func (DirectAppdynamicsHistoricalDataRetrievalDefaultDurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectAppdynamicsHistoricalDataRetrievalDefaultDuration)(nil)).Elem()
}

func (i DirectAppdynamicsHistoricalDataRetrievalDefaultDurationArgs) ToDirectAppdynamicsHistoricalDataRetrievalDefaultDurationOutput() DirectAppdynamicsHistoricalDataRetrievalDefaultDurationOutput {
	return i.ToDirectAppdynamicsHistoricalDataRetrievalDefaultDurationOutputWithContext(context.Background())
}

func (i DirectAppdynamicsHistoricalDataRetrievalDefaultDurationArgs) ToDirectAppdynamicsHistoricalDataRetrievalDefaultDurationOutputWithContext(ctx context.Context) DirectAppdynamicsHistoricalDataRetrievalDefaultDurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectAppdynamicsHistoricalDataRetrievalDefaultDurationOutput)
}

// DirectAppdynamicsHistoricalDataRetrievalDefaultDurationArrayInput is an input type that accepts DirectAppdynamicsHistoricalDataRetrievalDefaultDurationArray and DirectAppdynamicsHistoricalDataRetrievalDefaultDurationArrayOutput values.
// You can construct a concrete instance of `DirectAppdynamicsHistoricalDataRetrievalDefaultDurationArrayInput` via:
//
//	DirectAppdynamicsHistoricalDataRetrievalDefaultDurationArray{ DirectAppdynamicsHistoricalDataRetrievalDefaultDurationArgs{...} }
type DirectAppdynamicsHistoricalDataRetrievalDefaultDurationArrayInput interface {
	pulumi.Input

	ToDirectAppdynamicsHistoricalDataRetrievalDefaultDurationArrayOutput() DirectAppdynamicsHistoricalDataRetrievalDefaultDurationArrayOutput
	ToDirectAppdynamicsHistoricalDataRetrievalDefaultDurationArrayOutputWithContext(context.Context) DirectAppdynamicsHistoricalDataRetrievalDefaultDurationArrayOutput
}

type DirectAppdynamicsHistoricalDataRetrievalDefaultDurationArray []DirectAppdynamicsHistoricalDataRetrievalDefaultDurationInput

func (DirectAppdynamicsHistoricalDataRetrievalDefaultDurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectAppdynamicsHistoricalDataRetrievalDefaultDuration)(nil)).Elem()
}

func (i DirectAppdynamicsHistoricalDataRetrievalDefaultDurationArray) ToDirectAppdynamicsHistoricalDataRetrievalDefaultDurationArrayOutput() DirectAppdynamicsHistoricalDataRetrievalDefaultDurationArrayOutput {
	return i.ToDirectAppdynamicsHistoricalDataRetrievalDefaultDurationArrayOutputWithContext(context.Background())
}

func (i DirectAppdynamicsHistoricalDataRetrievalDefaultDurationArray) ToDirectAppdynamicsHistoricalDataRetrievalDefaultDurationArrayOutputWithContext(ctx context.Context) DirectAppdynamicsHistoricalDataRetrievalDefaultDurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectAppdynamicsHistoricalDataRetrievalDefaultDurationArrayOutput)
}

type DirectAppdynamicsHistoricalDataRetrievalDefaultDurationOutput struct{ *pulumi.OutputState }

func (DirectAppdynamicsHistoricalDataRetrievalDefaultDurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectAppdynamicsHistoricalDataRetrievalDefaultDuration)(nil)).Elem()
}

func (o DirectAppdynamicsHistoricalDataRetrievalDefaultDurationOutput) ToDirectAppdynamicsHistoricalDataRetrievalDefaultDurationOutput() DirectAppdynamicsHistoricalDataRetrievalDefaultDurationOutput {
	return o
}

func (o DirectAppdynamicsHistoricalDataRetrievalDefaultDurationOutput) ToDirectAppdynamicsHistoricalDataRetrievalDefaultDurationOutputWithContext(ctx context.Context) DirectAppdynamicsHistoricalDataRetrievalDefaultDurationOutput {
	return o
}

// Must be one of Minute, Hour, or Day.
func (o DirectAppdynamicsHistoricalDataRetrievalDefaultDurationOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v DirectAppdynamicsHistoricalDataRetrievalDefaultDuration) string { return v.Unit }).(pulumi.StringOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectAppdynamicsHistoricalDataRetrievalDefaultDurationOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v DirectAppdynamicsHistoricalDataRetrievalDefaultDuration) int { return v.Value }).(pulumi.IntOutput)
}

type DirectAppdynamicsHistoricalDataRetrievalDefaultDurationArrayOutput struct{ *pulumi.OutputState }

func (DirectAppdynamicsHistoricalDataRetrievalDefaultDurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectAppdynamicsHistoricalDataRetrievalDefaultDuration)(nil)).Elem()
}

func (o DirectAppdynamicsHistoricalDataRetrievalDefaultDurationArrayOutput) ToDirectAppdynamicsHistoricalDataRetrievalDefaultDurationArrayOutput() DirectAppdynamicsHistoricalDataRetrievalDefaultDurationArrayOutput {
	return o
}

func (o DirectAppdynamicsHistoricalDataRetrievalDefaultDurationArrayOutput) ToDirectAppdynamicsHistoricalDataRetrievalDefaultDurationArrayOutputWithContext(ctx context.Context) DirectAppdynamicsHistoricalDataRetrievalDefaultDurationArrayOutput {
	return o
}

func (o DirectAppdynamicsHistoricalDataRetrievalDefaultDurationArrayOutput) Index(i pulumi.IntInput) DirectAppdynamicsHistoricalDataRetrievalDefaultDurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DirectAppdynamicsHistoricalDataRetrievalDefaultDuration {
		return vs[0].([]DirectAppdynamicsHistoricalDataRetrievalDefaultDuration)[vs[1].(int)]
	}).(DirectAppdynamicsHistoricalDataRetrievalDefaultDurationOutput)
}

type DirectAppdynamicsHistoricalDataRetrievalMaxDuration struct {
	// Must be one of Minute, Hour, or Day.
	Unit string `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value int `pulumi:"value"`
}

// DirectAppdynamicsHistoricalDataRetrievalMaxDurationInput is an input type that accepts DirectAppdynamicsHistoricalDataRetrievalMaxDurationArgs and DirectAppdynamicsHistoricalDataRetrievalMaxDurationOutput values.
// You can construct a concrete instance of `DirectAppdynamicsHistoricalDataRetrievalMaxDurationInput` via:
//
//	DirectAppdynamicsHistoricalDataRetrievalMaxDurationArgs{...}
type DirectAppdynamicsHistoricalDataRetrievalMaxDurationInput interface {
	pulumi.Input

	ToDirectAppdynamicsHistoricalDataRetrievalMaxDurationOutput() DirectAppdynamicsHistoricalDataRetrievalMaxDurationOutput
	ToDirectAppdynamicsHistoricalDataRetrievalMaxDurationOutputWithContext(context.Context) DirectAppdynamicsHistoricalDataRetrievalMaxDurationOutput
}

type DirectAppdynamicsHistoricalDataRetrievalMaxDurationArgs struct {
	// Must be one of Minute, Hour, or Day.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value pulumi.IntInput `pulumi:"value"`
}

func (DirectAppdynamicsHistoricalDataRetrievalMaxDurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectAppdynamicsHistoricalDataRetrievalMaxDuration)(nil)).Elem()
}

func (i DirectAppdynamicsHistoricalDataRetrievalMaxDurationArgs) ToDirectAppdynamicsHistoricalDataRetrievalMaxDurationOutput() DirectAppdynamicsHistoricalDataRetrievalMaxDurationOutput {
	return i.ToDirectAppdynamicsHistoricalDataRetrievalMaxDurationOutputWithContext(context.Background())
}

func (i DirectAppdynamicsHistoricalDataRetrievalMaxDurationArgs) ToDirectAppdynamicsHistoricalDataRetrievalMaxDurationOutputWithContext(ctx context.Context) DirectAppdynamicsHistoricalDataRetrievalMaxDurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectAppdynamicsHistoricalDataRetrievalMaxDurationOutput)
}

// DirectAppdynamicsHistoricalDataRetrievalMaxDurationArrayInput is an input type that accepts DirectAppdynamicsHistoricalDataRetrievalMaxDurationArray and DirectAppdynamicsHistoricalDataRetrievalMaxDurationArrayOutput values.
// You can construct a concrete instance of `DirectAppdynamicsHistoricalDataRetrievalMaxDurationArrayInput` via:
//
//	DirectAppdynamicsHistoricalDataRetrievalMaxDurationArray{ DirectAppdynamicsHistoricalDataRetrievalMaxDurationArgs{...} }
type DirectAppdynamicsHistoricalDataRetrievalMaxDurationArrayInput interface {
	pulumi.Input

	ToDirectAppdynamicsHistoricalDataRetrievalMaxDurationArrayOutput() DirectAppdynamicsHistoricalDataRetrievalMaxDurationArrayOutput
	ToDirectAppdynamicsHistoricalDataRetrievalMaxDurationArrayOutputWithContext(context.Context) DirectAppdynamicsHistoricalDataRetrievalMaxDurationArrayOutput
}

type DirectAppdynamicsHistoricalDataRetrievalMaxDurationArray []DirectAppdynamicsHistoricalDataRetrievalMaxDurationInput

func (DirectAppdynamicsHistoricalDataRetrievalMaxDurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectAppdynamicsHistoricalDataRetrievalMaxDuration)(nil)).Elem()
}

func (i DirectAppdynamicsHistoricalDataRetrievalMaxDurationArray) ToDirectAppdynamicsHistoricalDataRetrievalMaxDurationArrayOutput() DirectAppdynamicsHistoricalDataRetrievalMaxDurationArrayOutput {
	return i.ToDirectAppdynamicsHistoricalDataRetrievalMaxDurationArrayOutputWithContext(context.Background())
}

func (i DirectAppdynamicsHistoricalDataRetrievalMaxDurationArray) ToDirectAppdynamicsHistoricalDataRetrievalMaxDurationArrayOutputWithContext(ctx context.Context) DirectAppdynamicsHistoricalDataRetrievalMaxDurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectAppdynamicsHistoricalDataRetrievalMaxDurationArrayOutput)
}

type DirectAppdynamicsHistoricalDataRetrievalMaxDurationOutput struct{ *pulumi.OutputState }

func (DirectAppdynamicsHistoricalDataRetrievalMaxDurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectAppdynamicsHistoricalDataRetrievalMaxDuration)(nil)).Elem()
}

func (o DirectAppdynamicsHistoricalDataRetrievalMaxDurationOutput) ToDirectAppdynamicsHistoricalDataRetrievalMaxDurationOutput() DirectAppdynamicsHistoricalDataRetrievalMaxDurationOutput {
	return o
}

func (o DirectAppdynamicsHistoricalDataRetrievalMaxDurationOutput) ToDirectAppdynamicsHistoricalDataRetrievalMaxDurationOutputWithContext(ctx context.Context) DirectAppdynamicsHistoricalDataRetrievalMaxDurationOutput {
	return o
}

// Must be one of Minute, Hour, or Day.
func (o DirectAppdynamicsHistoricalDataRetrievalMaxDurationOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v DirectAppdynamicsHistoricalDataRetrievalMaxDuration) string { return v.Unit }).(pulumi.StringOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectAppdynamicsHistoricalDataRetrievalMaxDurationOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v DirectAppdynamicsHistoricalDataRetrievalMaxDuration) int { return v.Value }).(pulumi.IntOutput)
}

type DirectAppdynamicsHistoricalDataRetrievalMaxDurationArrayOutput struct{ *pulumi.OutputState }

func (DirectAppdynamicsHistoricalDataRetrievalMaxDurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectAppdynamicsHistoricalDataRetrievalMaxDuration)(nil)).Elem()
}

func (o DirectAppdynamicsHistoricalDataRetrievalMaxDurationArrayOutput) ToDirectAppdynamicsHistoricalDataRetrievalMaxDurationArrayOutput() DirectAppdynamicsHistoricalDataRetrievalMaxDurationArrayOutput {
	return o
}

func (o DirectAppdynamicsHistoricalDataRetrievalMaxDurationArrayOutput) ToDirectAppdynamicsHistoricalDataRetrievalMaxDurationArrayOutputWithContext(ctx context.Context) DirectAppdynamicsHistoricalDataRetrievalMaxDurationArrayOutput {
	return o
}

func (o DirectAppdynamicsHistoricalDataRetrievalMaxDurationArrayOutput) Index(i pulumi.IntInput) DirectAppdynamicsHistoricalDataRetrievalMaxDurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DirectAppdynamicsHistoricalDataRetrievalMaxDuration {
		return vs[0].([]DirectAppdynamicsHistoricalDataRetrievalMaxDuration)[vs[1].(int)]
	}).(DirectAppdynamicsHistoricalDataRetrievalMaxDurationOutput)
}

type DirectAppdynamicsQueryDelay struct {
	// Must be one of Minute or Second.
	Unit string `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value int `pulumi:"value"`
}

// DirectAppdynamicsQueryDelayInput is an input type that accepts DirectAppdynamicsQueryDelayArgs and DirectAppdynamicsQueryDelayOutput values.
// You can construct a concrete instance of `DirectAppdynamicsQueryDelayInput` via:
//
//	DirectAppdynamicsQueryDelayArgs{...}
type DirectAppdynamicsQueryDelayInput interface {
	pulumi.Input

	ToDirectAppdynamicsQueryDelayOutput() DirectAppdynamicsQueryDelayOutput
	ToDirectAppdynamicsQueryDelayOutputWithContext(context.Context) DirectAppdynamicsQueryDelayOutput
}

type DirectAppdynamicsQueryDelayArgs struct {
	// Must be one of Minute or Second.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value pulumi.IntInput `pulumi:"value"`
}

func (DirectAppdynamicsQueryDelayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectAppdynamicsQueryDelay)(nil)).Elem()
}

func (i DirectAppdynamicsQueryDelayArgs) ToDirectAppdynamicsQueryDelayOutput() DirectAppdynamicsQueryDelayOutput {
	return i.ToDirectAppdynamicsQueryDelayOutputWithContext(context.Background())
}

func (i DirectAppdynamicsQueryDelayArgs) ToDirectAppdynamicsQueryDelayOutputWithContext(ctx context.Context) DirectAppdynamicsQueryDelayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectAppdynamicsQueryDelayOutput)
}

func (i DirectAppdynamicsQueryDelayArgs) ToDirectAppdynamicsQueryDelayPtrOutput() DirectAppdynamicsQueryDelayPtrOutput {
	return i.ToDirectAppdynamicsQueryDelayPtrOutputWithContext(context.Background())
}

func (i DirectAppdynamicsQueryDelayArgs) ToDirectAppdynamicsQueryDelayPtrOutputWithContext(ctx context.Context) DirectAppdynamicsQueryDelayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectAppdynamicsQueryDelayOutput).ToDirectAppdynamicsQueryDelayPtrOutputWithContext(ctx)
}

// DirectAppdynamicsQueryDelayPtrInput is an input type that accepts DirectAppdynamicsQueryDelayArgs, DirectAppdynamicsQueryDelayPtr and DirectAppdynamicsQueryDelayPtrOutput values.
// You can construct a concrete instance of `DirectAppdynamicsQueryDelayPtrInput` via:
//
//	        DirectAppdynamicsQueryDelayArgs{...}
//
//	or:
//
//	        nil
type DirectAppdynamicsQueryDelayPtrInput interface {
	pulumi.Input

	ToDirectAppdynamicsQueryDelayPtrOutput() DirectAppdynamicsQueryDelayPtrOutput
	ToDirectAppdynamicsQueryDelayPtrOutputWithContext(context.Context) DirectAppdynamicsQueryDelayPtrOutput
}

type directAppdynamicsQueryDelayPtrType DirectAppdynamicsQueryDelayArgs

func DirectAppdynamicsQueryDelayPtr(v *DirectAppdynamicsQueryDelayArgs) DirectAppdynamicsQueryDelayPtrInput {
	return (*directAppdynamicsQueryDelayPtrType)(v)
}

func (*directAppdynamicsQueryDelayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectAppdynamicsQueryDelay)(nil)).Elem()
}

func (i *directAppdynamicsQueryDelayPtrType) ToDirectAppdynamicsQueryDelayPtrOutput() DirectAppdynamicsQueryDelayPtrOutput {
	return i.ToDirectAppdynamicsQueryDelayPtrOutputWithContext(context.Background())
}

func (i *directAppdynamicsQueryDelayPtrType) ToDirectAppdynamicsQueryDelayPtrOutputWithContext(ctx context.Context) DirectAppdynamicsQueryDelayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectAppdynamicsQueryDelayPtrOutput)
}

type DirectAppdynamicsQueryDelayOutput struct{ *pulumi.OutputState }

func (DirectAppdynamicsQueryDelayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectAppdynamicsQueryDelay)(nil)).Elem()
}

func (o DirectAppdynamicsQueryDelayOutput) ToDirectAppdynamicsQueryDelayOutput() DirectAppdynamicsQueryDelayOutput {
	return o
}

func (o DirectAppdynamicsQueryDelayOutput) ToDirectAppdynamicsQueryDelayOutputWithContext(ctx context.Context) DirectAppdynamicsQueryDelayOutput {
	return o
}

func (o DirectAppdynamicsQueryDelayOutput) ToDirectAppdynamicsQueryDelayPtrOutput() DirectAppdynamicsQueryDelayPtrOutput {
	return o.ToDirectAppdynamicsQueryDelayPtrOutputWithContext(context.Background())
}

func (o DirectAppdynamicsQueryDelayOutput) ToDirectAppdynamicsQueryDelayPtrOutputWithContext(ctx context.Context) DirectAppdynamicsQueryDelayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectAppdynamicsQueryDelay) *DirectAppdynamicsQueryDelay {
		return &v
	}).(DirectAppdynamicsQueryDelayPtrOutput)
}

// Must be one of Minute or Second.
func (o DirectAppdynamicsQueryDelayOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v DirectAppdynamicsQueryDelay) string { return v.Unit }).(pulumi.StringOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectAppdynamicsQueryDelayOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v DirectAppdynamicsQueryDelay) int { return v.Value }).(pulumi.IntOutput)
}

type DirectAppdynamicsQueryDelayPtrOutput struct{ *pulumi.OutputState }

func (DirectAppdynamicsQueryDelayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectAppdynamicsQueryDelay)(nil)).Elem()
}

func (o DirectAppdynamicsQueryDelayPtrOutput) ToDirectAppdynamicsQueryDelayPtrOutput() DirectAppdynamicsQueryDelayPtrOutput {
	return o
}

func (o DirectAppdynamicsQueryDelayPtrOutput) ToDirectAppdynamicsQueryDelayPtrOutputWithContext(ctx context.Context) DirectAppdynamicsQueryDelayPtrOutput {
	return o
}

func (o DirectAppdynamicsQueryDelayPtrOutput) Elem() DirectAppdynamicsQueryDelayOutput {
	return o.ApplyT(func(v *DirectAppdynamicsQueryDelay) DirectAppdynamicsQueryDelay {
		if v != nil {
			return *v
		}
		var ret DirectAppdynamicsQueryDelay
		return ret
	}).(DirectAppdynamicsQueryDelayOutput)
}

// Must be one of Minute or Second.
func (o DirectAppdynamicsQueryDelayPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectAppdynamicsQueryDelay) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectAppdynamicsQueryDelayPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DirectAppdynamicsQueryDelay) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type DirectAzureMonitorHistoricalDataRetrieval struct {
	// Used by default for any SLOs connected to this data source.
	DefaultDurations []DirectAzureMonitorHistoricalDataRetrievalDefaultDuration `pulumi:"defaultDurations"`
	// Defines the maximum period for which data can be retrieved.
	MaxDurations []DirectAzureMonitorHistoricalDataRetrievalMaxDuration `pulumi:"maxDurations"`
}

// DirectAzureMonitorHistoricalDataRetrievalInput is an input type that accepts DirectAzureMonitorHistoricalDataRetrievalArgs and DirectAzureMonitorHistoricalDataRetrievalOutput values.
// You can construct a concrete instance of `DirectAzureMonitorHistoricalDataRetrievalInput` via:
//
//	DirectAzureMonitorHistoricalDataRetrievalArgs{...}
type DirectAzureMonitorHistoricalDataRetrievalInput interface {
	pulumi.Input

	ToDirectAzureMonitorHistoricalDataRetrievalOutput() DirectAzureMonitorHistoricalDataRetrievalOutput
	ToDirectAzureMonitorHistoricalDataRetrievalOutputWithContext(context.Context) DirectAzureMonitorHistoricalDataRetrievalOutput
}

type DirectAzureMonitorHistoricalDataRetrievalArgs struct {
	// Used by default for any SLOs connected to this data source.
	DefaultDurations DirectAzureMonitorHistoricalDataRetrievalDefaultDurationArrayInput `pulumi:"defaultDurations"`
	// Defines the maximum period for which data can be retrieved.
	MaxDurations DirectAzureMonitorHistoricalDataRetrievalMaxDurationArrayInput `pulumi:"maxDurations"`
}

func (DirectAzureMonitorHistoricalDataRetrievalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectAzureMonitorHistoricalDataRetrieval)(nil)).Elem()
}

func (i DirectAzureMonitorHistoricalDataRetrievalArgs) ToDirectAzureMonitorHistoricalDataRetrievalOutput() DirectAzureMonitorHistoricalDataRetrievalOutput {
	return i.ToDirectAzureMonitorHistoricalDataRetrievalOutputWithContext(context.Background())
}

func (i DirectAzureMonitorHistoricalDataRetrievalArgs) ToDirectAzureMonitorHistoricalDataRetrievalOutputWithContext(ctx context.Context) DirectAzureMonitorHistoricalDataRetrievalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectAzureMonitorHistoricalDataRetrievalOutput)
}

func (i DirectAzureMonitorHistoricalDataRetrievalArgs) ToDirectAzureMonitorHistoricalDataRetrievalPtrOutput() DirectAzureMonitorHistoricalDataRetrievalPtrOutput {
	return i.ToDirectAzureMonitorHistoricalDataRetrievalPtrOutputWithContext(context.Background())
}

func (i DirectAzureMonitorHistoricalDataRetrievalArgs) ToDirectAzureMonitorHistoricalDataRetrievalPtrOutputWithContext(ctx context.Context) DirectAzureMonitorHistoricalDataRetrievalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectAzureMonitorHistoricalDataRetrievalOutput).ToDirectAzureMonitorHistoricalDataRetrievalPtrOutputWithContext(ctx)
}

// DirectAzureMonitorHistoricalDataRetrievalPtrInput is an input type that accepts DirectAzureMonitorHistoricalDataRetrievalArgs, DirectAzureMonitorHistoricalDataRetrievalPtr and DirectAzureMonitorHistoricalDataRetrievalPtrOutput values.
// You can construct a concrete instance of `DirectAzureMonitorHistoricalDataRetrievalPtrInput` via:
//
//	        DirectAzureMonitorHistoricalDataRetrievalArgs{...}
//
//	or:
//
//	        nil
type DirectAzureMonitorHistoricalDataRetrievalPtrInput interface {
	pulumi.Input

	ToDirectAzureMonitorHistoricalDataRetrievalPtrOutput() DirectAzureMonitorHistoricalDataRetrievalPtrOutput
	ToDirectAzureMonitorHistoricalDataRetrievalPtrOutputWithContext(context.Context) DirectAzureMonitorHistoricalDataRetrievalPtrOutput
}

type directAzureMonitorHistoricalDataRetrievalPtrType DirectAzureMonitorHistoricalDataRetrievalArgs

func DirectAzureMonitorHistoricalDataRetrievalPtr(v *DirectAzureMonitorHistoricalDataRetrievalArgs) DirectAzureMonitorHistoricalDataRetrievalPtrInput {
	return (*directAzureMonitorHistoricalDataRetrievalPtrType)(v)
}

func (*directAzureMonitorHistoricalDataRetrievalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectAzureMonitorHistoricalDataRetrieval)(nil)).Elem()
}

func (i *directAzureMonitorHistoricalDataRetrievalPtrType) ToDirectAzureMonitorHistoricalDataRetrievalPtrOutput() DirectAzureMonitorHistoricalDataRetrievalPtrOutput {
	return i.ToDirectAzureMonitorHistoricalDataRetrievalPtrOutputWithContext(context.Background())
}

func (i *directAzureMonitorHistoricalDataRetrievalPtrType) ToDirectAzureMonitorHistoricalDataRetrievalPtrOutputWithContext(ctx context.Context) DirectAzureMonitorHistoricalDataRetrievalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectAzureMonitorHistoricalDataRetrievalPtrOutput)
}

type DirectAzureMonitorHistoricalDataRetrievalOutput struct{ *pulumi.OutputState }

func (DirectAzureMonitorHistoricalDataRetrievalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectAzureMonitorHistoricalDataRetrieval)(nil)).Elem()
}

func (o DirectAzureMonitorHistoricalDataRetrievalOutput) ToDirectAzureMonitorHistoricalDataRetrievalOutput() DirectAzureMonitorHistoricalDataRetrievalOutput {
	return o
}

func (o DirectAzureMonitorHistoricalDataRetrievalOutput) ToDirectAzureMonitorHistoricalDataRetrievalOutputWithContext(ctx context.Context) DirectAzureMonitorHistoricalDataRetrievalOutput {
	return o
}

func (o DirectAzureMonitorHistoricalDataRetrievalOutput) ToDirectAzureMonitorHistoricalDataRetrievalPtrOutput() DirectAzureMonitorHistoricalDataRetrievalPtrOutput {
	return o.ToDirectAzureMonitorHistoricalDataRetrievalPtrOutputWithContext(context.Background())
}

func (o DirectAzureMonitorHistoricalDataRetrievalOutput) ToDirectAzureMonitorHistoricalDataRetrievalPtrOutputWithContext(ctx context.Context) DirectAzureMonitorHistoricalDataRetrievalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectAzureMonitorHistoricalDataRetrieval) *DirectAzureMonitorHistoricalDataRetrieval {
		return &v
	}).(DirectAzureMonitorHistoricalDataRetrievalPtrOutput)
}

// Used by default for any SLOs connected to this data source.
func (o DirectAzureMonitorHistoricalDataRetrievalOutput) DefaultDurations() DirectAzureMonitorHistoricalDataRetrievalDefaultDurationArrayOutput {
	return o.ApplyT(func(v DirectAzureMonitorHistoricalDataRetrieval) []DirectAzureMonitorHistoricalDataRetrievalDefaultDuration {
		return v.DefaultDurations
	}).(DirectAzureMonitorHistoricalDataRetrievalDefaultDurationArrayOutput)
}

// Defines the maximum period for which data can be retrieved.
func (o DirectAzureMonitorHistoricalDataRetrievalOutput) MaxDurations() DirectAzureMonitorHistoricalDataRetrievalMaxDurationArrayOutput {
	return o.ApplyT(func(v DirectAzureMonitorHistoricalDataRetrieval) []DirectAzureMonitorHistoricalDataRetrievalMaxDuration {
		return v.MaxDurations
	}).(DirectAzureMonitorHistoricalDataRetrievalMaxDurationArrayOutput)
}

type DirectAzureMonitorHistoricalDataRetrievalPtrOutput struct{ *pulumi.OutputState }

func (DirectAzureMonitorHistoricalDataRetrievalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectAzureMonitorHistoricalDataRetrieval)(nil)).Elem()
}

func (o DirectAzureMonitorHistoricalDataRetrievalPtrOutput) ToDirectAzureMonitorHistoricalDataRetrievalPtrOutput() DirectAzureMonitorHistoricalDataRetrievalPtrOutput {
	return o
}

func (o DirectAzureMonitorHistoricalDataRetrievalPtrOutput) ToDirectAzureMonitorHistoricalDataRetrievalPtrOutputWithContext(ctx context.Context) DirectAzureMonitorHistoricalDataRetrievalPtrOutput {
	return o
}

func (o DirectAzureMonitorHistoricalDataRetrievalPtrOutput) Elem() DirectAzureMonitorHistoricalDataRetrievalOutput {
	return o.ApplyT(func(v *DirectAzureMonitorHistoricalDataRetrieval) DirectAzureMonitorHistoricalDataRetrieval {
		if v != nil {
			return *v
		}
		var ret DirectAzureMonitorHistoricalDataRetrieval
		return ret
	}).(DirectAzureMonitorHistoricalDataRetrievalOutput)
}

// Used by default for any SLOs connected to this data source.
func (o DirectAzureMonitorHistoricalDataRetrievalPtrOutput) DefaultDurations() DirectAzureMonitorHistoricalDataRetrievalDefaultDurationArrayOutput {
	return o.ApplyT(func(v *DirectAzureMonitorHistoricalDataRetrieval) []DirectAzureMonitorHistoricalDataRetrievalDefaultDuration {
		if v == nil {
			return nil
		}
		return v.DefaultDurations
	}).(DirectAzureMonitorHistoricalDataRetrievalDefaultDurationArrayOutput)
}

// Defines the maximum period for which data can be retrieved.
func (o DirectAzureMonitorHistoricalDataRetrievalPtrOutput) MaxDurations() DirectAzureMonitorHistoricalDataRetrievalMaxDurationArrayOutput {
	return o.ApplyT(func(v *DirectAzureMonitorHistoricalDataRetrieval) []DirectAzureMonitorHistoricalDataRetrievalMaxDuration {
		if v == nil {
			return nil
		}
		return v.MaxDurations
	}).(DirectAzureMonitorHistoricalDataRetrievalMaxDurationArrayOutput)
}

type DirectAzureMonitorHistoricalDataRetrievalDefaultDuration struct {
	// Must be one of Minute, Hour, or Day.
	Unit string `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value int `pulumi:"value"`
}

// DirectAzureMonitorHistoricalDataRetrievalDefaultDurationInput is an input type that accepts DirectAzureMonitorHistoricalDataRetrievalDefaultDurationArgs and DirectAzureMonitorHistoricalDataRetrievalDefaultDurationOutput values.
// You can construct a concrete instance of `DirectAzureMonitorHistoricalDataRetrievalDefaultDurationInput` via:
//
//	DirectAzureMonitorHistoricalDataRetrievalDefaultDurationArgs{...}
type DirectAzureMonitorHistoricalDataRetrievalDefaultDurationInput interface {
	pulumi.Input

	ToDirectAzureMonitorHistoricalDataRetrievalDefaultDurationOutput() DirectAzureMonitorHistoricalDataRetrievalDefaultDurationOutput
	ToDirectAzureMonitorHistoricalDataRetrievalDefaultDurationOutputWithContext(context.Context) DirectAzureMonitorHistoricalDataRetrievalDefaultDurationOutput
}

type DirectAzureMonitorHistoricalDataRetrievalDefaultDurationArgs struct {
	// Must be one of Minute, Hour, or Day.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value pulumi.IntInput `pulumi:"value"`
}

func (DirectAzureMonitorHistoricalDataRetrievalDefaultDurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectAzureMonitorHistoricalDataRetrievalDefaultDuration)(nil)).Elem()
}

func (i DirectAzureMonitorHistoricalDataRetrievalDefaultDurationArgs) ToDirectAzureMonitorHistoricalDataRetrievalDefaultDurationOutput() DirectAzureMonitorHistoricalDataRetrievalDefaultDurationOutput {
	return i.ToDirectAzureMonitorHistoricalDataRetrievalDefaultDurationOutputWithContext(context.Background())
}

func (i DirectAzureMonitorHistoricalDataRetrievalDefaultDurationArgs) ToDirectAzureMonitorHistoricalDataRetrievalDefaultDurationOutputWithContext(ctx context.Context) DirectAzureMonitorHistoricalDataRetrievalDefaultDurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectAzureMonitorHistoricalDataRetrievalDefaultDurationOutput)
}

// DirectAzureMonitorHistoricalDataRetrievalDefaultDurationArrayInput is an input type that accepts DirectAzureMonitorHistoricalDataRetrievalDefaultDurationArray and DirectAzureMonitorHistoricalDataRetrievalDefaultDurationArrayOutput values.
// You can construct a concrete instance of `DirectAzureMonitorHistoricalDataRetrievalDefaultDurationArrayInput` via:
//
//	DirectAzureMonitorHistoricalDataRetrievalDefaultDurationArray{ DirectAzureMonitorHistoricalDataRetrievalDefaultDurationArgs{...} }
type DirectAzureMonitorHistoricalDataRetrievalDefaultDurationArrayInput interface {
	pulumi.Input

	ToDirectAzureMonitorHistoricalDataRetrievalDefaultDurationArrayOutput() DirectAzureMonitorHistoricalDataRetrievalDefaultDurationArrayOutput
	ToDirectAzureMonitorHistoricalDataRetrievalDefaultDurationArrayOutputWithContext(context.Context) DirectAzureMonitorHistoricalDataRetrievalDefaultDurationArrayOutput
}

type DirectAzureMonitorHistoricalDataRetrievalDefaultDurationArray []DirectAzureMonitorHistoricalDataRetrievalDefaultDurationInput

func (DirectAzureMonitorHistoricalDataRetrievalDefaultDurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectAzureMonitorHistoricalDataRetrievalDefaultDuration)(nil)).Elem()
}

func (i DirectAzureMonitorHistoricalDataRetrievalDefaultDurationArray) ToDirectAzureMonitorHistoricalDataRetrievalDefaultDurationArrayOutput() DirectAzureMonitorHistoricalDataRetrievalDefaultDurationArrayOutput {
	return i.ToDirectAzureMonitorHistoricalDataRetrievalDefaultDurationArrayOutputWithContext(context.Background())
}

func (i DirectAzureMonitorHistoricalDataRetrievalDefaultDurationArray) ToDirectAzureMonitorHistoricalDataRetrievalDefaultDurationArrayOutputWithContext(ctx context.Context) DirectAzureMonitorHistoricalDataRetrievalDefaultDurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectAzureMonitorHistoricalDataRetrievalDefaultDurationArrayOutput)
}

type DirectAzureMonitorHistoricalDataRetrievalDefaultDurationOutput struct{ *pulumi.OutputState }

func (DirectAzureMonitorHistoricalDataRetrievalDefaultDurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectAzureMonitorHistoricalDataRetrievalDefaultDuration)(nil)).Elem()
}

func (o DirectAzureMonitorHistoricalDataRetrievalDefaultDurationOutput) ToDirectAzureMonitorHistoricalDataRetrievalDefaultDurationOutput() DirectAzureMonitorHistoricalDataRetrievalDefaultDurationOutput {
	return o
}

func (o DirectAzureMonitorHistoricalDataRetrievalDefaultDurationOutput) ToDirectAzureMonitorHistoricalDataRetrievalDefaultDurationOutputWithContext(ctx context.Context) DirectAzureMonitorHistoricalDataRetrievalDefaultDurationOutput {
	return o
}

// Must be one of Minute, Hour, or Day.
func (o DirectAzureMonitorHistoricalDataRetrievalDefaultDurationOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v DirectAzureMonitorHistoricalDataRetrievalDefaultDuration) string { return v.Unit }).(pulumi.StringOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectAzureMonitorHistoricalDataRetrievalDefaultDurationOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v DirectAzureMonitorHistoricalDataRetrievalDefaultDuration) int { return v.Value }).(pulumi.IntOutput)
}

type DirectAzureMonitorHistoricalDataRetrievalDefaultDurationArrayOutput struct{ *pulumi.OutputState }

func (DirectAzureMonitorHistoricalDataRetrievalDefaultDurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectAzureMonitorHistoricalDataRetrievalDefaultDuration)(nil)).Elem()
}

func (o DirectAzureMonitorHistoricalDataRetrievalDefaultDurationArrayOutput) ToDirectAzureMonitorHistoricalDataRetrievalDefaultDurationArrayOutput() DirectAzureMonitorHistoricalDataRetrievalDefaultDurationArrayOutput {
	return o
}

func (o DirectAzureMonitorHistoricalDataRetrievalDefaultDurationArrayOutput) ToDirectAzureMonitorHistoricalDataRetrievalDefaultDurationArrayOutputWithContext(ctx context.Context) DirectAzureMonitorHistoricalDataRetrievalDefaultDurationArrayOutput {
	return o
}

func (o DirectAzureMonitorHistoricalDataRetrievalDefaultDurationArrayOutput) Index(i pulumi.IntInput) DirectAzureMonitorHistoricalDataRetrievalDefaultDurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DirectAzureMonitorHistoricalDataRetrievalDefaultDuration {
		return vs[0].([]DirectAzureMonitorHistoricalDataRetrievalDefaultDuration)[vs[1].(int)]
	}).(DirectAzureMonitorHistoricalDataRetrievalDefaultDurationOutput)
}

type DirectAzureMonitorHistoricalDataRetrievalMaxDuration struct {
	// Must be one of Minute, Hour, or Day.
	Unit string `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value int `pulumi:"value"`
}

// DirectAzureMonitorHistoricalDataRetrievalMaxDurationInput is an input type that accepts DirectAzureMonitorHistoricalDataRetrievalMaxDurationArgs and DirectAzureMonitorHistoricalDataRetrievalMaxDurationOutput values.
// You can construct a concrete instance of `DirectAzureMonitorHistoricalDataRetrievalMaxDurationInput` via:
//
//	DirectAzureMonitorHistoricalDataRetrievalMaxDurationArgs{...}
type DirectAzureMonitorHistoricalDataRetrievalMaxDurationInput interface {
	pulumi.Input

	ToDirectAzureMonitorHistoricalDataRetrievalMaxDurationOutput() DirectAzureMonitorHistoricalDataRetrievalMaxDurationOutput
	ToDirectAzureMonitorHistoricalDataRetrievalMaxDurationOutputWithContext(context.Context) DirectAzureMonitorHistoricalDataRetrievalMaxDurationOutput
}

type DirectAzureMonitorHistoricalDataRetrievalMaxDurationArgs struct {
	// Must be one of Minute, Hour, or Day.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value pulumi.IntInput `pulumi:"value"`
}

func (DirectAzureMonitorHistoricalDataRetrievalMaxDurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectAzureMonitorHistoricalDataRetrievalMaxDuration)(nil)).Elem()
}

func (i DirectAzureMonitorHistoricalDataRetrievalMaxDurationArgs) ToDirectAzureMonitorHistoricalDataRetrievalMaxDurationOutput() DirectAzureMonitorHistoricalDataRetrievalMaxDurationOutput {
	return i.ToDirectAzureMonitorHistoricalDataRetrievalMaxDurationOutputWithContext(context.Background())
}

func (i DirectAzureMonitorHistoricalDataRetrievalMaxDurationArgs) ToDirectAzureMonitorHistoricalDataRetrievalMaxDurationOutputWithContext(ctx context.Context) DirectAzureMonitorHistoricalDataRetrievalMaxDurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectAzureMonitorHistoricalDataRetrievalMaxDurationOutput)
}

// DirectAzureMonitorHistoricalDataRetrievalMaxDurationArrayInput is an input type that accepts DirectAzureMonitorHistoricalDataRetrievalMaxDurationArray and DirectAzureMonitorHistoricalDataRetrievalMaxDurationArrayOutput values.
// You can construct a concrete instance of `DirectAzureMonitorHistoricalDataRetrievalMaxDurationArrayInput` via:
//
//	DirectAzureMonitorHistoricalDataRetrievalMaxDurationArray{ DirectAzureMonitorHistoricalDataRetrievalMaxDurationArgs{...} }
type DirectAzureMonitorHistoricalDataRetrievalMaxDurationArrayInput interface {
	pulumi.Input

	ToDirectAzureMonitorHistoricalDataRetrievalMaxDurationArrayOutput() DirectAzureMonitorHistoricalDataRetrievalMaxDurationArrayOutput
	ToDirectAzureMonitorHistoricalDataRetrievalMaxDurationArrayOutputWithContext(context.Context) DirectAzureMonitorHistoricalDataRetrievalMaxDurationArrayOutput
}

type DirectAzureMonitorHistoricalDataRetrievalMaxDurationArray []DirectAzureMonitorHistoricalDataRetrievalMaxDurationInput

func (DirectAzureMonitorHistoricalDataRetrievalMaxDurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectAzureMonitorHistoricalDataRetrievalMaxDuration)(nil)).Elem()
}

func (i DirectAzureMonitorHistoricalDataRetrievalMaxDurationArray) ToDirectAzureMonitorHistoricalDataRetrievalMaxDurationArrayOutput() DirectAzureMonitorHistoricalDataRetrievalMaxDurationArrayOutput {
	return i.ToDirectAzureMonitorHistoricalDataRetrievalMaxDurationArrayOutputWithContext(context.Background())
}

func (i DirectAzureMonitorHistoricalDataRetrievalMaxDurationArray) ToDirectAzureMonitorHistoricalDataRetrievalMaxDurationArrayOutputWithContext(ctx context.Context) DirectAzureMonitorHistoricalDataRetrievalMaxDurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectAzureMonitorHistoricalDataRetrievalMaxDurationArrayOutput)
}

type DirectAzureMonitorHistoricalDataRetrievalMaxDurationOutput struct{ *pulumi.OutputState }

func (DirectAzureMonitorHistoricalDataRetrievalMaxDurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectAzureMonitorHistoricalDataRetrievalMaxDuration)(nil)).Elem()
}

func (o DirectAzureMonitorHistoricalDataRetrievalMaxDurationOutput) ToDirectAzureMonitorHistoricalDataRetrievalMaxDurationOutput() DirectAzureMonitorHistoricalDataRetrievalMaxDurationOutput {
	return o
}

func (o DirectAzureMonitorHistoricalDataRetrievalMaxDurationOutput) ToDirectAzureMonitorHistoricalDataRetrievalMaxDurationOutputWithContext(ctx context.Context) DirectAzureMonitorHistoricalDataRetrievalMaxDurationOutput {
	return o
}

// Must be one of Minute, Hour, or Day.
func (o DirectAzureMonitorHistoricalDataRetrievalMaxDurationOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v DirectAzureMonitorHistoricalDataRetrievalMaxDuration) string { return v.Unit }).(pulumi.StringOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectAzureMonitorHistoricalDataRetrievalMaxDurationOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v DirectAzureMonitorHistoricalDataRetrievalMaxDuration) int { return v.Value }).(pulumi.IntOutput)
}

type DirectAzureMonitorHistoricalDataRetrievalMaxDurationArrayOutput struct{ *pulumi.OutputState }

func (DirectAzureMonitorHistoricalDataRetrievalMaxDurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectAzureMonitorHistoricalDataRetrievalMaxDuration)(nil)).Elem()
}

func (o DirectAzureMonitorHistoricalDataRetrievalMaxDurationArrayOutput) ToDirectAzureMonitorHistoricalDataRetrievalMaxDurationArrayOutput() DirectAzureMonitorHistoricalDataRetrievalMaxDurationArrayOutput {
	return o
}

func (o DirectAzureMonitorHistoricalDataRetrievalMaxDurationArrayOutput) ToDirectAzureMonitorHistoricalDataRetrievalMaxDurationArrayOutputWithContext(ctx context.Context) DirectAzureMonitorHistoricalDataRetrievalMaxDurationArrayOutput {
	return o
}

func (o DirectAzureMonitorHistoricalDataRetrievalMaxDurationArrayOutput) Index(i pulumi.IntInput) DirectAzureMonitorHistoricalDataRetrievalMaxDurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DirectAzureMonitorHistoricalDataRetrievalMaxDuration {
		return vs[0].([]DirectAzureMonitorHistoricalDataRetrievalMaxDuration)[vs[1].(int)]
	}).(DirectAzureMonitorHistoricalDataRetrievalMaxDurationOutput)
}

type DirectAzureMonitorQueryDelay struct {
	// Must be one of Minute or Second.
	Unit string `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value int `pulumi:"value"`
}

// DirectAzureMonitorQueryDelayInput is an input type that accepts DirectAzureMonitorQueryDelayArgs and DirectAzureMonitorQueryDelayOutput values.
// You can construct a concrete instance of `DirectAzureMonitorQueryDelayInput` via:
//
//	DirectAzureMonitorQueryDelayArgs{...}
type DirectAzureMonitorQueryDelayInput interface {
	pulumi.Input

	ToDirectAzureMonitorQueryDelayOutput() DirectAzureMonitorQueryDelayOutput
	ToDirectAzureMonitorQueryDelayOutputWithContext(context.Context) DirectAzureMonitorQueryDelayOutput
}

type DirectAzureMonitorQueryDelayArgs struct {
	// Must be one of Minute or Second.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value pulumi.IntInput `pulumi:"value"`
}

func (DirectAzureMonitorQueryDelayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectAzureMonitorQueryDelay)(nil)).Elem()
}

func (i DirectAzureMonitorQueryDelayArgs) ToDirectAzureMonitorQueryDelayOutput() DirectAzureMonitorQueryDelayOutput {
	return i.ToDirectAzureMonitorQueryDelayOutputWithContext(context.Background())
}

func (i DirectAzureMonitorQueryDelayArgs) ToDirectAzureMonitorQueryDelayOutputWithContext(ctx context.Context) DirectAzureMonitorQueryDelayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectAzureMonitorQueryDelayOutput)
}

func (i DirectAzureMonitorQueryDelayArgs) ToDirectAzureMonitorQueryDelayPtrOutput() DirectAzureMonitorQueryDelayPtrOutput {
	return i.ToDirectAzureMonitorQueryDelayPtrOutputWithContext(context.Background())
}

func (i DirectAzureMonitorQueryDelayArgs) ToDirectAzureMonitorQueryDelayPtrOutputWithContext(ctx context.Context) DirectAzureMonitorQueryDelayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectAzureMonitorQueryDelayOutput).ToDirectAzureMonitorQueryDelayPtrOutputWithContext(ctx)
}

// DirectAzureMonitorQueryDelayPtrInput is an input type that accepts DirectAzureMonitorQueryDelayArgs, DirectAzureMonitorQueryDelayPtr and DirectAzureMonitorQueryDelayPtrOutput values.
// You can construct a concrete instance of `DirectAzureMonitorQueryDelayPtrInput` via:
//
//	        DirectAzureMonitorQueryDelayArgs{...}
//
//	or:
//
//	        nil
type DirectAzureMonitorQueryDelayPtrInput interface {
	pulumi.Input

	ToDirectAzureMonitorQueryDelayPtrOutput() DirectAzureMonitorQueryDelayPtrOutput
	ToDirectAzureMonitorQueryDelayPtrOutputWithContext(context.Context) DirectAzureMonitorQueryDelayPtrOutput
}

type directAzureMonitorQueryDelayPtrType DirectAzureMonitorQueryDelayArgs

func DirectAzureMonitorQueryDelayPtr(v *DirectAzureMonitorQueryDelayArgs) DirectAzureMonitorQueryDelayPtrInput {
	return (*directAzureMonitorQueryDelayPtrType)(v)
}

func (*directAzureMonitorQueryDelayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectAzureMonitorQueryDelay)(nil)).Elem()
}

func (i *directAzureMonitorQueryDelayPtrType) ToDirectAzureMonitorQueryDelayPtrOutput() DirectAzureMonitorQueryDelayPtrOutput {
	return i.ToDirectAzureMonitorQueryDelayPtrOutputWithContext(context.Background())
}

func (i *directAzureMonitorQueryDelayPtrType) ToDirectAzureMonitorQueryDelayPtrOutputWithContext(ctx context.Context) DirectAzureMonitorQueryDelayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectAzureMonitorQueryDelayPtrOutput)
}

type DirectAzureMonitorQueryDelayOutput struct{ *pulumi.OutputState }

func (DirectAzureMonitorQueryDelayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectAzureMonitorQueryDelay)(nil)).Elem()
}

func (o DirectAzureMonitorQueryDelayOutput) ToDirectAzureMonitorQueryDelayOutput() DirectAzureMonitorQueryDelayOutput {
	return o
}

func (o DirectAzureMonitorQueryDelayOutput) ToDirectAzureMonitorQueryDelayOutputWithContext(ctx context.Context) DirectAzureMonitorQueryDelayOutput {
	return o
}

func (o DirectAzureMonitorQueryDelayOutput) ToDirectAzureMonitorQueryDelayPtrOutput() DirectAzureMonitorQueryDelayPtrOutput {
	return o.ToDirectAzureMonitorQueryDelayPtrOutputWithContext(context.Background())
}

func (o DirectAzureMonitorQueryDelayOutput) ToDirectAzureMonitorQueryDelayPtrOutputWithContext(ctx context.Context) DirectAzureMonitorQueryDelayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectAzureMonitorQueryDelay) *DirectAzureMonitorQueryDelay {
		return &v
	}).(DirectAzureMonitorQueryDelayPtrOutput)
}

// Must be one of Minute or Second.
func (o DirectAzureMonitorQueryDelayOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v DirectAzureMonitorQueryDelay) string { return v.Unit }).(pulumi.StringOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectAzureMonitorQueryDelayOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v DirectAzureMonitorQueryDelay) int { return v.Value }).(pulumi.IntOutput)
}

type DirectAzureMonitorQueryDelayPtrOutput struct{ *pulumi.OutputState }

func (DirectAzureMonitorQueryDelayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectAzureMonitorQueryDelay)(nil)).Elem()
}

func (o DirectAzureMonitorQueryDelayPtrOutput) ToDirectAzureMonitorQueryDelayPtrOutput() DirectAzureMonitorQueryDelayPtrOutput {
	return o
}

func (o DirectAzureMonitorQueryDelayPtrOutput) ToDirectAzureMonitorQueryDelayPtrOutputWithContext(ctx context.Context) DirectAzureMonitorQueryDelayPtrOutput {
	return o
}

func (o DirectAzureMonitorQueryDelayPtrOutput) Elem() DirectAzureMonitorQueryDelayOutput {
	return o.ApplyT(func(v *DirectAzureMonitorQueryDelay) DirectAzureMonitorQueryDelay {
		if v != nil {
			return *v
		}
		var ret DirectAzureMonitorQueryDelay
		return ret
	}).(DirectAzureMonitorQueryDelayOutput)
}

// Must be one of Minute or Second.
func (o DirectAzureMonitorQueryDelayPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectAzureMonitorQueryDelay) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectAzureMonitorQueryDelayPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DirectAzureMonitorQueryDelay) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type DirectBigqueryQueryDelay struct {
	// Must be one of Minute or Second.
	Unit string `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value int `pulumi:"value"`
}

// DirectBigqueryQueryDelayInput is an input type that accepts DirectBigqueryQueryDelayArgs and DirectBigqueryQueryDelayOutput values.
// You can construct a concrete instance of `DirectBigqueryQueryDelayInput` via:
//
//	DirectBigqueryQueryDelayArgs{...}
type DirectBigqueryQueryDelayInput interface {
	pulumi.Input

	ToDirectBigqueryQueryDelayOutput() DirectBigqueryQueryDelayOutput
	ToDirectBigqueryQueryDelayOutputWithContext(context.Context) DirectBigqueryQueryDelayOutput
}

type DirectBigqueryQueryDelayArgs struct {
	// Must be one of Minute or Second.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value pulumi.IntInput `pulumi:"value"`
}

func (DirectBigqueryQueryDelayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectBigqueryQueryDelay)(nil)).Elem()
}

func (i DirectBigqueryQueryDelayArgs) ToDirectBigqueryQueryDelayOutput() DirectBigqueryQueryDelayOutput {
	return i.ToDirectBigqueryQueryDelayOutputWithContext(context.Background())
}

func (i DirectBigqueryQueryDelayArgs) ToDirectBigqueryQueryDelayOutputWithContext(ctx context.Context) DirectBigqueryQueryDelayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectBigqueryQueryDelayOutput)
}

func (i DirectBigqueryQueryDelayArgs) ToDirectBigqueryQueryDelayPtrOutput() DirectBigqueryQueryDelayPtrOutput {
	return i.ToDirectBigqueryQueryDelayPtrOutputWithContext(context.Background())
}

func (i DirectBigqueryQueryDelayArgs) ToDirectBigqueryQueryDelayPtrOutputWithContext(ctx context.Context) DirectBigqueryQueryDelayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectBigqueryQueryDelayOutput).ToDirectBigqueryQueryDelayPtrOutputWithContext(ctx)
}

// DirectBigqueryQueryDelayPtrInput is an input type that accepts DirectBigqueryQueryDelayArgs, DirectBigqueryQueryDelayPtr and DirectBigqueryQueryDelayPtrOutput values.
// You can construct a concrete instance of `DirectBigqueryQueryDelayPtrInput` via:
//
//	        DirectBigqueryQueryDelayArgs{...}
//
//	or:
//
//	        nil
type DirectBigqueryQueryDelayPtrInput interface {
	pulumi.Input

	ToDirectBigqueryQueryDelayPtrOutput() DirectBigqueryQueryDelayPtrOutput
	ToDirectBigqueryQueryDelayPtrOutputWithContext(context.Context) DirectBigqueryQueryDelayPtrOutput
}

type directBigqueryQueryDelayPtrType DirectBigqueryQueryDelayArgs

func DirectBigqueryQueryDelayPtr(v *DirectBigqueryQueryDelayArgs) DirectBigqueryQueryDelayPtrInput {
	return (*directBigqueryQueryDelayPtrType)(v)
}

func (*directBigqueryQueryDelayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectBigqueryQueryDelay)(nil)).Elem()
}

func (i *directBigqueryQueryDelayPtrType) ToDirectBigqueryQueryDelayPtrOutput() DirectBigqueryQueryDelayPtrOutput {
	return i.ToDirectBigqueryQueryDelayPtrOutputWithContext(context.Background())
}

func (i *directBigqueryQueryDelayPtrType) ToDirectBigqueryQueryDelayPtrOutputWithContext(ctx context.Context) DirectBigqueryQueryDelayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectBigqueryQueryDelayPtrOutput)
}

type DirectBigqueryQueryDelayOutput struct{ *pulumi.OutputState }

func (DirectBigqueryQueryDelayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectBigqueryQueryDelay)(nil)).Elem()
}

func (o DirectBigqueryQueryDelayOutput) ToDirectBigqueryQueryDelayOutput() DirectBigqueryQueryDelayOutput {
	return o
}

func (o DirectBigqueryQueryDelayOutput) ToDirectBigqueryQueryDelayOutputWithContext(ctx context.Context) DirectBigqueryQueryDelayOutput {
	return o
}

func (o DirectBigqueryQueryDelayOutput) ToDirectBigqueryQueryDelayPtrOutput() DirectBigqueryQueryDelayPtrOutput {
	return o.ToDirectBigqueryQueryDelayPtrOutputWithContext(context.Background())
}

func (o DirectBigqueryQueryDelayOutput) ToDirectBigqueryQueryDelayPtrOutputWithContext(ctx context.Context) DirectBigqueryQueryDelayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectBigqueryQueryDelay) *DirectBigqueryQueryDelay {
		return &v
	}).(DirectBigqueryQueryDelayPtrOutput)
}

// Must be one of Minute or Second.
func (o DirectBigqueryQueryDelayOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v DirectBigqueryQueryDelay) string { return v.Unit }).(pulumi.StringOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectBigqueryQueryDelayOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v DirectBigqueryQueryDelay) int { return v.Value }).(pulumi.IntOutput)
}

type DirectBigqueryQueryDelayPtrOutput struct{ *pulumi.OutputState }

func (DirectBigqueryQueryDelayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectBigqueryQueryDelay)(nil)).Elem()
}

func (o DirectBigqueryQueryDelayPtrOutput) ToDirectBigqueryQueryDelayPtrOutput() DirectBigqueryQueryDelayPtrOutput {
	return o
}

func (o DirectBigqueryQueryDelayPtrOutput) ToDirectBigqueryQueryDelayPtrOutputWithContext(ctx context.Context) DirectBigqueryQueryDelayPtrOutput {
	return o
}

func (o DirectBigqueryQueryDelayPtrOutput) Elem() DirectBigqueryQueryDelayOutput {
	return o.ApplyT(func(v *DirectBigqueryQueryDelay) DirectBigqueryQueryDelay {
		if v != nil {
			return *v
		}
		var ret DirectBigqueryQueryDelay
		return ret
	}).(DirectBigqueryQueryDelayOutput)
}

// Must be one of Minute or Second.
func (o DirectBigqueryQueryDelayPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectBigqueryQueryDelay) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectBigqueryQueryDelayPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DirectBigqueryQueryDelay) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type DirectCloudwatchHistoricalDataRetrieval struct {
	// Used by default for any SLOs connected to this data source.
	DefaultDurations []DirectCloudwatchHistoricalDataRetrievalDefaultDuration `pulumi:"defaultDurations"`
	// Defines the maximum period for which data can be retrieved.
	MaxDurations []DirectCloudwatchHistoricalDataRetrievalMaxDuration `pulumi:"maxDurations"`
}

// DirectCloudwatchHistoricalDataRetrievalInput is an input type that accepts DirectCloudwatchHistoricalDataRetrievalArgs and DirectCloudwatchHistoricalDataRetrievalOutput values.
// You can construct a concrete instance of `DirectCloudwatchHistoricalDataRetrievalInput` via:
//
//	DirectCloudwatchHistoricalDataRetrievalArgs{...}
type DirectCloudwatchHistoricalDataRetrievalInput interface {
	pulumi.Input

	ToDirectCloudwatchHistoricalDataRetrievalOutput() DirectCloudwatchHistoricalDataRetrievalOutput
	ToDirectCloudwatchHistoricalDataRetrievalOutputWithContext(context.Context) DirectCloudwatchHistoricalDataRetrievalOutput
}

type DirectCloudwatchHistoricalDataRetrievalArgs struct {
	// Used by default for any SLOs connected to this data source.
	DefaultDurations DirectCloudwatchHistoricalDataRetrievalDefaultDurationArrayInput `pulumi:"defaultDurations"`
	// Defines the maximum period for which data can be retrieved.
	MaxDurations DirectCloudwatchHistoricalDataRetrievalMaxDurationArrayInput `pulumi:"maxDurations"`
}

func (DirectCloudwatchHistoricalDataRetrievalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectCloudwatchHistoricalDataRetrieval)(nil)).Elem()
}

func (i DirectCloudwatchHistoricalDataRetrievalArgs) ToDirectCloudwatchHistoricalDataRetrievalOutput() DirectCloudwatchHistoricalDataRetrievalOutput {
	return i.ToDirectCloudwatchHistoricalDataRetrievalOutputWithContext(context.Background())
}

func (i DirectCloudwatchHistoricalDataRetrievalArgs) ToDirectCloudwatchHistoricalDataRetrievalOutputWithContext(ctx context.Context) DirectCloudwatchHistoricalDataRetrievalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectCloudwatchHistoricalDataRetrievalOutput)
}

func (i DirectCloudwatchHistoricalDataRetrievalArgs) ToDirectCloudwatchHistoricalDataRetrievalPtrOutput() DirectCloudwatchHistoricalDataRetrievalPtrOutput {
	return i.ToDirectCloudwatchHistoricalDataRetrievalPtrOutputWithContext(context.Background())
}

func (i DirectCloudwatchHistoricalDataRetrievalArgs) ToDirectCloudwatchHistoricalDataRetrievalPtrOutputWithContext(ctx context.Context) DirectCloudwatchHistoricalDataRetrievalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectCloudwatchHistoricalDataRetrievalOutput).ToDirectCloudwatchHistoricalDataRetrievalPtrOutputWithContext(ctx)
}

// DirectCloudwatchHistoricalDataRetrievalPtrInput is an input type that accepts DirectCloudwatchHistoricalDataRetrievalArgs, DirectCloudwatchHistoricalDataRetrievalPtr and DirectCloudwatchHistoricalDataRetrievalPtrOutput values.
// You can construct a concrete instance of `DirectCloudwatchHistoricalDataRetrievalPtrInput` via:
//
//	        DirectCloudwatchHistoricalDataRetrievalArgs{...}
//
//	or:
//
//	        nil
type DirectCloudwatchHistoricalDataRetrievalPtrInput interface {
	pulumi.Input

	ToDirectCloudwatchHistoricalDataRetrievalPtrOutput() DirectCloudwatchHistoricalDataRetrievalPtrOutput
	ToDirectCloudwatchHistoricalDataRetrievalPtrOutputWithContext(context.Context) DirectCloudwatchHistoricalDataRetrievalPtrOutput
}

type directCloudwatchHistoricalDataRetrievalPtrType DirectCloudwatchHistoricalDataRetrievalArgs

func DirectCloudwatchHistoricalDataRetrievalPtr(v *DirectCloudwatchHistoricalDataRetrievalArgs) DirectCloudwatchHistoricalDataRetrievalPtrInput {
	return (*directCloudwatchHistoricalDataRetrievalPtrType)(v)
}

func (*directCloudwatchHistoricalDataRetrievalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectCloudwatchHistoricalDataRetrieval)(nil)).Elem()
}

func (i *directCloudwatchHistoricalDataRetrievalPtrType) ToDirectCloudwatchHistoricalDataRetrievalPtrOutput() DirectCloudwatchHistoricalDataRetrievalPtrOutput {
	return i.ToDirectCloudwatchHistoricalDataRetrievalPtrOutputWithContext(context.Background())
}

func (i *directCloudwatchHistoricalDataRetrievalPtrType) ToDirectCloudwatchHistoricalDataRetrievalPtrOutputWithContext(ctx context.Context) DirectCloudwatchHistoricalDataRetrievalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectCloudwatchHistoricalDataRetrievalPtrOutput)
}

type DirectCloudwatchHistoricalDataRetrievalOutput struct{ *pulumi.OutputState }

func (DirectCloudwatchHistoricalDataRetrievalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectCloudwatchHistoricalDataRetrieval)(nil)).Elem()
}

func (o DirectCloudwatchHistoricalDataRetrievalOutput) ToDirectCloudwatchHistoricalDataRetrievalOutput() DirectCloudwatchHistoricalDataRetrievalOutput {
	return o
}

func (o DirectCloudwatchHistoricalDataRetrievalOutput) ToDirectCloudwatchHistoricalDataRetrievalOutputWithContext(ctx context.Context) DirectCloudwatchHistoricalDataRetrievalOutput {
	return o
}

func (o DirectCloudwatchHistoricalDataRetrievalOutput) ToDirectCloudwatchHistoricalDataRetrievalPtrOutput() DirectCloudwatchHistoricalDataRetrievalPtrOutput {
	return o.ToDirectCloudwatchHistoricalDataRetrievalPtrOutputWithContext(context.Background())
}

func (o DirectCloudwatchHistoricalDataRetrievalOutput) ToDirectCloudwatchHistoricalDataRetrievalPtrOutputWithContext(ctx context.Context) DirectCloudwatchHistoricalDataRetrievalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectCloudwatchHistoricalDataRetrieval) *DirectCloudwatchHistoricalDataRetrieval {
		return &v
	}).(DirectCloudwatchHistoricalDataRetrievalPtrOutput)
}

// Used by default for any SLOs connected to this data source.
func (o DirectCloudwatchHistoricalDataRetrievalOutput) DefaultDurations() DirectCloudwatchHistoricalDataRetrievalDefaultDurationArrayOutput {
	return o.ApplyT(func(v DirectCloudwatchHistoricalDataRetrieval) []DirectCloudwatchHistoricalDataRetrievalDefaultDuration {
		return v.DefaultDurations
	}).(DirectCloudwatchHistoricalDataRetrievalDefaultDurationArrayOutput)
}

// Defines the maximum period for which data can be retrieved.
func (o DirectCloudwatchHistoricalDataRetrievalOutput) MaxDurations() DirectCloudwatchHistoricalDataRetrievalMaxDurationArrayOutput {
	return o.ApplyT(func(v DirectCloudwatchHistoricalDataRetrieval) []DirectCloudwatchHistoricalDataRetrievalMaxDuration {
		return v.MaxDurations
	}).(DirectCloudwatchHistoricalDataRetrievalMaxDurationArrayOutput)
}

type DirectCloudwatchHistoricalDataRetrievalPtrOutput struct{ *pulumi.OutputState }

func (DirectCloudwatchHistoricalDataRetrievalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectCloudwatchHistoricalDataRetrieval)(nil)).Elem()
}

func (o DirectCloudwatchHistoricalDataRetrievalPtrOutput) ToDirectCloudwatchHistoricalDataRetrievalPtrOutput() DirectCloudwatchHistoricalDataRetrievalPtrOutput {
	return o
}

func (o DirectCloudwatchHistoricalDataRetrievalPtrOutput) ToDirectCloudwatchHistoricalDataRetrievalPtrOutputWithContext(ctx context.Context) DirectCloudwatchHistoricalDataRetrievalPtrOutput {
	return o
}

func (o DirectCloudwatchHistoricalDataRetrievalPtrOutput) Elem() DirectCloudwatchHistoricalDataRetrievalOutput {
	return o.ApplyT(func(v *DirectCloudwatchHistoricalDataRetrieval) DirectCloudwatchHistoricalDataRetrieval {
		if v != nil {
			return *v
		}
		var ret DirectCloudwatchHistoricalDataRetrieval
		return ret
	}).(DirectCloudwatchHistoricalDataRetrievalOutput)
}

// Used by default for any SLOs connected to this data source.
func (o DirectCloudwatchHistoricalDataRetrievalPtrOutput) DefaultDurations() DirectCloudwatchHistoricalDataRetrievalDefaultDurationArrayOutput {
	return o.ApplyT(func(v *DirectCloudwatchHistoricalDataRetrieval) []DirectCloudwatchHistoricalDataRetrievalDefaultDuration {
		if v == nil {
			return nil
		}
		return v.DefaultDurations
	}).(DirectCloudwatchHistoricalDataRetrievalDefaultDurationArrayOutput)
}

// Defines the maximum period for which data can be retrieved.
func (o DirectCloudwatchHistoricalDataRetrievalPtrOutput) MaxDurations() DirectCloudwatchHistoricalDataRetrievalMaxDurationArrayOutput {
	return o.ApplyT(func(v *DirectCloudwatchHistoricalDataRetrieval) []DirectCloudwatchHistoricalDataRetrievalMaxDuration {
		if v == nil {
			return nil
		}
		return v.MaxDurations
	}).(DirectCloudwatchHistoricalDataRetrievalMaxDurationArrayOutput)
}

type DirectCloudwatchHistoricalDataRetrievalDefaultDuration struct {
	// Must be one of Minute, Hour, or Day.
	Unit string `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value int `pulumi:"value"`
}

// DirectCloudwatchHistoricalDataRetrievalDefaultDurationInput is an input type that accepts DirectCloudwatchHistoricalDataRetrievalDefaultDurationArgs and DirectCloudwatchHistoricalDataRetrievalDefaultDurationOutput values.
// You can construct a concrete instance of `DirectCloudwatchHistoricalDataRetrievalDefaultDurationInput` via:
//
//	DirectCloudwatchHistoricalDataRetrievalDefaultDurationArgs{...}
type DirectCloudwatchHistoricalDataRetrievalDefaultDurationInput interface {
	pulumi.Input

	ToDirectCloudwatchHistoricalDataRetrievalDefaultDurationOutput() DirectCloudwatchHistoricalDataRetrievalDefaultDurationOutput
	ToDirectCloudwatchHistoricalDataRetrievalDefaultDurationOutputWithContext(context.Context) DirectCloudwatchHistoricalDataRetrievalDefaultDurationOutput
}

type DirectCloudwatchHistoricalDataRetrievalDefaultDurationArgs struct {
	// Must be one of Minute, Hour, or Day.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value pulumi.IntInput `pulumi:"value"`
}

func (DirectCloudwatchHistoricalDataRetrievalDefaultDurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectCloudwatchHistoricalDataRetrievalDefaultDuration)(nil)).Elem()
}

func (i DirectCloudwatchHistoricalDataRetrievalDefaultDurationArgs) ToDirectCloudwatchHistoricalDataRetrievalDefaultDurationOutput() DirectCloudwatchHistoricalDataRetrievalDefaultDurationOutput {
	return i.ToDirectCloudwatchHistoricalDataRetrievalDefaultDurationOutputWithContext(context.Background())
}

func (i DirectCloudwatchHistoricalDataRetrievalDefaultDurationArgs) ToDirectCloudwatchHistoricalDataRetrievalDefaultDurationOutputWithContext(ctx context.Context) DirectCloudwatchHistoricalDataRetrievalDefaultDurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectCloudwatchHistoricalDataRetrievalDefaultDurationOutput)
}

// DirectCloudwatchHistoricalDataRetrievalDefaultDurationArrayInput is an input type that accepts DirectCloudwatchHistoricalDataRetrievalDefaultDurationArray and DirectCloudwatchHistoricalDataRetrievalDefaultDurationArrayOutput values.
// You can construct a concrete instance of `DirectCloudwatchHistoricalDataRetrievalDefaultDurationArrayInput` via:
//
//	DirectCloudwatchHistoricalDataRetrievalDefaultDurationArray{ DirectCloudwatchHistoricalDataRetrievalDefaultDurationArgs{...} }
type DirectCloudwatchHistoricalDataRetrievalDefaultDurationArrayInput interface {
	pulumi.Input

	ToDirectCloudwatchHistoricalDataRetrievalDefaultDurationArrayOutput() DirectCloudwatchHistoricalDataRetrievalDefaultDurationArrayOutput
	ToDirectCloudwatchHistoricalDataRetrievalDefaultDurationArrayOutputWithContext(context.Context) DirectCloudwatchHistoricalDataRetrievalDefaultDurationArrayOutput
}

type DirectCloudwatchHistoricalDataRetrievalDefaultDurationArray []DirectCloudwatchHistoricalDataRetrievalDefaultDurationInput

func (DirectCloudwatchHistoricalDataRetrievalDefaultDurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectCloudwatchHistoricalDataRetrievalDefaultDuration)(nil)).Elem()
}

func (i DirectCloudwatchHistoricalDataRetrievalDefaultDurationArray) ToDirectCloudwatchHistoricalDataRetrievalDefaultDurationArrayOutput() DirectCloudwatchHistoricalDataRetrievalDefaultDurationArrayOutput {
	return i.ToDirectCloudwatchHistoricalDataRetrievalDefaultDurationArrayOutputWithContext(context.Background())
}

func (i DirectCloudwatchHistoricalDataRetrievalDefaultDurationArray) ToDirectCloudwatchHistoricalDataRetrievalDefaultDurationArrayOutputWithContext(ctx context.Context) DirectCloudwatchHistoricalDataRetrievalDefaultDurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectCloudwatchHistoricalDataRetrievalDefaultDurationArrayOutput)
}

type DirectCloudwatchHistoricalDataRetrievalDefaultDurationOutput struct{ *pulumi.OutputState }

func (DirectCloudwatchHistoricalDataRetrievalDefaultDurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectCloudwatchHistoricalDataRetrievalDefaultDuration)(nil)).Elem()
}

func (o DirectCloudwatchHistoricalDataRetrievalDefaultDurationOutput) ToDirectCloudwatchHistoricalDataRetrievalDefaultDurationOutput() DirectCloudwatchHistoricalDataRetrievalDefaultDurationOutput {
	return o
}

func (o DirectCloudwatchHistoricalDataRetrievalDefaultDurationOutput) ToDirectCloudwatchHistoricalDataRetrievalDefaultDurationOutputWithContext(ctx context.Context) DirectCloudwatchHistoricalDataRetrievalDefaultDurationOutput {
	return o
}

// Must be one of Minute, Hour, or Day.
func (o DirectCloudwatchHistoricalDataRetrievalDefaultDurationOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v DirectCloudwatchHistoricalDataRetrievalDefaultDuration) string { return v.Unit }).(pulumi.StringOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectCloudwatchHistoricalDataRetrievalDefaultDurationOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v DirectCloudwatchHistoricalDataRetrievalDefaultDuration) int { return v.Value }).(pulumi.IntOutput)
}

type DirectCloudwatchHistoricalDataRetrievalDefaultDurationArrayOutput struct{ *pulumi.OutputState }

func (DirectCloudwatchHistoricalDataRetrievalDefaultDurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectCloudwatchHistoricalDataRetrievalDefaultDuration)(nil)).Elem()
}

func (o DirectCloudwatchHistoricalDataRetrievalDefaultDurationArrayOutput) ToDirectCloudwatchHistoricalDataRetrievalDefaultDurationArrayOutput() DirectCloudwatchHistoricalDataRetrievalDefaultDurationArrayOutput {
	return o
}

func (o DirectCloudwatchHistoricalDataRetrievalDefaultDurationArrayOutput) ToDirectCloudwatchHistoricalDataRetrievalDefaultDurationArrayOutputWithContext(ctx context.Context) DirectCloudwatchHistoricalDataRetrievalDefaultDurationArrayOutput {
	return o
}

func (o DirectCloudwatchHistoricalDataRetrievalDefaultDurationArrayOutput) Index(i pulumi.IntInput) DirectCloudwatchHistoricalDataRetrievalDefaultDurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DirectCloudwatchHistoricalDataRetrievalDefaultDuration {
		return vs[0].([]DirectCloudwatchHistoricalDataRetrievalDefaultDuration)[vs[1].(int)]
	}).(DirectCloudwatchHistoricalDataRetrievalDefaultDurationOutput)
}

type DirectCloudwatchHistoricalDataRetrievalMaxDuration struct {
	// Must be one of Minute, Hour, or Day.
	Unit string `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value int `pulumi:"value"`
}

// DirectCloudwatchHistoricalDataRetrievalMaxDurationInput is an input type that accepts DirectCloudwatchHistoricalDataRetrievalMaxDurationArgs and DirectCloudwatchHistoricalDataRetrievalMaxDurationOutput values.
// You can construct a concrete instance of `DirectCloudwatchHistoricalDataRetrievalMaxDurationInput` via:
//
//	DirectCloudwatchHistoricalDataRetrievalMaxDurationArgs{...}
type DirectCloudwatchHistoricalDataRetrievalMaxDurationInput interface {
	pulumi.Input

	ToDirectCloudwatchHistoricalDataRetrievalMaxDurationOutput() DirectCloudwatchHistoricalDataRetrievalMaxDurationOutput
	ToDirectCloudwatchHistoricalDataRetrievalMaxDurationOutputWithContext(context.Context) DirectCloudwatchHistoricalDataRetrievalMaxDurationOutput
}

type DirectCloudwatchHistoricalDataRetrievalMaxDurationArgs struct {
	// Must be one of Minute, Hour, or Day.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value pulumi.IntInput `pulumi:"value"`
}

func (DirectCloudwatchHistoricalDataRetrievalMaxDurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectCloudwatchHistoricalDataRetrievalMaxDuration)(nil)).Elem()
}

func (i DirectCloudwatchHistoricalDataRetrievalMaxDurationArgs) ToDirectCloudwatchHistoricalDataRetrievalMaxDurationOutput() DirectCloudwatchHistoricalDataRetrievalMaxDurationOutput {
	return i.ToDirectCloudwatchHistoricalDataRetrievalMaxDurationOutputWithContext(context.Background())
}

func (i DirectCloudwatchHistoricalDataRetrievalMaxDurationArgs) ToDirectCloudwatchHistoricalDataRetrievalMaxDurationOutputWithContext(ctx context.Context) DirectCloudwatchHistoricalDataRetrievalMaxDurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectCloudwatchHistoricalDataRetrievalMaxDurationOutput)
}

// DirectCloudwatchHistoricalDataRetrievalMaxDurationArrayInput is an input type that accepts DirectCloudwatchHistoricalDataRetrievalMaxDurationArray and DirectCloudwatchHistoricalDataRetrievalMaxDurationArrayOutput values.
// You can construct a concrete instance of `DirectCloudwatchHistoricalDataRetrievalMaxDurationArrayInput` via:
//
//	DirectCloudwatchHistoricalDataRetrievalMaxDurationArray{ DirectCloudwatchHistoricalDataRetrievalMaxDurationArgs{...} }
type DirectCloudwatchHistoricalDataRetrievalMaxDurationArrayInput interface {
	pulumi.Input

	ToDirectCloudwatchHistoricalDataRetrievalMaxDurationArrayOutput() DirectCloudwatchHistoricalDataRetrievalMaxDurationArrayOutput
	ToDirectCloudwatchHistoricalDataRetrievalMaxDurationArrayOutputWithContext(context.Context) DirectCloudwatchHistoricalDataRetrievalMaxDurationArrayOutput
}

type DirectCloudwatchHistoricalDataRetrievalMaxDurationArray []DirectCloudwatchHistoricalDataRetrievalMaxDurationInput

func (DirectCloudwatchHistoricalDataRetrievalMaxDurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectCloudwatchHistoricalDataRetrievalMaxDuration)(nil)).Elem()
}

func (i DirectCloudwatchHistoricalDataRetrievalMaxDurationArray) ToDirectCloudwatchHistoricalDataRetrievalMaxDurationArrayOutput() DirectCloudwatchHistoricalDataRetrievalMaxDurationArrayOutput {
	return i.ToDirectCloudwatchHistoricalDataRetrievalMaxDurationArrayOutputWithContext(context.Background())
}

func (i DirectCloudwatchHistoricalDataRetrievalMaxDurationArray) ToDirectCloudwatchHistoricalDataRetrievalMaxDurationArrayOutputWithContext(ctx context.Context) DirectCloudwatchHistoricalDataRetrievalMaxDurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectCloudwatchHistoricalDataRetrievalMaxDurationArrayOutput)
}

type DirectCloudwatchHistoricalDataRetrievalMaxDurationOutput struct{ *pulumi.OutputState }

func (DirectCloudwatchHistoricalDataRetrievalMaxDurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectCloudwatchHistoricalDataRetrievalMaxDuration)(nil)).Elem()
}

func (o DirectCloudwatchHistoricalDataRetrievalMaxDurationOutput) ToDirectCloudwatchHistoricalDataRetrievalMaxDurationOutput() DirectCloudwatchHistoricalDataRetrievalMaxDurationOutput {
	return o
}

func (o DirectCloudwatchHistoricalDataRetrievalMaxDurationOutput) ToDirectCloudwatchHistoricalDataRetrievalMaxDurationOutputWithContext(ctx context.Context) DirectCloudwatchHistoricalDataRetrievalMaxDurationOutput {
	return o
}

// Must be one of Minute, Hour, or Day.
func (o DirectCloudwatchHistoricalDataRetrievalMaxDurationOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v DirectCloudwatchHistoricalDataRetrievalMaxDuration) string { return v.Unit }).(pulumi.StringOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectCloudwatchHistoricalDataRetrievalMaxDurationOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v DirectCloudwatchHistoricalDataRetrievalMaxDuration) int { return v.Value }).(pulumi.IntOutput)
}

type DirectCloudwatchHistoricalDataRetrievalMaxDurationArrayOutput struct{ *pulumi.OutputState }

func (DirectCloudwatchHistoricalDataRetrievalMaxDurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectCloudwatchHistoricalDataRetrievalMaxDuration)(nil)).Elem()
}

func (o DirectCloudwatchHistoricalDataRetrievalMaxDurationArrayOutput) ToDirectCloudwatchHistoricalDataRetrievalMaxDurationArrayOutput() DirectCloudwatchHistoricalDataRetrievalMaxDurationArrayOutput {
	return o
}

func (o DirectCloudwatchHistoricalDataRetrievalMaxDurationArrayOutput) ToDirectCloudwatchHistoricalDataRetrievalMaxDurationArrayOutputWithContext(ctx context.Context) DirectCloudwatchHistoricalDataRetrievalMaxDurationArrayOutput {
	return o
}

func (o DirectCloudwatchHistoricalDataRetrievalMaxDurationArrayOutput) Index(i pulumi.IntInput) DirectCloudwatchHistoricalDataRetrievalMaxDurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DirectCloudwatchHistoricalDataRetrievalMaxDuration {
		return vs[0].([]DirectCloudwatchHistoricalDataRetrievalMaxDuration)[vs[1].(int)]
	}).(DirectCloudwatchHistoricalDataRetrievalMaxDurationOutput)
}

type DirectCloudwatchQueryDelay struct {
	// Must be one of Minute or Second.
	Unit string `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value int `pulumi:"value"`
}

// DirectCloudwatchQueryDelayInput is an input type that accepts DirectCloudwatchQueryDelayArgs and DirectCloudwatchQueryDelayOutput values.
// You can construct a concrete instance of `DirectCloudwatchQueryDelayInput` via:
//
//	DirectCloudwatchQueryDelayArgs{...}
type DirectCloudwatchQueryDelayInput interface {
	pulumi.Input

	ToDirectCloudwatchQueryDelayOutput() DirectCloudwatchQueryDelayOutput
	ToDirectCloudwatchQueryDelayOutputWithContext(context.Context) DirectCloudwatchQueryDelayOutput
}

type DirectCloudwatchQueryDelayArgs struct {
	// Must be one of Minute or Second.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value pulumi.IntInput `pulumi:"value"`
}

func (DirectCloudwatchQueryDelayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectCloudwatchQueryDelay)(nil)).Elem()
}

func (i DirectCloudwatchQueryDelayArgs) ToDirectCloudwatchQueryDelayOutput() DirectCloudwatchQueryDelayOutput {
	return i.ToDirectCloudwatchQueryDelayOutputWithContext(context.Background())
}

func (i DirectCloudwatchQueryDelayArgs) ToDirectCloudwatchQueryDelayOutputWithContext(ctx context.Context) DirectCloudwatchQueryDelayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectCloudwatchQueryDelayOutput)
}

func (i DirectCloudwatchQueryDelayArgs) ToDirectCloudwatchQueryDelayPtrOutput() DirectCloudwatchQueryDelayPtrOutput {
	return i.ToDirectCloudwatchQueryDelayPtrOutputWithContext(context.Background())
}

func (i DirectCloudwatchQueryDelayArgs) ToDirectCloudwatchQueryDelayPtrOutputWithContext(ctx context.Context) DirectCloudwatchQueryDelayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectCloudwatchQueryDelayOutput).ToDirectCloudwatchQueryDelayPtrOutputWithContext(ctx)
}

// DirectCloudwatchQueryDelayPtrInput is an input type that accepts DirectCloudwatchQueryDelayArgs, DirectCloudwatchQueryDelayPtr and DirectCloudwatchQueryDelayPtrOutput values.
// You can construct a concrete instance of `DirectCloudwatchQueryDelayPtrInput` via:
//
//	        DirectCloudwatchQueryDelayArgs{...}
//
//	or:
//
//	        nil
type DirectCloudwatchQueryDelayPtrInput interface {
	pulumi.Input

	ToDirectCloudwatchQueryDelayPtrOutput() DirectCloudwatchQueryDelayPtrOutput
	ToDirectCloudwatchQueryDelayPtrOutputWithContext(context.Context) DirectCloudwatchQueryDelayPtrOutput
}

type directCloudwatchQueryDelayPtrType DirectCloudwatchQueryDelayArgs

func DirectCloudwatchQueryDelayPtr(v *DirectCloudwatchQueryDelayArgs) DirectCloudwatchQueryDelayPtrInput {
	return (*directCloudwatchQueryDelayPtrType)(v)
}

func (*directCloudwatchQueryDelayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectCloudwatchQueryDelay)(nil)).Elem()
}

func (i *directCloudwatchQueryDelayPtrType) ToDirectCloudwatchQueryDelayPtrOutput() DirectCloudwatchQueryDelayPtrOutput {
	return i.ToDirectCloudwatchQueryDelayPtrOutputWithContext(context.Background())
}

func (i *directCloudwatchQueryDelayPtrType) ToDirectCloudwatchQueryDelayPtrOutputWithContext(ctx context.Context) DirectCloudwatchQueryDelayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectCloudwatchQueryDelayPtrOutput)
}

type DirectCloudwatchQueryDelayOutput struct{ *pulumi.OutputState }

func (DirectCloudwatchQueryDelayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectCloudwatchQueryDelay)(nil)).Elem()
}

func (o DirectCloudwatchQueryDelayOutput) ToDirectCloudwatchQueryDelayOutput() DirectCloudwatchQueryDelayOutput {
	return o
}

func (o DirectCloudwatchQueryDelayOutput) ToDirectCloudwatchQueryDelayOutputWithContext(ctx context.Context) DirectCloudwatchQueryDelayOutput {
	return o
}

func (o DirectCloudwatchQueryDelayOutput) ToDirectCloudwatchQueryDelayPtrOutput() DirectCloudwatchQueryDelayPtrOutput {
	return o.ToDirectCloudwatchQueryDelayPtrOutputWithContext(context.Background())
}

func (o DirectCloudwatchQueryDelayOutput) ToDirectCloudwatchQueryDelayPtrOutputWithContext(ctx context.Context) DirectCloudwatchQueryDelayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectCloudwatchQueryDelay) *DirectCloudwatchQueryDelay {
		return &v
	}).(DirectCloudwatchQueryDelayPtrOutput)
}

// Must be one of Minute or Second.
func (o DirectCloudwatchQueryDelayOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v DirectCloudwatchQueryDelay) string { return v.Unit }).(pulumi.StringOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectCloudwatchQueryDelayOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v DirectCloudwatchQueryDelay) int { return v.Value }).(pulumi.IntOutput)
}

type DirectCloudwatchQueryDelayPtrOutput struct{ *pulumi.OutputState }

func (DirectCloudwatchQueryDelayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectCloudwatchQueryDelay)(nil)).Elem()
}

func (o DirectCloudwatchQueryDelayPtrOutput) ToDirectCloudwatchQueryDelayPtrOutput() DirectCloudwatchQueryDelayPtrOutput {
	return o
}

func (o DirectCloudwatchQueryDelayPtrOutput) ToDirectCloudwatchQueryDelayPtrOutputWithContext(ctx context.Context) DirectCloudwatchQueryDelayPtrOutput {
	return o
}

func (o DirectCloudwatchQueryDelayPtrOutput) Elem() DirectCloudwatchQueryDelayOutput {
	return o.ApplyT(func(v *DirectCloudwatchQueryDelay) DirectCloudwatchQueryDelay {
		if v != nil {
			return *v
		}
		var ret DirectCloudwatchQueryDelay
		return ret
	}).(DirectCloudwatchQueryDelayOutput)
}

// Must be one of Minute or Second.
func (o DirectCloudwatchQueryDelayPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectCloudwatchQueryDelay) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectCloudwatchQueryDelayPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DirectCloudwatchQueryDelay) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type DirectDatadogHistoricalDataRetrieval struct {
	// Used by default for any SLOs connected to this data source.
	DefaultDurations []DirectDatadogHistoricalDataRetrievalDefaultDuration `pulumi:"defaultDurations"`
	// Defines the maximum period for which data can be retrieved.
	MaxDurations []DirectDatadogHistoricalDataRetrievalMaxDuration `pulumi:"maxDurations"`
}

// DirectDatadogHistoricalDataRetrievalInput is an input type that accepts DirectDatadogHistoricalDataRetrievalArgs and DirectDatadogHistoricalDataRetrievalOutput values.
// You can construct a concrete instance of `DirectDatadogHistoricalDataRetrievalInput` via:
//
//	DirectDatadogHistoricalDataRetrievalArgs{...}
type DirectDatadogHistoricalDataRetrievalInput interface {
	pulumi.Input

	ToDirectDatadogHistoricalDataRetrievalOutput() DirectDatadogHistoricalDataRetrievalOutput
	ToDirectDatadogHistoricalDataRetrievalOutputWithContext(context.Context) DirectDatadogHistoricalDataRetrievalOutput
}

type DirectDatadogHistoricalDataRetrievalArgs struct {
	// Used by default for any SLOs connected to this data source.
	DefaultDurations DirectDatadogHistoricalDataRetrievalDefaultDurationArrayInput `pulumi:"defaultDurations"`
	// Defines the maximum period for which data can be retrieved.
	MaxDurations DirectDatadogHistoricalDataRetrievalMaxDurationArrayInput `pulumi:"maxDurations"`
}

func (DirectDatadogHistoricalDataRetrievalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectDatadogHistoricalDataRetrieval)(nil)).Elem()
}

func (i DirectDatadogHistoricalDataRetrievalArgs) ToDirectDatadogHistoricalDataRetrievalOutput() DirectDatadogHistoricalDataRetrievalOutput {
	return i.ToDirectDatadogHistoricalDataRetrievalOutputWithContext(context.Background())
}

func (i DirectDatadogHistoricalDataRetrievalArgs) ToDirectDatadogHistoricalDataRetrievalOutputWithContext(ctx context.Context) DirectDatadogHistoricalDataRetrievalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectDatadogHistoricalDataRetrievalOutput)
}

func (i DirectDatadogHistoricalDataRetrievalArgs) ToDirectDatadogHistoricalDataRetrievalPtrOutput() DirectDatadogHistoricalDataRetrievalPtrOutput {
	return i.ToDirectDatadogHistoricalDataRetrievalPtrOutputWithContext(context.Background())
}

func (i DirectDatadogHistoricalDataRetrievalArgs) ToDirectDatadogHistoricalDataRetrievalPtrOutputWithContext(ctx context.Context) DirectDatadogHistoricalDataRetrievalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectDatadogHistoricalDataRetrievalOutput).ToDirectDatadogHistoricalDataRetrievalPtrOutputWithContext(ctx)
}

// DirectDatadogHistoricalDataRetrievalPtrInput is an input type that accepts DirectDatadogHistoricalDataRetrievalArgs, DirectDatadogHistoricalDataRetrievalPtr and DirectDatadogHistoricalDataRetrievalPtrOutput values.
// You can construct a concrete instance of `DirectDatadogHistoricalDataRetrievalPtrInput` via:
//
//	        DirectDatadogHistoricalDataRetrievalArgs{...}
//
//	or:
//
//	        nil
type DirectDatadogHistoricalDataRetrievalPtrInput interface {
	pulumi.Input

	ToDirectDatadogHistoricalDataRetrievalPtrOutput() DirectDatadogHistoricalDataRetrievalPtrOutput
	ToDirectDatadogHistoricalDataRetrievalPtrOutputWithContext(context.Context) DirectDatadogHistoricalDataRetrievalPtrOutput
}

type directDatadogHistoricalDataRetrievalPtrType DirectDatadogHistoricalDataRetrievalArgs

func DirectDatadogHistoricalDataRetrievalPtr(v *DirectDatadogHistoricalDataRetrievalArgs) DirectDatadogHistoricalDataRetrievalPtrInput {
	return (*directDatadogHistoricalDataRetrievalPtrType)(v)
}

func (*directDatadogHistoricalDataRetrievalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectDatadogHistoricalDataRetrieval)(nil)).Elem()
}

func (i *directDatadogHistoricalDataRetrievalPtrType) ToDirectDatadogHistoricalDataRetrievalPtrOutput() DirectDatadogHistoricalDataRetrievalPtrOutput {
	return i.ToDirectDatadogHistoricalDataRetrievalPtrOutputWithContext(context.Background())
}

func (i *directDatadogHistoricalDataRetrievalPtrType) ToDirectDatadogHistoricalDataRetrievalPtrOutputWithContext(ctx context.Context) DirectDatadogHistoricalDataRetrievalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectDatadogHistoricalDataRetrievalPtrOutput)
}

type DirectDatadogHistoricalDataRetrievalOutput struct{ *pulumi.OutputState }

func (DirectDatadogHistoricalDataRetrievalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectDatadogHistoricalDataRetrieval)(nil)).Elem()
}

func (o DirectDatadogHistoricalDataRetrievalOutput) ToDirectDatadogHistoricalDataRetrievalOutput() DirectDatadogHistoricalDataRetrievalOutput {
	return o
}

func (o DirectDatadogHistoricalDataRetrievalOutput) ToDirectDatadogHistoricalDataRetrievalOutputWithContext(ctx context.Context) DirectDatadogHistoricalDataRetrievalOutput {
	return o
}

func (o DirectDatadogHistoricalDataRetrievalOutput) ToDirectDatadogHistoricalDataRetrievalPtrOutput() DirectDatadogHistoricalDataRetrievalPtrOutput {
	return o.ToDirectDatadogHistoricalDataRetrievalPtrOutputWithContext(context.Background())
}

func (o DirectDatadogHistoricalDataRetrievalOutput) ToDirectDatadogHistoricalDataRetrievalPtrOutputWithContext(ctx context.Context) DirectDatadogHistoricalDataRetrievalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectDatadogHistoricalDataRetrieval) *DirectDatadogHistoricalDataRetrieval {
		return &v
	}).(DirectDatadogHistoricalDataRetrievalPtrOutput)
}

// Used by default for any SLOs connected to this data source.
func (o DirectDatadogHistoricalDataRetrievalOutput) DefaultDurations() DirectDatadogHistoricalDataRetrievalDefaultDurationArrayOutput {
	return o.ApplyT(func(v DirectDatadogHistoricalDataRetrieval) []DirectDatadogHistoricalDataRetrievalDefaultDuration {
		return v.DefaultDurations
	}).(DirectDatadogHistoricalDataRetrievalDefaultDurationArrayOutput)
}

// Defines the maximum period for which data can be retrieved.
func (o DirectDatadogHistoricalDataRetrievalOutput) MaxDurations() DirectDatadogHistoricalDataRetrievalMaxDurationArrayOutput {
	return o.ApplyT(func(v DirectDatadogHistoricalDataRetrieval) []DirectDatadogHistoricalDataRetrievalMaxDuration {
		return v.MaxDurations
	}).(DirectDatadogHistoricalDataRetrievalMaxDurationArrayOutput)
}

type DirectDatadogHistoricalDataRetrievalPtrOutput struct{ *pulumi.OutputState }

func (DirectDatadogHistoricalDataRetrievalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectDatadogHistoricalDataRetrieval)(nil)).Elem()
}

func (o DirectDatadogHistoricalDataRetrievalPtrOutput) ToDirectDatadogHistoricalDataRetrievalPtrOutput() DirectDatadogHistoricalDataRetrievalPtrOutput {
	return o
}

func (o DirectDatadogHistoricalDataRetrievalPtrOutput) ToDirectDatadogHistoricalDataRetrievalPtrOutputWithContext(ctx context.Context) DirectDatadogHistoricalDataRetrievalPtrOutput {
	return o
}

func (o DirectDatadogHistoricalDataRetrievalPtrOutput) Elem() DirectDatadogHistoricalDataRetrievalOutput {
	return o.ApplyT(func(v *DirectDatadogHistoricalDataRetrieval) DirectDatadogHistoricalDataRetrieval {
		if v != nil {
			return *v
		}
		var ret DirectDatadogHistoricalDataRetrieval
		return ret
	}).(DirectDatadogHistoricalDataRetrievalOutput)
}

// Used by default for any SLOs connected to this data source.
func (o DirectDatadogHistoricalDataRetrievalPtrOutput) DefaultDurations() DirectDatadogHistoricalDataRetrievalDefaultDurationArrayOutput {
	return o.ApplyT(func(v *DirectDatadogHistoricalDataRetrieval) []DirectDatadogHistoricalDataRetrievalDefaultDuration {
		if v == nil {
			return nil
		}
		return v.DefaultDurations
	}).(DirectDatadogHistoricalDataRetrievalDefaultDurationArrayOutput)
}

// Defines the maximum period for which data can be retrieved.
func (o DirectDatadogHistoricalDataRetrievalPtrOutput) MaxDurations() DirectDatadogHistoricalDataRetrievalMaxDurationArrayOutput {
	return o.ApplyT(func(v *DirectDatadogHistoricalDataRetrieval) []DirectDatadogHistoricalDataRetrievalMaxDuration {
		if v == nil {
			return nil
		}
		return v.MaxDurations
	}).(DirectDatadogHistoricalDataRetrievalMaxDurationArrayOutput)
}

type DirectDatadogHistoricalDataRetrievalDefaultDuration struct {
	// Must be one of Minute, Hour, or Day.
	Unit string `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value int `pulumi:"value"`
}

// DirectDatadogHistoricalDataRetrievalDefaultDurationInput is an input type that accepts DirectDatadogHistoricalDataRetrievalDefaultDurationArgs and DirectDatadogHistoricalDataRetrievalDefaultDurationOutput values.
// You can construct a concrete instance of `DirectDatadogHistoricalDataRetrievalDefaultDurationInput` via:
//
//	DirectDatadogHistoricalDataRetrievalDefaultDurationArgs{...}
type DirectDatadogHistoricalDataRetrievalDefaultDurationInput interface {
	pulumi.Input

	ToDirectDatadogHistoricalDataRetrievalDefaultDurationOutput() DirectDatadogHistoricalDataRetrievalDefaultDurationOutput
	ToDirectDatadogHistoricalDataRetrievalDefaultDurationOutputWithContext(context.Context) DirectDatadogHistoricalDataRetrievalDefaultDurationOutput
}

type DirectDatadogHistoricalDataRetrievalDefaultDurationArgs struct {
	// Must be one of Minute, Hour, or Day.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value pulumi.IntInput `pulumi:"value"`
}

func (DirectDatadogHistoricalDataRetrievalDefaultDurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectDatadogHistoricalDataRetrievalDefaultDuration)(nil)).Elem()
}

func (i DirectDatadogHistoricalDataRetrievalDefaultDurationArgs) ToDirectDatadogHistoricalDataRetrievalDefaultDurationOutput() DirectDatadogHistoricalDataRetrievalDefaultDurationOutput {
	return i.ToDirectDatadogHistoricalDataRetrievalDefaultDurationOutputWithContext(context.Background())
}

func (i DirectDatadogHistoricalDataRetrievalDefaultDurationArgs) ToDirectDatadogHistoricalDataRetrievalDefaultDurationOutputWithContext(ctx context.Context) DirectDatadogHistoricalDataRetrievalDefaultDurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectDatadogHistoricalDataRetrievalDefaultDurationOutput)
}

// DirectDatadogHistoricalDataRetrievalDefaultDurationArrayInput is an input type that accepts DirectDatadogHistoricalDataRetrievalDefaultDurationArray and DirectDatadogHistoricalDataRetrievalDefaultDurationArrayOutput values.
// You can construct a concrete instance of `DirectDatadogHistoricalDataRetrievalDefaultDurationArrayInput` via:
//
//	DirectDatadogHistoricalDataRetrievalDefaultDurationArray{ DirectDatadogHistoricalDataRetrievalDefaultDurationArgs{...} }
type DirectDatadogHistoricalDataRetrievalDefaultDurationArrayInput interface {
	pulumi.Input

	ToDirectDatadogHistoricalDataRetrievalDefaultDurationArrayOutput() DirectDatadogHistoricalDataRetrievalDefaultDurationArrayOutput
	ToDirectDatadogHistoricalDataRetrievalDefaultDurationArrayOutputWithContext(context.Context) DirectDatadogHistoricalDataRetrievalDefaultDurationArrayOutput
}

type DirectDatadogHistoricalDataRetrievalDefaultDurationArray []DirectDatadogHistoricalDataRetrievalDefaultDurationInput

func (DirectDatadogHistoricalDataRetrievalDefaultDurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectDatadogHistoricalDataRetrievalDefaultDuration)(nil)).Elem()
}

func (i DirectDatadogHistoricalDataRetrievalDefaultDurationArray) ToDirectDatadogHistoricalDataRetrievalDefaultDurationArrayOutput() DirectDatadogHistoricalDataRetrievalDefaultDurationArrayOutput {
	return i.ToDirectDatadogHistoricalDataRetrievalDefaultDurationArrayOutputWithContext(context.Background())
}

func (i DirectDatadogHistoricalDataRetrievalDefaultDurationArray) ToDirectDatadogHistoricalDataRetrievalDefaultDurationArrayOutputWithContext(ctx context.Context) DirectDatadogHistoricalDataRetrievalDefaultDurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectDatadogHistoricalDataRetrievalDefaultDurationArrayOutput)
}

type DirectDatadogHistoricalDataRetrievalDefaultDurationOutput struct{ *pulumi.OutputState }

func (DirectDatadogHistoricalDataRetrievalDefaultDurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectDatadogHistoricalDataRetrievalDefaultDuration)(nil)).Elem()
}

func (o DirectDatadogHistoricalDataRetrievalDefaultDurationOutput) ToDirectDatadogHistoricalDataRetrievalDefaultDurationOutput() DirectDatadogHistoricalDataRetrievalDefaultDurationOutput {
	return o
}

func (o DirectDatadogHistoricalDataRetrievalDefaultDurationOutput) ToDirectDatadogHistoricalDataRetrievalDefaultDurationOutputWithContext(ctx context.Context) DirectDatadogHistoricalDataRetrievalDefaultDurationOutput {
	return o
}

// Must be one of Minute, Hour, or Day.
func (o DirectDatadogHistoricalDataRetrievalDefaultDurationOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v DirectDatadogHistoricalDataRetrievalDefaultDuration) string { return v.Unit }).(pulumi.StringOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectDatadogHistoricalDataRetrievalDefaultDurationOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v DirectDatadogHistoricalDataRetrievalDefaultDuration) int { return v.Value }).(pulumi.IntOutput)
}

type DirectDatadogHistoricalDataRetrievalDefaultDurationArrayOutput struct{ *pulumi.OutputState }

func (DirectDatadogHistoricalDataRetrievalDefaultDurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectDatadogHistoricalDataRetrievalDefaultDuration)(nil)).Elem()
}

func (o DirectDatadogHistoricalDataRetrievalDefaultDurationArrayOutput) ToDirectDatadogHistoricalDataRetrievalDefaultDurationArrayOutput() DirectDatadogHistoricalDataRetrievalDefaultDurationArrayOutput {
	return o
}

func (o DirectDatadogHistoricalDataRetrievalDefaultDurationArrayOutput) ToDirectDatadogHistoricalDataRetrievalDefaultDurationArrayOutputWithContext(ctx context.Context) DirectDatadogHistoricalDataRetrievalDefaultDurationArrayOutput {
	return o
}

func (o DirectDatadogHistoricalDataRetrievalDefaultDurationArrayOutput) Index(i pulumi.IntInput) DirectDatadogHistoricalDataRetrievalDefaultDurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DirectDatadogHistoricalDataRetrievalDefaultDuration {
		return vs[0].([]DirectDatadogHistoricalDataRetrievalDefaultDuration)[vs[1].(int)]
	}).(DirectDatadogHistoricalDataRetrievalDefaultDurationOutput)
}

type DirectDatadogHistoricalDataRetrievalMaxDuration struct {
	// Must be one of Minute, Hour, or Day.
	Unit string `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value int `pulumi:"value"`
}

// DirectDatadogHistoricalDataRetrievalMaxDurationInput is an input type that accepts DirectDatadogHistoricalDataRetrievalMaxDurationArgs and DirectDatadogHistoricalDataRetrievalMaxDurationOutput values.
// You can construct a concrete instance of `DirectDatadogHistoricalDataRetrievalMaxDurationInput` via:
//
//	DirectDatadogHistoricalDataRetrievalMaxDurationArgs{...}
type DirectDatadogHistoricalDataRetrievalMaxDurationInput interface {
	pulumi.Input

	ToDirectDatadogHistoricalDataRetrievalMaxDurationOutput() DirectDatadogHistoricalDataRetrievalMaxDurationOutput
	ToDirectDatadogHistoricalDataRetrievalMaxDurationOutputWithContext(context.Context) DirectDatadogHistoricalDataRetrievalMaxDurationOutput
}

type DirectDatadogHistoricalDataRetrievalMaxDurationArgs struct {
	// Must be one of Minute, Hour, or Day.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value pulumi.IntInput `pulumi:"value"`
}

func (DirectDatadogHistoricalDataRetrievalMaxDurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectDatadogHistoricalDataRetrievalMaxDuration)(nil)).Elem()
}

func (i DirectDatadogHistoricalDataRetrievalMaxDurationArgs) ToDirectDatadogHistoricalDataRetrievalMaxDurationOutput() DirectDatadogHistoricalDataRetrievalMaxDurationOutput {
	return i.ToDirectDatadogHistoricalDataRetrievalMaxDurationOutputWithContext(context.Background())
}

func (i DirectDatadogHistoricalDataRetrievalMaxDurationArgs) ToDirectDatadogHistoricalDataRetrievalMaxDurationOutputWithContext(ctx context.Context) DirectDatadogHistoricalDataRetrievalMaxDurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectDatadogHistoricalDataRetrievalMaxDurationOutput)
}

// DirectDatadogHistoricalDataRetrievalMaxDurationArrayInput is an input type that accepts DirectDatadogHistoricalDataRetrievalMaxDurationArray and DirectDatadogHistoricalDataRetrievalMaxDurationArrayOutput values.
// You can construct a concrete instance of `DirectDatadogHistoricalDataRetrievalMaxDurationArrayInput` via:
//
//	DirectDatadogHistoricalDataRetrievalMaxDurationArray{ DirectDatadogHistoricalDataRetrievalMaxDurationArgs{...} }
type DirectDatadogHistoricalDataRetrievalMaxDurationArrayInput interface {
	pulumi.Input

	ToDirectDatadogHistoricalDataRetrievalMaxDurationArrayOutput() DirectDatadogHistoricalDataRetrievalMaxDurationArrayOutput
	ToDirectDatadogHistoricalDataRetrievalMaxDurationArrayOutputWithContext(context.Context) DirectDatadogHistoricalDataRetrievalMaxDurationArrayOutput
}

type DirectDatadogHistoricalDataRetrievalMaxDurationArray []DirectDatadogHistoricalDataRetrievalMaxDurationInput

func (DirectDatadogHistoricalDataRetrievalMaxDurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectDatadogHistoricalDataRetrievalMaxDuration)(nil)).Elem()
}

func (i DirectDatadogHistoricalDataRetrievalMaxDurationArray) ToDirectDatadogHistoricalDataRetrievalMaxDurationArrayOutput() DirectDatadogHistoricalDataRetrievalMaxDurationArrayOutput {
	return i.ToDirectDatadogHistoricalDataRetrievalMaxDurationArrayOutputWithContext(context.Background())
}

func (i DirectDatadogHistoricalDataRetrievalMaxDurationArray) ToDirectDatadogHistoricalDataRetrievalMaxDurationArrayOutputWithContext(ctx context.Context) DirectDatadogHistoricalDataRetrievalMaxDurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectDatadogHistoricalDataRetrievalMaxDurationArrayOutput)
}

type DirectDatadogHistoricalDataRetrievalMaxDurationOutput struct{ *pulumi.OutputState }

func (DirectDatadogHistoricalDataRetrievalMaxDurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectDatadogHistoricalDataRetrievalMaxDuration)(nil)).Elem()
}

func (o DirectDatadogHistoricalDataRetrievalMaxDurationOutput) ToDirectDatadogHistoricalDataRetrievalMaxDurationOutput() DirectDatadogHistoricalDataRetrievalMaxDurationOutput {
	return o
}

func (o DirectDatadogHistoricalDataRetrievalMaxDurationOutput) ToDirectDatadogHistoricalDataRetrievalMaxDurationOutputWithContext(ctx context.Context) DirectDatadogHistoricalDataRetrievalMaxDurationOutput {
	return o
}

// Must be one of Minute, Hour, or Day.
func (o DirectDatadogHistoricalDataRetrievalMaxDurationOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v DirectDatadogHistoricalDataRetrievalMaxDuration) string { return v.Unit }).(pulumi.StringOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectDatadogHistoricalDataRetrievalMaxDurationOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v DirectDatadogHistoricalDataRetrievalMaxDuration) int { return v.Value }).(pulumi.IntOutput)
}

type DirectDatadogHistoricalDataRetrievalMaxDurationArrayOutput struct{ *pulumi.OutputState }

func (DirectDatadogHistoricalDataRetrievalMaxDurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectDatadogHistoricalDataRetrievalMaxDuration)(nil)).Elem()
}

func (o DirectDatadogHistoricalDataRetrievalMaxDurationArrayOutput) ToDirectDatadogHistoricalDataRetrievalMaxDurationArrayOutput() DirectDatadogHistoricalDataRetrievalMaxDurationArrayOutput {
	return o
}

func (o DirectDatadogHistoricalDataRetrievalMaxDurationArrayOutput) ToDirectDatadogHistoricalDataRetrievalMaxDurationArrayOutputWithContext(ctx context.Context) DirectDatadogHistoricalDataRetrievalMaxDurationArrayOutput {
	return o
}

func (o DirectDatadogHistoricalDataRetrievalMaxDurationArrayOutput) Index(i pulumi.IntInput) DirectDatadogHistoricalDataRetrievalMaxDurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DirectDatadogHistoricalDataRetrievalMaxDuration {
		return vs[0].([]DirectDatadogHistoricalDataRetrievalMaxDuration)[vs[1].(int)]
	}).(DirectDatadogHistoricalDataRetrievalMaxDurationOutput)
}

type DirectDatadogQueryDelay struct {
	// Must be one of Minute or Second.
	Unit string `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value int `pulumi:"value"`
}

// DirectDatadogQueryDelayInput is an input type that accepts DirectDatadogQueryDelayArgs and DirectDatadogQueryDelayOutput values.
// You can construct a concrete instance of `DirectDatadogQueryDelayInput` via:
//
//	DirectDatadogQueryDelayArgs{...}
type DirectDatadogQueryDelayInput interface {
	pulumi.Input

	ToDirectDatadogQueryDelayOutput() DirectDatadogQueryDelayOutput
	ToDirectDatadogQueryDelayOutputWithContext(context.Context) DirectDatadogQueryDelayOutput
}

type DirectDatadogQueryDelayArgs struct {
	// Must be one of Minute or Second.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value pulumi.IntInput `pulumi:"value"`
}

func (DirectDatadogQueryDelayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectDatadogQueryDelay)(nil)).Elem()
}

func (i DirectDatadogQueryDelayArgs) ToDirectDatadogQueryDelayOutput() DirectDatadogQueryDelayOutput {
	return i.ToDirectDatadogQueryDelayOutputWithContext(context.Background())
}

func (i DirectDatadogQueryDelayArgs) ToDirectDatadogQueryDelayOutputWithContext(ctx context.Context) DirectDatadogQueryDelayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectDatadogQueryDelayOutput)
}

func (i DirectDatadogQueryDelayArgs) ToDirectDatadogQueryDelayPtrOutput() DirectDatadogQueryDelayPtrOutput {
	return i.ToDirectDatadogQueryDelayPtrOutputWithContext(context.Background())
}

func (i DirectDatadogQueryDelayArgs) ToDirectDatadogQueryDelayPtrOutputWithContext(ctx context.Context) DirectDatadogQueryDelayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectDatadogQueryDelayOutput).ToDirectDatadogQueryDelayPtrOutputWithContext(ctx)
}

// DirectDatadogQueryDelayPtrInput is an input type that accepts DirectDatadogQueryDelayArgs, DirectDatadogQueryDelayPtr and DirectDatadogQueryDelayPtrOutput values.
// You can construct a concrete instance of `DirectDatadogQueryDelayPtrInput` via:
//
//	        DirectDatadogQueryDelayArgs{...}
//
//	or:
//
//	        nil
type DirectDatadogQueryDelayPtrInput interface {
	pulumi.Input

	ToDirectDatadogQueryDelayPtrOutput() DirectDatadogQueryDelayPtrOutput
	ToDirectDatadogQueryDelayPtrOutputWithContext(context.Context) DirectDatadogQueryDelayPtrOutput
}

type directDatadogQueryDelayPtrType DirectDatadogQueryDelayArgs

func DirectDatadogQueryDelayPtr(v *DirectDatadogQueryDelayArgs) DirectDatadogQueryDelayPtrInput {
	return (*directDatadogQueryDelayPtrType)(v)
}

func (*directDatadogQueryDelayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectDatadogQueryDelay)(nil)).Elem()
}

func (i *directDatadogQueryDelayPtrType) ToDirectDatadogQueryDelayPtrOutput() DirectDatadogQueryDelayPtrOutput {
	return i.ToDirectDatadogQueryDelayPtrOutputWithContext(context.Background())
}

func (i *directDatadogQueryDelayPtrType) ToDirectDatadogQueryDelayPtrOutputWithContext(ctx context.Context) DirectDatadogQueryDelayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectDatadogQueryDelayPtrOutput)
}

type DirectDatadogQueryDelayOutput struct{ *pulumi.OutputState }

func (DirectDatadogQueryDelayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectDatadogQueryDelay)(nil)).Elem()
}

func (o DirectDatadogQueryDelayOutput) ToDirectDatadogQueryDelayOutput() DirectDatadogQueryDelayOutput {
	return o
}

func (o DirectDatadogQueryDelayOutput) ToDirectDatadogQueryDelayOutputWithContext(ctx context.Context) DirectDatadogQueryDelayOutput {
	return o
}

func (o DirectDatadogQueryDelayOutput) ToDirectDatadogQueryDelayPtrOutput() DirectDatadogQueryDelayPtrOutput {
	return o.ToDirectDatadogQueryDelayPtrOutputWithContext(context.Background())
}

func (o DirectDatadogQueryDelayOutput) ToDirectDatadogQueryDelayPtrOutputWithContext(ctx context.Context) DirectDatadogQueryDelayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectDatadogQueryDelay) *DirectDatadogQueryDelay {
		return &v
	}).(DirectDatadogQueryDelayPtrOutput)
}

// Must be one of Minute or Second.
func (o DirectDatadogQueryDelayOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v DirectDatadogQueryDelay) string { return v.Unit }).(pulumi.StringOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectDatadogQueryDelayOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v DirectDatadogQueryDelay) int { return v.Value }).(pulumi.IntOutput)
}

type DirectDatadogQueryDelayPtrOutput struct{ *pulumi.OutputState }

func (DirectDatadogQueryDelayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectDatadogQueryDelay)(nil)).Elem()
}

func (o DirectDatadogQueryDelayPtrOutput) ToDirectDatadogQueryDelayPtrOutput() DirectDatadogQueryDelayPtrOutput {
	return o
}

func (o DirectDatadogQueryDelayPtrOutput) ToDirectDatadogQueryDelayPtrOutputWithContext(ctx context.Context) DirectDatadogQueryDelayPtrOutput {
	return o
}

func (o DirectDatadogQueryDelayPtrOutput) Elem() DirectDatadogQueryDelayOutput {
	return o.ApplyT(func(v *DirectDatadogQueryDelay) DirectDatadogQueryDelay {
		if v != nil {
			return *v
		}
		var ret DirectDatadogQueryDelay
		return ret
	}).(DirectDatadogQueryDelayOutput)
}

// Must be one of Minute or Second.
func (o DirectDatadogQueryDelayPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectDatadogQueryDelay) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectDatadogQueryDelayPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DirectDatadogQueryDelay) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type DirectDynatraceHistoricalDataRetrieval struct {
	// Used by default for any SLOs connected to this data source.
	DefaultDurations []DirectDynatraceHistoricalDataRetrievalDefaultDuration `pulumi:"defaultDurations"`
	// Defines the maximum period for which data can be retrieved.
	MaxDurations []DirectDynatraceHistoricalDataRetrievalMaxDuration `pulumi:"maxDurations"`
}

// DirectDynatraceHistoricalDataRetrievalInput is an input type that accepts DirectDynatraceHistoricalDataRetrievalArgs and DirectDynatraceHistoricalDataRetrievalOutput values.
// You can construct a concrete instance of `DirectDynatraceHistoricalDataRetrievalInput` via:
//
//	DirectDynatraceHistoricalDataRetrievalArgs{...}
type DirectDynatraceHistoricalDataRetrievalInput interface {
	pulumi.Input

	ToDirectDynatraceHistoricalDataRetrievalOutput() DirectDynatraceHistoricalDataRetrievalOutput
	ToDirectDynatraceHistoricalDataRetrievalOutputWithContext(context.Context) DirectDynatraceHistoricalDataRetrievalOutput
}

type DirectDynatraceHistoricalDataRetrievalArgs struct {
	// Used by default for any SLOs connected to this data source.
	DefaultDurations DirectDynatraceHistoricalDataRetrievalDefaultDurationArrayInput `pulumi:"defaultDurations"`
	// Defines the maximum period for which data can be retrieved.
	MaxDurations DirectDynatraceHistoricalDataRetrievalMaxDurationArrayInput `pulumi:"maxDurations"`
}

func (DirectDynatraceHistoricalDataRetrievalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectDynatraceHistoricalDataRetrieval)(nil)).Elem()
}

func (i DirectDynatraceHistoricalDataRetrievalArgs) ToDirectDynatraceHistoricalDataRetrievalOutput() DirectDynatraceHistoricalDataRetrievalOutput {
	return i.ToDirectDynatraceHistoricalDataRetrievalOutputWithContext(context.Background())
}

func (i DirectDynatraceHistoricalDataRetrievalArgs) ToDirectDynatraceHistoricalDataRetrievalOutputWithContext(ctx context.Context) DirectDynatraceHistoricalDataRetrievalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectDynatraceHistoricalDataRetrievalOutput)
}

func (i DirectDynatraceHistoricalDataRetrievalArgs) ToDirectDynatraceHistoricalDataRetrievalPtrOutput() DirectDynatraceHistoricalDataRetrievalPtrOutput {
	return i.ToDirectDynatraceHistoricalDataRetrievalPtrOutputWithContext(context.Background())
}

func (i DirectDynatraceHistoricalDataRetrievalArgs) ToDirectDynatraceHistoricalDataRetrievalPtrOutputWithContext(ctx context.Context) DirectDynatraceHistoricalDataRetrievalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectDynatraceHistoricalDataRetrievalOutput).ToDirectDynatraceHistoricalDataRetrievalPtrOutputWithContext(ctx)
}

// DirectDynatraceHistoricalDataRetrievalPtrInput is an input type that accepts DirectDynatraceHistoricalDataRetrievalArgs, DirectDynatraceHistoricalDataRetrievalPtr and DirectDynatraceHistoricalDataRetrievalPtrOutput values.
// You can construct a concrete instance of `DirectDynatraceHistoricalDataRetrievalPtrInput` via:
//
//	        DirectDynatraceHistoricalDataRetrievalArgs{...}
//
//	or:
//
//	        nil
type DirectDynatraceHistoricalDataRetrievalPtrInput interface {
	pulumi.Input

	ToDirectDynatraceHistoricalDataRetrievalPtrOutput() DirectDynatraceHistoricalDataRetrievalPtrOutput
	ToDirectDynatraceHistoricalDataRetrievalPtrOutputWithContext(context.Context) DirectDynatraceHistoricalDataRetrievalPtrOutput
}

type directDynatraceHistoricalDataRetrievalPtrType DirectDynatraceHistoricalDataRetrievalArgs

func DirectDynatraceHistoricalDataRetrievalPtr(v *DirectDynatraceHistoricalDataRetrievalArgs) DirectDynatraceHistoricalDataRetrievalPtrInput {
	return (*directDynatraceHistoricalDataRetrievalPtrType)(v)
}

func (*directDynatraceHistoricalDataRetrievalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectDynatraceHistoricalDataRetrieval)(nil)).Elem()
}

func (i *directDynatraceHistoricalDataRetrievalPtrType) ToDirectDynatraceHistoricalDataRetrievalPtrOutput() DirectDynatraceHistoricalDataRetrievalPtrOutput {
	return i.ToDirectDynatraceHistoricalDataRetrievalPtrOutputWithContext(context.Background())
}

func (i *directDynatraceHistoricalDataRetrievalPtrType) ToDirectDynatraceHistoricalDataRetrievalPtrOutputWithContext(ctx context.Context) DirectDynatraceHistoricalDataRetrievalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectDynatraceHistoricalDataRetrievalPtrOutput)
}

type DirectDynatraceHistoricalDataRetrievalOutput struct{ *pulumi.OutputState }

func (DirectDynatraceHistoricalDataRetrievalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectDynatraceHistoricalDataRetrieval)(nil)).Elem()
}

func (o DirectDynatraceHistoricalDataRetrievalOutput) ToDirectDynatraceHistoricalDataRetrievalOutput() DirectDynatraceHistoricalDataRetrievalOutput {
	return o
}

func (o DirectDynatraceHistoricalDataRetrievalOutput) ToDirectDynatraceHistoricalDataRetrievalOutputWithContext(ctx context.Context) DirectDynatraceHistoricalDataRetrievalOutput {
	return o
}

func (o DirectDynatraceHistoricalDataRetrievalOutput) ToDirectDynatraceHistoricalDataRetrievalPtrOutput() DirectDynatraceHistoricalDataRetrievalPtrOutput {
	return o.ToDirectDynatraceHistoricalDataRetrievalPtrOutputWithContext(context.Background())
}

func (o DirectDynatraceHistoricalDataRetrievalOutput) ToDirectDynatraceHistoricalDataRetrievalPtrOutputWithContext(ctx context.Context) DirectDynatraceHistoricalDataRetrievalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectDynatraceHistoricalDataRetrieval) *DirectDynatraceHistoricalDataRetrieval {
		return &v
	}).(DirectDynatraceHistoricalDataRetrievalPtrOutput)
}

// Used by default for any SLOs connected to this data source.
func (o DirectDynatraceHistoricalDataRetrievalOutput) DefaultDurations() DirectDynatraceHistoricalDataRetrievalDefaultDurationArrayOutput {
	return o.ApplyT(func(v DirectDynatraceHistoricalDataRetrieval) []DirectDynatraceHistoricalDataRetrievalDefaultDuration {
		return v.DefaultDurations
	}).(DirectDynatraceHistoricalDataRetrievalDefaultDurationArrayOutput)
}

// Defines the maximum period for which data can be retrieved.
func (o DirectDynatraceHistoricalDataRetrievalOutput) MaxDurations() DirectDynatraceHistoricalDataRetrievalMaxDurationArrayOutput {
	return o.ApplyT(func(v DirectDynatraceHistoricalDataRetrieval) []DirectDynatraceHistoricalDataRetrievalMaxDuration {
		return v.MaxDurations
	}).(DirectDynatraceHistoricalDataRetrievalMaxDurationArrayOutput)
}

type DirectDynatraceHistoricalDataRetrievalPtrOutput struct{ *pulumi.OutputState }

func (DirectDynatraceHistoricalDataRetrievalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectDynatraceHistoricalDataRetrieval)(nil)).Elem()
}

func (o DirectDynatraceHistoricalDataRetrievalPtrOutput) ToDirectDynatraceHistoricalDataRetrievalPtrOutput() DirectDynatraceHistoricalDataRetrievalPtrOutput {
	return o
}

func (o DirectDynatraceHistoricalDataRetrievalPtrOutput) ToDirectDynatraceHistoricalDataRetrievalPtrOutputWithContext(ctx context.Context) DirectDynatraceHistoricalDataRetrievalPtrOutput {
	return o
}

func (o DirectDynatraceHistoricalDataRetrievalPtrOutput) Elem() DirectDynatraceHistoricalDataRetrievalOutput {
	return o.ApplyT(func(v *DirectDynatraceHistoricalDataRetrieval) DirectDynatraceHistoricalDataRetrieval {
		if v != nil {
			return *v
		}
		var ret DirectDynatraceHistoricalDataRetrieval
		return ret
	}).(DirectDynatraceHistoricalDataRetrievalOutput)
}

// Used by default for any SLOs connected to this data source.
func (o DirectDynatraceHistoricalDataRetrievalPtrOutput) DefaultDurations() DirectDynatraceHistoricalDataRetrievalDefaultDurationArrayOutput {
	return o.ApplyT(func(v *DirectDynatraceHistoricalDataRetrieval) []DirectDynatraceHistoricalDataRetrievalDefaultDuration {
		if v == nil {
			return nil
		}
		return v.DefaultDurations
	}).(DirectDynatraceHistoricalDataRetrievalDefaultDurationArrayOutput)
}

// Defines the maximum period for which data can be retrieved.
func (o DirectDynatraceHistoricalDataRetrievalPtrOutput) MaxDurations() DirectDynatraceHistoricalDataRetrievalMaxDurationArrayOutput {
	return o.ApplyT(func(v *DirectDynatraceHistoricalDataRetrieval) []DirectDynatraceHistoricalDataRetrievalMaxDuration {
		if v == nil {
			return nil
		}
		return v.MaxDurations
	}).(DirectDynatraceHistoricalDataRetrievalMaxDurationArrayOutput)
}

type DirectDynatraceHistoricalDataRetrievalDefaultDuration struct {
	// Must be one of Minute, Hour, or Day.
	Unit string `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value int `pulumi:"value"`
}

// DirectDynatraceHistoricalDataRetrievalDefaultDurationInput is an input type that accepts DirectDynatraceHistoricalDataRetrievalDefaultDurationArgs and DirectDynatraceHistoricalDataRetrievalDefaultDurationOutput values.
// You can construct a concrete instance of `DirectDynatraceHistoricalDataRetrievalDefaultDurationInput` via:
//
//	DirectDynatraceHistoricalDataRetrievalDefaultDurationArgs{...}
type DirectDynatraceHistoricalDataRetrievalDefaultDurationInput interface {
	pulumi.Input

	ToDirectDynatraceHistoricalDataRetrievalDefaultDurationOutput() DirectDynatraceHistoricalDataRetrievalDefaultDurationOutput
	ToDirectDynatraceHistoricalDataRetrievalDefaultDurationOutputWithContext(context.Context) DirectDynatraceHistoricalDataRetrievalDefaultDurationOutput
}

type DirectDynatraceHistoricalDataRetrievalDefaultDurationArgs struct {
	// Must be one of Minute, Hour, or Day.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value pulumi.IntInput `pulumi:"value"`
}

func (DirectDynatraceHistoricalDataRetrievalDefaultDurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectDynatraceHistoricalDataRetrievalDefaultDuration)(nil)).Elem()
}

func (i DirectDynatraceHistoricalDataRetrievalDefaultDurationArgs) ToDirectDynatraceHistoricalDataRetrievalDefaultDurationOutput() DirectDynatraceHistoricalDataRetrievalDefaultDurationOutput {
	return i.ToDirectDynatraceHistoricalDataRetrievalDefaultDurationOutputWithContext(context.Background())
}

func (i DirectDynatraceHistoricalDataRetrievalDefaultDurationArgs) ToDirectDynatraceHistoricalDataRetrievalDefaultDurationOutputWithContext(ctx context.Context) DirectDynatraceHistoricalDataRetrievalDefaultDurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectDynatraceHistoricalDataRetrievalDefaultDurationOutput)
}

// DirectDynatraceHistoricalDataRetrievalDefaultDurationArrayInput is an input type that accepts DirectDynatraceHistoricalDataRetrievalDefaultDurationArray and DirectDynatraceHistoricalDataRetrievalDefaultDurationArrayOutput values.
// You can construct a concrete instance of `DirectDynatraceHistoricalDataRetrievalDefaultDurationArrayInput` via:
//
//	DirectDynatraceHistoricalDataRetrievalDefaultDurationArray{ DirectDynatraceHistoricalDataRetrievalDefaultDurationArgs{...} }
type DirectDynatraceHistoricalDataRetrievalDefaultDurationArrayInput interface {
	pulumi.Input

	ToDirectDynatraceHistoricalDataRetrievalDefaultDurationArrayOutput() DirectDynatraceHistoricalDataRetrievalDefaultDurationArrayOutput
	ToDirectDynatraceHistoricalDataRetrievalDefaultDurationArrayOutputWithContext(context.Context) DirectDynatraceHistoricalDataRetrievalDefaultDurationArrayOutput
}

type DirectDynatraceHistoricalDataRetrievalDefaultDurationArray []DirectDynatraceHistoricalDataRetrievalDefaultDurationInput

func (DirectDynatraceHistoricalDataRetrievalDefaultDurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectDynatraceHistoricalDataRetrievalDefaultDuration)(nil)).Elem()
}

func (i DirectDynatraceHistoricalDataRetrievalDefaultDurationArray) ToDirectDynatraceHistoricalDataRetrievalDefaultDurationArrayOutput() DirectDynatraceHistoricalDataRetrievalDefaultDurationArrayOutput {
	return i.ToDirectDynatraceHistoricalDataRetrievalDefaultDurationArrayOutputWithContext(context.Background())
}

func (i DirectDynatraceHistoricalDataRetrievalDefaultDurationArray) ToDirectDynatraceHistoricalDataRetrievalDefaultDurationArrayOutputWithContext(ctx context.Context) DirectDynatraceHistoricalDataRetrievalDefaultDurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectDynatraceHistoricalDataRetrievalDefaultDurationArrayOutput)
}

type DirectDynatraceHistoricalDataRetrievalDefaultDurationOutput struct{ *pulumi.OutputState }

func (DirectDynatraceHistoricalDataRetrievalDefaultDurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectDynatraceHistoricalDataRetrievalDefaultDuration)(nil)).Elem()
}

func (o DirectDynatraceHistoricalDataRetrievalDefaultDurationOutput) ToDirectDynatraceHistoricalDataRetrievalDefaultDurationOutput() DirectDynatraceHistoricalDataRetrievalDefaultDurationOutput {
	return o
}

func (o DirectDynatraceHistoricalDataRetrievalDefaultDurationOutput) ToDirectDynatraceHistoricalDataRetrievalDefaultDurationOutputWithContext(ctx context.Context) DirectDynatraceHistoricalDataRetrievalDefaultDurationOutput {
	return o
}

// Must be one of Minute, Hour, or Day.
func (o DirectDynatraceHistoricalDataRetrievalDefaultDurationOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v DirectDynatraceHistoricalDataRetrievalDefaultDuration) string { return v.Unit }).(pulumi.StringOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectDynatraceHistoricalDataRetrievalDefaultDurationOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v DirectDynatraceHistoricalDataRetrievalDefaultDuration) int { return v.Value }).(pulumi.IntOutput)
}

type DirectDynatraceHistoricalDataRetrievalDefaultDurationArrayOutput struct{ *pulumi.OutputState }

func (DirectDynatraceHistoricalDataRetrievalDefaultDurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectDynatraceHistoricalDataRetrievalDefaultDuration)(nil)).Elem()
}

func (o DirectDynatraceHistoricalDataRetrievalDefaultDurationArrayOutput) ToDirectDynatraceHistoricalDataRetrievalDefaultDurationArrayOutput() DirectDynatraceHistoricalDataRetrievalDefaultDurationArrayOutput {
	return o
}

func (o DirectDynatraceHistoricalDataRetrievalDefaultDurationArrayOutput) ToDirectDynatraceHistoricalDataRetrievalDefaultDurationArrayOutputWithContext(ctx context.Context) DirectDynatraceHistoricalDataRetrievalDefaultDurationArrayOutput {
	return o
}

func (o DirectDynatraceHistoricalDataRetrievalDefaultDurationArrayOutput) Index(i pulumi.IntInput) DirectDynatraceHistoricalDataRetrievalDefaultDurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DirectDynatraceHistoricalDataRetrievalDefaultDuration {
		return vs[0].([]DirectDynatraceHistoricalDataRetrievalDefaultDuration)[vs[1].(int)]
	}).(DirectDynatraceHistoricalDataRetrievalDefaultDurationOutput)
}

type DirectDynatraceHistoricalDataRetrievalMaxDuration struct {
	// Must be one of Minute, Hour, or Day.
	Unit string `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value int `pulumi:"value"`
}

// DirectDynatraceHistoricalDataRetrievalMaxDurationInput is an input type that accepts DirectDynatraceHistoricalDataRetrievalMaxDurationArgs and DirectDynatraceHistoricalDataRetrievalMaxDurationOutput values.
// You can construct a concrete instance of `DirectDynatraceHistoricalDataRetrievalMaxDurationInput` via:
//
//	DirectDynatraceHistoricalDataRetrievalMaxDurationArgs{...}
type DirectDynatraceHistoricalDataRetrievalMaxDurationInput interface {
	pulumi.Input

	ToDirectDynatraceHistoricalDataRetrievalMaxDurationOutput() DirectDynatraceHistoricalDataRetrievalMaxDurationOutput
	ToDirectDynatraceHistoricalDataRetrievalMaxDurationOutputWithContext(context.Context) DirectDynatraceHistoricalDataRetrievalMaxDurationOutput
}

type DirectDynatraceHistoricalDataRetrievalMaxDurationArgs struct {
	// Must be one of Minute, Hour, or Day.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value pulumi.IntInput `pulumi:"value"`
}

func (DirectDynatraceHistoricalDataRetrievalMaxDurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectDynatraceHistoricalDataRetrievalMaxDuration)(nil)).Elem()
}

func (i DirectDynatraceHistoricalDataRetrievalMaxDurationArgs) ToDirectDynatraceHistoricalDataRetrievalMaxDurationOutput() DirectDynatraceHistoricalDataRetrievalMaxDurationOutput {
	return i.ToDirectDynatraceHistoricalDataRetrievalMaxDurationOutputWithContext(context.Background())
}

func (i DirectDynatraceHistoricalDataRetrievalMaxDurationArgs) ToDirectDynatraceHistoricalDataRetrievalMaxDurationOutputWithContext(ctx context.Context) DirectDynatraceHistoricalDataRetrievalMaxDurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectDynatraceHistoricalDataRetrievalMaxDurationOutput)
}

// DirectDynatraceHistoricalDataRetrievalMaxDurationArrayInput is an input type that accepts DirectDynatraceHistoricalDataRetrievalMaxDurationArray and DirectDynatraceHistoricalDataRetrievalMaxDurationArrayOutput values.
// You can construct a concrete instance of `DirectDynatraceHistoricalDataRetrievalMaxDurationArrayInput` via:
//
//	DirectDynatraceHistoricalDataRetrievalMaxDurationArray{ DirectDynatraceHistoricalDataRetrievalMaxDurationArgs{...} }
type DirectDynatraceHistoricalDataRetrievalMaxDurationArrayInput interface {
	pulumi.Input

	ToDirectDynatraceHistoricalDataRetrievalMaxDurationArrayOutput() DirectDynatraceHistoricalDataRetrievalMaxDurationArrayOutput
	ToDirectDynatraceHistoricalDataRetrievalMaxDurationArrayOutputWithContext(context.Context) DirectDynatraceHistoricalDataRetrievalMaxDurationArrayOutput
}

type DirectDynatraceHistoricalDataRetrievalMaxDurationArray []DirectDynatraceHistoricalDataRetrievalMaxDurationInput

func (DirectDynatraceHistoricalDataRetrievalMaxDurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectDynatraceHistoricalDataRetrievalMaxDuration)(nil)).Elem()
}

func (i DirectDynatraceHistoricalDataRetrievalMaxDurationArray) ToDirectDynatraceHistoricalDataRetrievalMaxDurationArrayOutput() DirectDynatraceHistoricalDataRetrievalMaxDurationArrayOutput {
	return i.ToDirectDynatraceHistoricalDataRetrievalMaxDurationArrayOutputWithContext(context.Background())
}

func (i DirectDynatraceHistoricalDataRetrievalMaxDurationArray) ToDirectDynatraceHistoricalDataRetrievalMaxDurationArrayOutputWithContext(ctx context.Context) DirectDynatraceHistoricalDataRetrievalMaxDurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectDynatraceHistoricalDataRetrievalMaxDurationArrayOutput)
}

type DirectDynatraceHistoricalDataRetrievalMaxDurationOutput struct{ *pulumi.OutputState }

func (DirectDynatraceHistoricalDataRetrievalMaxDurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectDynatraceHistoricalDataRetrievalMaxDuration)(nil)).Elem()
}

func (o DirectDynatraceHistoricalDataRetrievalMaxDurationOutput) ToDirectDynatraceHistoricalDataRetrievalMaxDurationOutput() DirectDynatraceHistoricalDataRetrievalMaxDurationOutput {
	return o
}

func (o DirectDynatraceHistoricalDataRetrievalMaxDurationOutput) ToDirectDynatraceHistoricalDataRetrievalMaxDurationOutputWithContext(ctx context.Context) DirectDynatraceHistoricalDataRetrievalMaxDurationOutput {
	return o
}

// Must be one of Minute, Hour, or Day.
func (o DirectDynatraceHistoricalDataRetrievalMaxDurationOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v DirectDynatraceHistoricalDataRetrievalMaxDuration) string { return v.Unit }).(pulumi.StringOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectDynatraceHistoricalDataRetrievalMaxDurationOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v DirectDynatraceHistoricalDataRetrievalMaxDuration) int { return v.Value }).(pulumi.IntOutput)
}

type DirectDynatraceHistoricalDataRetrievalMaxDurationArrayOutput struct{ *pulumi.OutputState }

func (DirectDynatraceHistoricalDataRetrievalMaxDurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectDynatraceHistoricalDataRetrievalMaxDuration)(nil)).Elem()
}

func (o DirectDynatraceHistoricalDataRetrievalMaxDurationArrayOutput) ToDirectDynatraceHistoricalDataRetrievalMaxDurationArrayOutput() DirectDynatraceHistoricalDataRetrievalMaxDurationArrayOutput {
	return o
}

func (o DirectDynatraceHistoricalDataRetrievalMaxDurationArrayOutput) ToDirectDynatraceHistoricalDataRetrievalMaxDurationArrayOutputWithContext(ctx context.Context) DirectDynatraceHistoricalDataRetrievalMaxDurationArrayOutput {
	return o
}

func (o DirectDynatraceHistoricalDataRetrievalMaxDurationArrayOutput) Index(i pulumi.IntInput) DirectDynatraceHistoricalDataRetrievalMaxDurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DirectDynatraceHistoricalDataRetrievalMaxDuration {
		return vs[0].([]DirectDynatraceHistoricalDataRetrievalMaxDuration)[vs[1].(int)]
	}).(DirectDynatraceHistoricalDataRetrievalMaxDurationOutput)
}

type DirectDynatraceQueryDelay struct {
	// Must be one of Minute or Second.
	Unit string `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value int `pulumi:"value"`
}

// DirectDynatraceQueryDelayInput is an input type that accepts DirectDynatraceQueryDelayArgs and DirectDynatraceQueryDelayOutput values.
// You can construct a concrete instance of `DirectDynatraceQueryDelayInput` via:
//
//	DirectDynatraceQueryDelayArgs{...}
type DirectDynatraceQueryDelayInput interface {
	pulumi.Input

	ToDirectDynatraceQueryDelayOutput() DirectDynatraceQueryDelayOutput
	ToDirectDynatraceQueryDelayOutputWithContext(context.Context) DirectDynatraceQueryDelayOutput
}

type DirectDynatraceQueryDelayArgs struct {
	// Must be one of Minute or Second.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value pulumi.IntInput `pulumi:"value"`
}

func (DirectDynatraceQueryDelayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectDynatraceQueryDelay)(nil)).Elem()
}

func (i DirectDynatraceQueryDelayArgs) ToDirectDynatraceQueryDelayOutput() DirectDynatraceQueryDelayOutput {
	return i.ToDirectDynatraceQueryDelayOutputWithContext(context.Background())
}

func (i DirectDynatraceQueryDelayArgs) ToDirectDynatraceQueryDelayOutputWithContext(ctx context.Context) DirectDynatraceQueryDelayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectDynatraceQueryDelayOutput)
}

func (i DirectDynatraceQueryDelayArgs) ToDirectDynatraceQueryDelayPtrOutput() DirectDynatraceQueryDelayPtrOutput {
	return i.ToDirectDynatraceQueryDelayPtrOutputWithContext(context.Background())
}

func (i DirectDynatraceQueryDelayArgs) ToDirectDynatraceQueryDelayPtrOutputWithContext(ctx context.Context) DirectDynatraceQueryDelayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectDynatraceQueryDelayOutput).ToDirectDynatraceQueryDelayPtrOutputWithContext(ctx)
}

// DirectDynatraceQueryDelayPtrInput is an input type that accepts DirectDynatraceQueryDelayArgs, DirectDynatraceQueryDelayPtr and DirectDynatraceQueryDelayPtrOutput values.
// You can construct a concrete instance of `DirectDynatraceQueryDelayPtrInput` via:
//
//	        DirectDynatraceQueryDelayArgs{...}
//
//	or:
//
//	        nil
type DirectDynatraceQueryDelayPtrInput interface {
	pulumi.Input

	ToDirectDynatraceQueryDelayPtrOutput() DirectDynatraceQueryDelayPtrOutput
	ToDirectDynatraceQueryDelayPtrOutputWithContext(context.Context) DirectDynatraceQueryDelayPtrOutput
}

type directDynatraceQueryDelayPtrType DirectDynatraceQueryDelayArgs

func DirectDynatraceQueryDelayPtr(v *DirectDynatraceQueryDelayArgs) DirectDynatraceQueryDelayPtrInput {
	return (*directDynatraceQueryDelayPtrType)(v)
}

func (*directDynatraceQueryDelayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectDynatraceQueryDelay)(nil)).Elem()
}

func (i *directDynatraceQueryDelayPtrType) ToDirectDynatraceQueryDelayPtrOutput() DirectDynatraceQueryDelayPtrOutput {
	return i.ToDirectDynatraceQueryDelayPtrOutputWithContext(context.Background())
}

func (i *directDynatraceQueryDelayPtrType) ToDirectDynatraceQueryDelayPtrOutputWithContext(ctx context.Context) DirectDynatraceQueryDelayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectDynatraceQueryDelayPtrOutput)
}

type DirectDynatraceQueryDelayOutput struct{ *pulumi.OutputState }

func (DirectDynatraceQueryDelayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectDynatraceQueryDelay)(nil)).Elem()
}

func (o DirectDynatraceQueryDelayOutput) ToDirectDynatraceQueryDelayOutput() DirectDynatraceQueryDelayOutput {
	return o
}

func (o DirectDynatraceQueryDelayOutput) ToDirectDynatraceQueryDelayOutputWithContext(ctx context.Context) DirectDynatraceQueryDelayOutput {
	return o
}

func (o DirectDynatraceQueryDelayOutput) ToDirectDynatraceQueryDelayPtrOutput() DirectDynatraceQueryDelayPtrOutput {
	return o.ToDirectDynatraceQueryDelayPtrOutputWithContext(context.Background())
}

func (o DirectDynatraceQueryDelayOutput) ToDirectDynatraceQueryDelayPtrOutputWithContext(ctx context.Context) DirectDynatraceQueryDelayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectDynatraceQueryDelay) *DirectDynatraceQueryDelay {
		return &v
	}).(DirectDynatraceQueryDelayPtrOutput)
}

// Must be one of Minute or Second.
func (o DirectDynatraceQueryDelayOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v DirectDynatraceQueryDelay) string { return v.Unit }).(pulumi.StringOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectDynatraceQueryDelayOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v DirectDynatraceQueryDelay) int { return v.Value }).(pulumi.IntOutput)
}

type DirectDynatraceQueryDelayPtrOutput struct{ *pulumi.OutputState }

func (DirectDynatraceQueryDelayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectDynatraceQueryDelay)(nil)).Elem()
}

func (o DirectDynatraceQueryDelayPtrOutput) ToDirectDynatraceQueryDelayPtrOutput() DirectDynatraceQueryDelayPtrOutput {
	return o
}

func (o DirectDynatraceQueryDelayPtrOutput) ToDirectDynatraceQueryDelayPtrOutputWithContext(ctx context.Context) DirectDynatraceQueryDelayPtrOutput {
	return o
}

func (o DirectDynatraceQueryDelayPtrOutput) Elem() DirectDynatraceQueryDelayOutput {
	return o.ApplyT(func(v *DirectDynatraceQueryDelay) DirectDynatraceQueryDelay {
		if v != nil {
			return *v
		}
		var ret DirectDynatraceQueryDelay
		return ret
	}).(DirectDynatraceQueryDelayOutput)
}

// Must be one of Minute or Second.
func (o DirectDynatraceQueryDelayPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectDynatraceQueryDelay) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectDynatraceQueryDelayPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DirectDynatraceQueryDelay) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type DirectGcmQueryDelay struct {
	// Must be one of Minute or Second.
	Unit string `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value int `pulumi:"value"`
}

// DirectGcmQueryDelayInput is an input type that accepts DirectGcmQueryDelayArgs and DirectGcmQueryDelayOutput values.
// You can construct a concrete instance of `DirectGcmQueryDelayInput` via:
//
//	DirectGcmQueryDelayArgs{...}
type DirectGcmQueryDelayInput interface {
	pulumi.Input

	ToDirectGcmQueryDelayOutput() DirectGcmQueryDelayOutput
	ToDirectGcmQueryDelayOutputWithContext(context.Context) DirectGcmQueryDelayOutput
}

type DirectGcmQueryDelayArgs struct {
	// Must be one of Minute or Second.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value pulumi.IntInput `pulumi:"value"`
}

func (DirectGcmQueryDelayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectGcmQueryDelay)(nil)).Elem()
}

func (i DirectGcmQueryDelayArgs) ToDirectGcmQueryDelayOutput() DirectGcmQueryDelayOutput {
	return i.ToDirectGcmQueryDelayOutputWithContext(context.Background())
}

func (i DirectGcmQueryDelayArgs) ToDirectGcmQueryDelayOutputWithContext(ctx context.Context) DirectGcmQueryDelayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectGcmQueryDelayOutput)
}

func (i DirectGcmQueryDelayArgs) ToDirectGcmQueryDelayPtrOutput() DirectGcmQueryDelayPtrOutput {
	return i.ToDirectGcmQueryDelayPtrOutputWithContext(context.Background())
}

func (i DirectGcmQueryDelayArgs) ToDirectGcmQueryDelayPtrOutputWithContext(ctx context.Context) DirectGcmQueryDelayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectGcmQueryDelayOutput).ToDirectGcmQueryDelayPtrOutputWithContext(ctx)
}

// DirectGcmQueryDelayPtrInput is an input type that accepts DirectGcmQueryDelayArgs, DirectGcmQueryDelayPtr and DirectGcmQueryDelayPtrOutput values.
// You can construct a concrete instance of `DirectGcmQueryDelayPtrInput` via:
//
//	        DirectGcmQueryDelayArgs{...}
//
//	or:
//
//	        nil
type DirectGcmQueryDelayPtrInput interface {
	pulumi.Input

	ToDirectGcmQueryDelayPtrOutput() DirectGcmQueryDelayPtrOutput
	ToDirectGcmQueryDelayPtrOutputWithContext(context.Context) DirectGcmQueryDelayPtrOutput
}

type directGcmQueryDelayPtrType DirectGcmQueryDelayArgs

func DirectGcmQueryDelayPtr(v *DirectGcmQueryDelayArgs) DirectGcmQueryDelayPtrInput {
	return (*directGcmQueryDelayPtrType)(v)
}

func (*directGcmQueryDelayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectGcmQueryDelay)(nil)).Elem()
}

func (i *directGcmQueryDelayPtrType) ToDirectGcmQueryDelayPtrOutput() DirectGcmQueryDelayPtrOutput {
	return i.ToDirectGcmQueryDelayPtrOutputWithContext(context.Background())
}

func (i *directGcmQueryDelayPtrType) ToDirectGcmQueryDelayPtrOutputWithContext(ctx context.Context) DirectGcmQueryDelayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectGcmQueryDelayPtrOutput)
}

type DirectGcmQueryDelayOutput struct{ *pulumi.OutputState }

func (DirectGcmQueryDelayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectGcmQueryDelay)(nil)).Elem()
}

func (o DirectGcmQueryDelayOutput) ToDirectGcmQueryDelayOutput() DirectGcmQueryDelayOutput {
	return o
}

func (o DirectGcmQueryDelayOutput) ToDirectGcmQueryDelayOutputWithContext(ctx context.Context) DirectGcmQueryDelayOutput {
	return o
}

func (o DirectGcmQueryDelayOutput) ToDirectGcmQueryDelayPtrOutput() DirectGcmQueryDelayPtrOutput {
	return o.ToDirectGcmQueryDelayPtrOutputWithContext(context.Background())
}

func (o DirectGcmQueryDelayOutput) ToDirectGcmQueryDelayPtrOutputWithContext(ctx context.Context) DirectGcmQueryDelayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectGcmQueryDelay) *DirectGcmQueryDelay {
		return &v
	}).(DirectGcmQueryDelayPtrOutput)
}

// Must be one of Minute or Second.
func (o DirectGcmQueryDelayOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v DirectGcmQueryDelay) string { return v.Unit }).(pulumi.StringOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectGcmQueryDelayOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v DirectGcmQueryDelay) int { return v.Value }).(pulumi.IntOutput)
}

type DirectGcmQueryDelayPtrOutput struct{ *pulumi.OutputState }

func (DirectGcmQueryDelayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectGcmQueryDelay)(nil)).Elem()
}

func (o DirectGcmQueryDelayPtrOutput) ToDirectGcmQueryDelayPtrOutput() DirectGcmQueryDelayPtrOutput {
	return o
}

func (o DirectGcmQueryDelayPtrOutput) ToDirectGcmQueryDelayPtrOutputWithContext(ctx context.Context) DirectGcmQueryDelayPtrOutput {
	return o
}

func (o DirectGcmQueryDelayPtrOutput) Elem() DirectGcmQueryDelayOutput {
	return o.ApplyT(func(v *DirectGcmQueryDelay) DirectGcmQueryDelay {
		if v != nil {
			return *v
		}
		var ret DirectGcmQueryDelay
		return ret
	}).(DirectGcmQueryDelayOutput)
}

// Must be one of Minute or Second.
func (o DirectGcmQueryDelayPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectGcmQueryDelay) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectGcmQueryDelayPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DirectGcmQueryDelay) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type DirectHoneycombHistoricalDataRetrieval struct {
	// Used by default for any SLOs connected to this data source.
	DefaultDurations []DirectHoneycombHistoricalDataRetrievalDefaultDuration `pulumi:"defaultDurations"`
	// Defines the maximum period for which data can be retrieved.
	MaxDurations []DirectHoneycombHistoricalDataRetrievalMaxDuration `pulumi:"maxDurations"`
}

// DirectHoneycombHistoricalDataRetrievalInput is an input type that accepts DirectHoneycombHistoricalDataRetrievalArgs and DirectHoneycombHistoricalDataRetrievalOutput values.
// You can construct a concrete instance of `DirectHoneycombHistoricalDataRetrievalInput` via:
//
//	DirectHoneycombHistoricalDataRetrievalArgs{...}
type DirectHoneycombHistoricalDataRetrievalInput interface {
	pulumi.Input

	ToDirectHoneycombHistoricalDataRetrievalOutput() DirectHoneycombHistoricalDataRetrievalOutput
	ToDirectHoneycombHistoricalDataRetrievalOutputWithContext(context.Context) DirectHoneycombHistoricalDataRetrievalOutput
}

type DirectHoneycombHistoricalDataRetrievalArgs struct {
	// Used by default for any SLOs connected to this data source.
	DefaultDurations DirectHoneycombHistoricalDataRetrievalDefaultDurationArrayInput `pulumi:"defaultDurations"`
	// Defines the maximum period for which data can be retrieved.
	MaxDurations DirectHoneycombHistoricalDataRetrievalMaxDurationArrayInput `pulumi:"maxDurations"`
}

func (DirectHoneycombHistoricalDataRetrievalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectHoneycombHistoricalDataRetrieval)(nil)).Elem()
}

func (i DirectHoneycombHistoricalDataRetrievalArgs) ToDirectHoneycombHistoricalDataRetrievalOutput() DirectHoneycombHistoricalDataRetrievalOutput {
	return i.ToDirectHoneycombHistoricalDataRetrievalOutputWithContext(context.Background())
}

func (i DirectHoneycombHistoricalDataRetrievalArgs) ToDirectHoneycombHistoricalDataRetrievalOutputWithContext(ctx context.Context) DirectHoneycombHistoricalDataRetrievalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectHoneycombHistoricalDataRetrievalOutput)
}

func (i DirectHoneycombHistoricalDataRetrievalArgs) ToDirectHoneycombHistoricalDataRetrievalPtrOutput() DirectHoneycombHistoricalDataRetrievalPtrOutput {
	return i.ToDirectHoneycombHistoricalDataRetrievalPtrOutputWithContext(context.Background())
}

func (i DirectHoneycombHistoricalDataRetrievalArgs) ToDirectHoneycombHistoricalDataRetrievalPtrOutputWithContext(ctx context.Context) DirectHoneycombHistoricalDataRetrievalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectHoneycombHistoricalDataRetrievalOutput).ToDirectHoneycombHistoricalDataRetrievalPtrOutputWithContext(ctx)
}

// DirectHoneycombHistoricalDataRetrievalPtrInput is an input type that accepts DirectHoneycombHistoricalDataRetrievalArgs, DirectHoneycombHistoricalDataRetrievalPtr and DirectHoneycombHistoricalDataRetrievalPtrOutput values.
// You can construct a concrete instance of `DirectHoneycombHistoricalDataRetrievalPtrInput` via:
//
//	        DirectHoneycombHistoricalDataRetrievalArgs{...}
//
//	or:
//
//	        nil
type DirectHoneycombHistoricalDataRetrievalPtrInput interface {
	pulumi.Input

	ToDirectHoneycombHistoricalDataRetrievalPtrOutput() DirectHoneycombHistoricalDataRetrievalPtrOutput
	ToDirectHoneycombHistoricalDataRetrievalPtrOutputWithContext(context.Context) DirectHoneycombHistoricalDataRetrievalPtrOutput
}

type directHoneycombHistoricalDataRetrievalPtrType DirectHoneycombHistoricalDataRetrievalArgs

func DirectHoneycombHistoricalDataRetrievalPtr(v *DirectHoneycombHistoricalDataRetrievalArgs) DirectHoneycombHistoricalDataRetrievalPtrInput {
	return (*directHoneycombHistoricalDataRetrievalPtrType)(v)
}

func (*directHoneycombHistoricalDataRetrievalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectHoneycombHistoricalDataRetrieval)(nil)).Elem()
}

func (i *directHoneycombHistoricalDataRetrievalPtrType) ToDirectHoneycombHistoricalDataRetrievalPtrOutput() DirectHoneycombHistoricalDataRetrievalPtrOutput {
	return i.ToDirectHoneycombHistoricalDataRetrievalPtrOutputWithContext(context.Background())
}

func (i *directHoneycombHistoricalDataRetrievalPtrType) ToDirectHoneycombHistoricalDataRetrievalPtrOutputWithContext(ctx context.Context) DirectHoneycombHistoricalDataRetrievalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectHoneycombHistoricalDataRetrievalPtrOutput)
}

type DirectHoneycombHistoricalDataRetrievalOutput struct{ *pulumi.OutputState }

func (DirectHoneycombHistoricalDataRetrievalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectHoneycombHistoricalDataRetrieval)(nil)).Elem()
}

func (o DirectHoneycombHistoricalDataRetrievalOutput) ToDirectHoneycombHistoricalDataRetrievalOutput() DirectHoneycombHistoricalDataRetrievalOutput {
	return o
}

func (o DirectHoneycombHistoricalDataRetrievalOutput) ToDirectHoneycombHistoricalDataRetrievalOutputWithContext(ctx context.Context) DirectHoneycombHistoricalDataRetrievalOutput {
	return o
}

func (o DirectHoneycombHistoricalDataRetrievalOutput) ToDirectHoneycombHistoricalDataRetrievalPtrOutput() DirectHoneycombHistoricalDataRetrievalPtrOutput {
	return o.ToDirectHoneycombHistoricalDataRetrievalPtrOutputWithContext(context.Background())
}

func (o DirectHoneycombHistoricalDataRetrievalOutput) ToDirectHoneycombHistoricalDataRetrievalPtrOutputWithContext(ctx context.Context) DirectHoneycombHistoricalDataRetrievalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectHoneycombHistoricalDataRetrieval) *DirectHoneycombHistoricalDataRetrieval {
		return &v
	}).(DirectHoneycombHistoricalDataRetrievalPtrOutput)
}

// Used by default for any SLOs connected to this data source.
func (o DirectHoneycombHistoricalDataRetrievalOutput) DefaultDurations() DirectHoneycombHistoricalDataRetrievalDefaultDurationArrayOutput {
	return o.ApplyT(func(v DirectHoneycombHistoricalDataRetrieval) []DirectHoneycombHistoricalDataRetrievalDefaultDuration {
		return v.DefaultDurations
	}).(DirectHoneycombHistoricalDataRetrievalDefaultDurationArrayOutput)
}

// Defines the maximum period for which data can be retrieved.
func (o DirectHoneycombHistoricalDataRetrievalOutput) MaxDurations() DirectHoneycombHistoricalDataRetrievalMaxDurationArrayOutput {
	return o.ApplyT(func(v DirectHoneycombHistoricalDataRetrieval) []DirectHoneycombHistoricalDataRetrievalMaxDuration {
		return v.MaxDurations
	}).(DirectHoneycombHistoricalDataRetrievalMaxDurationArrayOutput)
}

type DirectHoneycombHistoricalDataRetrievalPtrOutput struct{ *pulumi.OutputState }

func (DirectHoneycombHistoricalDataRetrievalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectHoneycombHistoricalDataRetrieval)(nil)).Elem()
}

func (o DirectHoneycombHistoricalDataRetrievalPtrOutput) ToDirectHoneycombHistoricalDataRetrievalPtrOutput() DirectHoneycombHistoricalDataRetrievalPtrOutput {
	return o
}

func (o DirectHoneycombHistoricalDataRetrievalPtrOutput) ToDirectHoneycombHistoricalDataRetrievalPtrOutputWithContext(ctx context.Context) DirectHoneycombHistoricalDataRetrievalPtrOutput {
	return o
}

func (o DirectHoneycombHistoricalDataRetrievalPtrOutput) Elem() DirectHoneycombHistoricalDataRetrievalOutput {
	return o.ApplyT(func(v *DirectHoneycombHistoricalDataRetrieval) DirectHoneycombHistoricalDataRetrieval {
		if v != nil {
			return *v
		}
		var ret DirectHoneycombHistoricalDataRetrieval
		return ret
	}).(DirectHoneycombHistoricalDataRetrievalOutput)
}

// Used by default for any SLOs connected to this data source.
func (o DirectHoneycombHistoricalDataRetrievalPtrOutput) DefaultDurations() DirectHoneycombHistoricalDataRetrievalDefaultDurationArrayOutput {
	return o.ApplyT(func(v *DirectHoneycombHistoricalDataRetrieval) []DirectHoneycombHistoricalDataRetrievalDefaultDuration {
		if v == nil {
			return nil
		}
		return v.DefaultDurations
	}).(DirectHoneycombHistoricalDataRetrievalDefaultDurationArrayOutput)
}

// Defines the maximum period for which data can be retrieved.
func (o DirectHoneycombHistoricalDataRetrievalPtrOutput) MaxDurations() DirectHoneycombHistoricalDataRetrievalMaxDurationArrayOutput {
	return o.ApplyT(func(v *DirectHoneycombHistoricalDataRetrieval) []DirectHoneycombHistoricalDataRetrievalMaxDuration {
		if v == nil {
			return nil
		}
		return v.MaxDurations
	}).(DirectHoneycombHistoricalDataRetrievalMaxDurationArrayOutput)
}

type DirectHoneycombHistoricalDataRetrievalDefaultDuration struct {
	// Must be one of Minute, Hour, or Day.
	Unit string `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value int `pulumi:"value"`
}

// DirectHoneycombHistoricalDataRetrievalDefaultDurationInput is an input type that accepts DirectHoneycombHistoricalDataRetrievalDefaultDurationArgs and DirectHoneycombHistoricalDataRetrievalDefaultDurationOutput values.
// You can construct a concrete instance of `DirectHoneycombHistoricalDataRetrievalDefaultDurationInput` via:
//
//	DirectHoneycombHistoricalDataRetrievalDefaultDurationArgs{...}
type DirectHoneycombHistoricalDataRetrievalDefaultDurationInput interface {
	pulumi.Input

	ToDirectHoneycombHistoricalDataRetrievalDefaultDurationOutput() DirectHoneycombHistoricalDataRetrievalDefaultDurationOutput
	ToDirectHoneycombHistoricalDataRetrievalDefaultDurationOutputWithContext(context.Context) DirectHoneycombHistoricalDataRetrievalDefaultDurationOutput
}

type DirectHoneycombHistoricalDataRetrievalDefaultDurationArgs struct {
	// Must be one of Minute, Hour, or Day.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value pulumi.IntInput `pulumi:"value"`
}

func (DirectHoneycombHistoricalDataRetrievalDefaultDurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectHoneycombHistoricalDataRetrievalDefaultDuration)(nil)).Elem()
}

func (i DirectHoneycombHistoricalDataRetrievalDefaultDurationArgs) ToDirectHoneycombHistoricalDataRetrievalDefaultDurationOutput() DirectHoneycombHistoricalDataRetrievalDefaultDurationOutput {
	return i.ToDirectHoneycombHistoricalDataRetrievalDefaultDurationOutputWithContext(context.Background())
}

func (i DirectHoneycombHistoricalDataRetrievalDefaultDurationArgs) ToDirectHoneycombHistoricalDataRetrievalDefaultDurationOutputWithContext(ctx context.Context) DirectHoneycombHistoricalDataRetrievalDefaultDurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectHoneycombHistoricalDataRetrievalDefaultDurationOutput)
}

// DirectHoneycombHistoricalDataRetrievalDefaultDurationArrayInput is an input type that accepts DirectHoneycombHistoricalDataRetrievalDefaultDurationArray and DirectHoneycombHistoricalDataRetrievalDefaultDurationArrayOutput values.
// You can construct a concrete instance of `DirectHoneycombHistoricalDataRetrievalDefaultDurationArrayInput` via:
//
//	DirectHoneycombHistoricalDataRetrievalDefaultDurationArray{ DirectHoneycombHistoricalDataRetrievalDefaultDurationArgs{...} }
type DirectHoneycombHistoricalDataRetrievalDefaultDurationArrayInput interface {
	pulumi.Input

	ToDirectHoneycombHistoricalDataRetrievalDefaultDurationArrayOutput() DirectHoneycombHistoricalDataRetrievalDefaultDurationArrayOutput
	ToDirectHoneycombHistoricalDataRetrievalDefaultDurationArrayOutputWithContext(context.Context) DirectHoneycombHistoricalDataRetrievalDefaultDurationArrayOutput
}

type DirectHoneycombHistoricalDataRetrievalDefaultDurationArray []DirectHoneycombHistoricalDataRetrievalDefaultDurationInput

func (DirectHoneycombHistoricalDataRetrievalDefaultDurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectHoneycombHistoricalDataRetrievalDefaultDuration)(nil)).Elem()
}

func (i DirectHoneycombHistoricalDataRetrievalDefaultDurationArray) ToDirectHoneycombHistoricalDataRetrievalDefaultDurationArrayOutput() DirectHoneycombHistoricalDataRetrievalDefaultDurationArrayOutput {
	return i.ToDirectHoneycombHistoricalDataRetrievalDefaultDurationArrayOutputWithContext(context.Background())
}

func (i DirectHoneycombHistoricalDataRetrievalDefaultDurationArray) ToDirectHoneycombHistoricalDataRetrievalDefaultDurationArrayOutputWithContext(ctx context.Context) DirectHoneycombHistoricalDataRetrievalDefaultDurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectHoneycombHistoricalDataRetrievalDefaultDurationArrayOutput)
}

type DirectHoneycombHistoricalDataRetrievalDefaultDurationOutput struct{ *pulumi.OutputState }

func (DirectHoneycombHistoricalDataRetrievalDefaultDurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectHoneycombHistoricalDataRetrievalDefaultDuration)(nil)).Elem()
}

func (o DirectHoneycombHistoricalDataRetrievalDefaultDurationOutput) ToDirectHoneycombHistoricalDataRetrievalDefaultDurationOutput() DirectHoneycombHistoricalDataRetrievalDefaultDurationOutput {
	return o
}

func (o DirectHoneycombHistoricalDataRetrievalDefaultDurationOutput) ToDirectHoneycombHistoricalDataRetrievalDefaultDurationOutputWithContext(ctx context.Context) DirectHoneycombHistoricalDataRetrievalDefaultDurationOutput {
	return o
}

// Must be one of Minute, Hour, or Day.
func (o DirectHoneycombHistoricalDataRetrievalDefaultDurationOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v DirectHoneycombHistoricalDataRetrievalDefaultDuration) string { return v.Unit }).(pulumi.StringOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectHoneycombHistoricalDataRetrievalDefaultDurationOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v DirectHoneycombHistoricalDataRetrievalDefaultDuration) int { return v.Value }).(pulumi.IntOutput)
}

type DirectHoneycombHistoricalDataRetrievalDefaultDurationArrayOutput struct{ *pulumi.OutputState }

func (DirectHoneycombHistoricalDataRetrievalDefaultDurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectHoneycombHistoricalDataRetrievalDefaultDuration)(nil)).Elem()
}

func (o DirectHoneycombHistoricalDataRetrievalDefaultDurationArrayOutput) ToDirectHoneycombHistoricalDataRetrievalDefaultDurationArrayOutput() DirectHoneycombHistoricalDataRetrievalDefaultDurationArrayOutput {
	return o
}

func (o DirectHoneycombHistoricalDataRetrievalDefaultDurationArrayOutput) ToDirectHoneycombHistoricalDataRetrievalDefaultDurationArrayOutputWithContext(ctx context.Context) DirectHoneycombHistoricalDataRetrievalDefaultDurationArrayOutput {
	return o
}

func (o DirectHoneycombHistoricalDataRetrievalDefaultDurationArrayOutput) Index(i pulumi.IntInput) DirectHoneycombHistoricalDataRetrievalDefaultDurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DirectHoneycombHistoricalDataRetrievalDefaultDuration {
		return vs[0].([]DirectHoneycombHistoricalDataRetrievalDefaultDuration)[vs[1].(int)]
	}).(DirectHoneycombHistoricalDataRetrievalDefaultDurationOutput)
}

type DirectHoneycombHistoricalDataRetrievalMaxDuration struct {
	// Must be one of Minute, Hour, or Day.
	Unit string `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value int `pulumi:"value"`
}

// DirectHoneycombHistoricalDataRetrievalMaxDurationInput is an input type that accepts DirectHoneycombHistoricalDataRetrievalMaxDurationArgs and DirectHoneycombHistoricalDataRetrievalMaxDurationOutput values.
// You can construct a concrete instance of `DirectHoneycombHistoricalDataRetrievalMaxDurationInput` via:
//
//	DirectHoneycombHistoricalDataRetrievalMaxDurationArgs{...}
type DirectHoneycombHistoricalDataRetrievalMaxDurationInput interface {
	pulumi.Input

	ToDirectHoneycombHistoricalDataRetrievalMaxDurationOutput() DirectHoneycombHistoricalDataRetrievalMaxDurationOutput
	ToDirectHoneycombHistoricalDataRetrievalMaxDurationOutputWithContext(context.Context) DirectHoneycombHistoricalDataRetrievalMaxDurationOutput
}

type DirectHoneycombHistoricalDataRetrievalMaxDurationArgs struct {
	// Must be one of Minute, Hour, or Day.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value pulumi.IntInput `pulumi:"value"`
}

func (DirectHoneycombHistoricalDataRetrievalMaxDurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectHoneycombHistoricalDataRetrievalMaxDuration)(nil)).Elem()
}

func (i DirectHoneycombHistoricalDataRetrievalMaxDurationArgs) ToDirectHoneycombHistoricalDataRetrievalMaxDurationOutput() DirectHoneycombHistoricalDataRetrievalMaxDurationOutput {
	return i.ToDirectHoneycombHistoricalDataRetrievalMaxDurationOutputWithContext(context.Background())
}

func (i DirectHoneycombHistoricalDataRetrievalMaxDurationArgs) ToDirectHoneycombHistoricalDataRetrievalMaxDurationOutputWithContext(ctx context.Context) DirectHoneycombHistoricalDataRetrievalMaxDurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectHoneycombHistoricalDataRetrievalMaxDurationOutput)
}

// DirectHoneycombHistoricalDataRetrievalMaxDurationArrayInput is an input type that accepts DirectHoneycombHistoricalDataRetrievalMaxDurationArray and DirectHoneycombHistoricalDataRetrievalMaxDurationArrayOutput values.
// You can construct a concrete instance of `DirectHoneycombHistoricalDataRetrievalMaxDurationArrayInput` via:
//
//	DirectHoneycombHistoricalDataRetrievalMaxDurationArray{ DirectHoneycombHistoricalDataRetrievalMaxDurationArgs{...} }
type DirectHoneycombHistoricalDataRetrievalMaxDurationArrayInput interface {
	pulumi.Input

	ToDirectHoneycombHistoricalDataRetrievalMaxDurationArrayOutput() DirectHoneycombHistoricalDataRetrievalMaxDurationArrayOutput
	ToDirectHoneycombHistoricalDataRetrievalMaxDurationArrayOutputWithContext(context.Context) DirectHoneycombHistoricalDataRetrievalMaxDurationArrayOutput
}

type DirectHoneycombHistoricalDataRetrievalMaxDurationArray []DirectHoneycombHistoricalDataRetrievalMaxDurationInput

func (DirectHoneycombHistoricalDataRetrievalMaxDurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectHoneycombHistoricalDataRetrievalMaxDuration)(nil)).Elem()
}

func (i DirectHoneycombHistoricalDataRetrievalMaxDurationArray) ToDirectHoneycombHistoricalDataRetrievalMaxDurationArrayOutput() DirectHoneycombHistoricalDataRetrievalMaxDurationArrayOutput {
	return i.ToDirectHoneycombHistoricalDataRetrievalMaxDurationArrayOutputWithContext(context.Background())
}

func (i DirectHoneycombHistoricalDataRetrievalMaxDurationArray) ToDirectHoneycombHistoricalDataRetrievalMaxDurationArrayOutputWithContext(ctx context.Context) DirectHoneycombHistoricalDataRetrievalMaxDurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectHoneycombHistoricalDataRetrievalMaxDurationArrayOutput)
}

type DirectHoneycombHistoricalDataRetrievalMaxDurationOutput struct{ *pulumi.OutputState }

func (DirectHoneycombHistoricalDataRetrievalMaxDurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectHoneycombHistoricalDataRetrievalMaxDuration)(nil)).Elem()
}

func (o DirectHoneycombHistoricalDataRetrievalMaxDurationOutput) ToDirectHoneycombHistoricalDataRetrievalMaxDurationOutput() DirectHoneycombHistoricalDataRetrievalMaxDurationOutput {
	return o
}

func (o DirectHoneycombHistoricalDataRetrievalMaxDurationOutput) ToDirectHoneycombHistoricalDataRetrievalMaxDurationOutputWithContext(ctx context.Context) DirectHoneycombHistoricalDataRetrievalMaxDurationOutput {
	return o
}

// Must be one of Minute, Hour, or Day.
func (o DirectHoneycombHistoricalDataRetrievalMaxDurationOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v DirectHoneycombHistoricalDataRetrievalMaxDuration) string { return v.Unit }).(pulumi.StringOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectHoneycombHistoricalDataRetrievalMaxDurationOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v DirectHoneycombHistoricalDataRetrievalMaxDuration) int { return v.Value }).(pulumi.IntOutput)
}

type DirectHoneycombHistoricalDataRetrievalMaxDurationArrayOutput struct{ *pulumi.OutputState }

func (DirectHoneycombHistoricalDataRetrievalMaxDurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectHoneycombHistoricalDataRetrievalMaxDuration)(nil)).Elem()
}

func (o DirectHoneycombHistoricalDataRetrievalMaxDurationArrayOutput) ToDirectHoneycombHistoricalDataRetrievalMaxDurationArrayOutput() DirectHoneycombHistoricalDataRetrievalMaxDurationArrayOutput {
	return o
}

func (o DirectHoneycombHistoricalDataRetrievalMaxDurationArrayOutput) ToDirectHoneycombHistoricalDataRetrievalMaxDurationArrayOutputWithContext(ctx context.Context) DirectHoneycombHistoricalDataRetrievalMaxDurationArrayOutput {
	return o
}

func (o DirectHoneycombHistoricalDataRetrievalMaxDurationArrayOutput) Index(i pulumi.IntInput) DirectHoneycombHistoricalDataRetrievalMaxDurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DirectHoneycombHistoricalDataRetrievalMaxDuration {
		return vs[0].([]DirectHoneycombHistoricalDataRetrievalMaxDuration)[vs[1].(int)]
	}).(DirectHoneycombHistoricalDataRetrievalMaxDurationOutput)
}

type DirectHoneycombQueryDelay struct {
	// Must be one of Minute or Second.
	Unit string `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value int `pulumi:"value"`
}

// DirectHoneycombQueryDelayInput is an input type that accepts DirectHoneycombQueryDelayArgs and DirectHoneycombQueryDelayOutput values.
// You can construct a concrete instance of `DirectHoneycombQueryDelayInput` via:
//
//	DirectHoneycombQueryDelayArgs{...}
type DirectHoneycombQueryDelayInput interface {
	pulumi.Input

	ToDirectHoneycombQueryDelayOutput() DirectHoneycombQueryDelayOutput
	ToDirectHoneycombQueryDelayOutputWithContext(context.Context) DirectHoneycombQueryDelayOutput
}

type DirectHoneycombQueryDelayArgs struct {
	// Must be one of Minute or Second.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value pulumi.IntInput `pulumi:"value"`
}

func (DirectHoneycombQueryDelayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectHoneycombQueryDelay)(nil)).Elem()
}

func (i DirectHoneycombQueryDelayArgs) ToDirectHoneycombQueryDelayOutput() DirectHoneycombQueryDelayOutput {
	return i.ToDirectHoneycombQueryDelayOutputWithContext(context.Background())
}

func (i DirectHoneycombQueryDelayArgs) ToDirectHoneycombQueryDelayOutputWithContext(ctx context.Context) DirectHoneycombQueryDelayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectHoneycombQueryDelayOutput)
}

func (i DirectHoneycombQueryDelayArgs) ToDirectHoneycombQueryDelayPtrOutput() DirectHoneycombQueryDelayPtrOutput {
	return i.ToDirectHoneycombQueryDelayPtrOutputWithContext(context.Background())
}

func (i DirectHoneycombQueryDelayArgs) ToDirectHoneycombQueryDelayPtrOutputWithContext(ctx context.Context) DirectHoneycombQueryDelayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectHoneycombQueryDelayOutput).ToDirectHoneycombQueryDelayPtrOutputWithContext(ctx)
}

// DirectHoneycombQueryDelayPtrInput is an input type that accepts DirectHoneycombQueryDelayArgs, DirectHoneycombQueryDelayPtr and DirectHoneycombQueryDelayPtrOutput values.
// You can construct a concrete instance of `DirectHoneycombQueryDelayPtrInput` via:
//
//	        DirectHoneycombQueryDelayArgs{...}
//
//	or:
//
//	        nil
type DirectHoneycombQueryDelayPtrInput interface {
	pulumi.Input

	ToDirectHoneycombQueryDelayPtrOutput() DirectHoneycombQueryDelayPtrOutput
	ToDirectHoneycombQueryDelayPtrOutputWithContext(context.Context) DirectHoneycombQueryDelayPtrOutput
}

type directHoneycombQueryDelayPtrType DirectHoneycombQueryDelayArgs

func DirectHoneycombQueryDelayPtr(v *DirectHoneycombQueryDelayArgs) DirectHoneycombQueryDelayPtrInput {
	return (*directHoneycombQueryDelayPtrType)(v)
}

func (*directHoneycombQueryDelayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectHoneycombQueryDelay)(nil)).Elem()
}

func (i *directHoneycombQueryDelayPtrType) ToDirectHoneycombQueryDelayPtrOutput() DirectHoneycombQueryDelayPtrOutput {
	return i.ToDirectHoneycombQueryDelayPtrOutputWithContext(context.Background())
}

func (i *directHoneycombQueryDelayPtrType) ToDirectHoneycombQueryDelayPtrOutputWithContext(ctx context.Context) DirectHoneycombQueryDelayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectHoneycombQueryDelayPtrOutput)
}

type DirectHoneycombQueryDelayOutput struct{ *pulumi.OutputState }

func (DirectHoneycombQueryDelayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectHoneycombQueryDelay)(nil)).Elem()
}

func (o DirectHoneycombQueryDelayOutput) ToDirectHoneycombQueryDelayOutput() DirectHoneycombQueryDelayOutput {
	return o
}

func (o DirectHoneycombQueryDelayOutput) ToDirectHoneycombQueryDelayOutputWithContext(ctx context.Context) DirectHoneycombQueryDelayOutput {
	return o
}

func (o DirectHoneycombQueryDelayOutput) ToDirectHoneycombQueryDelayPtrOutput() DirectHoneycombQueryDelayPtrOutput {
	return o.ToDirectHoneycombQueryDelayPtrOutputWithContext(context.Background())
}

func (o DirectHoneycombQueryDelayOutput) ToDirectHoneycombQueryDelayPtrOutputWithContext(ctx context.Context) DirectHoneycombQueryDelayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectHoneycombQueryDelay) *DirectHoneycombQueryDelay {
		return &v
	}).(DirectHoneycombQueryDelayPtrOutput)
}

// Must be one of Minute or Second.
func (o DirectHoneycombQueryDelayOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v DirectHoneycombQueryDelay) string { return v.Unit }).(pulumi.StringOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectHoneycombQueryDelayOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v DirectHoneycombQueryDelay) int { return v.Value }).(pulumi.IntOutput)
}

type DirectHoneycombQueryDelayPtrOutput struct{ *pulumi.OutputState }

func (DirectHoneycombQueryDelayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectHoneycombQueryDelay)(nil)).Elem()
}

func (o DirectHoneycombQueryDelayPtrOutput) ToDirectHoneycombQueryDelayPtrOutput() DirectHoneycombQueryDelayPtrOutput {
	return o
}

func (o DirectHoneycombQueryDelayPtrOutput) ToDirectHoneycombQueryDelayPtrOutputWithContext(ctx context.Context) DirectHoneycombQueryDelayPtrOutput {
	return o
}

func (o DirectHoneycombQueryDelayPtrOutput) Elem() DirectHoneycombQueryDelayOutput {
	return o.ApplyT(func(v *DirectHoneycombQueryDelay) DirectHoneycombQueryDelay {
		if v != nil {
			return *v
		}
		var ret DirectHoneycombQueryDelay
		return ret
	}).(DirectHoneycombQueryDelayOutput)
}

// Must be one of Minute or Second.
func (o DirectHoneycombQueryDelayPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectHoneycombQueryDelay) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectHoneycombQueryDelayPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DirectHoneycombQueryDelay) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type DirectInfluxdbQueryDelay struct {
	// Must be one of Minute or Second.
	Unit string `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value int `pulumi:"value"`
}

// DirectInfluxdbQueryDelayInput is an input type that accepts DirectInfluxdbQueryDelayArgs and DirectInfluxdbQueryDelayOutput values.
// You can construct a concrete instance of `DirectInfluxdbQueryDelayInput` via:
//
//	DirectInfluxdbQueryDelayArgs{...}
type DirectInfluxdbQueryDelayInput interface {
	pulumi.Input

	ToDirectInfluxdbQueryDelayOutput() DirectInfluxdbQueryDelayOutput
	ToDirectInfluxdbQueryDelayOutputWithContext(context.Context) DirectInfluxdbQueryDelayOutput
}

type DirectInfluxdbQueryDelayArgs struct {
	// Must be one of Minute or Second.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value pulumi.IntInput `pulumi:"value"`
}

func (DirectInfluxdbQueryDelayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectInfluxdbQueryDelay)(nil)).Elem()
}

func (i DirectInfluxdbQueryDelayArgs) ToDirectInfluxdbQueryDelayOutput() DirectInfluxdbQueryDelayOutput {
	return i.ToDirectInfluxdbQueryDelayOutputWithContext(context.Background())
}

func (i DirectInfluxdbQueryDelayArgs) ToDirectInfluxdbQueryDelayOutputWithContext(ctx context.Context) DirectInfluxdbQueryDelayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectInfluxdbQueryDelayOutput)
}

func (i DirectInfluxdbQueryDelayArgs) ToDirectInfluxdbQueryDelayPtrOutput() DirectInfluxdbQueryDelayPtrOutput {
	return i.ToDirectInfluxdbQueryDelayPtrOutputWithContext(context.Background())
}

func (i DirectInfluxdbQueryDelayArgs) ToDirectInfluxdbQueryDelayPtrOutputWithContext(ctx context.Context) DirectInfluxdbQueryDelayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectInfluxdbQueryDelayOutput).ToDirectInfluxdbQueryDelayPtrOutputWithContext(ctx)
}

// DirectInfluxdbQueryDelayPtrInput is an input type that accepts DirectInfluxdbQueryDelayArgs, DirectInfluxdbQueryDelayPtr and DirectInfluxdbQueryDelayPtrOutput values.
// You can construct a concrete instance of `DirectInfluxdbQueryDelayPtrInput` via:
//
//	        DirectInfluxdbQueryDelayArgs{...}
//
//	or:
//
//	        nil
type DirectInfluxdbQueryDelayPtrInput interface {
	pulumi.Input

	ToDirectInfluxdbQueryDelayPtrOutput() DirectInfluxdbQueryDelayPtrOutput
	ToDirectInfluxdbQueryDelayPtrOutputWithContext(context.Context) DirectInfluxdbQueryDelayPtrOutput
}

type directInfluxdbQueryDelayPtrType DirectInfluxdbQueryDelayArgs

func DirectInfluxdbQueryDelayPtr(v *DirectInfluxdbQueryDelayArgs) DirectInfluxdbQueryDelayPtrInput {
	return (*directInfluxdbQueryDelayPtrType)(v)
}

func (*directInfluxdbQueryDelayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectInfluxdbQueryDelay)(nil)).Elem()
}

func (i *directInfluxdbQueryDelayPtrType) ToDirectInfluxdbQueryDelayPtrOutput() DirectInfluxdbQueryDelayPtrOutput {
	return i.ToDirectInfluxdbQueryDelayPtrOutputWithContext(context.Background())
}

func (i *directInfluxdbQueryDelayPtrType) ToDirectInfluxdbQueryDelayPtrOutputWithContext(ctx context.Context) DirectInfluxdbQueryDelayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectInfluxdbQueryDelayPtrOutput)
}

type DirectInfluxdbQueryDelayOutput struct{ *pulumi.OutputState }

func (DirectInfluxdbQueryDelayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectInfluxdbQueryDelay)(nil)).Elem()
}

func (o DirectInfluxdbQueryDelayOutput) ToDirectInfluxdbQueryDelayOutput() DirectInfluxdbQueryDelayOutput {
	return o
}

func (o DirectInfluxdbQueryDelayOutput) ToDirectInfluxdbQueryDelayOutputWithContext(ctx context.Context) DirectInfluxdbQueryDelayOutput {
	return o
}

func (o DirectInfluxdbQueryDelayOutput) ToDirectInfluxdbQueryDelayPtrOutput() DirectInfluxdbQueryDelayPtrOutput {
	return o.ToDirectInfluxdbQueryDelayPtrOutputWithContext(context.Background())
}

func (o DirectInfluxdbQueryDelayOutput) ToDirectInfluxdbQueryDelayPtrOutputWithContext(ctx context.Context) DirectInfluxdbQueryDelayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectInfluxdbQueryDelay) *DirectInfluxdbQueryDelay {
		return &v
	}).(DirectInfluxdbQueryDelayPtrOutput)
}

// Must be one of Minute or Second.
func (o DirectInfluxdbQueryDelayOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v DirectInfluxdbQueryDelay) string { return v.Unit }).(pulumi.StringOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectInfluxdbQueryDelayOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v DirectInfluxdbQueryDelay) int { return v.Value }).(pulumi.IntOutput)
}

type DirectInfluxdbQueryDelayPtrOutput struct{ *pulumi.OutputState }

func (DirectInfluxdbQueryDelayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectInfluxdbQueryDelay)(nil)).Elem()
}

func (o DirectInfluxdbQueryDelayPtrOutput) ToDirectInfluxdbQueryDelayPtrOutput() DirectInfluxdbQueryDelayPtrOutput {
	return o
}

func (o DirectInfluxdbQueryDelayPtrOutput) ToDirectInfluxdbQueryDelayPtrOutputWithContext(ctx context.Context) DirectInfluxdbQueryDelayPtrOutput {
	return o
}

func (o DirectInfluxdbQueryDelayPtrOutput) Elem() DirectInfluxdbQueryDelayOutput {
	return o.ApplyT(func(v *DirectInfluxdbQueryDelay) DirectInfluxdbQueryDelay {
		if v != nil {
			return *v
		}
		var ret DirectInfluxdbQueryDelay
		return ret
	}).(DirectInfluxdbQueryDelayOutput)
}

// Must be one of Minute or Second.
func (o DirectInfluxdbQueryDelayPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectInfluxdbQueryDelay) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectInfluxdbQueryDelayPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DirectInfluxdbQueryDelay) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type DirectInstanaQueryDelay struct {
	// Must be one of Minute or Second.
	Unit string `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value int `pulumi:"value"`
}

// DirectInstanaQueryDelayInput is an input type that accepts DirectInstanaQueryDelayArgs and DirectInstanaQueryDelayOutput values.
// You can construct a concrete instance of `DirectInstanaQueryDelayInput` via:
//
//	DirectInstanaQueryDelayArgs{...}
type DirectInstanaQueryDelayInput interface {
	pulumi.Input

	ToDirectInstanaQueryDelayOutput() DirectInstanaQueryDelayOutput
	ToDirectInstanaQueryDelayOutputWithContext(context.Context) DirectInstanaQueryDelayOutput
}

type DirectInstanaQueryDelayArgs struct {
	// Must be one of Minute or Second.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value pulumi.IntInput `pulumi:"value"`
}

func (DirectInstanaQueryDelayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectInstanaQueryDelay)(nil)).Elem()
}

func (i DirectInstanaQueryDelayArgs) ToDirectInstanaQueryDelayOutput() DirectInstanaQueryDelayOutput {
	return i.ToDirectInstanaQueryDelayOutputWithContext(context.Background())
}

func (i DirectInstanaQueryDelayArgs) ToDirectInstanaQueryDelayOutputWithContext(ctx context.Context) DirectInstanaQueryDelayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectInstanaQueryDelayOutput)
}

func (i DirectInstanaQueryDelayArgs) ToDirectInstanaQueryDelayPtrOutput() DirectInstanaQueryDelayPtrOutput {
	return i.ToDirectInstanaQueryDelayPtrOutputWithContext(context.Background())
}

func (i DirectInstanaQueryDelayArgs) ToDirectInstanaQueryDelayPtrOutputWithContext(ctx context.Context) DirectInstanaQueryDelayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectInstanaQueryDelayOutput).ToDirectInstanaQueryDelayPtrOutputWithContext(ctx)
}

// DirectInstanaQueryDelayPtrInput is an input type that accepts DirectInstanaQueryDelayArgs, DirectInstanaQueryDelayPtr and DirectInstanaQueryDelayPtrOutput values.
// You can construct a concrete instance of `DirectInstanaQueryDelayPtrInput` via:
//
//	        DirectInstanaQueryDelayArgs{...}
//
//	or:
//
//	        nil
type DirectInstanaQueryDelayPtrInput interface {
	pulumi.Input

	ToDirectInstanaQueryDelayPtrOutput() DirectInstanaQueryDelayPtrOutput
	ToDirectInstanaQueryDelayPtrOutputWithContext(context.Context) DirectInstanaQueryDelayPtrOutput
}

type directInstanaQueryDelayPtrType DirectInstanaQueryDelayArgs

func DirectInstanaQueryDelayPtr(v *DirectInstanaQueryDelayArgs) DirectInstanaQueryDelayPtrInput {
	return (*directInstanaQueryDelayPtrType)(v)
}

func (*directInstanaQueryDelayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectInstanaQueryDelay)(nil)).Elem()
}

func (i *directInstanaQueryDelayPtrType) ToDirectInstanaQueryDelayPtrOutput() DirectInstanaQueryDelayPtrOutput {
	return i.ToDirectInstanaQueryDelayPtrOutputWithContext(context.Background())
}

func (i *directInstanaQueryDelayPtrType) ToDirectInstanaQueryDelayPtrOutputWithContext(ctx context.Context) DirectInstanaQueryDelayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectInstanaQueryDelayPtrOutput)
}

type DirectInstanaQueryDelayOutput struct{ *pulumi.OutputState }

func (DirectInstanaQueryDelayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectInstanaQueryDelay)(nil)).Elem()
}

func (o DirectInstanaQueryDelayOutput) ToDirectInstanaQueryDelayOutput() DirectInstanaQueryDelayOutput {
	return o
}

func (o DirectInstanaQueryDelayOutput) ToDirectInstanaQueryDelayOutputWithContext(ctx context.Context) DirectInstanaQueryDelayOutput {
	return o
}

func (o DirectInstanaQueryDelayOutput) ToDirectInstanaQueryDelayPtrOutput() DirectInstanaQueryDelayPtrOutput {
	return o.ToDirectInstanaQueryDelayPtrOutputWithContext(context.Background())
}

func (o DirectInstanaQueryDelayOutput) ToDirectInstanaQueryDelayPtrOutputWithContext(ctx context.Context) DirectInstanaQueryDelayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectInstanaQueryDelay) *DirectInstanaQueryDelay {
		return &v
	}).(DirectInstanaQueryDelayPtrOutput)
}

// Must be one of Minute or Second.
func (o DirectInstanaQueryDelayOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v DirectInstanaQueryDelay) string { return v.Unit }).(pulumi.StringOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectInstanaQueryDelayOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v DirectInstanaQueryDelay) int { return v.Value }).(pulumi.IntOutput)
}

type DirectInstanaQueryDelayPtrOutput struct{ *pulumi.OutputState }

func (DirectInstanaQueryDelayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectInstanaQueryDelay)(nil)).Elem()
}

func (o DirectInstanaQueryDelayPtrOutput) ToDirectInstanaQueryDelayPtrOutput() DirectInstanaQueryDelayPtrOutput {
	return o
}

func (o DirectInstanaQueryDelayPtrOutput) ToDirectInstanaQueryDelayPtrOutputWithContext(ctx context.Context) DirectInstanaQueryDelayPtrOutput {
	return o
}

func (o DirectInstanaQueryDelayPtrOutput) Elem() DirectInstanaQueryDelayOutput {
	return o.ApplyT(func(v *DirectInstanaQueryDelay) DirectInstanaQueryDelay {
		if v != nil {
			return *v
		}
		var ret DirectInstanaQueryDelay
		return ret
	}).(DirectInstanaQueryDelayOutput)
}

// Must be one of Minute or Second.
func (o DirectInstanaQueryDelayPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectInstanaQueryDelay) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectInstanaQueryDelayPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DirectInstanaQueryDelay) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type DirectLightstepHistoricalDataRetrieval struct {
	// Used by default for any SLOs connected to this data source.
	DefaultDurations []DirectLightstepHistoricalDataRetrievalDefaultDuration `pulumi:"defaultDurations"`
	// Defines the maximum period for which data can be retrieved.
	MaxDurations []DirectLightstepHistoricalDataRetrievalMaxDuration `pulumi:"maxDurations"`
}

// DirectLightstepHistoricalDataRetrievalInput is an input type that accepts DirectLightstepHistoricalDataRetrievalArgs and DirectLightstepHistoricalDataRetrievalOutput values.
// You can construct a concrete instance of `DirectLightstepHistoricalDataRetrievalInput` via:
//
//	DirectLightstepHistoricalDataRetrievalArgs{...}
type DirectLightstepHistoricalDataRetrievalInput interface {
	pulumi.Input

	ToDirectLightstepHistoricalDataRetrievalOutput() DirectLightstepHistoricalDataRetrievalOutput
	ToDirectLightstepHistoricalDataRetrievalOutputWithContext(context.Context) DirectLightstepHistoricalDataRetrievalOutput
}

type DirectLightstepHistoricalDataRetrievalArgs struct {
	// Used by default for any SLOs connected to this data source.
	DefaultDurations DirectLightstepHistoricalDataRetrievalDefaultDurationArrayInput `pulumi:"defaultDurations"`
	// Defines the maximum period for which data can be retrieved.
	MaxDurations DirectLightstepHistoricalDataRetrievalMaxDurationArrayInput `pulumi:"maxDurations"`
}

func (DirectLightstepHistoricalDataRetrievalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectLightstepHistoricalDataRetrieval)(nil)).Elem()
}

func (i DirectLightstepHistoricalDataRetrievalArgs) ToDirectLightstepHistoricalDataRetrievalOutput() DirectLightstepHistoricalDataRetrievalOutput {
	return i.ToDirectLightstepHistoricalDataRetrievalOutputWithContext(context.Background())
}

func (i DirectLightstepHistoricalDataRetrievalArgs) ToDirectLightstepHistoricalDataRetrievalOutputWithContext(ctx context.Context) DirectLightstepHistoricalDataRetrievalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectLightstepHistoricalDataRetrievalOutput)
}

func (i DirectLightstepHistoricalDataRetrievalArgs) ToDirectLightstepHistoricalDataRetrievalPtrOutput() DirectLightstepHistoricalDataRetrievalPtrOutput {
	return i.ToDirectLightstepHistoricalDataRetrievalPtrOutputWithContext(context.Background())
}

func (i DirectLightstepHistoricalDataRetrievalArgs) ToDirectLightstepHistoricalDataRetrievalPtrOutputWithContext(ctx context.Context) DirectLightstepHistoricalDataRetrievalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectLightstepHistoricalDataRetrievalOutput).ToDirectLightstepHistoricalDataRetrievalPtrOutputWithContext(ctx)
}

// DirectLightstepHistoricalDataRetrievalPtrInput is an input type that accepts DirectLightstepHistoricalDataRetrievalArgs, DirectLightstepHistoricalDataRetrievalPtr and DirectLightstepHistoricalDataRetrievalPtrOutput values.
// You can construct a concrete instance of `DirectLightstepHistoricalDataRetrievalPtrInput` via:
//
//	        DirectLightstepHistoricalDataRetrievalArgs{...}
//
//	or:
//
//	        nil
type DirectLightstepHistoricalDataRetrievalPtrInput interface {
	pulumi.Input

	ToDirectLightstepHistoricalDataRetrievalPtrOutput() DirectLightstepHistoricalDataRetrievalPtrOutput
	ToDirectLightstepHistoricalDataRetrievalPtrOutputWithContext(context.Context) DirectLightstepHistoricalDataRetrievalPtrOutput
}

type directLightstepHistoricalDataRetrievalPtrType DirectLightstepHistoricalDataRetrievalArgs

func DirectLightstepHistoricalDataRetrievalPtr(v *DirectLightstepHistoricalDataRetrievalArgs) DirectLightstepHistoricalDataRetrievalPtrInput {
	return (*directLightstepHistoricalDataRetrievalPtrType)(v)
}

func (*directLightstepHistoricalDataRetrievalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectLightstepHistoricalDataRetrieval)(nil)).Elem()
}

func (i *directLightstepHistoricalDataRetrievalPtrType) ToDirectLightstepHistoricalDataRetrievalPtrOutput() DirectLightstepHistoricalDataRetrievalPtrOutput {
	return i.ToDirectLightstepHistoricalDataRetrievalPtrOutputWithContext(context.Background())
}

func (i *directLightstepHistoricalDataRetrievalPtrType) ToDirectLightstepHistoricalDataRetrievalPtrOutputWithContext(ctx context.Context) DirectLightstepHistoricalDataRetrievalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectLightstepHistoricalDataRetrievalPtrOutput)
}

type DirectLightstepHistoricalDataRetrievalOutput struct{ *pulumi.OutputState }

func (DirectLightstepHistoricalDataRetrievalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectLightstepHistoricalDataRetrieval)(nil)).Elem()
}

func (o DirectLightstepHistoricalDataRetrievalOutput) ToDirectLightstepHistoricalDataRetrievalOutput() DirectLightstepHistoricalDataRetrievalOutput {
	return o
}

func (o DirectLightstepHistoricalDataRetrievalOutput) ToDirectLightstepHistoricalDataRetrievalOutputWithContext(ctx context.Context) DirectLightstepHistoricalDataRetrievalOutput {
	return o
}

func (o DirectLightstepHistoricalDataRetrievalOutput) ToDirectLightstepHistoricalDataRetrievalPtrOutput() DirectLightstepHistoricalDataRetrievalPtrOutput {
	return o.ToDirectLightstepHistoricalDataRetrievalPtrOutputWithContext(context.Background())
}

func (o DirectLightstepHistoricalDataRetrievalOutput) ToDirectLightstepHistoricalDataRetrievalPtrOutputWithContext(ctx context.Context) DirectLightstepHistoricalDataRetrievalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectLightstepHistoricalDataRetrieval) *DirectLightstepHistoricalDataRetrieval {
		return &v
	}).(DirectLightstepHistoricalDataRetrievalPtrOutput)
}

// Used by default for any SLOs connected to this data source.
func (o DirectLightstepHistoricalDataRetrievalOutput) DefaultDurations() DirectLightstepHistoricalDataRetrievalDefaultDurationArrayOutput {
	return o.ApplyT(func(v DirectLightstepHistoricalDataRetrieval) []DirectLightstepHistoricalDataRetrievalDefaultDuration {
		return v.DefaultDurations
	}).(DirectLightstepHistoricalDataRetrievalDefaultDurationArrayOutput)
}

// Defines the maximum period for which data can be retrieved.
func (o DirectLightstepHistoricalDataRetrievalOutput) MaxDurations() DirectLightstepHistoricalDataRetrievalMaxDurationArrayOutput {
	return o.ApplyT(func(v DirectLightstepHistoricalDataRetrieval) []DirectLightstepHistoricalDataRetrievalMaxDuration {
		return v.MaxDurations
	}).(DirectLightstepHistoricalDataRetrievalMaxDurationArrayOutput)
}

type DirectLightstepHistoricalDataRetrievalPtrOutput struct{ *pulumi.OutputState }

func (DirectLightstepHistoricalDataRetrievalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectLightstepHistoricalDataRetrieval)(nil)).Elem()
}

func (o DirectLightstepHistoricalDataRetrievalPtrOutput) ToDirectLightstepHistoricalDataRetrievalPtrOutput() DirectLightstepHistoricalDataRetrievalPtrOutput {
	return o
}

func (o DirectLightstepHistoricalDataRetrievalPtrOutput) ToDirectLightstepHistoricalDataRetrievalPtrOutputWithContext(ctx context.Context) DirectLightstepHistoricalDataRetrievalPtrOutput {
	return o
}

func (o DirectLightstepHistoricalDataRetrievalPtrOutput) Elem() DirectLightstepHistoricalDataRetrievalOutput {
	return o.ApplyT(func(v *DirectLightstepHistoricalDataRetrieval) DirectLightstepHistoricalDataRetrieval {
		if v != nil {
			return *v
		}
		var ret DirectLightstepHistoricalDataRetrieval
		return ret
	}).(DirectLightstepHistoricalDataRetrievalOutput)
}

// Used by default for any SLOs connected to this data source.
func (o DirectLightstepHistoricalDataRetrievalPtrOutput) DefaultDurations() DirectLightstepHistoricalDataRetrievalDefaultDurationArrayOutput {
	return o.ApplyT(func(v *DirectLightstepHistoricalDataRetrieval) []DirectLightstepHistoricalDataRetrievalDefaultDuration {
		if v == nil {
			return nil
		}
		return v.DefaultDurations
	}).(DirectLightstepHistoricalDataRetrievalDefaultDurationArrayOutput)
}

// Defines the maximum period for which data can be retrieved.
func (o DirectLightstepHistoricalDataRetrievalPtrOutput) MaxDurations() DirectLightstepHistoricalDataRetrievalMaxDurationArrayOutput {
	return o.ApplyT(func(v *DirectLightstepHistoricalDataRetrieval) []DirectLightstepHistoricalDataRetrievalMaxDuration {
		if v == nil {
			return nil
		}
		return v.MaxDurations
	}).(DirectLightstepHistoricalDataRetrievalMaxDurationArrayOutput)
}

type DirectLightstepHistoricalDataRetrievalDefaultDuration struct {
	// Must be one of Minute, Hour, or Day.
	Unit string `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value int `pulumi:"value"`
}

// DirectLightstepHistoricalDataRetrievalDefaultDurationInput is an input type that accepts DirectLightstepHistoricalDataRetrievalDefaultDurationArgs and DirectLightstepHistoricalDataRetrievalDefaultDurationOutput values.
// You can construct a concrete instance of `DirectLightstepHistoricalDataRetrievalDefaultDurationInput` via:
//
//	DirectLightstepHistoricalDataRetrievalDefaultDurationArgs{...}
type DirectLightstepHistoricalDataRetrievalDefaultDurationInput interface {
	pulumi.Input

	ToDirectLightstepHistoricalDataRetrievalDefaultDurationOutput() DirectLightstepHistoricalDataRetrievalDefaultDurationOutput
	ToDirectLightstepHistoricalDataRetrievalDefaultDurationOutputWithContext(context.Context) DirectLightstepHistoricalDataRetrievalDefaultDurationOutput
}

type DirectLightstepHistoricalDataRetrievalDefaultDurationArgs struct {
	// Must be one of Minute, Hour, or Day.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value pulumi.IntInput `pulumi:"value"`
}

func (DirectLightstepHistoricalDataRetrievalDefaultDurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectLightstepHistoricalDataRetrievalDefaultDuration)(nil)).Elem()
}

func (i DirectLightstepHistoricalDataRetrievalDefaultDurationArgs) ToDirectLightstepHistoricalDataRetrievalDefaultDurationOutput() DirectLightstepHistoricalDataRetrievalDefaultDurationOutput {
	return i.ToDirectLightstepHistoricalDataRetrievalDefaultDurationOutputWithContext(context.Background())
}

func (i DirectLightstepHistoricalDataRetrievalDefaultDurationArgs) ToDirectLightstepHistoricalDataRetrievalDefaultDurationOutputWithContext(ctx context.Context) DirectLightstepHistoricalDataRetrievalDefaultDurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectLightstepHistoricalDataRetrievalDefaultDurationOutput)
}

// DirectLightstepHistoricalDataRetrievalDefaultDurationArrayInput is an input type that accepts DirectLightstepHistoricalDataRetrievalDefaultDurationArray and DirectLightstepHistoricalDataRetrievalDefaultDurationArrayOutput values.
// You can construct a concrete instance of `DirectLightstepHistoricalDataRetrievalDefaultDurationArrayInput` via:
//
//	DirectLightstepHistoricalDataRetrievalDefaultDurationArray{ DirectLightstepHistoricalDataRetrievalDefaultDurationArgs{...} }
type DirectLightstepHistoricalDataRetrievalDefaultDurationArrayInput interface {
	pulumi.Input

	ToDirectLightstepHistoricalDataRetrievalDefaultDurationArrayOutput() DirectLightstepHistoricalDataRetrievalDefaultDurationArrayOutput
	ToDirectLightstepHistoricalDataRetrievalDefaultDurationArrayOutputWithContext(context.Context) DirectLightstepHistoricalDataRetrievalDefaultDurationArrayOutput
}

type DirectLightstepHistoricalDataRetrievalDefaultDurationArray []DirectLightstepHistoricalDataRetrievalDefaultDurationInput

func (DirectLightstepHistoricalDataRetrievalDefaultDurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectLightstepHistoricalDataRetrievalDefaultDuration)(nil)).Elem()
}

func (i DirectLightstepHistoricalDataRetrievalDefaultDurationArray) ToDirectLightstepHistoricalDataRetrievalDefaultDurationArrayOutput() DirectLightstepHistoricalDataRetrievalDefaultDurationArrayOutput {
	return i.ToDirectLightstepHistoricalDataRetrievalDefaultDurationArrayOutputWithContext(context.Background())
}

func (i DirectLightstepHistoricalDataRetrievalDefaultDurationArray) ToDirectLightstepHistoricalDataRetrievalDefaultDurationArrayOutputWithContext(ctx context.Context) DirectLightstepHistoricalDataRetrievalDefaultDurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectLightstepHistoricalDataRetrievalDefaultDurationArrayOutput)
}

type DirectLightstepHistoricalDataRetrievalDefaultDurationOutput struct{ *pulumi.OutputState }

func (DirectLightstepHistoricalDataRetrievalDefaultDurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectLightstepHistoricalDataRetrievalDefaultDuration)(nil)).Elem()
}

func (o DirectLightstepHistoricalDataRetrievalDefaultDurationOutput) ToDirectLightstepHistoricalDataRetrievalDefaultDurationOutput() DirectLightstepHistoricalDataRetrievalDefaultDurationOutput {
	return o
}

func (o DirectLightstepHistoricalDataRetrievalDefaultDurationOutput) ToDirectLightstepHistoricalDataRetrievalDefaultDurationOutputWithContext(ctx context.Context) DirectLightstepHistoricalDataRetrievalDefaultDurationOutput {
	return o
}

// Must be one of Minute, Hour, or Day.
func (o DirectLightstepHistoricalDataRetrievalDefaultDurationOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v DirectLightstepHistoricalDataRetrievalDefaultDuration) string { return v.Unit }).(pulumi.StringOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectLightstepHistoricalDataRetrievalDefaultDurationOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v DirectLightstepHistoricalDataRetrievalDefaultDuration) int { return v.Value }).(pulumi.IntOutput)
}

type DirectLightstepHistoricalDataRetrievalDefaultDurationArrayOutput struct{ *pulumi.OutputState }

func (DirectLightstepHistoricalDataRetrievalDefaultDurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectLightstepHistoricalDataRetrievalDefaultDuration)(nil)).Elem()
}

func (o DirectLightstepHistoricalDataRetrievalDefaultDurationArrayOutput) ToDirectLightstepHistoricalDataRetrievalDefaultDurationArrayOutput() DirectLightstepHistoricalDataRetrievalDefaultDurationArrayOutput {
	return o
}

func (o DirectLightstepHistoricalDataRetrievalDefaultDurationArrayOutput) ToDirectLightstepHistoricalDataRetrievalDefaultDurationArrayOutputWithContext(ctx context.Context) DirectLightstepHistoricalDataRetrievalDefaultDurationArrayOutput {
	return o
}

func (o DirectLightstepHistoricalDataRetrievalDefaultDurationArrayOutput) Index(i pulumi.IntInput) DirectLightstepHistoricalDataRetrievalDefaultDurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DirectLightstepHistoricalDataRetrievalDefaultDuration {
		return vs[0].([]DirectLightstepHistoricalDataRetrievalDefaultDuration)[vs[1].(int)]
	}).(DirectLightstepHistoricalDataRetrievalDefaultDurationOutput)
}

type DirectLightstepHistoricalDataRetrievalMaxDuration struct {
	// Must be one of Minute, Hour, or Day.
	Unit string `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value int `pulumi:"value"`
}

// DirectLightstepHistoricalDataRetrievalMaxDurationInput is an input type that accepts DirectLightstepHistoricalDataRetrievalMaxDurationArgs and DirectLightstepHistoricalDataRetrievalMaxDurationOutput values.
// You can construct a concrete instance of `DirectLightstepHistoricalDataRetrievalMaxDurationInput` via:
//
//	DirectLightstepHistoricalDataRetrievalMaxDurationArgs{...}
type DirectLightstepHistoricalDataRetrievalMaxDurationInput interface {
	pulumi.Input

	ToDirectLightstepHistoricalDataRetrievalMaxDurationOutput() DirectLightstepHistoricalDataRetrievalMaxDurationOutput
	ToDirectLightstepHistoricalDataRetrievalMaxDurationOutputWithContext(context.Context) DirectLightstepHistoricalDataRetrievalMaxDurationOutput
}

type DirectLightstepHistoricalDataRetrievalMaxDurationArgs struct {
	// Must be one of Minute, Hour, or Day.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value pulumi.IntInput `pulumi:"value"`
}

func (DirectLightstepHistoricalDataRetrievalMaxDurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectLightstepHistoricalDataRetrievalMaxDuration)(nil)).Elem()
}

func (i DirectLightstepHistoricalDataRetrievalMaxDurationArgs) ToDirectLightstepHistoricalDataRetrievalMaxDurationOutput() DirectLightstepHistoricalDataRetrievalMaxDurationOutput {
	return i.ToDirectLightstepHistoricalDataRetrievalMaxDurationOutputWithContext(context.Background())
}

func (i DirectLightstepHistoricalDataRetrievalMaxDurationArgs) ToDirectLightstepHistoricalDataRetrievalMaxDurationOutputWithContext(ctx context.Context) DirectLightstepHistoricalDataRetrievalMaxDurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectLightstepHistoricalDataRetrievalMaxDurationOutput)
}

// DirectLightstepHistoricalDataRetrievalMaxDurationArrayInput is an input type that accepts DirectLightstepHistoricalDataRetrievalMaxDurationArray and DirectLightstepHistoricalDataRetrievalMaxDurationArrayOutput values.
// You can construct a concrete instance of `DirectLightstepHistoricalDataRetrievalMaxDurationArrayInput` via:
//
//	DirectLightstepHistoricalDataRetrievalMaxDurationArray{ DirectLightstepHistoricalDataRetrievalMaxDurationArgs{...} }
type DirectLightstepHistoricalDataRetrievalMaxDurationArrayInput interface {
	pulumi.Input

	ToDirectLightstepHistoricalDataRetrievalMaxDurationArrayOutput() DirectLightstepHistoricalDataRetrievalMaxDurationArrayOutput
	ToDirectLightstepHistoricalDataRetrievalMaxDurationArrayOutputWithContext(context.Context) DirectLightstepHistoricalDataRetrievalMaxDurationArrayOutput
}

type DirectLightstepHistoricalDataRetrievalMaxDurationArray []DirectLightstepHistoricalDataRetrievalMaxDurationInput

func (DirectLightstepHistoricalDataRetrievalMaxDurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectLightstepHistoricalDataRetrievalMaxDuration)(nil)).Elem()
}

func (i DirectLightstepHistoricalDataRetrievalMaxDurationArray) ToDirectLightstepHistoricalDataRetrievalMaxDurationArrayOutput() DirectLightstepHistoricalDataRetrievalMaxDurationArrayOutput {
	return i.ToDirectLightstepHistoricalDataRetrievalMaxDurationArrayOutputWithContext(context.Background())
}

func (i DirectLightstepHistoricalDataRetrievalMaxDurationArray) ToDirectLightstepHistoricalDataRetrievalMaxDurationArrayOutputWithContext(ctx context.Context) DirectLightstepHistoricalDataRetrievalMaxDurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectLightstepHistoricalDataRetrievalMaxDurationArrayOutput)
}

type DirectLightstepHistoricalDataRetrievalMaxDurationOutput struct{ *pulumi.OutputState }

func (DirectLightstepHistoricalDataRetrievalMaxDurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectLightstepHistoricalDataRetrievalMaxDuration)(nil)).Elem()
}

func (o DirectLightstepHistoricalDataRetrievalMaxDurationOutput) ToDirectLightstepHistoricalDataRetrievalMaxDurationOutput() DirectLightstepHistoricalDataRetrievalMaxDurationOutput {
	return o
}

func (o DirectLightstepHistoricalDataRetrievalMaxDurationOutput) ToDirectLightstepHistoricalDataRetrievalMaxDurationOutputWithContext(ctx context.Context) DirectLightstepHistoricalDataRetrievalMaxDurationOutput {
	return o
}

// Must be one of Minute, Hour, or Day.
func (o DirectLightstepHistoricalDataRetrievalMaxDurationOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v DirectLightstepHistoricalDataRetrievalMaxDuration) string { return v.Unit }).(pulumi.StringOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectLightstepHistoricalDataRetrievalMaxDurationOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v DirectLightstepHistoricalDataRetrievalMaxDuration) int { return v.Value }).(pulumi.IntOutput)
}

type DirectLightstepHistoricalDataRetrievalMaxDurationArrayOutput struct{ *pulumi.OutputState }

func (DirectLightstepHistoricalDataRetrievalMaxDurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectLightstepHistoricalDataRetrievalMaxDuration)(nil)).Elem()
}

func (o DirectLightstepHistoricalDataRetrievalMaxDurationArrayOutput) ToDirectLightstepHistoricalDataRetrievalMaxDurationArrayOutput() DirectLightstepHistoricalDataRetrievalMaxDurationArrayOutput {
	return o
}

func (o DirectLightstepHistoricalDataRetrievalMaxDurationArrayOutput) ToDirectLightstepHistoricalDataRetrievalMaxDurationArrayOutputWithContext(ctx context.Context) DirectLightstepHistoricalDataRetrievalMaxDurationArrayOutput {
	return o
}

func (o DirectLightstepHistoricalDataRetrievalMaxDurationArrayOutput) Index(i pulumi.IntInput) DirectLightstepHistoricalDataRetrievalMaxDurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DirectLightstepHistoricalDataRetrievalMaxDuration {
		return vs[0].([]DirectLightstepHistoricalDataRetrievalMaxDuration)[vs[1].(int)]
	}).(DirectLightstepHistoricalDataRetrievalMaxDurationOutput)
}

type DirectLightstepQueryDelay struct {
	// Must be one of Minute or Second.
	Unit string `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value int `pulumi:"value"`
}

// DirectLightstepQueryDelayInput is an input type that accepts DirectLightstepQueryDelayArgs and DirectLightstepQueryDelayOutput values.
// You can construct a concrete instance of `DirectLightstepQueryDelayInput` via:
//
//	DirectLightstepQueryDelayArgs{...}
type DirectLightstepQueryDelayInput interface {
	pulumi.Input

	ToDirectLightstepQueryDelayOutput() DirectLightstepQueryDelayOutput
	ToDirectLightstepQueryDelayOutputWithContext(context.Context) DirectLightstepQueryDelayOutput
}

type DirectLightstepQueryDelayArgs struct {
	// Must be one of Minute or Second.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value pulumi.IntInput `pulumi:"value"`
}

func (DirectLightstepQueryDelayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectLightstepQueryDelay)(nil)).Elem()
}

func (i DirectLightstepQueryDelayArgs) ToDirectLightstepQueryDelayOutput() DirectLightstepQueryDelayOutput {
	return i.ToDirectLightstepQueryDelayOutputWithContext(context.Background())
}

func (i DirectLightstepQueryDelayArgs) ToDirectLightstepQueryDelayOutputWithContext(ctx context.Context) DirectLightstepQueryDelayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectLightstepQueryDelayOutput)
}

func (i DirectLightstepQueryDelayArgs) ToDirectLightstepQueryDelayPtrOutput() DirectLightstepQueryDelayPtrOutput {
	return i.ToDirectLightstepQueryDelayPtrOutputWithContext(context.Background())
}

func (i DirectLightstepQueryDelayArgs) ToDirectLightstepQueryDelayPtrOutputWithContext(ctx context.Context) DirectLightstepQueryDelayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectLightstepQueryDelayOutput).ToDirectLightstepQueryDelayPtrOutputWithContext(ctx)
}

// DirectLightstepQueryDelayPtrInput is an input type that accepts DirectLightstepQueryDelayArgs, DirectLightstepQueryDelayPtr and DirectLightstepQueryDelayPtrOutput values.
// You can construct a concrete instance of `DirectLightstepQueryDelayPtrInput` via:
//
//	        DirectLightstepQueryDelayArgs{...}
//
//	or:
//
//	        nil
type DirectLightstepQueryDelayPtrInput interface {
	pulumi.Input

	ToDirectLightstepQueryDelayPtrOutput() DirectLightstepQueryDelayPtrOutput
	ToDirectLightstepQueryDelayPtrOutputWithContext(context.Context) DirectLightstepQueryDelayPtrOutput
}

type directLightstepQueryDelayPtrType DirectLightstepQueryDelayArgs

func DirectLightstepQueryDelayPtr(v *DirectLightstepQueryDelayArgs) DirectLightstepQueryDelayPtrInput {
	return (*directLightstepQueryDelayPtrType)(v)
}

func (*directLightstepQueryDelayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectLightstepQueryDelay)(nil)).Elem()
}

func (i *directLightstepQueryDelayPtrType) ToDirectLightstepQueryDelayPtrOutput() DirectLightstepQueryDelayPtrOutput {
	return i.ToDirectLightstepQueryDelayPtrOutputWithContext(context.Background())
}

func (i *directLightstepQueryDelayPtrType) ToDirectLightstepQueryDelayPtrOutputWithContext(ctx context.Context) DirectLightstepQueryDelayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectLightstepQueryDelayPtrOutput)
}

type DirectLightstepQueryDelayOutput struct{ *pulumi.OutputState }

func (DirectLightstepQueryDelayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectLightstepQueryDelay)(nil)).Elem()
}

func (o DirectLightstepQueryDelayOutput) ToDirectLightstepQueryDelayOutput() DirectLightstepQueryDelayOutput {
	return o
}

func (o DirectLightstepQueryDelayOutput) ToDirectLightstepQueryDelayOutputWithContext(ctx context.Context) DirectLightstepQueryDelayOutput {
	return o
}

func (o DirectLightstepQueryDelayOutput) ToDirectLightstepQueryDelayPtrOutput() DirectLightstepQueryDelayPtrOutput {
	return o.ToDirectLightstepQueryDelayPtrOutputWithContext(context.Background())
}

func (o DirectLightstepQueryDelayOutput) ToDirectLightstepQueryDelayPtrOutputWithContext(ctx context.Context) DirectLightstepQueryDelayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectLightstepQueryDelay) *DirectLightstepQueryDelay {
		return &v
	}).(DirectLightstepQueryDelayPtrOutput)
}

// Must be one of Minute or Second.
func (o DirectLightstepQueryDelayOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v DirectLightstepQueryDelay) string { return v.Unit }).(pulumi.StringOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectLightstepQueryDelayOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v DirectLightstepQueryDelay) int { return v.Value }).(pulumi.IntOutput)
}

type DirectLightstepQueryDelayPtrOutput struct{ *pulumi.OutputState }

func (DirectLightstepQueryDelayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectLightstepQueryDelay)(nil)).Elem()
}

func (o DirectLightstepQueryDelayPtrOutput) ToDirectLightstepQueryDelayPtrOutput() DirectLightstepQueryDelayPtrOutput {
	return o
}

func (o DirectLightstepQueryDelayPtrOutput) ToDirectLightstepQueryDelayPtrOutputWithContext(ctx context.Context) DirectLightstepQueryDelayPtrOutput {
	return o
}

func (o DirectLightstepQueryDelayPtrOutput) Elem() DirectLightstepQueryDelayOutput {
	return o.ApplyT(func(v *DirectLightstepQueryDelay) DirectLightstepQueryDelay {
		if v != nil {
			return *v
		}
		var ret DirectLightstepQueryDelay
		return ret
	}).(DirectLightstepQueryDelayOutput)
}

// Must be one of Minute or Second.
func (o DirectLightstepQueryDelayPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectLightstepQueryDelay) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectLightstepQueryDelayPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DirectLightstepQueryDelay) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type DirectNewrelicHistoricalDataRetrieval struct {
	// Used by default for any SLOs connected to this data source.
	DefaultDurations []DirectNewrelicHistoricalDataRetrievalDefaultDuration `pulumi:"defaultDurations"`
	// Defines the maximum period for which data can be retrieved.
	MaxDurations []DirectNewrelicHistoricalDataRetrievalMaxDuration `pulumi:"maxDurations"`
}

// DirectNewrelicHistoricalDataRetrievalInput is an input type that accepts DirectNewrelicHistoricalDataRetrievalArgs and DirectNewrelicHistoricalDataRetrievalOutput values.
// You can construct a concrete instance of `DirectNewrelicHistoricalDataRetrievalInput` via:
//
//	DirectNewrelicHistoricalDataRetrievalArgs{...}
type DirectNewrelicHistoricalDataRetrievalInput interface {
	pulumi.Input

	ToDirectNewrelicHistoricalDataRetrievalOutput() DirectNewrelicHistoricalDataRetrievalOutput
	ToDirectNewrelicHistoricalDataRetrievalOutputWithContext(context.Context) DirectNewrelicHistoricalDataRetrievalOutput
}

type DirectNewrelicHistoricalDataRetrievalArgs struct {
	// Used by default for any SLOs connected to this data source.
	DefaultDurations DirectNewrelicHistoricalDataRetrievalDefaultDurationArrayInput `pulumi:"defaultDurations"`
	// Defines the maximum period for which data can be retrieved.
	MaxDurations DirectNewrelicHistoricalDataRetrievalMaxDurationArrayInput `pulumi:"maxDurations"`
}

func (DirectNewrelicHistoricalDataRetrievalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectNewrelicHistoricalDataRetrieval)(nil)).Elem()
}

func (i DirectNewrelicHistoricalDataRetrievalArgs) ToDirectNewrelicHistoricalDataRetrievalOutput() DirectNewrelicHistoricalDataRetrievalOutput {
	return i.ToDirectNewrelicHistoricalDataRetrievalOutputWithContext(context.Background())
}

func (i DirectNewrelicHistoricalDataRetrievalArgs) ToDirectNewrelicHistoricalDataRetrievalOutputWithContext(ctx context.Context) DirectNewrelicHistoricalDataRetrievalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectNewrelicHistoricalDataRetrievalOutput)
}

func (i DirectNewrelicHistoricalDataRetrievalArgs) ToDirectNewrelicHistoricalDataRetrievalPtrOutput() DirectNewrelicHistoricalDataRetrievalPtrOutput {
	return i.ToDirectNewrelicHistoricalDataRetrievalPtrOutputWithContext(context.Background())
}

func (i DirectNewrelicHistoricalDataRetrievalArgs) ToDirectNewrelicHistoricalDataRetrievalPtrOutputWithContext(ctx context.Context) DirectNewrelicHistoricalDataRetrievalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectNewrelicHistoricalDataRetrievalOutput).ToDirectNewrelicHistoricalDataRetrievalPtrOutputWithContext(ctx)
}

// DirectNewrelicHistoricalDataRetrievalPtrInput is an input type that accepts DirectNewrelicHistoricalDataRetrievalArgs, DirectNewrelicHistoricalDataRetrievalPtr and DirectNewrelicHistoricalDataRetrievalPtrOutput values.
// You can construct a concrete instance of `DirectNewrelicHistoricalDataRetrievalPtrInput` via:
//
//	        DirectNewrelicHistoricalDataRetrievalArgs{...}
//
//	or:
//
//	        nil
type DirectNewrelicHistoricalDataRetrievalPtrInput interface {
	pulumi.Input

	ToDirectNewrelicHistoricalDataRetrievalPtrOutput() DirectNewrelicHistoricalDataRetrievalPtrOutput
	ToDirectNewrelicHistoricalDataRetrievalPtrOutputWithContext(context.Context) DirectNewrelicHistoricalDataRetrievalPtrOutput
}

type directNewrelicHistoricalDataRetrievalPtrType DirectNewrelicHistoricalDataRetrievalArgs

func DirectNewrelicHistoricalDataRetrievalPtr(v *DirectNewrelicHistoricalDataRetrievalArgs) DirectNewrelicHistoricalDataRetrievalPtrInput {
	return (*directNewrelicHistoricalDataRetrievalPtrType)(v)
}

func (*directNewrelicHistoricalDataRetrievalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectNewrelicHistoricalDataRetrieval)(nil)).Elem()
}

func (i *directNewrelicHistoricalDataRetrievalPtrType) ToDirectNewrelicHistoricalDataRetrievalPtrOutput() DirectNewrelicHistoricalDataRetrievalPtrOutput {
	return i.ToDirectNewrelicHistoricalDataRetrievalPtrOutputWithContext(context.Background())
}

func (i *directNewrelicHistoricalDataRetrievalPtrType) ToDirectNewrelicHistoricalDataRetrievalPtrOutputWithContext(ctx context.Context) DirectNewrelicHistoricalDataRetrievalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectNewrelicHistoricalDataRetrievalPtrOutput)
}

type DirectNewrelicHistoricalDataRetrievalOutput struct{ *pulumi.OutputState }

func (DirectNewrelicHistoricalDataRetrievalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectNewrelicHistoricalDataRetrieval)(nil)).Elem()
}

func (o DirectNewrelicHistoricalDataRetrievalOutput) ToDirectNewrelicHistoricalDataRetrievalOutput() DirectNewrelicHistoricalDataRetrievalOutput {
	return o
}

func (o DirectNewrelicHistoricalDataRetrievalOutput) ToDirectNewrelicHistoricalDataRetrievalOutputWithContext(ctx context.Context) DirectNewrelicHistoricalDataRetrievalOutput {
	return o
}

func (o DirectNewrelicHistoricalDataRetrievalOutput) ToDirectNewrelicHistoricalDataRetrievalPtrOutput() DirectNewrelicHistoricalDataRetrievalPtrOutput {
	return o.ToDirectNewrelicHistoricalDataRetrievalPtrOutputWithContext(context.Background())
}

func (o DirectNewrelicHistoricalDataRetrievalOutput) ToDirectNewrelicHistoricalDataRetrievalPtrOutputWithContext(ctx context.Context) DirectNewrelicHistoricalDataRetrievalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectNewrelicHistoricalDataRetrieval) *DirectNewrelicHistoricalDataRetrieval {
		return &v
	}).(DirectNewrelicHistoricalDataRetrievalPtrOutput)
}

// Used by default for any SLOs connected to this data source.
func (o DirectNewrelicHistoricalDataRetrievalOutput) DefaultDurations() DirectNewrelicHistoricalDataRetrievalDefaultDurationArrayOutput {
	return o.ApplyT(func(v DirectNewrelicHistoricalDataRetrieval) []DirectNewrelicHistoricalDataRetrievalDefaultDuration {
		return v.DefaultDurations
	}).(DirectNewrelicHistoricalDataRetrievalDefaultDurationArrayOutput)
}

// Defines the maximum period for which data can be retrieved.
func (o DirectNewrelicHistoricalDataRetrievalOutput) MaxDurations() DirectNewrelicHistoricalDataRetrievalMaxDurationArrayOutput {
	return o.ApplyT(func(v DirectNewrelicHistoricalDataRetrieval) []DirectNewrelicHistoricalDataRetrievalMaxDuration {
		return v.MaxDurations
	}).(DirectNewrelicHistoricalDataRetrievalMaxDurationArrayOutput)
}

type DirectNewrelicHistoricalDataRetrievalPtrOutput struct{ *pulumi.OutputState }

func (DirectNewrelicHistoricalDataRetrievalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectNewrelicHistoricalDataRetrieval)(nil)).Elem()
}

func (o DirectNewrelicHistoricalDataRetrievalPtrOutput) ToDirectNewrelicHistoricalDataRetrievalPtrOutput() DirectNewrelicHistoricalDataRetrievalPtrOutput {
	return o
}

func (o DirectNewrelicHistoricalDataRetrievalPtrOutput) ToDirectNewrelicHistoricalDataRetrievalPtrOutputWithContext(ctx context.Context) DirectNewrelicHistoricalDataRetrievalPtrOutput {
	return o
}

func (o DirectNewrelicHistoricalDataRetrievalPtrOutput) Elem() DirectNewrelicHistoricalDataRetrievalOutput {
	return o.ApplyT(func(v *DirectNewrelicHistoricalDataRetrieval) DirectNewrelicHistoricalDataRetrieval {
		if v != nil {
			return *v
		}
		var ret DirectNewrelicHistoricalDataRetrieval
		return ret
	}).(DirectNewrelicHistoricalDataRetrievalOutput)
}

// Used by default for any SLOs connected to this data source.
func (o DirectNewrelicHistoricalDataRetrievalPtrOutput) DefaultDurations() DirectNewrelicHistoricalDataRetrievalDefaultDurationArrayOutput {
	return o.ApplyT(func(v *DirectNewrelicHistoricalDataRetrieval) []DirectNewrelicHistoricalDataRetrievalDefaultDuration {
		if v == nil {
			return nil
		}
		return v.DefaultDurations
	}).(DirectNewrelicHistoricalDataRetrievalDefaultDurationArrayOutput)
}

// Defines the maximum period for which data can be retrieved.
func (o DirectNewrelicHistoricalDataRetrievalPtrOutput) MaxDurations() DirectNewrelicHistoricalDataRetrievalMaxDurationArrayOutput {
	return o.ApplyT(func(v *DirectNewrelicHistoricalDataRetrieval) []DirectNewrelicHistoricalDataRetrievalMaxDuration {
		if v == nil {
			return nil
		}
		return v.MaxDurations
	}).(DirectNewrelicHistoricalDataRetrievalMaxDurationArrayOutput)
}

type DirectNewrelicHistoricalDataRetrievalDefaultDuration struct {
	// Must be one of Minute, Hour, or Day.
	Unit string `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value int `pulumi:"value"`
}

// DirectNewrelicHistoricalDataRetrievalDefaultDurationInput is an input type that accepts DirectNewrelicHistoricalDataRetrievalDefaultDurationArgs and DirectNewrelicHistoricalDataRetrievalDefaultDurationOutput values.
// You can construct a concrete instance of `DirectNewrelicHistoricalDataRetrievalDefaultDurationInput` via:
//
//	DirectNewrelicHistoricalDataRetrievalDefaultDurationArgs{...}
type DirectNewrelicHistoricalDataRetrievalDefaultDurationInput interface {
	pulumi.Input

	ToDirectNewrelicHistoricalDataRetrievalDefaultDurationOutput() DirectNewrelicHistoricalDataRetrievalDefaultDurationOutput
	ToDirectNewrelicHistoricalDataRetrievalDefaultDurationOutputWithContext(context.Context) DirectNewrelicHistoricalDataRetrievalDefaultDurationOutput
}

type DirectNewrelicHistoricalDataRetrievalDefaultDurationArgs struct {
	// Must be one of Minute, Hour, or Day.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value pulumi.IntInput `pulumi:"value"`
}

func (DirectNewrelicHistoricalDataRetrievalDefaultDurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectNewrelicHistoricalDataRetrievalDefaultDuration)(nil)).Elem()
}

func (i DirectNewrelicHistoricalDataRetrievalDefaultDurationArgs) ToDirectNewrelicHistoricalDataRetrievalDefaultDurationOutput() DirectNewrelicHistoricalDataRetrievalDefaultDurationOutput {
	return i.ToDirectNewrelicHistoricalDataRetrievalDefaultDurationOutputWithContext(context.Background())
}

func (i DirectNewrelicHistoricalDataRetrievalDefaultDurationArgs) ToDirectNewrelicHistoricalDataRetrievalDefaultDurationOutputWithContext(ctx context.Context) DirectNewrelicHistoricalDataRetrievalDefaultDurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectNewrelicHistoricalDataRetrievalDefaultDurationOutput)
}

// DirectNewrelicHistoricalDataRetrievalDefaultDurationArrayInput is an input type that accepts DirectNewrelicHistoricalDataRetrievalDefaultDurationArray and DirectNewrelicHistoricalDataRetrievalDefaultDurationArrayOutput values.
// You can construct a concrete instance of `DirectNewrelicHistoricalDataRetrievalDefaultDurationArrayInput` via:
//
//	DirectNewrelicHistoricalDataRetrievalDefaultDurationArray{ DirectNewrelicHistoricalDataRetrievalDefaultDurationArgs{...} }
type DirectNewrelicHistoricalDataRetrievalDefaultDurationArrayInput interface {
	pulumi.Input

	ToDirectNewrelicHistoricalDataRetrievalDefaultDurationArrayOutput() DirectNewrelicHistoricalDataRetrievalDefaultDurationArrayOutput
	ToDirectNewrelicHistoricalDataRetrievalDefaultDurationArrayOutputWithContext(context.Context) DirectNewrelicHistoricalDataRetrievalDefaultDurationArrayOutput
}

type DirectNewrelicHistoricalDataRetrievalDefaultDurationArray []DirectNewrelicHistoricalDataRetrievalDefaultDurationInput

func (DirectNewrelicHistoricalDataRetrievalDefaultDurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectNewrelicHistoricalDataRetrievalDefaultDuration)(nil)).Elem()
}

func (i DirectNewrelicHistoricalDataRetrievalDefaultDurationArray) ToDirectNewrelicHistoricalDataRetrievalDefaultDurationArrayOutput() DirectNewrelicHistoricalDataRetrievalDefaultDurationArrayOutput {
	return i.ToDirectNewrelicHistoricalDataRetrievalDefaultDurationArrayOutputWithContext(context.Background())
}

func (i DirectNewrelicHistoricalDataRetrievalDefaultDurationArray) ToDirectNewrelicHistoricalDataRetrievalDefaultDurationArrayOutputWithContext(ctx context.Context) DirectNewrelicHistoricalDataRetrievalDefaultDurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectNewrelicHistoricalDataRetrievalDefaultDurationArrayOutput)
}

type DirectNewrelicHistoricalDataRetrievalDefaultDurationOutput struct{ *pulumi.OutputState }

func (DirectNewrelicHistoricalDataRetrievalDefaultDurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectNewrelicHistoricalDataRetrievalDefaultDuration)(nil)).Elem()
}

func (o DirectNewrelicHistoricalDataRetrievalDefaultDurationOutput) ToDirectNewrelicHistoricalDataRetrievalDefaultDurationOutput() DirectNewrelicHistoricalDataRetrievalDefaultDurationOutput {
	return o
}

func (o DirectNewrelicHistoricalDataRetrievalDefaultDurationOutput) ToDirectNewrelicHistoricalDataRetrievalDefaultDurationOutputWithContext(ctx context.Context) DirectNewrelicHistoricalDataRetrievalDefaultDurationOutput {
	return o
}

// Must be one of Minute, Hour, or Day.
func (o DirectNewrelicHistoricalDataRetrievalDefaultDurationOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v DirectNewrelicHistoricalDataRetrievalDefaultDuration) string { return v.Unit }).(pulumi.StringOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectNewrelicHistoricalDataRetrievalDefaultDurationOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v DirectNewrelicHistoricalDataRetrievalDefaultDuration) int { return v.Value }).(pulumi.IntOutput)
}

type DirectNewrelicHistoricalDataRetrievalDefaultDurationArrayOutput struct{ *pulumi.OutputState }

func (DirectNewrelicHistoricalDataRetrievalDefaultDurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectNewrelicHistoricalDataRetrievalDefaultDuration)(nil)).Elem()
}

func (o DirectNewrelicHistoricalDataRetrievalDefaultDurationArrayOutput) ToDirectNewrelicHistoricalDataRetrievalDefaultDurationArrayOutput() DirectNewrelicHistoricalDataRetrievalDefaultDurationArrayOutput {
	return o
}

func (o DirectNewrelicHistoricalDataRetrievalDefaultDurationArrayOutput) ToDirectNewrelicHistoricalDataRetrievalDefaultDurationArrayOutputWithContext(ctx context.Context) DirectNewrelicHistoricalDataRetrievalDefaultDurationArrayOutput {
	return o
}

func (o DirectNewrelicHistoricalDataRetrievalDefaultDurationArrayOutput) Index(i pulumi.IntInput) DirectNewrelicHistoricalDataRetrievalDefaultDurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DirectNewrelicHistoricalDataRetrievalDefaultDuration {
		return vs[0].([]DirectNewrelicHistoricalDataRetrievalDefaultDuration)[vs[1].(int)]
	}).(DirectNewrelicHistoricalDataRetrievalDefaultDurationOutput)
}

type DirectNewrelicHistoricalDataRetrievalMaxDuration struct {
	// Must be one of Minute, Hour, or Day.
	Unit string `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value int `pulumi:"value"`
}

// DirectNewrelicHistoricalDataRetrievalMaxDurationInput is an input type that accepts DirectNewrelicHistoricalDataRetrievalMaxDurationArgs and DirectNewrelicHistoricalDataRetrievalMaxDurationOutput values.
// You can construct a concrete instance of `DirectNewrelicHistoricalDataRetrievalMaxDurationInput` via:
//
//	DirectNewrelicHistoricalDataRetrievalMaxDurationArgs{...}
type DirectNewrelicHistoricalDataRetrievalMaxDurationInput interface {
	pulumi.Input

	ToDirectNewrelicHistoricalDataRetrievalMaxDurationOutput() DirectNewrelicHistoricalDataRetrievalMaxDurationOutput
	ToDirectNewrelicHistoricalDataRetrievalMaxDurationOutputWithContext(context.Context) DirectNewrelicHistoricalDataRetrievalMaxDurationOutput
}

type DirectNewrelicHistoricalDataRetrievalMaxDurationArgs struct {
	// Must be one of Minute, Hour, or Day.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value pulumi.IntInput `pulumi:"value"`
}

func (DirectNewrelicHistoricalDataRetrievalMaxDurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectNewrelicHistoricalDataRetrievalMaxDuration)(nil)).Elem()
}

func (i DirectNewrelicHistoricalDataRetrievalMaxDurationArgs) ToDirectNewrelicHistoricalDataRetrievalMaxDurationOutput() DirectNewrelicHistoricalDataRetrievalMaxDurationOutput {
	return i.ToDirectNewrelicHistoricalDataRetrievalMaxDurationOutputWithContext(context.Background())
}

func (i DirectNewrelicHistoricalDataRetrievalMaxDurationArgs) ToDirectNewrelicHistoricalDataRetrievalMaxDurationOutputWithContext(ctx context.Context) DirectNewrelicHistoricalDataRetrievalMaxDurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectNewrelicHistoricalDataRetrievalMaxDurationOutput)
}

// DirectNewrelicHistoricalDataRetrievalMaxDurationArrayInput is an input type that accepts DirectNewrelicHistoricalDataRetrievalMaxDurationArray and DirectNewrelicHistoricalDataRetrievalMaxDurationArrayOutput values.
// You can construct a concrete instance of `DirectNewrelicHistoricalDataRetrievalMaxDurationArrayInput` via:
//
//	DirectNewrelicHistoricalDataRetrievalMaxDurationArray{ DirectNewrelicHistoricalDataRetrievalMaxDurationArgs{...} }
type DirectNewrelicHistoricalDataRetrievalMaxDurationArrayInput interface {
	pulumi.Input

	ToDirectNewrelicHistoricalDataRetrievalMaxDurationArrayOutput() DirectNewrelicHistoricalDataRetrievalMaxDurationArrayOutput
	ToDirectNewrelicHistoricalDataRetrievalMaxDurationArrayOutputWithContext(context.Context) DirectNewrelicHistoricalDataRetrievalMaxDurationArrayOutput
}

type DirectNewrelicHistoricalDataRetrievalMaxDurationArray []DirectNewrelicHistoricalDataRetrievalMaxDurationInput

func (DirectNewrelicHistoricalDataRetrievalMaxDurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectNewrelicHistoricalDataRetrievalMaxDuration)(nil)).Elem()
}

func (i DirectNewrelicHistoricalDataRetrievalMaxDurationArray) ToDirectNewrelicHistoricalDataRetrievalMaxDurationArrayOutput() DirectNewrelicHistoricalDataRetrievalMaxDurationArrayOutput {
	return i.ToDirectNewrelicHistoricalDataRetrievalMaxDurationArrayOutputWithContext(context.Background())
}

func (i DirectNewrelicHistoricalDataRetrievalMaxDurationArray) ToDirectNewrelicHistoricalDataRetrievalMaxDurationArrayOutputWithContext(ctx context.Context) DirectNewrelicHistoricalDataRetrievalMaxDurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectNewrelicHistoricalDataRetrievalMaxDurationArrayOutput)
}

type DirectNewrelicHistoricalDataRetrievalMaxDurationOutput struct{ *pulumi.OutputState }

func (DirectNewrelicHistoricalDataRetrievalMaxDurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectNewrelicHistoricalDataRetrievalMaxDuration)(nil)).Elem()
}

func (o DirectNewrelicHistoricalDataRetrievalMaxDurationOutput) ToDirectNewrelicHistoricalDataRetrievalMaxDurationOutput() DirectNewrelicHistoricalDataRetrievalMaxDurationOutput {
	return o
}

func (o DirectNewrelicHistoricalDataRetrievalMaxDurationOutput) ToDirectNewrelicHistoricalDataRetrievalMaxDurationOutputWithContext(ctx context.Context) DirectNewrelicHistoricalDataRetrievalMaxDurationOutput {
	return o
}

// Must be one of Minute, Hour, or Day.
func (o DirectNewrelicHistoricalDataRetrievalMaxDurationOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v DirectNewrelicHistoricalDataRetrievalMaxDuration) string { return v.Unit }).(pulumi.StringOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectNewrelicHistoricalDataRetrievalMaxDurationOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v DirectNewrelicHistoricalDataRetrievalMaxDuration) int { return v.Value }).(pulumi.IntOutput)
}

type DirectNewrelicHistoricalDataRetrievalMaxDurationArrayOutput struct{ *pulumi.OutputState }

func (DirectNewrelicHistoricalDataRetrievalMaxDurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectNewrelicHistoricalDataRetrievalMaxDuration)(nil)).Elem()
}

func (o DirectNewrelicHistoricalDataRetrievalMaxDurationArrayOutput) ToDirectNewrelicHistoricalDataRetrievalMaxDurationArrayOutput() DirectNewrelicHistoricalDataRetrievalMaxDurationArrayOutput {
	return o
}

func (o DirectNewrelicHistoricalDataRetrievalMaxDurationArrayOutput) ToDirectNewrelicHistoricalDataRetrievalMaxDurationArrayOutputWithContext(ctx context.Context) DirectNewrelicHistoricalDataRetrievalMaxDurationArrayOutput {
	return o
}

func (o DirectNewrelicHistoricalDataRetrievalMaxDurationArrayOutput) Index(i pulumi.IntInput) DirectNewrelicHistoricalDataRetrievalMaxDurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DirectNewrelicHistoricalDataRetrievalMaxDuration {
		return vs[0].([]DirectNewrelicHistoricalDataRetrievalMaxDuration)[vs[1].(int)]
	}).(DirectNewrelicHistoricalDataRetrievalMaxDurationOutput)
}

type DirectNewrelicQueryDelay struct {
	// Must be one of Minute or Second.
	Unit string `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value int `pulumi:"value"`
}

// DirectNewrelicQueryDelayInput is an input type that accepts DirectNewrelicQueryDelayArgs and DirectNewrelicQueryDelayOutput values.
// You can construct a concrete instance of `DirectNewrelicQueryDelayInput` via:
//
//	DirectNewrelicQueryDelayArgs{...}
type DirectNewrelicQueryDelayInput interface {
	pulumi.Input

	ToDirectNewrelicQueryDelayOutput() DirectNewrelicQueryDelayOutput
	ToDirectNewrelicQueryDelayOutputWithContext(context.Context) DirectNewrelicQueryDelayOutput
}

type DirectNewrelicQueryDelayArgs struct {
	// Must be one of Minute or Second.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value pulumi.IntInput `pulumi:"value"`
}

func (DirectNewrelicQueryDelayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectNewrelicQueryDelay)(nil)).Elem()
}

func (i DirectNewrelicQueryDelayArgs) ToDirectNewrelicQueryDelayOutput() DirectNewrelicQueryDelayOutput {
	return i.ToDirectNewrelicQueryDelayOutputWithContext(context.Background())
}

func (i DirectNewrelicQueryDelayArgs) ToDirectNewrelicQueryDelayOutputWithContext(ctx context.Context) DirectNewrelicQueryDelayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectNewrelicQueryDelayOutput)
}

func (i DirectNewrelicQueryDelayArgs) ToDirectNewrelicQueryDelayPtrOutput() DirectNewrelicQueryDelayPtrOutput {
	return i.ToDirectNewrelicQueryDelayPtrOutputWithContext(context.Background())
}

func (i DirectNewrelicQueryDelayArgs) ToDirectNewrelicQueryDelayPtrOutputWithContext(ctx context.Context) DirectNewrelicQueryDelayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectNewrelicQueryDelayOutput).ToDirectNewrelicQueryDelayPtrOutputWithContext(ctx)
}

// DirectNewrelicQueryDelayPtrInput is an input type that accepts DirectNewrelicQueryDelayArgs, DirectNewrelicQueryDelayPtr and DirectNewrelicQueryDelayPtrOutput values.
// You can construct a concrete instance of `DirectNewrelicQueryDelayPtrInput` via:
//
//	        DirectNewrelicQueryDelayArgs{...}
//
//	or:
//
//	        nil
type DirectNewrelicQueryDelayPtrInput interface {
	pulumi.Input

	ToDirectNewrelicQueryDelayPtrOutput() DirectNewrelicQueryDelayPtrOutput
	ToDirectNewrelicQueryDelayPtrOutputWithContext(context.Context) DirectNewrelicQueryDelayPtrOutput
}

type directNewrelicQueryDelayPtrType DirectNewrelicQueryDelayArgs

func DirectNewrelicQueryDelayPtr(v *DirectNewrelicQueryDelayArgs) DirectNewrelicQueryDelayPtrInput {
	return (*directNewrelicQueryDelayPtrType)(v)
}

func (*directNewrelicQueryDelayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectNewrelicQueryDelay)(nil)).Elem()
}

func (i *directNewrelicQueryDelayPtrType) ToDirectNewrelicQueryDelayPtrOutput() DirectNewrelicQueryDelayPtrOutput {
	return i.ToDirectNewrelicQueryDelayPtrOutputWithContext(context.Background())
}

func (i *directNewrelicQueryDelayPtrType) ToDirectNewrelicQueryDelayPtrOutputWithContext(ctx context.Context) DirectNewrelicQueryDelayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectNewrelicQueryDelayPtrOutput)
}

type DirectNewrelicQueryDelayOutput struct{ *pulumi.OutputState }

func (DirectNewrelicQueryDelayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectNewrelicQueryDelay)(nil)).Elem()
}

func (o DirectNewrelicQueryDelayOutput) ToDirectNewrelicQueryDelayOutput() DirectNewrelicQueryDelayOutput {
	return o
}

func (o DirectNewrelicQueryDelayOutput) ToDirectNewrelicQueryDelayOutputWithContext(ctx context.Context) DirectNewrelicQueryDelayOutput {
	return o
}

func (o DirectNewrelicQueryDelayOutput) ToDirectNewrelicQueryDelayPtrOutput() DirectNewrelicQueryDelayPtrOutput {
	return o.ToDirectNewrelicQueryDelayPtrOutputWithContext(context.Background())
}

func (o DirectNewrelicQueryDelayOutput) ToDirectNewrelicQueryDelayPtrOutputWithContext(ctx context.Context) DirectNewrelicQueryDelayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectNewrelicQueryDelay) *DirectNewrelicQueryDelay {
		return &v
	}).(DirectNewrelicQueryDelayPtrOutput)
}

// Must be one of Minute or Second.
func (o DirectNewrelicQueryDelayOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v DirectNewrelicQueryDelay) string { return v.Unit }).(pulumi.StringOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectNewrelicQueryDelayOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v DirectNewrelicQueryDelay) int { return v.Value }).(pulumi.IntOutput)
}

type DirectNewrelicQueryDelayPtrOutput struct{ *pulumi.OutputState }

func (DirectNewrelicQueryDelayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectNewrelicQueryDelay)(nil)).Elem()
}

func (o DirectNewrelicQueryDelayPtrOutput) ToDirectNewrelicQueryDelayPtrOutput() DirectNewrelicQueryDelayPtrOutput {
	return o
}

func (o DirectNewrelicQueryDelayPtrOutput) ToDirectNewrelicQueryDelayPtrOutputWithContext(ctx context.Context) DirectNewrelicQueryDelayPtrOutput {
	return o
}

func (o DirectNewrelicQueryDelayPtrOutput) Elem() DirectNewrelicQueryDelayOutput {
	return o.ApplyT(func(v *DirectNewrelicQueryDelay) DirectNewrelicQueryDelay {
		if v != nil {
			return *v
		}
		var ret DirectNewrelicQueryDelay
		return ret
	}).(DirectNewrelicQueryDelayOutput)
}

// Must be one of Minute or Second.
func (o DirectNewrelicQueryDelayPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectNewrelicQueryDelay) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectNewrelicQueryDelayPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DirectNewrelicQueryDelay) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type DirectPingdomQueryDelay struct {
	// Must be one of Minute or Second.
	Unit string `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value int `pulumi:"value"`
}

// DirectPingdomQueryDelayInput is an input type that accepts DirectPingdomQueryDelayArgs and DirectPingdomQueryDelayOutput values.
// You can construct a concrete instance of `DirectPingdomQueryDelayInput` via:
//
//	DirectPingdomQueryDelayArgs{...}
type DirectPingdomQueryDelayInput interface {
	pulumi.Input

	ToDirectPingdomQueryDelayOutput() DirectPingdomQueryDelayOutput
	ToDirectPingdomQueryDelayOutputWithContext(context.Context) DirectPingdomQueryDelayOutput
}

type DirectPingdomQueryDelayArgs struct {
	// Must be one of Minute or Second.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value pulumi.IntInput `pulumi:"value"`
}

func (DirectPingdomQueryDelayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectPingdomQueryDelay)(nil)).Elem()
}

func (i DirectPingdomQueryDelayArgs) ToDirectPingdomQueryDelayOutput() DirectPingdomQueryDelayOutput {
	return i.ToDirectPingdomQueryDelayOutputWithContext(context.Background())
}

func (i DirectPingdomQueryDelayArgs) ToDirectPingdomQueryDelayOutputWithContext(ctx context.Context) DirectPingdomQueryDelayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectPingdomQueryDelayOutput)
}

func (i DirectPingdomQueryDelayArgs) ToDirectPingdomQueryDelayPtrOutput() DirectPingdomQueryDelayPtrOutput {
	return i.ToDirectPingdomQueryDelayPtrOutputWithContext(context.Background())
}

func (i DirectPingdomQueryDelayArgs) ToDirectPingdomQueryDelayPtrOutputWithContext(ctx context.Context) DirectPingdomQueryDelayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectPingdomQueryDelayOutput).ToDirectPingdomQueryDelayPtrOutputWithContext(ctx)
}

// DirectPingdomQueryDelayPtrInput is an input type that accepts DirectPingdomQueryDelayArgs, DirectPingdomQueryDelayPtr and DirectPingdomQueryDelayPtrOutput values.
// You can construct a concrete instance of `DirectPingdomQueryDelayPtrInput` via:
//
//	        DirectPingdomQueryDelayArgs{...}
//
//	or:
//
//	        nil
type DirectPingdomQueryDelayPtrInput interface {
	pulumi.Input

	ToDirectPingdomQueryDelayPtrOutput() DirectPingdomQueryDelayPtrOutput
	ToDirectPingdomQueryDelayPtrOutputWithContext(context.Context) DirectPingdomQueryDelayPtrOutput
}

type directPingdomQueryDelayPtrType DirectPingdomQueryDelayArgs

func DirectPingdomQueryDelayPtr(v *DirectPingdomQueryDelayArgs) DirectPingdomQueryDelayPtrInput {
	return (*directPingdomQueryDelayPtrType)(v)
}

func (*directPingdomQueryDelayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectPingdomQueryDelay)(nil)).Elem()
}

func (i *directPingdomQueryDelayPtrType) ToDirectPingdomQueryDelayPtrOutput() DirectPingdomQueryDelayPtrOutput {
	return i.ToDirectPingdomQueryDelayPtrOutputWithContext(context.Background())
}

func (i *directPingdomQueryDelayPtrType) ToDirectPingdomQueryDelayPtrOutputWithContext(ctx context.Context) DirectPingdomQueryDelayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectPingdomQueryDelayPtrOutput)
}

type DirectPingdomQueryDelayOutput struct{ *pulumi.OutputState }

func (DirectPingdomQueryDelayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectPingdomQueryDelay)(nil)).Elem()
}

func (o DirectPingdomQueryDelayOutput) ToDirectPingdomQueryDelayOutput() DirectPingdomQueryDelayOutput {
	return o
}

func (o DirectPingdomQueryDelayOutput) ToDirectPingdomQueryDelayOutputWithContext(ctx context.Context) DirectPingdomQueryDelayOutput {
	return o
}

func (o DirectPingdomQueryDelayOutput) ToDirectPingdomQueryDelayPtrOutput() DirectPingdomQueryDelayPtrOutput {
	return o.ToDirectPingdomQueryDelayPtrOutputWithContext(context.Background())
}

func (o DirectPingdomQueryDelayOutput) ToDirectPingdomQueryDelayPtrOutputWithContext(ctx context.Context) DirectPingdomQueryDelayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectPingdomQueryDelay) *DirectPingdomQueryDelay {
		return &v
	}).(DirectPingdomQueryDelayPtrOutput)
}

// Must be one of Minute or Second.
func (o DirectPingdomQueryDelayOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v DirectPingdomQueryDelay) string { return v.Unit }).(pulumi.StringOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectPingdomQueryDelayOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v DirectPingdomQueryDelay) int { return v.Value }).(pulumi.IntOutput)
}

type DirectPingdomQueryDelayPtrOutput struct{ *pulumi.OutputState }

func (DirectPingdomQueryDelayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectPingdomQueryDelay)(nil)).Elem()
}

func (o DirectPingdomQueryDelayPtrOutput) ToDirectPingdomQueryDelayPtrOutput() DirectPingdomQueryDelayPtrOutput {
	return o
}

func (o DirectPingdomQueryDelayPtrOutput) ToDirectPingdomQueryDelayPtrOutputWithContext(ctx context.Context) DirectPingdomQueryDelayPtrOutput {
	return o
}

func (o DirectPingdomQueryDelayPtrOutput) Elem() DirectPingdomQueryDelayOutput {
	return o.ApplyT(func(v *DirectPingdomQueryDelay) DirectPingdomQueryDelay {
		if v != nil {
			return *v
		}
		var ret DirectPingdomQueryDelay
		return ret
	}).(DirectPingdomQueryDelayOutput)
}

// Must be one of Minute or Second.
func (o DirectPingdomQueryDelayPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectPingdomQueryDelay) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectPingdomQueryDelayPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DirectPingdomQueryDelay) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type DirectRedshiftQueryDelay struct {
	// Must be one of Minute or Second.
	Unit string `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value int `pulumi:"value"`
}

// DirectRedshiftQueryDelayInput is an input type that accepts DirectRedshiftQueryDelayArgs and DirectRedshiftQueryDelayOutput values.
// You can construct a concrete instance of `DirectRedshiftQueryDelayInput` via:
//
//	DirectRedshiftQueryDelayArgs{...}
type DirectRedshiftQueryDelayInput interface {
	pulumi.Input

	ToDirectRedshiftQueryDelayOutput() DirectRedshiftQueryDelayOutput
	ToDirectRedshiftQueryDelayOutputWithContext(context.Context) DirectRedshiftQueryDelayOutput
}

type DirectRedshiftQueryDelayArgs struct {
	// Must be one of Minute or Second.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value pulumi.IntInput `pulumi:"value"`
}

func (DirectRedshiftQueryDelayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectRedshiftQueryDelay)(nil)).Elem()
}

func (i DirectRedshiftQueryDelayArgs) ToDirectRedshiftQueryDelayOutput() DirectRedshiftQueryDelayOutput {
	return i.ToDirectRedshiftQueryDelayOutputWithContext(context.Background())
}

func (i DirectRedshiftQueryDelayArgs) ToDirectRedshiftQueryDelayOutputWithContext(ctx context.Context) DirectRedshiftQueryDelayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectRedshiftQueryDelayOutput)
}

func (i DirectRedshiftQueryDelayArgs) ToDirectRedshiftQueryDelayPtrOutput() DirectRedshiftQueryDelayPtrOutput {
	return i.ToDirectRedshiftQueryDelayPtrOutputWithContext(context.Background())
}

func (i DirectRedshiftQueryDelayArgs) ToDirectRedshiftQueryDelayPtrOutputWithContext(ctx context.Context) DirectRedshiftQueryDelayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectRedshiftQueryDelayOutput).ToDirectRedshiftQueryDelayPtrOutputWithContext(ctx)
}

// DirectRedshiftQueryDelayPtrInput is an input type that accepts DirectRedshiftQueryDelayArgs, DirectRedshiftQueryDelayPtr and DirectRedshiftQueryDelayPtrOutput values.
// You can construct a concrete instance of `DirectRedshiftQueryDelayPtrInput` via:
//
//	        DirectRedshiftQueryDelayArgs{...}
//
//	or:
//
//	        nil
type DirectRedshiftQueryDelayPtrInput interface {
	pulumi.Input

	ToDirectRedshiftQueryDelayPtrOutput() DirectRedshiftQueryDelayPtrOutput
	ToDirectRedshiftQueryDelayPtrOutputWithContext(context.Context) DirectRedshiftQueryDelayPtrOutput
}

type directRedshiftQueryDelayPtrType DirectRedshiftQueryDelayArgs

func DirectRedshiftQueryDelayPtr(v *DirectRedshiftQueryDelayArgs) DirectRedshiftQueryDelayPtrInput {
	return (*directRedshiftQueryDelayPtrType)(v)
}

func (*directRedshiftQueryDelayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectRedshiftQueryDelay)(nil)).Elem()
}

func (i *directRedshiftQueryDelayPtrType) ToDirectRedshiftQueryDelayPtrOutput() DirectRedshiftQueryDelayPtrOutput {
	return i.ToDirectRedshiftQueryDelayPtrOutputWithContext(context.Background())
}

func (i *directRedshiftQueryDelayPtrType) ToDirectRedshiftQueryDelayPtrOutputWithContext(ctx context.Context) DirectRedshiftQueryDelayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectRedshiftQueryDelayPtrOutput)
}

type DirectRedshiftQueryDelayOutput struct{ *pulumi.OutputState }

func (DirectRedshiftQueryDelayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectRedshiftQueryDelay)(nil)).Elem()
}

func (o DirectRedshiftQueryDelayOutput) ToDirectRedshiftQueryDelayOutput() DirectRedshiftQueryDelayOutput {
	return o
}

func (o DirectRedshiftQueryDelayOutput) ToDirectRedshiftQueryDelayOutputWithContext(ctx context.Context) DirectRedshiftQueryDelayOutput {
	return o
}

func (o DirectRedshiftQueryDelayOutput) ToDirectRedshiftQueryDelayPtrOutput() DirectRedshiftQueryDelayPtrOutput {
	return o.ToDirectRedshiftQueryDelayPtrOutputWithContext(context.Background())
}

func (o DirectRedshiftQueryDelayOutput) ToDirectRedshiftQueryDelayPtrOutputWithContext(ctx context.Context) DirectRedshiftQueryDelayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectRedshiftQueryDelay) *DirectRedshiftQueryDelay {
		return &v
	}).(DirectRedshiftQueryDelayPtrOutput)
}

// Must be one of Minute or Second.
func (o DirectRedshiftQueryDelayOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v DirectRedshiftQueryDelay) string { return v.Unit }).(pulumi.StringOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectRedshiftQueryDelayOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v DirectRedshiftQueryDelay) int { return v.Value }).(pulumi.IntOutput)
}

type DirectRedshiftQueryDelayPtrOutput struct{ *pulumi.OutputState }

func (DirectRedshiftQueryDelayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectRedshiftQueryDelay)(nil)).Elem()
}

func (o DirectRedshiftQueryDelayPtrOutput) ToDirectRedshiftQueryDelayPtrOutput() DirectRedshiftQueryDelayPtrOutput {
	return o
}

func (o DirectRedshiftQueryDelayPtrOutput) ToDirectRedshiftQueryDelayPtrOutputWithContext(ctx context.Context) DirectRedshiftQueryDelayPtrOutput {
	return o
}

func (o DirectRedshiftQueryDelayPtrOutput) Elem() DirectRedshiftQueryDelayOutput {
	return o.ApplyT(func(v *DirectRedshiftQueryDelay) DirectRedshiftQueryDelay {
		if v != nil {
			return *v
		}
		var ret DirectRedshiftQueryDelay
		return ret
	}).(DirectRedshiftQueryDelayOutput)
}

// Must be one of Minute or Second.
func (o DirectRedshiftQueryDelayPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectRedshiftQueryDelay) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectRedshiftQueryDelayPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DirectRedshiftQueryDelay) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type DirectSplunkHistoricalDataRetrieval struct {
	// Used by default for any SLOs connected to this data source.
	DefaultDurations []DirectSplunkHistoricalDataRetrievalDefaultDuration `pulumi:"defaultDurations"`
	// Defines the maximum period for which data can be retrieved.
	MaxDurations []DirectSplunkHistoricalDataRetrievalMaxDuration `pulumi:"maxDurations"`
}

// DirectSplunkHistoricalDataRetrievalInput is an input type that accepts DirectSplunkHistoricalDataRetrievalArgs and DirectSplunkHistoricalDataRetrievalOutput values.
// You can construct a concrete instance of `DirectSplunkHistoricalDataRetrievalInput` via:
//
//	DirectSplunkHistoricalDataRetrievalArgs{...}
type DirectSplunkHistoricalDataRetrievalInput interface {
	pulumi.Input

	ToDirectSplunkHistoricalDataRetrievalOutput() DirectSplunkHistoricalDataRetrievalOutput
	ToDirectSplunkHistoricalDataRetrievalOutputWithContext(context.Context) DirectSplunkHistoricalDataRetrievalOutput
}

type DirectSplunkHistoricalDataRetrievalArgs struct {
	// Used by default for any SLOs connected to this data source.
	DefaultDurations DirectSplunkHistoricalDataRetrievalDefaultDurationArrayInput `pulumi:"defaultDurations"`
	// Defines the maximum period for which data can be retrieved.
	MaxDurations DirectSplunkHistoricalDataRetrievalMaxDurationArrayInput `pulumi:"maxDurations"`
}

func (DirectSplunkHistoricalDataRetrievalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectSplunkHistoricalDataRetrieval)(nil)).Elem()
}

func (i DirectSplunkHistoricalDataRetrievalArgs) ToDirectSplunkHistoricalDataRetrievalOutput() DirectSplunkHistoricalDataRetrievalOutput {
	return i.ToDirectSplunkHistoricalDataRetrievalOutputWithContext(context.Background())
}

func (i DirectSplunkHistoricalDataRetrievalArgs) ToDirectSplunkHistoricalDataRetrievalOutputWithContext(ctx context.Context) DirectSplunkHistoricalDataRetrievalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectSplunkHistoricalDataRetrievalOutput)
}

func (i DirectSplunkHistoricalDataRetrievalArgs) ToDirectSplunkHistoricalDataRetrievalPtrOutput() DirectSplunkHistoricalDataRetrievalPtrOutput {
	return i.ToDirectSplunkHistoricalDataRetrievalPtrOutputWithContext(context.Background())
}

func (i DirectSplunkHistoricalDataRetrievalArgs) ToDirectSplunkHistoricalDataRetrievalPtrOutputWithContext(ctx context.Context) DirectSplunkHistoricalDataRetrievalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectSplunkHistoricalDataRetrievalOutput).ToDirectSplunkHistoricalDataRetrievalPtrOutputWithContext(ctx)
}

// DirectSplunkHistoricalDataRetrievalPtrInput is an input type that accepts DirectSplunkHistoricalDataRetrievalArgs, DirectSplunkHistoricalDataRetrievalPtr and DirectSplunkHistoricalDataRetrievalPtrOutput values.
// You can construct a concrete instance of `DirectSplunkHistoricalDataRetrievalPtrInput` via:
//
//	        DirectSplunkHistoricalDataRetrievalArgs{...}
//
//	or:
//
//	        nil
type DirectSplunkHistoricalDataRetrievalPtrInput interface {
	pulumi.Input

	ToDirectSplunkHistoricalDataRetrievalPtrOutput() DirectSplunkHistoricalDataRetrievalPtrOutput
	ToDirectSplunkHistoricalDataRetrievalPtrOutputWithContext(context.Context) DirectSplunkHistoricalDataRetrievalPtrOutput
}

type directSplunkHistoricalDataRetrievalPtrType DirectSplunkHistoricalDataRetrievalArgs

func DirectSplunkHistoricalDataRetrievalPtr(v *DirectSplunkHistoricalDataRetrievalArgs) DirectSplunkHistoricalDataRetrievalPtrInput {
	return (*directSplunkHistoricalDataRetrievalPtrType)(v)
}

func (*directSplunkHistoricalDataRetrievalPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectSplunkHistoricalDataRetrieval)(nil)).Elem()
}

func (i *directSplunkHistoricalDataRetrievalPtrType) ToDirectSplunkHistoricalDataRetrievalPtrOutput() DirectSplunkHistoricalDataRetrievalPtrOutput {
	return i.ToDirectSplunkHistoricalDataRetrievalPtrOutputWithContext(context.Background())
}

func (i *directSplunkHistoricalDataRetrievalPtrType) ToDirectSplunkHistoricalDataRetrievalPtrOutputWithContext(ctx context.Context) DirectSplunkHistoricalDataRetrievalPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectSplunkHistoricalDataRetrievalPtrOutput)
}

type DirectSplunkHistoricalDataRetrievalOutput struct{ *pulumi.OutputState }

func (DirectSplunkHistoricalDataRetrievalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectSplunkHistoricalDataRetrieval)(nil)).Elem()
}

func (o DirectSplunkHistoricalDataRetrievalOutput) ToDirectSplunkHistoricalDataRetrievalOutput() DirectSplunkHistoricalDataRetrievalOutput {
	return o
}

func (o DirectSplunkHistoricalDataRetrievalOutput) ToDirectSplunkHistoricalDataRetrievalOutputWithContext(ctx context.Context) DirectSplunkHistoricalDataRetrievalOutput {
	return o
}

func (o DirectSplunkHistoricalDataRetrievalOutput) ToDirectSplunkHistoricalDataRetrievalPtrOutput() DirectSplunkHistoricalDataRetrievalPtrOutput {
	return o.ToDirectSplunkHistoricalDataRetrievalPtrOutputWithContext(context.Background())
}

func (o DirectSplunkHistoricalDataRetrievalOutput) ToDirectSplunkHistoricalDataRetrievalPtrOutputWithContext(ctx context.Context) DirectSplunkHistoricalDataRetrievalPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectSplunkHistoricalDataRetrieval) *DirectSplunkHistoricalDataRetrieval {
		return &v
	}).(DirectSplunkHistoricalDataRetrievalPtrOutput)
}

// Used by default for any SLOs connected to this data source.
func (o DirectSplunkHistoricalDataRetrievalOutput) DefaultDurations() DirectSplunkHistoricalDataRetrievalDefaultDurationArrayOutput {
	return o.ApplyT(func(v DirectSplunkHistoricalDataRetrieval) []DirectSplunkHistoricalDataRetrievalDefaultDuration {
		return v.DefaultDurations
	}).(DirectSplunkHistoricalDataRetrievalDefaultDurationArrayOutput)
}

// Defines the maximum period for which data can be retrieved.
func (o DirectSplunkHistoricalDataRetrievalOutput) MaxDurations() DirectSplunkHistoricalDataRetrievalMaxDurationArrayOutput {
	return o.ApplyT(func(v DirectSplunkHistoricalDataRetrieval) []DirectSplunkHistoricalDataRetrievalMaxDuration {
		return v.MaxDurations
	}).(DirectSplunkHistoricalDataRetrievalMaxDurationArrayOutput)
}

type DirectSplunkHistoricalDataRetrievalPtrOutput struct{ *pulumi.OutputState }

func (DirectSplunkHistoricalDataRetrievalPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectSplunkHistoricalDataRetrieval)(nil)).Elem()
}

func (o DirectSplunkHistoricalDataRetrievalPtrOutput) ToDirectSplunkHistoricalDataRetrievalPtrOutput() DirectSplunkHistoricalDataRetrievalPtrOutput {
	return o
}

func (o DirectSplunkHistoricalDataRetrievalPtrOutput) ToDirectSplunkHistoricalDataRetrievalPtrOutputWithContext(ctx context.Context) DirectSplunkHistoricalDataRetrievalPtrOutput {
	return o
}

func (o DirectSplunkHistoricalDataRetrievalPtrOutput) Elem() DirectSplunkHistoricalDataRetrievalOutput {
	return o.ApplyT(func(v *DirectSplunkHistoricalDataRetrieval) DirectSplunkHistoricalDataRetrieval {
		if v != nil {
			return *v
		}
		var ret DirectSplunkHistoricalDataRetrieval
		return ret
	}).(DirectSplunkHistoricalDataRetrievalOutput)
}

// Used by default for any SLOs connected to this data source.
func (o DirectSplunkHistoricalDataRetrievalPtrOutput) DefaultDurations() DirectSplunkHistoricalDataRetrievalDefaultDurationArrayOutput {
	return o.ApplyT(func(v *DirectSplunkHistoricalDataRetrieval) []DirectSplunkHistoricalDataRetrievalDefaultDuration {
		if v == nil {
			return nil
		}
		return v.DefaultDurations
	}).(DirectSplunkHistoricalDataRetrievalDefaultDurationArrayOutput)
}

// Defines the maximum period for which data can be retrieved.
func (o DirectSplunkHistoricalDataRetrievalPtrOutput) MaxDurations() DirectSplunkHistoricalDataRetrievalMaxDurationArrayOutput {
	return o.ApplyT(func(v *DirectSplunkHistoricalDataRetrieval) []DirectSplunkHistoricalDataRetrievalMaxDuration {
		if v == nil {
			return nil
		}
		return v.MaxDurations
	}).(DirectSplunkHistoricalDataRetrievalMaxDurationArrayOutput)
}

type DirectSplunkHistoricalDataRetrievalDefaultDuration struct {
	// Must be one of Minute, Hour, or Day.
	Unit string `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value int `pulumi:"value"`
}

// DirectSplunkHistoricalDataRetrievalDefaultDurationInput is an input type that accepts DirectSplunkHistoricalDataRetrievalDefaultDurationArgs and DirectSplunkHistoricalDataRetrievalDefaultDurationOutput values.
// You can construct a concrete instance of `DirectSplunkHistoricalDataRetrievalDefaultDurationInput` via:
//
//	DirectSplunkHistoricalDataRetrievalDefaultDurationArgs{...}
type DirectSplunkHistoricalDataRetrievalDefaultDurationInput interface {
	pulumi.Input

	ToDirectSplunkHistoricalDataRetrievalDefaultDurationOutput() DirectSplunkHistoricalDataRetrievalDefaultDurationOutput
	ToDirectSplunkHistoricalDataRetrievalDefaultDurationOutputWithContext(context.Context) DirectSplunkHistoricalDataRetrievalDefaultDurationOutput
}

type DirectSplunkHistoricalDataRetrievalDefaultDurationArgs struct {
	// Must be one of Minute, Hour, or Day.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value pulumi.IntInput `pulumi:"value"`
}

func (DirectSplunkHistoricalDataRetrievalDefaultDurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectSplunkHistoricalDataRetrievalDefaultDuration)(nil)).Elem()
}

func (i DirectSplunkHistoricalDataRetrievalDefaultDurationArgs) ToDirectSplunkHistoricalDataRetrievalDefaultDurationOutput() DirectSplunkHistoricalDataRetrievalDefaultDurationOutput {
	return i.ToDirectSplunkHistoricalDataRetrievalDefaultDurationOutputWithContext(context.Background())
}

func (i DirectSplunkHistoricalDataRetrievalDefaultDurationArgs) ToDirectSplunkHistoricalDataRetrievalDefaultDurationOutputWithContext(ctx context.Context) DirectSplunkHistoricalDataRetrievalDefaultDurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectSplunkHistoricalDataRetrievalDefaultDurationOutput)
}

// DirectSplunkHistoricalDataRetrievalDefaultDurationArrayInput is an input type that accepts DirectSplunkHistoricalDataRetrievalDefaultDurationArray and DirectSplunkHistoricalDataRetrievalDefaultDurationArrayOutput values.
// You can construct a concrete instance of `DirectSplunkHistoricalDataRetrievalDefaultDurationArrayInput` via:
//
//	DirectSplunkHistoricalDataRetrievalDefaultDurationArray{ DirectSplunkHistoricalDataRetrievalDefaultDurationArgs{...} }
type DirectSplunkHistoricalDataRetrievalDefaultDurationArrayInput interface {
	pulumi.Input

	ToDirectSplunkHistoricalDataRetrievalDefaultDurationArrayOutput() DirectSplunkHistoricalDataRetrievalDefaultDurationArrayOutput
	ToDirectSplunkHistoricalDataRetrievalDefaultDurationArrayOutputWithContext(context.Context) DirectSplunkHistoricalDataRetrievalDefaultDurationArrayOutput
}

type DirectSplunkHistoricalDataRetrievalDefaultDurationArray []DirectSplunkHistoricalDataRetrievalDefaultDurationInput

func (DirectSplunkHistoricalDataRetrievalDefaultDurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectSplunkHistoricalDataRetrievalDefaultDuration)(nil)).Elem()
}

func (i DirectSplunkHistoricalDataRetrievalDefaultDurationArray) ToDirectSplunkHistoricalDataRetrievalDefaultDurationArrayOutput() DirectSplunkHistoricalDataRetrievalDefaultDurationArrayOutput {
	return i.ToDirectSplunkHistoricalDataRetrievalDefaultDurationArrayOutputWithContext(context.Background())
}

func (i DirectSplunkHistoricalDataRetrievalDefaultDurationArray) ToDirectSplunkHistoricalDataRetrievalDefaultDurationArrayOutputWithContext(ctx context.Context) DirectSplunkHistoricalDataRetrievalDefaultDurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectSplunkHistoricalDataRetrievalDefaultDurationArrayOutput)
}

type DirectSplunkHistoricalDataRetrievalDefaultDurationOutput struct{ *pulumi.OutputState }

func (DirectSplunkHistoricalDataRetrievalDefaultDurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectSplunkHistoricalDataRetrievalDefaultDuration)(nil)).Elem()
}

func (o DirectSplunkHistoricalDataRetrievalDefaultDurationOutput) ToDirectSplunkHistoricalDataRetrievalDefaultDurationOutput() DirectSplunkHistoricalDataRetrievalDefaultDurationOutput {
	return o
}

func (o DirectSplunkHistoricalDataRetrievalDefaultDurationOutput) ToDirectSplunkHistoricalDataRetrievalDefaultDurationOutputWithContext(ctx context.Context) DirectSplunkHistoricalDataRetrievalDefaultDurationOutput {
	return o
}

// Must be one of Minute, Hour, or Day.
func (o DirectSplunkHistoricalDataRetrievalDefaultDurationOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v DirectSplunkHistoricalDataRetrievalDefaultDuration) string { return v.Unit }).(pulumi.StringOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectSplunkHistoricalDataRetrievalDefaultDurationOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v DirectSplunkHistoricalDataRetrievalDefaultDuration) int { return v.Value }).(pulumi.IntOutput)
}

type DirectSplunkHistoricalDataRetrievalDefaultDurationArrayOutput struct{ *pulumi.OutputState }

func (DirectSplunkHistoricalDataRetrievalDefaultDurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectSplunkHistoricalDataRetrievalDefaultDuration)(nil)).Elem()
}

func (o DirectSplunkHistoricalDataRetrievalDefaultDurationArrayOutput) ToDirectSplunkHistoricalDataRetrievalDefaultDurationArrayOutput() DirectSplunkHistoricalDataRetrievalDefaultDurationArrayOutput {
	return o
}

func (o DirectSplunkHistoricalDataRetrievalDefaultDurationArrayOutput) ToDirectSplunkHistoricalDataRetrievalDefaultDurationArrayOutputWithContext(ctx context.Context) DirectSplunkHistoricalDataRetrievalDefaultDurationArrayOutput {
	return o
}

func (o DirectSplunkHistoricalDataRetrievalDefaultDurationArrayOutput) Index(i pulumi.IntInput) DirectSplunkHistoricalDataRetrievalDefaultDurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DirectSplunkHistoricalDataRetrievalDefaultDuration {
		return vs[0].([]DirectSplunkHistoricalDataRetrievalDefaultDuration)[vs[1].(int)]
	}).(DirectSplunkHistoricalDataRetrievalDefaultDurationOutput)
}

type DirectSplunkHistoricalDataRetrievalMaxDuration struct {
	// Must be one of Minute, Hour, or Day.
	Unit string `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value int `pulumi:"value"`
}

// DirectSplunkHistoricalDataRetrievalMaxDurationInput is an input type that accepts DirectSplunkHistoricalDataRetrievalMaxDurationArgs and DirectSplunkHistoricalDataRetrievalMaxDurationOutput values.
// You can construct a concrete instance of `DirectSplunkHistoricalDataRetrievalMaxDurationInput` via:
//
//	DirectSplunkHistoricalDataRetrievalMaxDurationArgs{...}
type DirectSplunkHistoricalDataRetrievalMaxDurationInput interface {
	pulumi.Input

	ToDirectSplunkHistoricalDataRetrievalMaxDurationOutput() DirectSplunkHistoricalDataRetrievalMaxDurationOutput
	ToDirectSplunkHistoricalDataRetrievalMaxDurationOutputWithContext(context.Context) DirectSplunkHistoricalDataRetrievalMaxDurationOutput
}

type DirectSplunkHistoricalDataRetrievalMaxDurationArgs struct {
	// Must be one of Minute, Hour, or Day.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value pulumi.IntInput `pulumi:"value"`
}

func (DirectSplunkHistoricalDataRetrievalMaxDurationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectSplunkHistoricalDataRetrievalMaxDuration)(nil)).Elem()
}

func (i DirectSplunkHistoricalDataRetrievalMaxDurationArgs) ToDirectSplunkHistoricalDataRetrievalMaxDurationOutput() DirectSplunkHistoricalDataRetrievalMaxDurationOutput {
	return i.ToDirectSplunkHistoricalDataRetrievalMaxDurationOutputWithContext(context.Background())
}

func (i DirectSplunkHistoricalDataRetrievalMaxDurationArgs) ToDirectSplunkHistoricalDataRetrievalMaxDurationOutputWithContext(ctx context.Context) DirectSplunkHistoricalDataRetrievalMaxDurationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectSplunkHistoricalDataRetrievalMaxDurationOutput)
}

// DirectSplunkHistoricalDataRetrievalMaxDurationArrayInput is an input type that accepts DirectSplunkHistoricalDataRetrievalMaxDurationArray and DirectSplunkHistoricalDataRetrievalMaxDurationArrayOutput values.
// You can construct a concrete instance of `DirectSplunkHistoricalDataRetrievalMaxDurationArrayInput` via:
//
//	DirectSplunkHistoricalDataRetrievalMaxDurationArray{ DirectSplunkHistoricalDataRetrievalMaxDurationArgs{...} }
type DirectSplunkHistoricalDataRetrievalMaxDurationArrayInput interface {
	pulumi.Input

	ToDirectSplunkHistoricalDataRetrievalMaxDurationArrayOutput() DirectSplunkHistoricalDataRetrievalMaxDurationArrayOutput
	ToDirectSplunkHistoricalDataRetrievalMaxDurationArrayOutputWithContext(context.Context) DirectSplunkHistoricalDataRetrievalMaxDurationArrayOutput
}

type DirectSplunkHistoricalDataRetrievalMaxDurationArray []DirectSplunkHistoricalDataRetrievalMaxDurationInput

func (DirectSplunkHistoricalDataRetrievalMaxDurationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectSplunkHistoricalDataRetrievalMaxDuration)(nil)).Elem()
}

func (i DirectSplunkHistoricalDataRetrievalMaxDurationArray) ToDirectSplunkHistoricalDataRetrievalMaxDurationArrayOutput() DirectSplunkHistoricalDataRetrievalMaxDurationArrayOutput {
	return i.ToDirectSplunkHistoricalDataRetrievalMaxDurationArrayOutputWithContext(context.Background())
}

func (i DirectSplunkHistoricalDataRetrievalMaxDurationArray) ToDirectSplunkHistoricalDataRetrievalMaxDurationArrayOutputWithContext(ctx context.Context) DirectSplunkHistoricalDataRetrievalMaxDurationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectSplunkHistoricalDataRetrievalMaxDurationArrayOutput)
}

type DirectSplunkHistoricalDataRetrievalMaxDurationOutput struct{ *pulumi.OutputState }

func (DirectSplunkHistoricalDataRetrievalMaxDurationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectSplunkHistoricalDataRetrievalMaxDuration)(nil)).Elem()
}

func (o DirectSplunkHistoricalDataRetrievalMaxDurationOutput) ToDirectSplunkHistoricalDataRetrievalMaxDurationOutput() DirectSplunkHistoricalDataRetrievalMaxDurationOutput {
	return o
}

func (o DirectSplunkHistoricalDataRetrievalMaxDurationOutput) ToDirectSplunkHistoricalDataRetrievalMaxDurationOutputWithContext(ctx context.Context) DirectSplunkHistoricalDataRetrievalMaxDurationOutput {
	return o
}

// Must be one of Minute, Hour, or Day.
func (o DirectSplunkHistoricalDataRetrievalMaxDurationOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v DirectSplunkHistoricalDataRetrievalMaxDuration) string { return v.Unit }).(pulumi.StringOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectSplunkHistoricalDataRetrievalMaxDurationOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v DirectSplunkHistoricalDataRetrievalMaxDuration) int { return v.Value }).(pulumi.IntOutput)
}

type DirectSplunkHistoricalDataRetrievalMaxDurationArrayOutput struct{ *pulumi.OutputState }

func (DirectSplunkHistoricalDataRetrievalMaxDurationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DirectSplunkHistoricalDataRetrievalMaxDuration)(nil)).Elem()
}

func (o DirectSplunkHistoricalDataRetrievalMaxDurationArrayOutput) ToDirectSplunkHistoricalDataRetrievalMaxDurationArrayOutput() DirectSplunkHistoricalDataRetrievalMaxDurationArrayOutput {
	return o
}

func (o DirectSplunkHistoricalDataRetrievalMaxDurationArrayOutput) ToDirectSplunkHistoricalDataRetrievalMaxDurationArrayOutputWithContext(ctx context.Context) DirectSplunkHistoricalDataRetrievalMaxDurationArrayOutput {
	return o
}

func (o DirectSplunkHistoricalDataRetrievalMaxDurationArrayOutput) Index(i pulumi.IntInput) DirectSplunkHistoricalDataRetrievalMaxDurationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DirectSplunkHistoricalDataRetrievalMaxDuration {
		return vs[0].([]DirectSplunkHistoricalDataRetrievalMaxDuration)[vs[1].(int)]
	}).(DirectSplunkHistoricalDataRetrievalMaxDurationOutput)
}

type DirectSplunkObservabilityQueryDelay struct {
	// Must be one of Minute or Second.
	Unit string `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value int `pulumi:"value"`
}

// DirectSplunkObservabilityQueryDelayInput is an input type that accepts DirectSplunkObservabilityQueryDelayArgs and DirectSplunkObservabilityQueryDelayOutput values.
// You can construct a concrete instance of `DirectSplunkObservabilityQueryDelayInput` via:
//
//	DirectSplunkObservabilityQueryDelayArgs{...}
type DirectSplunkObservabilityQueryDelayInput interface {
	pulumi.Input

	ToDirectSplunkObservabilityQueryDelayOutput() DirectSplunkObservabilityQueryDelayOutput
	ToDirectSplunkObservabilityQueryDelayOutputWithContext(context.Context) DirectSplunkObservabilityQueryDelayOutput
}

type DirectSplunkObservabilityQueryDelayArgs struct {
	// Must be one of Minute or Second.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value pulumi.IntInput `pulumi:"value"`
}

func (DirectSplunkObservabilityQueryDelayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectSplunkObservabilityQueryDelay)(nil)).Elem()
}

func (i DirectSplunkObservabilityQueryDelayArgs) ToDirectSplunkObservabilityQueryDelayOutput() DirectSplunkObservabilityQueryDelayOutput {
	return i.ToDirectSplunkObservabilityQueryDelayOutputWithContext(context.Background())
}

func (i DirectSplunkObservabilityQueryDelayArgs) ToDirectSplunkObservabilityQueryDelayOutputWithContext(ctx context.Context) DirectSplunkObservabilityQueryDelayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectSplunkObservabilityQueryDelayOutput)
}

func (i DirectSplunkObservabilityQueryDelayArgs) ToDirectSplunkObservabilityQueryDelayPtrOutput() DirectSplunkObservabilityQueryDelayPtrOutput {
	return i.ToDirectSplunkObservabilityQueryDelayPtrOutputWithContext(context.Background())
}

func (i DirectSplunkObservabilityQueryDelayArgs) ToDirectSplunkObservabilityQueryDelayPtrOutputWithContext(ctx context.Context) DirectSplunkObservabilityQueryDelayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectSplunkObservabilityQueryDelayOutput).ToDirectSplunkObservabilityQueryDelayPtrOutputWithContext(ctx)
}

// DirectSplunkObservabilityQueryDelayPtrInput is an input type that accepts DirectSplunkObservabilityQueryDelayArgs, DirectSplunkObservabilityQueryDelayPtr and DirectSplunkObservabilityQueryDelayPtrOutput values.
// You can construct a concrete instance of `DirectSplunkObservabilityQueryDelayPtrInput` via:
//
//	        DirectSplunkObservabilityQueryDelayArgs{...}
//
//	or:
//
//	        nil
type DirectSplunkObservabilityQueryDelayPtrInput interface {
	pulumi.Input

	ToDirectSplunkObservabilityQueryDelayPtrOutput() DirectSplunkObservabilityQueryDelayPtrOutput
	ToDirectSplunkObservabilityQueryDelayPtrOutputWithContext(context.Context) DirectSplunkObservabilityQueryDelayPtrOutput
}

type directSplunkObservabilityQueryDelayPtrType DirectSplunkObservabilityQueryDelayArgs

func DirectSplunkObservabilityQueryDelayPtr(v *DirectSplunkObservabilityQueryDelayArgs) DirectSplunkObservabilityQueryDelayPtrInput {
	return (*directSplunkObservabilityQueryDelayPtrType)(v)
}

func (*directSplunkObservabilityQueryDelayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectSplunkObservabilityQueryDelay)(nil)).Elem()
}

func (i *directSplunkObservabilityQueryDelayPtrType) ToDirectSplunkObservabilityQueryDelayPtrOutput() DirectSplunkObservabilityQueryDelayPtrOutput {
	return i.ToDirectSplunkObservabilityQueryDelayPtrOutputWithContext(context.Background())
}

func (i *directSplunkObservabilityQueryDelayPtrType) ToDirectSplunkObservabilityQueryDelayPtrOutputWithContext(ctx context.Context) DirectSplunkObservabilityQueryDelayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectSplunkObservabilityQueryDelayPtrOutput)
}

type DirectSplunkObservabilityQueryDelayOutput struct{ *pulumi.OutputState }

func (DirectSplunkObservabilityQueryDelayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectSplunkObservabilityQueryDelay)(nil)).Elem()
}

func (o DirectSplunkObservabilityQueryDelayOutput) ToDirectSplunkObservabilityQueryDelayOutput() DirectSplunkObservabilityQueryDelayOutput {
	return o
}

func (o DirectSplunkObservabilityQueryDelayOutput) ToDirectSplunkObservabilityQueryDelayOutputWithContext(ctx context.Context) DirectSplunkObservabilityQueryDelayOutput {
	return o
}

func (o DirectSplunkObservabilityQueryDelayOutput) ToDirectSplunkObservabilityQueryDelayPtrOutput() DirectSplunkObservabilityQueryDelayPtrOutput {
	return o.ToDirectSplunkObservabilityQueryDelayPtrOutputWithContext(context.Background())
}

func (o DirectSplunkObservabilityQueryDelayOutput) ToDirectSplunkObservabilityQueryDelayPtrOutputWithContext(ctx context.Context) DirectSplunkObservabilityQueryDelayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectSplunkObservabilityQueryDelay) *DirectSplunkObservabilityQueryDelay {
		return &v
	}).(DirectSplunkObservabilityQueryDelayPtrOutput)
}

// Must be one of Minute or Second.
func (o DirectSplunkObservabilityQueryDelayOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v DirectSplunkObservabilityQueryDelay) string { return v.Unit }).(pulumi.StringOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectSplunkObservabilityQueryDelayOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v DirectSplunkObservabilityQueryDelay) int { return v.Value }).(pulumi.IntOutput)
}

type DirectSplunkObservabilityQueryDelayPtrOutput struct{ *pulumi.OutputState }

func (DirectSplunkObservabilityQueryDelayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectSplunkObservabilityQueryDelay)(nil)).Elem()
}

func (o DirectSplunkObservabilityQueryDelayPtrOutput) ToDirectSplunkObservabilityQueryDelayPtrOutput() DirectSplunkObservabilityQueryDelayPtrOutput {
	return o
}

func (o DirectSplunkObservabilityQueryDelayPtrOutput) ToDirectSplunkObservabilityQueryDelayPtrOutputWithContext(ctx context.Context) DirectSplunkObservabilityQueryDelayPtrOutput {
	return o
}

func (o DirectSplunkObservabilityQueryDelayPtrOutput) Elem() DirectSplunkObservabilityQueryDelayOutput {
	return o.ApplyT(func(v *DirectSplunkObservabilityQueryDelay) DirectSplunkObservabilityQueryDelay {
		if v != nil {
			return *v
		}
		var ret DirectSplunkObservabilityQueryDelay
		return ret
	}).(DirectSplunkObservabilityQueryDelayOutput)
}

// Must be one of Minute or Second.
func (o DirectSplunkObservabilityQueryDelayPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectSplunkObservabilityQueryDelay) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectSplunkObservabilityQueryDelayPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DirectSplunkObservabilityQueryDelay) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type DirectSplunkQueryDelay struct {
	// Must be one of Minute or Second.
	Unit string `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value int `pulumi:"value"`
}

// DirectSplunkQueryDelayInput is an input type that accepts DirectSplunkQueryDelayArgs and DirectSplunkQueryDelayOutput values.
// You can construct a concrete instance of `DirectSplunkQueryDelayInput` via:
//
//	DirectSplunkQueryDelayArgs{...}
type DirectSplunkQueryDelayInput interface {
	pulumi.Input

	ToDirectSplunkQueryDelayOutput() DirectSplunkQueryDelayOutput
	ToDirectSplunkQueryDelayOutputWithContext(context.Context) DirectSplunkQueryDelayOutput
}

type DirectSplunkQueryDelayArgs struct {
	// Must be one of Minute or Second.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value pulumi.IntInput `pulumi:"value"`
}

func (DirectSplunkQueryDelayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectSplunkQueryDelay)(nil)).Elem()
}

func (i DirectSplunkQueryDelayArgs) ToDirectSplunkQueryDelayOutput() DirectSplunkQueryDelayOutput {
	return i.ToDirectSplunkQueryDelayOutputWithContext(context.Background())
}

func (i DirectSplunkQueryDelayArgs) ToDirectSplunkQueryDelayOutputWithContext(ctx context.Context) DirectSplunkQueryDelayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectSplunkQueryDelayOutput)
}

func (i DirectSplunkQueryDelayArgs) ToDirectSplunkQueryDelayPtrOutput() DirectSplunkQueryDelayPtrOutput {
	return i.ToDirectSplunkQueryDelayPtrOutputWithContext(context.Background())
}

func (i DirectSplunkQueryDelayArgs) ToDirectSplunkQueryDelayPtrOutputWithContext(ctx context.Context) DirectSplunkQueryDelayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectSplunkQueryDelayOutput).ToDirectSplunkQueryDelayPtrOutputWithContext(ctx)
}

// DirectSplunkQueryDelayPtrInput is an input type that accepts DirectSplunkQueryDelayArgs, DirectSplunkQueryDelayPtr and DirectSplunkQueryDelayPtrOutput values.
// You can construct a concrete instance of `DirectSplunkQueryDelayPtrInput` via:
//
//	        DirectSplunkQueryDelayArgs{...}
//
//	or:
//
//	        nil
type DirectSplunkQueryDelayPtrInput interface {
	pulumi.Input

	ToDirectSplunkQueryDelayPtrOutput() DirectSplunkQueryDelayPtrOutput
	ToDirectSplunkQueryDelayPtrOutputWithContext(context.Context) DirectSplunkQueryDelayPtrOutput
}

type directSplunkQueryDelayPtrType DirectSplunkQueryDelayArgs

func DirectSplunkQueryDelayPtr(v *DirectSplunkQueryDelayArgs) DirectSplunkQueryDelayPtrInput {
	return (*directSplunkQueryDelayPtrType)(v)
}

func (*directSplunkQueryDelayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectSplunkQueryDelay)(nil)).Elem()
}

func (i *directSplunkQueryDelayPtrType) ToDirectSplunkQueryDelayPtrOutput() DirectSplunkQueryDelayPtrOutput {
	return i.ToDirectSplunkQueryDelayPtrOutputWithContext(context.Background())
}

func (i *directSplunkQueryDelayPtrType) ToDirectSplunkQueryDelayPtrOutputWithContext(ctx context.Context) DirectSplunkQueryDelayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectSplunkQueryDelayPtrOutput)
}

type DirectSplunkQueryDelayOutput struct{ *pulumi.OutputState }

func (DirectSplunkQueryDelayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectSplunkQueryDelay)(nil)).Elem()
}

func (o DirectSplunkQueryDelayOutput) ToDirectSplunkQueryDelayOutput() DirectSplunkQueryDelayOutput {
	return o
}

func (o DirectSplunkQueryDelayOutput) ToDirectSplunkQueryDelayOutputWithContext(ctx context.Context) DirectSplunkQueryDelayOutput {
	return o
}

func (o DirectSplunkQueryDelayOutput) ToDirectSplunkQueryDelayPtrOutput() DirectSplunkQueryDelayPtrOutput {
	return o.ToDirectSplunkQueryDelayPtrOutputWithContext(context.Background())
}

func (o DirectSplunkQueryDelayOutput) ToDirectSplunkQueryDelayPtrOutputWithContext(ctx context.Context) DirectSplunkQueryDelayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectSplunkQueryDelay) *DirectSplunkQueryDelay {
		return &v
	}).(DirectSplunkQueryDelayPtrOutput)
}

// Must be one of Minute or Second.
func (o DirectSplunkQueryDelayOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v DirectSplunkQueryDelay) string { return v.Unit }).(pulumi.StringOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectSplunkQueryDelayOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v DirectSplunkQueryDelay) int { return v.Value }).(pulumi.IntOutput)
}

type DirectSplunkQueryDelayPtrOutput struct{ *pulumi.OutputState }

func (DirectSplunkQueryDelayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectSplunkQueryDelay)(nil)).Elem()
}

func (o DirectSplunkQueryDelayPtrOutput) ToDirectSplunkQueryDelayPtrOutput() DirectSplunkQueryDelayPtrOutput {
	return o
}

func (o DirectSplunkQueryDelayPtrOutput) ToDirectSplunkQueryDelayPtrOutputWithContext(ctx context.Context) DirectSplunkQueryDelayPtrOutput {
	return o
}

func (o DirectSplunkQueryDelayPtrOutput) Elem() DirectSplunkQueryDelayOutput {
	return o.ApplyT(func(v *DirectSplunkQueryDelay) DirectSplunkQueryDelay {
		if v != nil {
			return *v
		}
		var ret DirectSplunkQueryDelay
		return ret
	}).(DirectSplunkQueryDelayOutput)
}

// Must be one of Minute or Second.
func (o DirectSplunkQueryDelayPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectSplunkQueryDelay) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectSplunkQueryDelayPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DirectSplunkQueryDelay) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type DirectSumologicQueryDelay struct {
	// Must be one of Minute or Second.
	Unit string `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value int `pulumi:"value"`
}

// DirectSumologicQueryDelayInput is an input type that accepts DirectSumologicQueryDelayArgs and DirectSumologicQueryDelayOutput values.
// You can construct a concrete instance of `DirectSumologicQueryDelayInput` via:
//
//	DirectSumologicQueryDelayArgs{...}
type DirectSumologicQueryDelayInput interface {
	pulumi.Input

	ToDirectSumologicQueryDelayOutput() DirectSumologicQueryDelayOutput
	ToDirectSumologicQueryDelayOutputWithContext(context.Context) DirectSumologicQueryDelayOutput
}

type DirectSumologicQueryDelayArgs struct {
	// Must be one of Minute or Second.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value pulumi.IntInput `pulumi:"value"`
}

func (DirectSumologicQueryDelayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectSumologicQueryDelay)(nil)).Elem()
}

func (i DirectSumologicQueryDelayArgs) ToDirectSumologicQueryDelayOutput() DirectSumologicQueryDelayOutput {
	return i.ToDirectSumologicQueryDelayOutputWithContext(context.Background())
}

func (i DirectSumologicQueryDelayArgs) ToDirectSumologicQueryDelayOutputWithContext(ctx context.Context) DirectSumologicQueryDelayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectSumologicQueryDelayOutput)
}

func (i DirectSumologicQueryDelayArgs) ToDirectSumologicQueryDelayPtrOutput() DirectSumologicQueryDelayPtrOutput {
	return i.ToDirectSumologicQueryDelayPtrOutputWithContext(context.Background())
}

func (i DirectSumologicQueryDelayArgs) ToDirectSumologicQueryDelayPtrOutputWithContext(ctx context.Context) DirectSumologicQueryDelayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectSumologicQueryDelayOutput).ToDirectSumologicQueryDelayPtrOutputWithContext(ctx)
}

// DirectSumologicQueryDelayPtrInput is an input type that accepts DirectSumologicQueryDelayArgs, DirectSumologicQueryDelayPtr and DirectSumologicQueryDelayPtrOutput values.
// You can construct a concrete instance of `DirectSumologicQueryDelayPtrInput` via:
//
//	        DirectSumologicQueryDelayArgs{...}
//
//	or:
//
//	        nil
type DirectSumologicQueryDelayPtrInput interface {
	pulumi.Input

	ToDirectSumologicQueryDelayPtrOutput() DirectSumologicQueryDelayPtrOutput
	ToDirectSumologicQueryDelayPtrOutputWithContext(context.Context) DirectSumologicQueryDelayPtrOutput
}

type directSumologicQueryDelayPtrType DirectSumologicQueryDelayArgs

func DirectSumologicQueryDelayPtr(v *DirectSumologicQueryDelayArgs) DirectSumologicQueryDelayPtrInput {
	return (*directSumologicQueryDelayPtrType)(v)
}

func (*directSumologicQueryDelayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectSumologicQueryDelay)(nil)).Elem()
}

func (i *directSumologicQueryDelayPtrType) ToDirectSumologicQueryDelayPtrOutput() DirectSumologicQueryDelayPtrOutput {
	return i.ToDirectSumologicQueryDelayPtrOutputWithContext(context.Background())
}

func (i *directSumologicQueryDelayPtrType) ToDirectSumologicQueryDelayPtrOutputWithContext(ctx context.Context) DirectSumologicQueryDelayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectSumologicQueryDelayPtrOutput)
}

type DirectSumologicQueryDelayOutput struct{ *pulumi.OutputState }

func (DirectSumologicQueryDelayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectSumologicQueryDelay)(nil)).Elem()
}

func (o DirectSumologicQueryDelayOutput) ToDirectSumologicQueryDelayOutput() DirectSumologicQueryDelayOutput {
	return o
}

func (o DirectSumologicQueryDelayOutput) ToDirectSumologicQueryDelayOutputWithContext(ctx context.Context) DirectSumologicQueryDelayOutput {
	return o
}

func (o DirectSumologicQueryDelayOutput) ToDirectSumologicQueryDelayPtrOutput() DirectSumologicQueryDelayPtrOutput {
	return o.ToDirectSumologicQueryDelayPtrOutputWithContext(context.Background())
}

func (o DirectSumologicQueryDelayOutput) ToDirectSumologicQueryDelayPtrOutputWithContext(ctx context.Context) DirectSumologicQueryDelayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectSumologicQueryDelay) *DirectSumologicQueryDelay {
		return &v
	}).(DirectSumologicQueryDelayPtrOutput)
}

// Must be one of Minute or Second.
func (o DirectSumologicQueryDelayOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v DirectSumologicQueryDelay) string { return v.Unit }).(pulumi.StringOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectSumologicQueryDelayOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v DirectSumologicQueryDelay) int { return v.Value }).(pulumi.IntOutput)
}

type DirectSumologicQueryDelayPtrOutput struct{ *pulumi.OutputState }

func (DirectSumologicQueryDelayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectSumologicQueryDelay)(nil)).Elem()
}

func (o DirectSumologicQueryDelayPtrOutput) ToDirectSumologicQueryDelayPtrOutput() DirectSumologicQueryDelayPtrOutput {
	return o
}

func (o DirectSumologicQueryDelayPtrOutput) ToDirectSumologicQueryDelayPtrOutputWithContext(ctx context.Context) DirectSumologicQueryDelayPtrOutput {
	return o
}

func (o DirectSumologicQueryDelayPtrOutput) Elem() DirectSumologicQueryDelayOutput {
	return o.ApplyT(func(v *DirectSumologicQueryDelay) DirectSumologicQueryDelay {
		if v != nil {
			return *v
		}
		var ret DirectSumologicQueryDelay
		return ret
	}).(DirectSumologicQueryDelayOutput)
}

// Must be one of Minute or Second.
func (o DirectSumologicQueryDelayPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectSumologicQueryDelay) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectSumologicQueryDelayPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DirectSumologicQueryDelay) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type DirectThousandeyesQueryDelay struct {
	// Must be one of Minute or Second.
	Unit string `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value int `pulumi:"value"`
}

// DirectThousandeyesQueryDelayInput is an input type that accepts DirectThousandeyesQueryDelayArgs and DirectThousandeyesQueryDelayOutput values.
// You can construct a concrete instance of `DirectThousandeyesQueryDelayInput` via:
//
//	DirectThousandeyesQueryDelayArgs{...}
type DirectThousandeyesQueryDelayInput interface {
	pulumi.Input

	ToDirectThousandeyesQueryDelayOutput() DirectThousandeyesQueryDelayOutput
	ToDirectThousandeyesQueryDelayOutputWithContext(context.Context) DirectThousandeyesQueryDelayOutput
}

type DirectThousandeyesQueryDelayArgs struct {
	// Must be one of Minute or Second.
	Unit pulumi.StringInput `pulumi:"unit"`
	// Must be an integer greater than or equal to 0.
	Value pulumi.IntInput `pulumi:"value"`
}

func (DirectThousandeyesQueryDelayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectThousandeyesQueryDelay)(nil)).Elem()
}

func (i DirectThousandeyesQueryDelayArgs) ToDirectThousandeyesQueryDelayOutput() DirectThousandeyesQueryDelayOutput {
	return i.ToDirectThousandeyesQueryDelayOutputWithContext(context.Background())
}

func (i DirectThousandeyesQueryDelayArgs) ToDirectThousandeyesQueryDelayOutputWithContext(ctx context.Context) DirectThousandeyesQueryDelayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectThousandeyesQueryDelayOutput)
}

func (i DirectThousandeyesQueryDelayArgs) ToDirectThousandeyesQueryDelayPtrOutput() DirectThousandeyesQueryDelayPtrOutput {
	return i.ToDirectThousandeyesQueryDelayPtrOutputWithContext(context.Background())
}

func (i DirectThousandeyesQueryDelayArgs) ToDirectThousandeyesQueryDelayPtrOutputWithContext(ctx context.Context) DirectThousandeyesQueryDelayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectThousandeyesQueryDelayOutput).ToDirectThousandeyesQueryDelayPtrOutputWithContext(ctx)
}

// DirectThousandeyesQueryDelayPtrInput is an input type that accepts DirectThousandeyesQueryDelayArgs, DirectThousandeyesQueryDelayPtr and DirectThousandeyesQueryDelayPtrOutput values.
// You can construct a concrete instance of `DirectThousandeyesQueryDelayPtrInput` via:
//
//	        DirectThousandeyesQueryDelayArgs{...}
//
//	or:
//
//	        nil
type DirectThousandeyesQueryDelayPtrInput interface {
	pulumi.Input

	ToDirectThousandeyesQueryDelayPtrOutput() DirectThousandeyesQueryDelayPtrOutput
	ToDirectThousandeyesQueryDelayPtrOutputWithContext(context.Context) DirectThousandeyesQueryDelayPtrOutput
}

type directThousandeyesQueryDelayPtrType DirectThousandeyesQueryDelayArgs

func DirectThousandeyesQueryDelayPtr(v *DirectThousandeyesQueryDelayArgs) DirectThousandeyesQueryDelayPtrInput {
	return (*directThousandeyesQueryDelayPtrType)(v)
}

func (*directThousandeyesQueryDelayPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectThousandeyesQueryDelay)(nil)).Elem()
}

func (i *directThousandeyesQueryDelayPtrType) ToDirectThousandeyesQueryDelayPtrOutput() DirectThousandeyesQueryDelayPtrOutput {
	return i.ToDirectThousandeyesQueryDelayPtrOutputWithContext(context.Background())
}

func (i *directThousandeyesQueryDelayPtrType) ToDirectThousandeyesQueryDelayPtrOutputWithContext(ctx context.Context) DirectThousandeyesQueryDelayPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectThousandeyesQueryDelayPtrOutput)
}

type DirectThousandeyesQueryDelayOutput struct{ *pulumi.OutputState }

func (DirectThousandeyesQueryDelayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DirectThousandeyesQueryDelay)(nil)).Elem()
}

func (o DirectThousandeyesQueryDelayOutput) ToDirectThousandeyesQueryDelayOutput() DirectThousandeyesQueryDelayOutput {
	return o
}

func (o DirectThousandeyesQueryDelayOutput) ToDirectThousandeyesQueryDelayOutputWithContext(ctx context.Context) DirectThousandeyesQueryDelayOutput {
	return o
}

func (o DirectThousandeyesQueryDelayOutput) ToDirectThousandeyesQueryDelayPtrOutput() DirectThousandeyesQueryDelayPtrOutput {
	return o.ToDirectThousandeyesQueryDelayPtrOutputWithContext(context.Background())
}

func (o DirectThousandeyesQueryDelayOutput) ToDirectThousandeyesQueryDelayPtrOutputWithContext(ctx context.Context) DirectThousandeyesQueryDelayPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DirectThousandeyesQueryDelay) *DirectThousandeyesQueryDelay {
		return &v
	}).(DirectThousandeyesQueryDelayPtrOutput)
}

// Must be one of Minute or Second.
func (o DirectThousandeyesQueryDelayOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v DirectThousandeyesQueryDelay) string { return v.Unit }).(pulumi.StringOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectThousandeyesQueryDelayOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v DirectThousandeyesQueryDelay) int { return v.Value }).(pulumi.IntOutput)
}

type DirectThousandeyesQueryDelayPtrOutput struct{ *pulumi.OutputState }

func (DirectThousandeyesQueryDelayPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectThousandeyesQueryDelay)(nil)).Elem()
}

func (o DirectThousandeyesQueryDelayPtrOutput) ToDirectThousandeyesQueryDelayPtrOutput() DirectThousandeyesQueryDelayPtrOutput {
	return o
}

func (o DirectThousandeyesQueryDelayPtrOutput) ToDirectThousandeyesQueryDelayPtrOutputWithContext(ctx context.Context) DirectThousandeyesQueryDelayPtrOutput {
	return o
}

func (o DirectThousandeyesQueryDelayPtrOutput) Elem() DirectThousandeyesQueryDelayOutput {
	return o.ApplyT(func(v *DirectThousandeyesQueryDelay) DirectThousandeyesQueryDelay {
		if v != nil {
			return *v
		}
		var ret DirectThousandeyesQueryDelay
		return ret
	}).(DirectThousandeyesQueryDelayOutput)
}

// Must be one of Minute or Second.
func (o DirectThousandeyesQueryDelayPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectThousandeyesQueryDelay) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

// Must be an integer greater than or equal to 0.
func (o DirectThousandeyesQueryDelayPtrOutput) Value() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DirectThousandeyesQueryDelay) *int {
		if v == nil {
			return nil
		}
		return &v.Value
	}).(pulumi.IntPtrOutput)
}

type ProjectLabel struct {
	// A key for the label, unique within the associated resource.
	Key string `pulumi:"key"`
	// A list of unique values for a single key.
	Values []string `pulumi:"values"`
}

// ProjectLabelInput is an input type that accepts ProjectLabelArgs and ProjectLabelOutput values.
// You can construct a concrete instance of `ProjectLabelInput` via:
//
//	ProjectLabelArgs{...}
type ProjectLabelInput interface {
	pulumi.Input

	ToProjectLabelOutput() ProjectLabelOutput
	ToProjectLabelOutputWithContext(context.Context) ProjectLabelOutput
}

type ProjectLabelArgs struct {
	// A key for the label, unique within the associated resource.
	Key pulumi.StringInput `pulumi:"key"`
	// A list of unique values for a single key.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ProjectLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectLabel)(nil)).Elem()
}

func (i ProjectLabelArgs) ToProjectLabelOutput() ProjectLabelOutput {
	return i.ToProjectLabelOutputWithContext(context.Background())
}

func (i ProjectLabelArgs) ToProjectLabelOutputWithContext(ctx context.Context) ProjectLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectLabelOutput)
}

// ProjectLabelArrayInput is an input type that accepts ProjectLabelArray and ProjectLabelArrayOutput values.
// You can construct a concrete instance of `ProjectLabelArrayInput` via:
//
//	ProjectLabelArray{ ProjectLabelArgs{...} }
type ProjectLabelArrayInput interface {
	pulumi.Input

	ToProjectLabelArrayOutput() ProjectLabelArrayOutput
	ToProjectLabelArrayOutputWithContext(context.Context) ProjectLabelArrayOutput
}

type ProjectLabelArray []ProjectLabelInput

func (ProjectLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectLabel)(nil)).Elem()
}

func (i ProjectLabelArray) ToProjectLabelArrayOutput() ProjectLabelArrayOutput {
	return i.ToProjectLabelArrayOutputWithContext(context.Background())
}

func (i ProjectLabelArray) ToProjectLabelArrayOutputWithContext(ctx context.Context) ProjectLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectLabelArrayOutput)
}

type ProjectLabelOutput struct{ *pulumi.OutputState }

func (ProjectLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectLabel)(nil)).Elem()
}

func (o ProjectLabelOutput) ToProjectLabelOutput() ProjectLabelOutput {
	return o
}

func (o ProjectLabelOutput) ToProjectLabelOutputWithContext(ctx context.Context) ProjectLabelOutput {
	return o
}

// A key for the label, unique within the associated resource.
func (o ProjectLabelOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectLabel) string { return v.Key }).(pulumi.StringOutput)
}

// A list of unique values for a single key.
func (o ProjectLabelOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProjectLabel) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ProjectLabelArrayOutput struct{ *pulumi.OutputState }

func (ProjectLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ProjectLabel)(nil)).Elem()
}

func (o ProjectLabelArrayOutput) ToProjectLabelArrayOutput() ProjectLabelArrayOutput {
	return o
}

func (o ProjectLabelArrayOutput) ToProjectLabelArrayOutputWithContext(ctx context.Context) ProjectLabelArrayOutput {
	return o
}

func (o ProjectLabelArrayOutput) Index(i pulumi.IntInput) ProjectLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ProjectLabel {
		return vs[0].([]ProjectLabel)[vs[1].(int)]
	}).(ProjectLabelOutput)
}

type ServiceLabel struct {
	// A key for the label, unique within the associated resource.
	Key string `pulumi:"key"`
	// A list of unique values for a single key.
	Values []string `pulumi:"values"`
}

// ServiceLabelInput is an input type that accepts ServiceLabelArgs and ServiceLabelOutput values.
// You can construct a concrete instance of `ServiceLabelInput` via:
//
//	ServiceLabelArgs{...}
type ServiceLabelInput interface {
	pulumi.Input

	ToServiceLabelOutput() ServiceLabelOutput
	ToServiceLabelOutputWithContext(context.Context) ServiceLabelOutput
}

type ServiceLabelArgs struct {
	// A key for the label, unique within the associated resource.
	Key pulumi.StringInput `pulumi:"key"`
	// A list of unique values for a single key.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (ServiceLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLabel)(nil)).Elem()
}

func (i ServiceLabelArgs) ToServiceLabelOutput() ServiceLabelOutput {
	return i.ToServiceLabelOutputWithContext(context.Background())
}

func (i ServiceLabelArgs) ToServiceLabelOutputWithContext(ctx context.Context) ServiceLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLabelOutput)
}

// ServiceLabelArrayInput is an input type that accepts ServiceLabelArray and ServiceLabelArrayOutput values.
// You can construct a concrete instance of `ServiceLabelArrayInput` via:
//
//	ServiceLabelArray{ ServiceLabelArgs{...} }
type ServiceLabelArrayInput interface {
	pulumi.Input

	ToServiceLabelArrayOutput() ServiceLabelArrayOutput
	ToServiceLabelArrayOutputWithContext(context.Context) ServiceLabelArrayOutput
}

type ServiceLabelArray []ServiceLabelInput

func (ServiceLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceLabel)(nil)).Elem()
}

func (i ServiceLabelArray) ToServiceLabelArrayOutput() ServiceLabelArrayOutput {
	return i.ToServiceLabelArrayOutputWithContext(context.Background())
}

func (i ServiceLabelArray) ToServiceLabelArrayOutputWithContext(ctx context.Context) ServiceLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceLabelArrayOutput)
}

type ServiceLabelOutput struct{ *pulumi.OutputState }

func (ServiceLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceLabel)(nil)).Elem()
}

func (o ServiceLabelOutput) ToServiceLabelOutput() ServiceLabelOutput {
	return o
}

func (o ServiceLabelOutput) ToServiceLabelOutputWithContext(ctx context.Context) ServiceLabelOutput {
	return o
}

// A key for the label, unique within the associated resource.
func (o ServiceLabelOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceLabel) string { return v.Key }).(pulumi.StringOutput)
}

// A list of unique values for a single key.
func (o ServiceLabelOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceLabel) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type ServiceLabelArrayOutput struct{ *pulumi.OutputState }

func (ServiceLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceLabel)(nil)).Elem()
}

func (o ServiceLabelArrayOutput) ToServiceLabelArrayOutput() ServiceLabelArrayOutput {
	return o
}

func (o ServiceLabelArrayOutput) ToServiceLabelArrayOutputWithContext(ctx context.Context) ServiceLabelArrayOutput {
	return o
}

func (o ServiceLabelArrayOutput) Index(i pulumi.IntInput) ServiceLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceLabel {
		return vs[0].([]ServiceLabel)[vs[1].(int)]
	}).(ServiceLabelOutput)
}

type SloAnomalyConfig struct {
	// Alert Policies attached to SLO
	NoData SloAnomalyConfigNoData `pulumi:"noData"`
}

// SloAnomalyConfigInput is an input type that accepts SloAnomalyConfigArgs and SloAnomalyConfigOutput values.
// You can construct a concrete instance of `SloAnomalyConfigInput` via:
//
//	SloAnomalyConfigArgs{...}
type SloAnomalyConfigInput interface {
	pulumi.Input

	ToSloAnomalyConfigOutput() SloAnomalyConfigOutput
	ToSloAnomalyConfigOutputWithContext(context.Context) SloAnomalyConfigOutput
}

type SloAnomalyConfigArgs struct {
	// Alert Policies attached to SLO
	NoData SloAnomalyConfigNoDataInput `pulumi:"noData"`
}

func (SloAnomalyConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloAnomalyConfig)(nil)).Elem()
}

func (i SloAnomalyConfigArgs) ToSloAnomalyConfigOutput() SloAnomalyConfigOutput {
	return i.ToSloAnomalyConfigOutputWithContext(context.Background())
}

func (i SloAnomalyConfigArgs) ToSloAnomalyConfigOutputWithContext(ctx context.Context) SloAnomalyConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloAnomalyConfigOutput)
}

func (i SloAnomalyConfigArgs) ToSloAnomalyConfigPtrOutput() SloAnomalyConfigPtrOutput {
	return i.ToSloAnomalyConfigPtrOutputWithContext(context.Background())
}

func (i SloAnomalyConfigArgs) ToSloAnomalyConfigPtrOutputWithContext(ctx context.Context) SloAnomalyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloAnomalyConfigOutput).ToSloAnomalyConfigPtrOutputWithContext(ctx)
}

// SloAnomalyConfigPtrInput is an input type that accepts SloAnomalyConfigArgs, SloAnomalyConfigPtr and SloAnomalyConfigPtrOutput values.
// You can construct a concrete instance of `SloAnomalyConfigPtrInput` via:
//
//	        SloAnomalyConfigArgs{...}
//
//	or:
//
//	        nil
type SloAnomalyConfigPtrInput interface {
	pulumi.Input

	ToSloAnomalyConfigPtrOutput() SloAnomalyConfigPtrOutput
	ToSloAnomalyConfigPtrOutputWithContext(context.Context) SloAnomalyConfigPtrOutput
}

type sloAnomalyConfigPtrType SloAnomalyConfigArgs

func SloAnomalyConfigPtr(v *SloAnomalyConfigArgs) SloAnomalyConfigPtrInput {
	return (*sloAnomalyConfigPtrType)(v)
}

func (*sloAnomalyConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SloAnomalyConfig)(nil)).Elem()
}

func (i *sloAnomalyConfigPtrType) ToSloAnomalyConfigPtrOutput() SloAnomalyConfigPtrOutput {
	return i.ToSloAnomalyConfigPtrOutputWithContext(context.Background())
}

func (i *sloAnomalyConfigPtrType) ToSloAnomalyConfigPtrOutputWithContext(ctx context.Context) SloAnomalyConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloAnomalyConfigPtrOutput)
}

type SloAnomalyConfigOutput struct{ *pulumi.OutputState }

func (SloAnomalyConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloAnomalyConfig)(nil)).Elem()
}

func (o SloAnomalyConfigOutput) ToSloAnomalyConfigOutput() SloAnomalyConfigOutput {
	return o
}

func (o SloAnomalyConfigOutput) ToSloAnomalyConfigOutputWithContext(ctx context.Context) SloAnomalyConfigOutput {
	return o
}

func (o SloAnomalyConfigOutput) ToSloAnomalyConfigPtrOutput() SloAnomalyConfigPtrOutput {
	return o.ToSloAnomalyConfigPtrOutputWithContext(context.Background())
}

func (o SloAnomalyConfigOutput) ToSloAnomalyConfigPtrOutputWithContext(ctx context.Context) SloAnomalyConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SloAnomalyConfig) *SloAnomalyConfig {
		return &v
	}).(SloAnomalyConfigPtrOutput)
}

// Alert Policies attached to SLO
func (o SloAnomalyConfigOutput) NoData() SloAnomalyConfigNoDataOutput {
	return o.ApplyT(func(v SloAnomalyConfig) SloAnomalyConfigNoData { return v.NoData }).(SloAnomalyConfigNoDataOutput)
}

type SloAnomalyConfigPtrOutput struct{ *pulumi.OutputState }

func (SloAnomalyConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SloAnomalyConfig)(nil)).Elem()
}

func (o SloAnomalyConfigPtrOutput) ToSloAnomalyConfigPtrOutput() SloAnomalyConfigPtrOutput {
	return o
}

func (o SloAnomalyConfigPtrOutput) ToSloAnomalyConfigPtrOutputWithContext(ctx context.Context) SloAnomalyConfigPtrOutput {
	return o
}

func (o SloAnomalyConfigPtrOutput) Elem() SloAnomalyConfigOutput {
	return o.ApplyT(func(v *SloAnomalyConfig) SloAnomalyConfig {
		if v != nil {
			return *v
		}
		var ret SloAnomalyConfig
		return ret
	}).(SloAnomalyConfigOutput)
}

// Alert Policies attached to SLO
func (o SloAnomalyConfigPtrOutput) NoData() SloAnomalyConfigNoDataPtrOutput {
	return o.ApplyT(func(v *SloAnomalyConfig) *SloAnomalyConfigNoData {
		if v == nil {
			return nil
		}
		return &v.NoData
	}).(SloAnomalyConfigNoDataPtrOutput)
}

type SloAnomalyConfigNoData struct {
	// Alert methods attached to Anomaly Config
	AlertMethods []SloAnomalyConfigNoDataAlertMethod `pulumi:"alertMethods"`
}

// SloAnomalyConfigNoDataInput is an input type that accepts SloAnomalyConfigNoDataArgs and SloAnomalyConfigNoDataOutput values.
// You can construct a concrete instance of `SloAnomalyConfigNoDataInput` via:
//
//	SloAnomalyConfigNoDataArgs{...}
type SloAnomalyConfigNoDataInput interface {
	pulumi.Input

	ToSloAnomalyConfigNoDataOutput() SloAnomalyConfigNoDataOutput
	ToSloAnomalyConfigNoDataOutputWithContext(context.Context) SloAnomalyConfigNoDataOutput
}

type SloAnomalyConfigNoDataArgs struct {
	// Alert methods attached to Anomaly Config
	AlertMethods SloAnomalyConfigNoDataAlertMethodArrayInput `pulumi:"alertMethods"`
}

func (SloAnomalyConfigNoDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloAnomalyConfigNoData)(nil)).Elem()
}

func (i SloAnomalyConfigNoDataArgs) ToSloAnomalyConfigNoDataOutput() SloAnomalyConfigNoDataOutput {
	return i.ToSloAnomalyConfigNoDataOutputWithContext(context.Background())
}

func (i SloAnomalyConfigNoDataArgs) ToSloAnomalyConfigNoDataOutputWithContext(ctx context.Context) SloAnomalyConfigNoDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloAnomalyConfigNoDataOutput)
}

func (i SloAnomalyConfigNoDataArgs) ToSloAnomalyConfigNoDataPtrOutput() SloAnomalyConfigNoDataPtrOutput {
	return i.ToSloAnomalyConfigNoDataPtrOutputWithContext(context.Background())
}

func (i SloAnomalyConfigNoDataArgs) ToSloAnomalyConfigNoDataPtrOutputWithContext(ctx context.Context) SloAnomalyConfigNoDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloAnomalyConfigNoDataOutput).ToSloAnomalyConfigNoDataPtrOutputWithContext(ctx)
}

// SloAnomalyConfigNoDataPtrInput is an input type that accepts SloAnomalyConfigNoDataArgs, SloAnomalyConfigNoDataPtr and SloAnomalyConfigNoDataPtrOutput values.
// You can construct a concrete instance of `SloAnomalyConfigNoDataPtrInput` via:
//
//	        SloAnomalyConfigNoDataArgs{...}
//
//	or:
//
//	        nil
type SloAnomalyConfigNoDataPtrInput interface {
	pulumi.Input

	ToSloAnomalyConfigNoDataPtrOutput() SloAnomalyConfigNoDataPtrOutput
	ToSloAnomalyConfigNoDataPtrOutputWithContext(context.Context) SloAnomalyConfigNoDataPtrOutput
}

type sloAnomalyConfigNoDataPtrType SloAnomalyConfigNoDataArgs

func SloAnomalyConfigNoDataPtr(v *SloAnomalyConfigNoDataArgs) SloAnomalyConfigNoDataPtrInput {
	return (*sloAnomalyConfigNoDataPtrType)(v)
}

func (*sloAnomalyConfigNoDataPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SloAnomalyConfigNoData)(nil)).Elem()
}

func (i *sloAnomalyConfigNoDataPtrType) ToSloAnomalyConfigNoDataPtrOutput() SloAnomalyConfigNoDataPtrOutput {
	return i.ToSloAnomalyConfigNoDataPtrOutputWithContext(context.Background())
}

func (i *sloAnomalyConfigNoDataPtrType) ToSloAnomalyConfigNoDataPtrOutputWithContext(ctx context.Context) SloAnomalyConfigNoDataPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloAnomalyConfigNoDataPtrOutput)
}

type SloAnomalyConfigNoDataOutput struct{ *pulumi.OutputState }

func (SloAnomalyConfigNoDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloAnomalyConfigNoData)(nil)).Elem()
}

func (o SloAnomalyConfigNoDataOutput) ToSloAnomalyConfigNoDataOutput() SloAnomalyConfigNoDataOutput {
	return o
}

func (o SloAnomalyConfigNoDataOutput) ToSloAnomalyConfigNoDataOutputWithContext(ctx context.Context) SloAnomalyConfigNoDataOutput {
	return o
}

func (o SloAnomalyConfigNoDataOutput) ToSloAnomalyConfigNoDataPtrOutput() SloAnomalyConfigNoDataPtrOutput {
	return o.ToSloAnomalyConfigNoDataPtrOutputWithContext(context.Background())
}

func (o SloAnomalyConfigNoDataOutput) ToSloAnomalyConfigNoDataPtrOutputWithContext(ctx context.Context) SloAnomalyConfigNoDataPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SloAnomalyConfigNoData) *SloAnomalyConfigNoData {
		return &v
	}).(SloAnomalyConfigNoDataPtrOutput)
}

// Alert methods attached to Anomaly Config
func (o SloAnomalyConfigNoDataOutput) AlertMethods() SloAnomalyConfigNoDataAlertMethodArrayOutput {
	return o.ApplyT(func(v SloAnomalyConfigNoData) []SloAnomalyConfigNoDataAlertMethod { return v.AlertMethods }).(SloAnomalyConfigNoDataAlertMethodArrayOutput)
}

type SloAnomalyConfigNoDataPtrOutput struct{ *pulumi.OutputState }

func (SloAnomalyConfigNoDataPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SloAnomalyConfigNoData)(nil)).Elem()
}

func (o SloAnomalyConfigNoDataPtrOutput) ToSloAnomalyConfigNoDataPtrOutput() SloAnomalyConfigNoDataPtrOutput {
	return o
}

func (o SloAnomalyConfigNoDataPtrOutput) ToSloAnomalyConfigNoDataPtrOutputWithContext(ctx context.Context) SloAnomalyConfigNoDataPtrOutput {
	return o
}

func (o SloAnomalyConfigNoDataPtrOutput) Elem() SloAnomalyConfigNoDataOutput {
	return o.ApplyT(func(v *SloAnomalyConfigNoData) SloAnomalyConfigNoData {
		if v != nil {
			return *v
		}
		var ret SloAnomalyConfigNoData
		return ret
	}).(SloAnomalyConfigNoDataOutput)
}

// Alert methods attached to Anomaly Config
func (o SloAnomalyConfigNoDataPtrOutput) AlertMethods() SloAnomalyConfigNoDataAlertMethodArrayOutput {
	return o.ApplyT(func(v *SloAnomalyConfigNoData) []SloAnomalyConfigNoDataAlertMethod {
		if v == nil {
			return nil
		}
		return v.AlertMethods
	}).(SloAnomalyConfigNoDataAlertMethodArrayOutput)
}

type SloAnomalyConfigNoDataAlertMethod struct {
	// The name of the previously defined alert method.
	Name string `pulumi:"name"`
	// Project name the Alert Method is in,  must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names). If not defined, Nobl9 returns a default value for this field.
	Project string `pulumi:"project"`
}

// SloAnomalyConfigNoDataAlertMethodInput is an input type that accepts SloAnomalyConfigNoDataAlertMethodArgs and SloAnomalyConfigNoDataAlertMethodOutput values.
// You can construct a concrete instance of `SloAnomalyConfigNoDataAlertMethodInput` via:
//
//	SloAnomalyConfigNoDataAlertMethodArgs{...}
type SloAnomalyConfigNoDataAlertMethodInput interface {
	pulumi.Input

	ToSloAnomalyConfigNoDataAlertMethodOutput() SloAnomalyConfigNoDataAlertMethodOutput
	ToSloAnomalyConfigNoDataAlertMethodOutputWithContext(context.Context) SloAnomalyConfigNoDataAlertMethodOutput
}

type SloAnomalyConfigNoDataAlertMethodArgs struct {
	// The name of the previously defined alert method.
	Name pulumi.StringInput `pulumi:"name"`
	// Project name the Alert Method is in,  must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names). If not defined, Nobl9 returns a default value for this field.
	Project pulumi.StringInput `pulumi:"project"`
}

func (SloAnomalyConfigNoDataAlertMethodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloAnomalyConfigNoDataAlertMethod)(nil)).Elem()
}

func (i SloAnomalyConfigNoDataAlertMethodArgs) ToSloAnomalyConfigNoDataAlertMethodOutput() SloAnomalyConfigNoDataAlertMethodOutput {
	return i.ToSloAnomalyConfigNoDataAlertMethodOutputWithContext(context.Background())
}

func (i SloAnomalyConfigNoDataAlertMethodArgs) ToSloAnomalyConfigNoDataAlertMethodOutputWithContext(ctx context.Context) SloAnomalyConfigNoDataAlertMethodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloAnomalyConfigNoDataAlertMethodOutput)
}

// SloAnomalyConfigNoDataAlertMethodArrayInput is an input type that accepts SloAnomalyConfigNoDataAlertMethodArray and SloAnomalyConfigNoDataAlertMethodArrayOutput values.
// You can construct a concrete instance of `SloAnomalyConfigNoDataAlertMethodArrayInput` via:
//
//	SloAnomalyConfigNoDataAlertMethodArray{ SloAnomalyConfigNoDataAlertMethodArgs{...} }
type SloAnomalyConfigNoDataAlertMethodArrayInput interface {
	pulumi.Input

	ToSloAnomalyConfigNoDataAlertMethodArrayOutput() SloAnomalyConfigNoDataAlertMethodArrayOutput
	ToSloAnomalyConfigNoDataAlertMethodArrayOutputWithContext(context.Context) SloAnomalyConfigNoDataAlertMethodArrayOutput
}

type SloAnomalyConfigNoDataAlertMethodArray []SloAnomalyConfigNoDataAlertMethodInput

func (SloAnomalyConfigNoDataAlertMethodArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloAnomalyConfigNoDataAlertMethod)(nil)).Elem()
}

func (i SloAnomalyConfigNoDataAlertMethodArray) ToSloAnomalyConfigNoDataAlertMethodArrayOutput() SloAnomalyConfigNoDataAlertMethodArrayOutput {
	return i.ToSloAnomalyConfigNoDataAlertMethodArrayOutputWithContext(context.Background())
}

func (i SloAnomalyConfigNoDataAlertMethodArray) ToSloAnomalyConfigNoDataAlertMethodArrayOutputWithContext(ctx context.Context) SloAnomalyConfigNoDataAlertMethodArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloAnomalyConfigNoDataAlertMethodArrayOutput)
}

type SloAnomalyConfigNoDataAlertMethodOutput struct{ *pulumi.OutputState }

func (SloAnomalyConfigNoDataAlertMethodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloAnomalyConfigNoDataAlertMethod)(nil)).Elem()
}

func (o SloAnomalyConfigNoDataAlertMethodOutput) ToSloAnomalyConfigNoDataAlertMethodOutput() SloAnomalyConfigNoDataAlertMethodOutput {
	return o
}

func (o SloAnomalyConfigNoDataAlertMethodOutput) ToSloAnomalyConfigNoDataAlertMethodOutputWithContext(ctx context.Context) SloAnomalyConfigNoDataAlertMethodOutput {
	return o
}

// The name of the previously defined alert method.
func (o SloAnomalyConfigNoDataAlertMethodOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SloAnomalyConfigNoDataAlertMethod) string { return v.Name }).(pulumi.StringOutput)
}

// Project name the Alert Method is in,  must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names). If not defined, Nobl9 returns a default value for this field.
func (o SloAnomalyConfigNoDataAlertMethodOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v SloAnomalyConfigNoDataAlertMethod) string { return v.Project }).(pulumi.StringOutput)
}

type SloAnomalyConfigNoDataAlertMethodArrayOutput struct{ *pulumi.OutputState }

func (SloAnomalyConfigNoDataAlertMethodArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloAnomalyConfigNoDataAlertMethod)(nil)).Elem()
}

func (o SloAnomalyConfigNoDataAlertMethodArrayOutput) ToSloAnomalyConfigNoDataAlertMethodArrayOutput() SloAnomalyConfigNoDataAlertMethodArrayOutput {
	return o
}

func (o SloAnomalyConfigNoDataAlertMethodArrayOutput) ToSloAnomalyConfigNoDataAlertMethodArrayOutputWithContext(ctx context.Context) SloAnomalyConfigNoDataAlertMethodArrayOutput {
	return o
}

func (o SloAnomalyConfigNoDataAlertMethodArrayOutput) Index(i pulumi.IntInput) SloAnomalyConfigNoDataAlertMethodOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloAnomalyConfigNoDataAlertMethod {
		return vs[0].([]SloAnomalyConfigNoDataAlertMethod)[vs[1].(int)]
	}).(SloAnomalyConfigNoDataAlertMethodOutput)
}

type SloAttachment struct {
	// Name displayed for the attachment. Max. length: 63 characters.
	DisplayName *string `pulumi:"displayName"`
	// URL to the attachment
	Url string `pulumi:"url"`
}

// SloAttachmentInput is an input type that accepts SloAttachmentArgs and SloAttachmentOutput values.
// You can construct a concrete instance of `SloAttachmentInput` via:
//
//	SloAttachmentArgs{...}
type SloAttachmentInput interface {
	pulumi.Input

	ToSloAttachmentOutput() SloAttachmentOutput
	ToSloAttachmentOutputWithContext(context.Context) SloAttachmentOutput
}

type SloAttachmentArgs struct {
	// Name displayed for the attachment. Max. length: 63 characters.
	DisplayName pulumi.StringPtrInput `pulumi:"displayName"`
	// URL to the attachment
	Url pulumi.StringInput `pulumi:"url"`
}

func (SloAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloAttachment)(nil)).Elem()
}

func (i SloAttachmentArgs) ToSloAttachmentOutput() SloAttachmentOutput {
	return i.ToSloAttachmentOutputWithContext(context.Background())
}

func (i SloAttachmentArgs) ToSloAttachmentOutputWithContext(ctx context.Context) SloAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloAttachmentOutput)
}

// SloAttachmentArrayInput is an input type that accepts SloAttachmentArray and SloAttachmentArrayOutput values.
// You can construct a concrete instance of `SloAttachmentArrayInput` via:
//
//	SloAttachmentArray{ SloAttachmentArgs{...} }
type SloAttachmentArrayInput interface {
	pulumi.Input

	ToSloAttachmentArrayOutput() SloAttachmentArrayOutput
	ToSloAttachmentArrayOutputWithContext(context.Context) SloAttachmentArrayOutput
}

type SloAttachmentArray []SloAttachmentInput

func (SloAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloAttachment)(nil)).Elem()
}

func (i SloAttachmentArray) ToSloAttachmentArrayOutput() SloAttachmentArrayOutput {
	return i.ToSloAttachmentArrayOutputWithContext(context.Background())
}

func (i SloAttachmentArray) ToSloAttachmentArrayOutputWithContext(ctx context.Context) SloAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloAttachmentArrayOutput)
}

type SloAttachmentOutput struct{ *pulumi.OutputState }

func (SloAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloAttachment)(nil)).Elem()
}

func (o SloAttachmentOutput) ToSloAttachmentOutput() SloAttachmentOutput {
	return o
}

func (o SloAttachmentOutput) ToSloAttachmentOutputWithContext(ctx context.Context) SloAttachmentOutput {
	return o
}

// Name displayed for the attachment. Max. length: 63 characters.
func (o SloAttachmentOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloAttachment) *string { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// URL to the attachment
func (o SloAttachmentOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v SloAttachment) string { return v.Url }).(pulumi.StringOutput)
}

type SloAttachmentArrayOutput struct{ *pulumi.OutputState }

func (SloAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloAttachment)(nil)).Elem()
}

func (o SloAttachmentArrayOutput) ToSloAttachmentArrayOutput() SloAttachmentArrayOutput {
	return o
}

func (o SloAttachmentArrayOutput) ToSloAttachmentArrayOutputWithContext(ctx context.Context) SloAttachmentArrayOutput {
	return o
}

func (o SloAttachmentArrayOutput) Index(i pulumi.IntInput) SloAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloAttachment {
		return vs[0].([]SloAttachment)[vs[1].(int)]
	}).(SloAttachmentOutput)
}

type SloComposite struct {
	// Condition when the Composite SLO’s error budget is burning.
	BurnRateConditions []SloCompositeBurnRateCondition `pulumi:"burnRateConditions"`
	// Designated value
	Target float64 `pulumi:"target"`
}

// SloCompositeInput is an input type that accepts SloCompositeArgs and SloCompositeOutput values.
// You can construct a concrete instance of `SloCompositeInput` via:
//
//	SloCompositeArgs{...}
type SloCompositeInput interface {
	pulumi.Input

	ToSloCompositeOutput() SloCompositeOutput
	ToSloCompositeOutputWithContext(context.Context) SloCompositeOutput
}

type SloCompositeArgs struct {
	// Condition when the Composite SLO’s error budget is burning.
	BurnRateConditions SloCompositeBurnRateConditionArrayInput `pulumi:"burnRateConditions"`
	// Designated value
	Target pulumi.Float64Input `pulumi:"target"`
}

func (SloCompositeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloComposite)(nil)).Elem()
}

func (i SloCompositeArgs) ToSloCompositeOutput() SloCompositeOutput {
	return i.ToSloCompositeOutputWithContext(context.Background())
}

func (i SloCompositeArgs) ToSloCompositeOutputWithContext(ctx context.Context) SloCompositeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloCompositeOutput)
}

func (i SloCompositeArgs) ToSloCompositePtrOutput() SloCompositePtrOutput {
	return i.ToSloCompositePtrOutputWithContext(context.Background())
}

func (i SloCompositeArgs) ToSloCompositePtrOutputWithContext(ctx context.Context) SloCompositePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloCompositeOutput).ToSloCompositePtrOutputWithContext(ctx)
}

// SloCompositePtrInput is an input type that accepts SloCompositeArgs, SloCompositePtr and SloCompositePtrOutput values.
// You can construct a concrete instance of `SloCompositePtrInput` via:
//
//	        SloCompositeArgs{...}
//
//	or:
//
//	        nil
type SloCompositePtrInput interface {
	pulumi.Input

	ToSloCompositePtrOutput() SloCompositePtrOutput
	ToSloCompositePtrOutputWithContext(context.Context) SloCompositePtrOutput
}

type sloCompositePtrType SloCompositeArgs

func SloCompositePtr(v *SloCompositeArgs) SloCompositePtrInput {
	return (*sloCompositePtrType)(v)
}

func (*sloCompositePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SloComposite)(nil)).Elem()
}

func (i *sloCompositePtrType) ToSloCompositePtrOutput() SloCompositePtrOutput {
	return i.ToSloCompositePtrOutputWithContext(context.Background())
}

func (i *sloCompositePtrType) ToSloCompositePtrOutputWithContext(ctx context.Context) SloCompositePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloCompositePtrOutput)
}

type SloCompositeOutput struct{ *pulumi.OutputState }

func (SloCompositeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloComposite)(nil)).Elem()
}

func (o SloCompositeOutput) ToSloCompositeOutput() SloCompositeOutput {
	return o
}

func (o SloCompositeOutput) ToSloCompositeOutputWithContext(ctx context.Context) SloCompositeOutput {
	return o
}

func (o SloCompositeOutput) ToSloCompositePtrOutput() SloCompositePtrOutput {
	return o.ToSloCompositePtrOutputWithContext(context.Background())
}

func (o SloCompositeOutput) ToSloCompositePtrOutputWithContext(ctx context.Context) SloCompositePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SloComposite) *SloComposite {
		return &v
	}).(SloCompositePtrOutput)
}

// Condition when the Composite SLO’s error budget is burning.
func (o SloCompositeOutput) BurnRateConditions() SloCompositeBurnRateConditionArrayOutput {
	return o.ApplyT(func(v SloComposite) []SloCompositeBurnRateCondition { return v.BurnRateConditions }).(SloCompositeBurnRateConditionArrayOutput)
}

// Designated value
func (o SloCompositeOutput) Target() pulumi.Float64Output {
	return o.ApplyT(func(v SloComposite) float64 { return v.Target }).(pulumi.Float64Output)
}

type SloCompositePtrOutput struct{ *pulumi.OutputState }

func (SloCompositePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SloComposite)(nil)).Elem()
}

func (o SloCompositePtrOutput) ToSloCompositePtrOutput() SloCompositePtrOutput {
	return o
}

func (o SloCompositePtrOutput) ToSloCompositePtrOutputWithContext(ctx context.Context) SloCompositePtrOutput {
	return o
}

func (o SloCompositePtrOutput) Elem() SloCompositeOutput {
	return o.ApplyT(func(v *SloComposite) SloComposite {
		if v != nil {
			return *v
		}
		var ret SloComposite
		return ret
	}).(SloCompositeOutput)
}

// Condition when the Composite SLO’s error budget is burning.
func (o SloCompositePtrOutput) BurnRateConditions() SloCompositeBurnRateConditionArrayOutput {
	return o.ApplyT(func(v *SloComposite) []SloCompositeBurnRateCondition {
		if v == nil {
			return nil
		}
		return v.BurnRateConditions
	}).(SloCompositeBurnRateConditionArrayOutput)
}

// Designated value
func (o SloCompositePtrOutput) Target() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *SloComposite) *float64 {
		if v == nil {
			return nil
		}
		return &v.Target
	}).(pulumi.Float64PtrOutput)
}

type SloCompositeBurnRateCondition struct {
	// Type of logical operation
	Op string `pulumi:"op"`
	// Burn rate value.
	Value float64 `pulumi:"value"`
}

// SloCompositeBurnRateConditionInput is an input type that accepts SloCompositeBurnRateConditionArgs and SloCompositeBurnRateConditionOutput values.
// You can construct a concrete instance of `SloCompositeBurnRateConditionInput` via:
//
//	SloCompositeBurnRateConditionArgs{...}
type SloCompositeBurnRateConditionInput interface {
	pulumi.Input

	ToSloCompositeBurnRateConditionOutput() SloCompositeBurnRateConditionOutput
	ToSloCompositeBurnRateConditionOutputWithContext(context.Context) SloCompositeBurnRateConditionOutput
}

type SloCompositeBurnRateConditionArgs struct {
	// Type of logical operation
	Op pulumi.StringInput `pulumi:"op"`
	// Burn rate value.
	Value pulumi.Float64Input `pulumi:"value"`
}

func (SloCompositeBurnRateConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloCompositeBurnRateCondition)(nil)).Elem()
}

func (i SloCompositeBurnRateConditionArgs) ToSloCompositeBurnRateConditionOutput() SloCompositeBurnRateConditionOutput {
	return i.ToSloCompositeBurnRateConditionOutputWithContext(context.Background())
}

func (i SloCompositeBurnRateConditionArgs) ToSloCompositeBurnRateConditionOutputWithContext(ctx context.Context) SloCompositeBurnRateConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloCompositeBurnRateConditionOutput)
}

// SloCompositeBurnRateConditionArrayInput is an input type that accepts SloCompositeBurnRateConditionArray and SloCompositeBurnRateConditionArrayOutput values.
// You can construct a concrete instance of `SloCompositeBurnRateConditionArrayInput` via:
//
//	SloCompositeBurnRateConditionArray{ SloCompositeBurnRateConditionArgs{...} }
type SloCompositeBurnRateConditionArrayInput interface {
	pulumi.Input

	ToSloCompositeBurnRateConditionArrayOutput() SloCompositeBurnRateConditionArrayOutput
	ToSloCompositeBurnRateConditionArrayOutputWithContext(context.Context) SloCompositeBurnRateConditionArrayOutput
}

type SloCompositeBurnRateConditionArray []SloCompositeBurnRateConditionInput

func (SloCompositeBurnRateConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloCompositeBurnRateCondition)(nil)).Elem()
}

func (i SloCompositeBurnRateConditionArray) ToSloCompositeBurnRateConditionArrayOutput() SloCompositeBurnRateConditionArrayOutput {
	return i.ToSloCompositeBurnRateConditionArrayOutputWithContext(context.Background())
}

func (i SloCompositeBurnRateConditionArray) ToSloCompositeBurnRateConditionArrayOutputWithContext(ctx context.Context) SloCompositeBurnRateConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloCompositeBurnRateConditionArrayOutput)
}

type SloCompositeBurnRateConditionOutput struct{ *pulumi.OutputState }

func (SloCompositeBurnRateConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloCompositeBurnRateCondition)(nil)).Elem()
}

func (o SloCompositeBurnRateConditionOutput) ToSloCompositeBurnRateConditionOutput() SloCompositeBurnRateConditionOutput {
	return o
}

func (o SloCompositeBurnRateConditionOutput) ToSloCompositeBurnRateConditionOutputWithContext(ctx context.Context) SloCompositeBurnRateConditionOutput {
	return o
}

// Type of logical operation
func (o SloCompositeBurnRateConditionOutput) Op() pulumi.StringOutput {
	return o.ApplyT(func(v SloCompositeBurnRateCondition) string { return v.Op }).(pulumi.StringOutput)
}

// Burn rate value.
func (o SloCompositeBurnRateConditionOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v SloCompositeBurnRateCondition) float64 { return v.Value }).(pulumi.Float64Output)
}

type SloCompositeBurnRateConditionArrayOutput struct{ *pulumi.OutputState }

func (SloCompositeBurnRateConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloCompositeBurnRateCondition)(nil)).Elem()
}

func (o SloCompositeBurnRateConditionArrayOutput) ToSloCompositeBurnRateConditionArrayOutput() SloCompositeBurnRateConditionArrayOutput {
	return o
}

func (o SloCompositeBurnRateConditionArrayOutput) ToSloCompositeBurnRateConditionArrayOutputWithContext(ctx context.Context) SloCompositeBurnRateConditionArrayOutput {
	return o
}

func (o SloCompositeBurnRateConditionArrayOutput) Index(i pulumi.IntInput) SloCompositeBurnRateConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloCompositeBurnRateCondition {
		return vs[0].([]SloCompositeBurnRateCondition)[vs[1].(int)]
	}).(SloCompositeBurnRateConditionOutput)
}

type SloIndicator struct {
	// Kind of the metric source. One of {Agent, Direct}.
	Kind *string `pulumi:"kind"`
	// Name of the metric source (agent).
	Name string `pulumi:"name"`
	// Name of the metric source project.
	Project *string `pulumi:"project"`
}

// SloIndicatorInput is an input type that accepts SloIndicatorArgs and SloIndicatorOutput values.
// You can construct a concrete instance of `SloIndicatorInput` via:
//
//	SloIndicatorArgs{...}
type SloIndicatorInput interface {
	pulumi.Input

	ToSloIndicatorOutput() SloIndicatorOutput
	ToSloIndicatorOutputWithContext(context.Context) SloIndicatorOutput
}

type SloIndicatorArgs struct {
	// Kind of the metric source. One of {Agent, Direct}.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Name of the metric source (agent).
	Name pulumi.StringInput `pulumi:"name"`
	// Name of the metric source project.
	Project pulumi.StringPtrInput `pulumi:"project"`
}

func (SloIndicatorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloIndicator)(nil)).Elem()
}

func (i SloIndicatorArgs) ToSloIndicatorOutput() SloIndicatorOutput {
	return i.ToSloIndicatorOutputWithContext(context.Background())
}

func (i SloIndicatorArgs) ToSloIndicatorOutputWithContext(ctx context.Context) SloIndicatorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorOutput)
}

func (i SloIndicatorArgs) ToSloIndicatorPtrOutput() SloIndicatorPtrOutput {
	return i.ToSloIndicatorPtrOutputWithContext(context.Background())
}

func (i SloIndicatorArgs) ToSloIndicatorPtrOutputWithContext(ctx context.Context) SloIndicatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorOutput).ToSloIndicatorPtrOutputWithContext(ctx)
}

// SloIndicatorPtrInput is an input type that accepts SloIndicatorArgs, SloIndicatorPtr and SloIndicatorPtrOutput values.
// You can construct a concrete instance of `SloIndicatorPtrInput` via:
//
//	        SloIndicatorArgs{...}
//
//	or:
//
//	        nil
type SloIndicatorPtrInput interface {
	pulumi.Input

	ToSloIndicatorPtrOutput() SloIndicatorPtrOutput
	ToSloIndicatorPtrOutputWithContext(context.Context) SloIndicatorPtrOutput
}

type sloIndicatorPtrType SloIndicatorArgs

func SloIndicatorPtr(v *SloIndicatorArgs) SloIndicatorPtrInput {
	return (*sloIndicatorPtrType)(v)
}

func (*sloIndicatorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SloIndicator)(nil)).Elem()
}

func (i *sloIndicatorPtrType) ToSloIndicatorPtrOutput() SloIndicatorPtrOutput {
	return i.ToSloIndicatorPtrOutputWithContext(context.Background())
}

func (i *sloIndicatorPtrType) ToSloIndicatorPtrOutputWithContext(ctx context.Context) SloIndicatorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloIndicatorPtrOutput)
}

type SloIndicatorOutput struct{ *pulumi.OutputState }

func (SloIndicatorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloIndicator)(nil)).Elem()
}

func (o SloIndicatorOutput) ToSloIndicatorOutput() SloIndicatorOutput {
	return o
}

func (o SloIndicatorOutput) ToSloIndicatorOutputWithContext(ctx context.Context) SloIndicatorOutput {
	return o
}

func (o SloIndicatorOutput) ToSloIndicatorPtrOutput() SloIndicatorPtrOutput {
	return o.ToSloIndicatorPtrOutputWithContext(context.Background())
}

func (o SloIndicatorOutput) ToSloIndicatorPtrOutputWithContext(ctx context.Context) SloIndicatorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SloIndicator) *SloIndicator {
		return &v
	}).(SloIndicatorPtrOutput)
}

// Kind of the metric source. One of {Agent, Direct}.
func (o SloIndicatorOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloIndicator) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Name of the metric source (agent).
func (o SloIndicatorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SloIndicator) string { return v.Name }).(pulumi.StringOutput)
}

// Name of the metric source project.
func (o SloIndicatorOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloIndicator) *string { return v.Project }).(pulumi.StringPtrOutput)
}

type SloIndicatorPtrOutput struct{ *pulumi.OutputState }

func (SloIndicatorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SloIndicator)(nil)).Elem()
}

func (o SloIndicatorPtrOutput) ToSloIndicatorPtrOutput() SloIndicatorPtrOutput {
	return o
}

func (o SloIndicatorPtrOutput) ToSloIndicatorPtrOutputWithContext(ctx context.Context) SloIndicatorPtrOutput {
	return o
}

func (o SloIndicatorPtrOutput) Elem() SloIndicatorOutput {
	return o.ApplyT(func(v *SloIndicator) SloIndicator {
		if v != nil {
			return *v
		}
		var ret SloIndicator
		return ret
	}).(SloIndicatorOutput)
}

// Kind of the metric source. One of {Agent, Direct}.
func (o SloIndicatorPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SloIndicator) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// Name of the metric source (agent).
func (o SloIndicatorPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SloIndicator) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// Name of the metric source project.
func (o SloIndicatorPtrOutput) Project() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SloIndicator) *string {
		if v == nil {
			return nil
		}
		return v.Project
	}).(pulumi.StringPtrOutput)
}

type SloLabel struct {
	// A key for the label, unique within the associated resource.
	Key string `pulumi:"key"`
	// A list of unique values for a single key.
	Values []string `pulumi:"values"`
}

// SloLabelInput is an input type that accepts SloLabelArgs and SloLabelOutput values.
// You can construct a concrete instance of `SloLabelInput` via:
//
//	SloLabelArgs{...}
type SloLabelInput interface {
	pulumi.Input

	ToSloLabelOutput() SloLabelOutput
	ToSloLabelOutputWithContext(context.Context) SloLabelOutput
}

type SloLabelArgs struct {
	// A key for the label, unique within the associated resource.
	Key pulumi.StringInput `pulumi:"key"`
	// A list of unique values for a single key.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (SloLabelArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloLabel)(nil)).Elem()
}

func (i SloLabelArgs) ToSloLabelOutput() SloLabelOutput {
	return i.ToSloLabelOutputWithContext(context.Background())
}

func (i SloLabelArgs) ToSloLabelOutputWithContext(ctx context.Context) SloLabelOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloLabelOutput)
}

// SloLabelArrayInput is an input type that accepts SloLabelArray and SloLabelArrayOutput values.
// You can construct a concrete instance of `SloLabelArrayInput` via:
//
//	SloLabelArray{ SloLabelArgs{...} }
type SloLabelArrayInput interface {
	pulumi.Input

	ToSloLabelArrayOutput() SloLabelArrayOutput
	ToSloLabelArrayOutputWithContext(context.Context) SloLabelArrayOutput
}

type SloLabelArray []SloLabelInput

func (SloLabelArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloLabel)(nil)).Elem()
}

func (i SloLabelArray) ToSloLabelArrayOutput() SloLabelArrayOutput {
	return i.ToSloLabelArrayOutputWithContext(context.Background())
}

func (i SloLabelArray) ToSloLabelArrayOutputWithContext(ctx context.Context) SloLabelArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloLabelArrayOutput)
}

type SloLabelOutput struct{ *pulumi.OutputState }

func (SloLabelOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloLabel)(nil)).Elem()
}

func (o SloLabelOutput) ToSloLabelOutput() SloLabelOutput {
	return o
}

func (o SloLabelOutput) ToSloLabelOutputWithContext(ctx context.Context) SloLabelOutput {
	return o
}

// A key for the label, unique within the associated resource.
func (o SloLabelOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v SloLabel) string { return v.Key }).(pulumi.StringOutput)
}

// A list of unique values for a single key.
func (o SloLabelOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SloLabel) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type SloLabelArrayOutput struct{ *pulumi.OutputState }

func (SloLabelArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloLabel)(nil)).Elem()
}

func (o SloLabelArrayOutput) ToSloLabelArrayOutput() SloLabelArrayOutput {
	return o
}

func (o SloLabelArrayOutput) ToSloLabelArrayOutputWithContext(ctx context.Context) SloLabelArrayOutput {
	return o
}

func (o SloLabelArrayOutput) Index(i pulumi.IntInput) SloLabelOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloLabel {
		return vs[0].([]SloLabel)[vs[1].(int)]
	}).(SloLabelOutput)
}

type SloObjective struct {
	// Compares two time series, calculating the ratio of either good or bad values to the total number of values. Fill either the 'good' or 'bad' series, but not both.
	CountMetrics []SloObjectiveCountMetric `pulumi:"countMetrics"`
	// Name to be displayed
	DisplayName string `pulumi:"displayName"`
	// Objective's name. This field is computed if not provided.
	Name *string `pulumi:"name"`
	// Type of logical operation
	Op *string `pulumi:"op"`
	// Raw data is used to compare objective values.
	RawMetrics []SloObjectiveRawMetric `pulumi:"rawMetrics"`
	// Designated value
	Target float64 `pulumi:"target"`
	// Designated value for slice
	TimeSliceTarget *float64 `pulumi:"timeSliceTarget"`
	// Value
	Value float64 `pulumi:"value"`
}

// SloObjectiveInput is an input type that accepts SloObjectiveArgs and SloObjectiveOutput values.
// You can construct a concrete instance of `SloObjectiveInput` via:
//
//	SloObjectiveArgs{...}
type SloObjectiveInput interface {
	pulumi.Input

	ToSloObjectiveOutput() SloObjectiveOutput
	ToSloObjectiveOutputWithContext(context.Context) SloObjectiveOutput
}

type SloObjectiveArgs struct {
	// Compares two time series, calculating the ratio of either good or bad values to the total number of values. Fill either the 'good' or 'bad' series, but not both.
	CountMetrics SloObjectiveCountMetricArrayInput `pulumi:"countMetrics"`
	// Name to be displayed
	DisplayName pulumi.StringInput `pulumi:"displayName"`
	// Objective's name. This field is computed if not provided.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Type of logical operation
	Op pulumi.StringPtrInput `pulumi:"op"`
	// Raw data is used to compare objective values.
	RawMetrics SloObjectiveRawMetricArrayInput `pulumi:"rawMetrics"`
	// Designated value
	Target pulumi.Float64Input `pulumi:"target"`
	// Designated value for slice
	TimeSliceTarget pulumi.Float64PtrInput `pulumi:"timeSliceTarget"`
	// Value
	Value pulumi.Float64Input `pulumi:"value"`
}

func (SloObjectiveArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjective)(nil)).Elem()
}

func (i SloObjectiveArgs) ToSloObjectiveOutput() SloObjectiveOutput {
	return i.ToSloObjectiveOutputWithContext(context.Background())
}

func (i SloObjectiveArgs) ToSloObjectiveOutputWithContext(ctx context.Context) SloObjectiveOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveOutput)
}

// SloObjectiveArrayInput is an input type that accepts SloObjectiveArray and SloObjectiveArrayOutput values.
// You can construct a concrete instance of `SloObjectiveArrayInput` via:
//
//	SloObjectiveArray{ SloObjectiveArgs{...} }
type SloObjectiveArrayInput interface {
	pulumi.Input

	ToSloObjectiveArrayOutput() SloObjectiveArrayOutput
	ToSloObjectiveArrayOutputWithContext(context.Context) SloObjectiveArrayOutput
}

type SloObjectiveArray []SloObjectiveInput

func (SloObjectiveArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjective)(nil)).Elem()
}

func (i SloObjectiveArray) ToSloObjectiveArrayOutput() SloObjectiveArrayOutput {
	return i.ToSloObjectiveArrayOutputWithContext(context.Background())
}

func (i SloObjectiveArray) ToSloObjectiveArrayOutputWithContext(ctx context.Context) SloObjectiveArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveArrayOutput)
}

type SloObjectiveOutput struct{ *pulumi.OutputState }

func (SloObjectiveOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjective)(nil)).Elem()
}

func (o SloObjectiveOutput) ToSloObjectiveOutput() SloObjectiveOutput {
	return o
}

func (o SloObjectiveOutput) ToSloObjectiveOutputWithContext(ctx context.Context) SloObjectiveOutput {
	return o
}

// Compares two time series, calculating the ratio of either good or bad values to the total number of values. Fill either the 'good' or 'bad' series, but not both.
func (o SloObjectiveOutput) CountMetrics() SloObjectiveCountMetricArrayOutput {
	return o.ApplyT(func(v SloObjective) []SloObjectiveCountMetric { return v.CountMetrics }).(SloObjectiveCountMetricArrayOutput)
}

// Name to be displayed
func (o SloObjectiveOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjective) string { return v.DisplayName }).(pulumi.StringOutput)
}

// Objective's name. This field is computed if not provided.
func (o SloObjectiveOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjective) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Type of logical operation
func (o SloObjectiveOutput) Op() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjective) *string { return v.Op }).(pulumi.StringPtrOutput)
}

// Raw data is used to compare objective values.
func (o SloObjectiveOutput) RawMetrics() SloObjectiveRawMetricArrayOutput {
	return o.ApplyT(func(v SloObjective) []SloObjectiveRawMetric { return v.RawMetrics }).(SloObjectiveRawMetricArrayOutput)
}

// Designated value
func (o SloObjectiveOutput) Target() pulumi.Float64Output {
	return o.ApplyT(func(v SloObjective) float64 { return v.Target }).(pulumi.Float64Output)
}

// Designated value for slice
func (o SloObjectiveOutput) TimeSliceTarget() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SloObjective) *float64 { return v.TimeSliceTarget }).(pulumi.Float64PtrOutput)
}

// Value
func (o SloObjectiveOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v SloObjective) float64 { return v.Value }).(pulumi.Float64Output)
}

type SloObjectiveArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjective)(nil)).Elem()
}

func (o SloObjectiveArrayOutput) ToSloObjectiveArrayOutput() SloObjectiveArrayOutput {
	return o
}

func (o SloObjectiveArrayOutput) ToSloObjectiveArrayOutputWithContext(ctx context.Context) SloObjectiveArrayOutput {
	return o
}

func (o SloObjectiveArrayOutput) Index(i pulumi.IntInput) SloObjectiveOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjective {
		return vs[0].([]SloObjective)[vs[1].(int)]
	}).(SloObjectiveOutput)
}

type SloObjectiveCountMetric struct {
	// Configuration for bad time series metrics.
	Bads []SloObjectiveCountMetricBad `pulumi:"bads"`
	// Configuration for good time series metrics.
	Goods []SloObjectiveCountMetricGood `pulumi:"goods"`
	// Should the metrics be incrementing or not
	Incremental bool `pulumi:"incremental"`
	// Configuration for metric source
	Totals []SloObjectiveCountMetricTotal `pulumi:"totals"`
}

// SloObjectiveCountMetricInput is an input type that accepts SloObjectiveCountMetricArgs and SloObjectiveCountMetricOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricInput` via:
//
//	SloObjectiveCountMetricArgs{...}
type SloObjectiveCountMetricInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricOutput() SloObjectiveCountMetricOutput
	ToSloObjectiveCountMetricOutputWithContext(context.Context) SloObjectiveCountMetricOutput
}

type SloObjectiveCountMetricArgs struct {
	// Configuration for bad time series metrics.
	Bads SloObjectiveCountMetricBadArrayInput `pulumi:"bads"`
	// Configuration for good time series metrics.
	Goods SloObjectiveCountMetricGoodArrayInput `pulumi:"goods"`
	// Should the metrics be incrementing or not
	Incremental pulumi.BoolInput `pulumi:"incremental"`
	// Configuration for metric source
	Totals SloObjectiveCountMetricTotalArrayInput `pulumi:"totals"`
}

func (SloObjectiveCountMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetric)(nil)).Elem()
}

func (i SloObjectiveCountMetricArgs) ToSloObjectiveCountMetricOutput() SloObjectiveCountMetricOutput {
	return i.ToSloObjectiveCountMetricOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricArgs) ToSloObjectiveCountMetricOutputWithContext(ctx context.Context) SloObjectiveCountMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricOutput)
}

// SloObjectiveCountMetricArrayInput is an input type that accepts SloObjectiveCountMetricArray and SloObjectiveCountMetricArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricArrayInput` via:
//
//	SloObjectiveCountMetricArray{ SloObjectiveCountMetricArgs{...} }
type SloObjectiveCountMetricArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricArrayOutput() SloObjectiveCountMetricArrayOutput
	ToSloObjectiveCountMetricArrayOutputWithContext(context.Context) SloObjectiveCountMetricArrayOutput
}

type SloObjectiveCountMetricArray []SloObjectiveCountMetricInput

func (SloObjectiveCountMetricArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetric)(nil)).Elem()
}

func (i SloObjectiveCountMetricArray) ToSloObjectiveCountMetricArrayOutput() SloObjectiveCountMetricArrayOutput {
	return i.ToSloObjectiveCountMetricArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricArray) ToSloObjectiveCountMetricArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricArrayOutput)
}

type SloObjectiveCountMetricOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetric)(nil)).Elem()
}

func (o SloObjectiveCountMetricOutput) ToSloObjectiveCountMetricOutput() SloObjectiveCountMetricOutput {
	return o
}

func (o SloObjectiveCountMetricOutput) ToSloObjectiveCountMetricOutputWithContext(ctx context.Context) SloObjectiveCountMetricOutput {
	return o
}

// Configuration for bad time series metrics.
func (o SloObjectiveCountMetricOutput) Bads() SloObjectiveCountMetricBadArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetric) []SloObjectiveCountMetricBad { return v.Bads }).(SloObjectiveCountMetricBadArrayOutput)
}

// Configuration for good time series metrics.
func (o SloObjectiveCountMetricOutput) Goods() SloObjectiveCountMetricGoodArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetric) []SloObjectiveCountMetricGood { return v.Goods }).(SloObjectiveCountMetricGoodArrayOutput)
}

// Should the metrics be incrementing or not
func (o SloObjectiveCountMetricOutput) Incremental() pulumi.BoolOutput {
	return o.ApplyT(func(v SloObjectiveCountMetric) bool { return v.Incremental }).(pulumi.BoolOutput)
}

// Configuration for metric source
func (o SloObjectiveCountMetricOutput) Totals() SloObjectiveCountMetricTotalArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetric) []SloObjectiveCountMetricTotal { return v.Totals }).(SloObjectiveCountMetricTotalArrayOutput)
}

type SloObjectiveCountMetricArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetric)(nil)).Elem()
}

func (o SloObjectiveCountMetricArrayOutput) ToSloObjectiveCountMetricArrayOutput() SloObjectiveCountMetricArrayOutput {
	return o
}

func (o SloObjectiveCountMetricArrayOutput) ToSloObjectiveCountMetricArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricArrayOutput {
	return o
}

func (o SloObjectiveCountMetricArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetric {
		return vs[0].([]SloObjectiveCountMetric)[vs[1].(int)]
	}).(SloObjectiveCountMetricOutput)
}

type SloObjectiveCountMetricBad struct {
	// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Prometheus/#creating-slos-with-ams-prometheus)
	AmazonPrometheuses []SloObjectiveCountMetricBadAmazonPrometheus `pulumi:"amazonPrometheuses"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/appdynamics#creating-slos-with-appdynamics)
	Appdynamics []SloObjectiveCountMetricBadAppdynamic `pulumi:"appdynamics"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/azure-monitor#creating-slos-with-azure-monitor)
	AzureMonitors []SloObjectiveCountMetricBadAzureMonitor `pulumi:"azureMonitors"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/bigquery#creating-slos-with-bigquery)
	Bigqueries []SloObjectiveCountMetricBadBigquery `pulumi:"bigqueries"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_CloudWatch/#creating-slos-with-cloudwatch)
	Cloudwatches []SloObjectiveCountMetricBadCloudwatch `pulumi:"cloudwatches"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/datadog#creating-slos-with-datadog)
	Datadogs []SloObjectiveCountMetricBadDatadog `pulumi:"datadogs"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/dynatrace#creating-slos-with-dynatrace)
	Dynatraces []SloObjectiveCountMetricBadDynatrace `pulumi:"dynatraces"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/elasticsearch#creating-slos-with-elasticsearch)
	Elasticsearches []SloObjectiveCountMetricBadElasticsearch `pulumi:"elasticsearches"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/google-cloud-monitoring#creating-slos-with-google-cloud-monitoring)
	Gcms []SloObjectiveCountMetricBadGcm `pulumi:"gcms"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/grafana-loki#creating-slos-with-grafana-loki)
	GrafanaLokis []SloObjectiveCountMetricBadGrafanaLoki `pulumi:"grafanaLokis"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/graphite#creating-slos-with-graphite)
	Graphites []SloObjectiveCountMetricBadGraphite `pulumi:"graphites"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/honeycomb#creating-slos-with-honeycomb)
	Honeycombs []SloObjectiveCountMetricBadHoneycomb `pulumi:"honeycombs"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/influxdb#creating-slos-with-influxdb)
	Influxdbs []SloObjectiveCountMetricBadInfluxdb `pulumi:"influxdbs"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/instana#creating-slos-with-instana)
	Instanas []SloObjectiveCountMetricBadInstana `pulumi:"instanas"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/lightstep#creating-slos-with-lightstep)
	Lightsteps []SloObjectiveCountMetricBadLightstep `pulumi:"lightsteps"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/new-relic#creating-slos-with-new-relic)
	Newrelics []SloObjectiveCountMetricBadNewrelic `pulumi:"newrelics"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/opentsdb#creating-slos-with-opentsdb)
	Opentsdbs []SloObjectiveCountMetricBadOpentsdb `pulumi:"opentsdbs"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/pingdom#creating-slos-with-pingdom)
	Pingdoms []SloObjectiveCountMetricBadPingdom `pulumi:"pingdoms"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/prometheus#creating-slos-with-prometheus)
	Prometheuses []SloObjectiveCountMetricBadPrometheus `pulumi:"prometheuses"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Redshift/#creating-slos-with-amazon-redshift)
	Redshifts []SloObjectiveCountMetricBadRedshift `pulumi:"redshifts"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/splunk#creating-slos-with-splunk-observability)
	SplunkObservabilities []SloObjectiveCountMetricBadSplunkObservability `pulumi:"splunkObservabilities"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/splunk#creating-slos-with-splunk)
	Splunks []SloObjectiveCountMetricBadSplunk `pulumi:"splunks"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/sumo-logic#creating-slos-with-sumo-logic)
	Sumologics []SloObjectiveCountMetricBadSumologic `pulumi:"sumologics"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/thousandeyes#creating-slos-with-thousandeyes)
	Thousandeyes []SloObjectiveCountMetricBadThousandeye `pulumi:"thousandeyes"`
}

// SloObjectiveCountMetricBadInput is an input type that accepts SloObjectiveCountMetricBadArgs and SloObjectiveCountMetricBadOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadInput` via:
//
//	SloObjectiveCountMetricBadArgs{...}
type SloObjectiveCountMetricBadInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadOutput() SloObjectiveCountMetricBadOutput
	ToSloObjectiveCountMetricBadOutputWithContext(context.Context) SloObjectiveCountMetricBadOutput
}

type SloObjectiveCountMetricBadArgs struct {
	// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Prometheus/#creating-slos-with-ams-prometheus)
	AmazonPrometheuses SloObjectiveCountMetricBadAmazonPrometheusArrayInput `pulumi:"amazonPrometheuses"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/appdynamics#creating-slos-with-appdynamics)
	Appdynamics SloObjectiveCountMetricBadAppdynamicArrayInput `pulumi:"appdynamics"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/azure-monitor#creating-slos-with-azure-monitor)
	AzureMonitors SloObjectiveCountMetricBadAzureMonitorArrayInput `pulumi:"azureMonitors"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/bigquery#creating-slos-with-bigquery)
	Bigqueries SloObjectiveCountMetricBadBigqueryArrayInput `pulumi:"bigqueries"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_CloudWatch/#creating-slos-with-cloudwatch)
	Cloudwatches SloObjectiveCountMetricBadCloudwatchArrayInput `pulumi:"cloudwatches"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/datadog#creating-slos-with-datadog)
	Datadogs SloObjectiveCountMetricBadDatadogArrayInput `pulumi:"datadogs"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/dynatrace#creating-slos-with-dynatrace)
	Dynatraces SloObjectiveCountMetricBadDynatraceArrayInput `pulumi:"dynatraces"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/elasticsearch#creating-slos-with-elasticsearch)
	Elasticsearches SloObjectiveCountMetricBadElasticsearchArrayInput `pulumi:"elasticsearches"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/google-cloud-monitoring#creating-slos-with-google-cloud-monitoring)
	Gcms SloObjectiveCountMetricBadGcmArrayInput `pulumi:"gcms"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/grafana-loki#creating-slos-with-grafana-loki)
	GrafanaLokis SloObjectiveCountMetricBadGrafanaLokiArrayInput `pulumi:"grafanaLokis"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/graphite#creating-slos-with-graphite)
	Graphites SloObjectiveCountMetricBadGraphiteArrayInput `pulumi:"graphites"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/honeycomb#creating-slos-with-honeycomb)
	Honeycombs SloObjectiveCountMetricBadHoneycombArrayInput `pulumi:"honeycombs"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/influxdb#creating-slos-with-influxdb)
	Influxdbs SloObjectiveCountMetricBadInfluxdbArrayInput `pulumi:"influxdbs"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/instana#creating-slos-with-instana)
	Instanas SloObjectiveCountMetricBadInstanaArrayInput `pulumi:"instanas"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/lightstep#creating-slos-with-lightstep)
	Lightsteps SloObjectiveCountMetricBadLightstepArrayInput `pulumi:"lightsteps"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/new-relic#creating-slos-with-new-relic)
	Newrelics SloObjectiveCountMetricBadNewrelicArrayInput `pulumi:"newrelics"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/opentsdb#creating-slos-with-opentsdb)
	Opentsdbs SloObjectiveCountMetricBadOpentsdbArrayInput `pulumi:"opentsdbs"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/pingdom#creating-slos-with-pingdom)
	Pingdoms SloObjectiveCountMetricBadPingdomArrayInput `pulumi:"pingdoms"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/prometheus#creating-slos-with-prometheus)
	Prometheuses SloObjectiveCountMetricBadPrometheusArrayInput `pulumi:"prometheuses"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Redshift/#creating-slos-with-amazon-redshift)
	Redshifts SloObjectiveCountMetricBadRedshiftArrayInput `pulumi:"redshifts"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/splunk#creating-slos-with-splunk-observability)
	SplunkObservabilities SloObjectiveCountMetricBadSplunkObservabilityArrayInput `pulumi:"splunkObservabilities"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/splunk#creating-slos-with-splunk)
	Splunks SloObjectiveCountMetricBadSplunkArrayInput `pulumi:"splunks"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/sumo-logic#creating-slos-with-sumo-logic)
	Sumologics SloObjectiveCountMetricBadSumologicArrayInput `pulumi:"sumologics"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/thousandeyes#creating-slos-with-thousandeyes)
	Thousandeyes SloObjectiveCountMetricBadThousandeyeArrayInput `pulumi:"thousandeyes"`
}

func (SloObjectiveCountMetricBadArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBad)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadArgs) ToSloObjectiveCountMetricBadOutput() SloObjectiveCountMetricBadOutput {
	return i.ToSloObjectiveCountMetricBadOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadArgs) ToSloObjectiveCountMetricBadOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadOutput)
}

// SloObjectiveCountMetricBadArrayInput is an input type that accepts SloObjectiveCountMetricBadArray and SloObjectiveCountMetricBadArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadArrayInput` via:
//
//	SloObjectiveCountMetricBadArray{ SloObjectiveCountMetricBadArgs{...} }
type SloObjectiveCountMetricBadArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadArrayOutput() SloObjectiveCountMetricBadArrayOutput
	ToSloObjectiveCountMetricBadArrayOutputWithContext(context.Context) SloObjectiveCountMetricBadArrayOutput
}

type SloObjectiveCountMetricBadArray []SloObjectiveCountMetricBadInput

func (SloObjectiveCountMetricBadArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBad)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadArray) ToSloObjectiveCountMetricBadArrayOutput() SloObjectiveCountMetricBadArrayOutput {
	return i.ToSloObjectiveCountMetricBadArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadArray) ToSloObjectiveCountMetricBadArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadArrayOutput)
}

type SloObjectiveCountMetricBadOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBad)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadOutput) ToSloObjectiveCountMetricBadOutput() SloObjectiveCountMetricBadOutput {
	return o
}

func (o SloObjectiveCountMetricBadOutput) ToSloObjectiveCountMetricBadOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadOutput {
	return o
}

// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Prometheus/#creating-slos-with-ams-prometheus)
func (o SloObjectiveCountMetricBadOutput) AmazonPrometheuses() SloObjectiveCountMetricBadAmazonPrometheusArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBad) []SloObjectiveCountMetricBadAmazonPrometheus {
		return v.AmazonPrometheuses
	}).(SloObjectiveCountMetricBadAmazonPrometheusArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/appdynamics#creating-slos-with-appdynamics)
func (o SloObjectiveCountMetricBadOutput) Appdynamics() SloObjectiveCountMetricBadAppdynamicArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBad) []SloObjectiveCountMetricBadAppdynamic { return v.Appdynamics }).(SloObjectiveCountMetricBadAppdynamicArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/azure-monitor#creating-slos-with-azure-monitor)
func (o SloObjectiveCountMetricBadOutput) AzureMonitors() SloObjectiveCountMetricBadAzureMonitorArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBad) []SloObjectiveCountMetricBadAzureMonitor { return v.AzureMonitors }).(SloObjectiveCountMetricBadAzureMonitorArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/bigquery#creating-slos-with-bigquery)
func (o SloObjectiveCountMetricBadOutput) Bigqueries() SloObjectiveCountMetricBadBigqueryArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBad) []SloObjectiveCountMetricBadBigquery { return v.Bigqueries }).(SloObjectiveCountMetricBadBigqueryArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_CloudWatch/#creating-slos-with-cloudwatch)
func (o SloObjectiveCountMetricBadOutput) Cloudwatches() SloObjectiveCountMetricBadCloudwatchArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBad) []SloObjectiveCountMetricBadCloudwatch { return v.Cloudwatches }).(SloObjectiveCountMetricBadCloudwatchArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/datadog#creating-slos-with-datadog)
func (o SloObjectiveCountMetricBadOutput) Datadogs() SloObjectiveCountMetricBadDatadogArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBad) []SloObjectiveCountMetricBadDatadog { return v.Datadogs }).(SloObjectiveCountMetricBadDatadogArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/dynatrace#creating-slos-with-dynatrace)
func (o SloObjectiveCountMetricBadOutput) Dynatraces() SloObjectiveCountMetricBadDynatraceArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBad) []SloObjectiveCountMetricBadDynatrace { return v.Dynatraces }).(SloObjectiveCountMetricBadDynatraceArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/elasticsearch#creating-slos-with-elasticsearch)
func (o SloObjectiveCountMetricBadOutput) Elasticsearches() SloObjectiveCountMetricBadElasticsearchArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBad) []SloObjectiveCountMetricBadElasticsearch { return v.Elasticsearches }).(SloObjectiveCountMetricBadElasticsearchArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/google-cloud-monitoring#creating-slos-with-google-cloud-monitoring)
func (o SloObjectiveCountMetricBadOutput) Gcms() SloObjectiveCountMetricBadGcmArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBad) []SloObjectiveCountMetricBadGcm { return v.Gcms }).(SloObjectiveCountMetricBadGcmArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/grafana-loki#creating-slos-with-grafana-loki)
func (o SloObjectiveCountMetricBadOutput) GrafanaLokis() SloObjectiveCountMetricBadGrafanaLokiArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBad) []SloObjectiveCountMetricBadGrafanaLoki { return v.GrafanaLokis }).(SloObjectiveCountMetricBadGrafanaLokiArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/graphite#creating-slos-with-graphite)
func (o SloObjectiveCountMetricBadOutput) Graphites() SloObjectiveCountMetricBadGraphiteArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBad) []SloObjectiveCountMetricBadGraphite { return v.Graphites }).(SloObjectiveCountMetricBadGraphiteArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/honeycomb#creating-slos-with-honeycomb)
func (o SloObjectiveCountMetricBadOutput) Honeycombs() SloObjectiveCountMetricBadHoneycombArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBad) []SloObjectiveCountMetricBadHoneycomb { return v.Honeycombs }).(SloObjectiveCountMetricBadHoneycombArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/influxdb#creating-slos-with-influxdb)
func (o SloObjectiveCountMetricBadOutput) Influxdbs() SloObjectiveCountMetricBadInfluxdbArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBad) []SloObjectiveCountMetricBadInfluxdb { return v.Influxdbs }).(SloObjectiveCountMetricBadInfluxdbArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/instana#creating-slos-with-instana)
func (o SloObjectiveCountMetricBadOutput) Instanas() SloObjectiveCountMetricBadInstanaArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBad) []SloObjectiveCountMetricBadInstana { return v.Instanas }).(SloObjectiveCountMetricBadInstanaArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/lightstep#creating-slos-with-lightstep)
func (o SloObjectiveCountMetricBadOutput) Lightsteps() SloObjectiveCountMetricBadLightstepArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBad) []SloObjectiveCountMetricBadLightstep { return v.Lightsteps }).(SloObjectiveCountMetricBadLightstepArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/new-relic#creating-slos-with-new-relic)
func (o SloObjectiveCountMetricBadOutput) Newrelics() SloObjectiveCountMetricBadNewrelicArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBad) []SloObjectiveCountMetricBadNewrelic { return v.Newrelics }).(SloObjectiveCountMetricBadNewrelicArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/opentsdb#creating-slos-with-opentsdb)
func (o SloObjectiveCountMetricBadOutput) Opentsdbs() SloObjectiveCountMetricBadOpentsdbArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBad) []SloObjectiveCountMetricBadOpentsdb { return v.Opentsdbs }).(SloObjectiveCountMetricBadOpentsdbArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/pingdom#creating-slos-with-pingdom)
func (o SloObjectiveCountMetricBadOutput) Pingdoms() SloObjectiveCountMetricBadPingdomArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBad) []SloObjectiveCountMetricBadPingdom { return v.Pingdoms }).(SloObjectiveCountMetricBadPingdomArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/prometheus#creating-slos-with-prometheus)
func (o SloObjectiveCountMetricBadOutput) Prometheuses() SloObjectiveCountMetricBadPrometheusArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBad) []SloObjectiveCountMetricBadPrometheus { return v.Prometheuses }).(SloObjectiveCountMetricBadPrometheusArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Redshift/#creating-slos-with-amazon-redshift)
func (o SloObjectiveCountMetricBadOutput) Redshifts() SloObjectiveCountMetricBadRedshiftArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBad) []SloObjectiveCountMetricBadRedshift { return v.Redshifts }).(SloObjectiveCountMetricBadRedshiftArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/splunk#creating-slos-with-splunk-observability)
func (o SloObjectiveCountMetricBadOutput) SplunkObservabilities() SloObjectiveCountMetricBadSplunkObservabilityArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBad) []SloObjectiveCountMetricBadSplunkObservability {
		return v.SplunkObservabilities
	}).(SloObjectiveCountMetricBadSplunkObservabilityArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/splunk#creating-slos-with-splunk)
func (o SloObjectiveCountMetricBadOutput) Splunks() SloObjectiveCountMetricBadSplunkArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBad) []SloObjectiveCountMetricBadSplunk { return v.Splunks }).(SloObjectiveCountMetricBadSplunkArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/sumo-logic#creating-slos-with-sumo-logic)
func (o SloObjectiveCountMetricBadOutput) Sumologics() SloObjectiveCountMetricBadSumologicArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBad) []SloObjectiveCountMetricBadSumologic { return v.Sumologics }).(SloObjectiveCountMetricBadSumologicArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/thousandeyes#creating-slos-with-thousandeyes)
func (o SloObjectiveCountMetricBadOutput) Thousandeyes() SloObjectiveCountMetricBadThousandeyeArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBad) []SloObjectiveCountMetricBadThousandeye { return v.Thousandeyes }).(SloObjectiveCountMetricBadThousandeyeArrayOutput)
}

type SloObjectiveCountMetricBadArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBad)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadArrayOutput) ToSloObjectiveCountMetricBadArrayOutput() SloObjectiveCountMetricBadArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadArrayOutput) ToSloObjectiveCountMetricBadArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricBadOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricBad {
		return vs[0].([]SloObjectiveCountMetricBad)[vs[1].(int)]
	}).(SloObjectiveCountMetricBadOutput)
}

type SloObjectiveCountMetricBadAmazonPrometheus struct {
	// Query for the metrics
	Promql string `pulumi:"promql"`
}

// SloObjectiveCountMetricBadAmazonPrometheusInput is an input type that accepts SloObjectiveCountMetricBadAmazonPrometheusArgs and SloObjectiveCountMetricBadAmazonPrometheusOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadAmazonPrometheusInput` via:
//
//	SloObjectiveCountMetricBadAmazonPrometheusArgs{...}
type SloObjectiveCountMetricBadAmazonPrometheusInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadAmazonPrometheusOutput() SloObjectiveCountMetricBadAmazonPrometheusOutput
	ToSloObjectiveCountMetricBadAmazonPrometheusOutputWithContext(context.Context) SloObjectiveCountMetricBadAmazonPrometheusOutput
}

type SloObjectiveCountMetricBadAmazonPrometheusArgs struct {
	// Query for the metrics
	Promql pulumi.StringInput `pulumi:"promql"`
}

func (SloObjectiveCountMetricBadAmazonPrometheusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadAmazonPrometheus)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadAmazonPrometheusArgs) ToSloObjectiveCountMetricBadAmazonPrometheusOutput() SloObjectiveCountMetricBadAmazonPrometheusOutput {
	return i.ToSloObjectiveCountMetricBadAmazonPrometheusOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadAmazonPrometheusArgs) ToSloObjectiveCountMetricBadAmazonPrometheusOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadAmazonPrometheusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadAmazonPrometheusOutput)
}

// SloObjectiveCountMetricBadAmazonPrometheusArrayInput is an input type that accepts SloObjectiveCountMetricBadAmazonPrometheusArray and SloObjectiveCountMetricBadAmazonPrometheusArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadAmazonPrometheusArrayInput` via:
//
//	SloObjectiveCountMetricBadAmazonPrometheusArray{ SloObjectiveCountMetricBadAmazonPrometheusArgs{...} }
type SloObjectiveCountMetricBadAmazonPrometheusArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadAmazonPrometheusArrayOutput() SloObjectiveCountMetricBadAmazonPrometheusArrayOutput
	ToSloObjectiveCountMetricBadAmazonPrometheusArrayOutputWithContext(context.Context) SloObjectiveCountMetricBadAmazonPrometheusArrayOutput
}

type SloObjectiveCountMetricBadAmazonPrometheusArray []SloObjectiveCountMetricBadAmazonPrometheusInput

func (SloObjectiveCountMetricBadAmazonPrometheusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadAmazonPrometheus)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadAmazonPrometheusArray) ToSloObjectiveCountMetricBadAmazonPrometheusArrayOutput() SloObjectiveCountMetricBadAmazonPrometheusArrayOutput {
	return i.ToSloObjectiveCountMetricBadAmazonPrometheusArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadAmazonPrometheusArray) ToSloObjectiveCountMetricBadAmazonPrometheusArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadAmazonPrometheusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadAmazonPrometheusArrayOutput)
}

type SloObjectiveCountMetricBadAmazonPrometheusOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadAmazonPrometheusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadAmazonPrometheus)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadAmazonPrometheusOutput) ToSloObjectiveCountMetricBadAmazonPrometheusOutput() SloObjectiveCountMetricBadAmazonPrometheusOutput {
	return o
}

func (o SloObjectiveCountMetricBadAmazonPrometheusOutput) ToSloObjectiveCountMetricBadAmazonPrometheusOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadAmazonPrometheusOutput {
	return o
}

// Query for the metrics
func (o SloObjectiveCountMetricBadAmazonPrometheusOutput) Promql() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadAmazonPrometheus) string { return v.Promql }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricBadAmazonPrometheusArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadAmazonPrometheusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadAmazonPrometheus)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadAmazonPrometheusArrayOutput) ToSloObjectiveCountMetricBadAmazonPrometheusArrayOutput() SloObjectiveCountMetricBadAmazonPrometheusArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadAmazonPrometheusArrayOutput) ToSloObjectiveCountMetricBadAmazonPrometheusArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadAmazonPrometheusArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadAmazonPrometheusArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricBadAmazonPrometheusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricBadAmazonPrometheus {
		return vs[0].([]SloObjectiveCountMetricBadAmazonPrometheus)[vs[1].(int)]
	}).(SloObjectiveCountMetricBadAmazonPrometheusOutput)
}

type SloObjectiveCountMetricBadAppdynamic struct {
	// Name of the added application
	ApplicationName string `pulumi:"applicationName"`
	// Path to the metrics
	MetricPath string `pulumi:"metricPath"`
}

// SloObjectiveCountMetricBadAppdynamicInput is an input type that accepts SloObjectiveCountMetricBadAppdynamicArgs and SloObjectiveCountMetricBadAppdynamicOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadAppdynamicInput` via:
//
//	SloObjectiveCountMetricBadAppdynamicArgs{...}
type SloObjectiveCountMetricBadAppdynamicInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadAppdynamicOutput() SloObjectiveCountMetricBadAppdynamicOutput
	ToSloObjectiveCountMetricBadAppdynamicOutputWithContext(context.Context) SloObjectiveCountMetricBadAppdynamicOutput
}

type SloObjectiveCountMetricBadAppdynamicArgs struct {
	// Name of the added application
	ApplicationName pulumi.StringInput `pulumi:"applicationName"`
	// Path to the metrics
	MetricPath pulumi.StringInput `pulumi:"metricPath"`
}

func (SloObjectiveCountMetricBadAppdynamicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadAppdynamic)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadAppdynamicArgs) ToSloObjectiveCountMetricBadAppdynamicOutput() SloObjectiveCountMetricBadAppdynamicOutput {
	return i.ToSloObjectiveCountMetricBadAppdynamicOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadAppdynamicArgs) ToSloObjectiveCountMetricBadAppdynamicOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadAppdynamicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadAppdynamicOutput)
}

// SloObjectiveCountMetricBadAppdynamicArrayInput is an input type that accepts SloObjectiveCountMetricBadAppdynamicArray and SloObjectiveCountMetricBadAppdynamicArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadAppdynamicArrayInput` via:
//
//	SloObjectiveCountMetricBadAppdynamicArray{ SloObjectiveCountMetricBadAppdynamicArgs{...} }
type SloObjectiveCountMetricBadAppdynamicArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadAppdynamicArrayOutput() SloObjectiveCountMetricBadAppdynamicArrayOutput
	ToSloObjectiveCountMetricBadAppdynamicArrayOutputWithContext(context.Context) SloObjectiveCountMetricBadAppdynamicArrayOutput
}

type SloObjectiveCountMetricBadAppdynamicArray []SloObjectiveCountMetricBadAppdynamicInput

func (SloObjectiveCountMetricBadAppdynamicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadAppdynamic)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadAppdynamicArray) ToSloObjectiveCountMetricBadAppdynamicArrayOutput() SloObjectiveCountMetricBadAppdynamicArrayOutput {
	return i.ToSloObjectiveCountMetricBadAppdynamicArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadAppdynamicArray) ToSloObjectiveCountMetricBadAppdynamicArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadAppdynamicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadAppdynamicArrayOutput)
}

type SloObjectiveCountMetricBadAppdynamicOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadAppdynamicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadAppdynamic)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadAppdynamicOutput) ToSloObjectiveCountMetricBadAppdynamicOutput() SloObjectiveCountMetricBadAppdynamicOutput {
	return o
}

func (o SloObjectiveCountMetricBadAppdynamicOutput) ToSloObjectiveCountMetricBadAppdynamicOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadAppdynamicOutput {
	return o
}

// Name of the added application
func (o SloObjectiveCountMetricBadAppdynamicOutput) ApplicationName() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadAppdynamic) string { return v.ApplicationName }).(pulumi.StringOutput)
}

// Path to the metrics
func (o SloObjectiveCountMetricBadAppdynamicOutput) MetricPath() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadAppdynamic) string { return v.MetricPath }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricBadAppdynamicArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadAppdynamicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadAppdynamic)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadAppdynamicArrayOutput) ToSloObjectiveCountMetricBadAppdynamicArrayOutput() SloObjectiveCountMetricBadAppdynamicArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadAppdynamicArrayOutput) ToSloObjectiveCountMetricBadAppdynamicArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadAppdynamicArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadAppdynamicArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricBadAppdynamicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricBadAppdynamic {
		return vs[0].([]SloObjectiveCountMetricBadAppdynamic)[vs[1].(int)]
	}).(SloObjectiveCountMetricBadAppdynamicOutput)
}

type SloObjectiveCountMetricBadAzureMonitor struct {
	// Aggregation type [Required for metrics]
	Aggregation *string `pulumi:"aggregation"`
	// Specifies source: 'metrics' or 'logs'
	DataType string `pulumi:"dataType"`
	// Dimensions of the metric [Optional for metrics]
	Dimensions []SloObjectiveCountMetricBadAzureMonitorDimension `pulumi:"dimensions"`
	// Logs query in Kusto Query Language [Required for logs]
	KqlQuery *string `pulumi:"kqlQuery"`
	// Name of the metric [Required for metrics]
	MetricName *string `pulumi:"metricName"`
	// Namespace of the metric [Optional for metrics]
	MetricNamespace *string `pulumi:"metricNamespace"`
	// Identifier of the Azure Cloud resource [Required for metrics]
	ResourceId *string `pulumi:"resourceId"`
	// Log analytics workspace [Required for logs]
	Workspaces []SloObjectiveCountMetricBadAzureMonitorWorkspace `pulumi:"workspaces"`
}

// SloObjectiveCountMetricBadAzureMonitorInput is an input type that accepts SloObjectiveCountMetricBadAzureMonitorArgs and SloObjectiveCountMetricBadAzureMonitorOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadAzureMonitorInput` via:
//
//	SloObjectiveCountMetricBadAzureMonitorArgs{...}
type SloObjectiveCountMetricBadAzureMonitorInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadAzureMonitorOutput() SloObjectiveCountMetricBadAzureMonitorOutput
	ToSloObjectiveCountMetricBadAzureMonitorOutputWithContext(context.Context) SloObjectiveCountMetricBadAzureMonitorOutput
}

type SloObjectiveCountMetricBadAzureMonitorArgs struct {
	// Aggregation type [Required for metrics]
	Aggregation pulumi.StringPtrInput `pulumi:"aggregation"`
	// Specifies source: 'metrics' or 'logs'
	DataType pulumi.StringInput `pulumi:"dataType"`
	// Dimensions of the metric [Optional for metrics]
	Dimensions SloObjectiveCountMetricBadAzureMonitorDimensionArrayInput `pulumi:"dimensions"`
	// Logs query in Kusto Query Language [Required for logs]
	KqlQuery pulumi.StringPtrInput `pulumi:"kqlQuery"`
	// Name of the metric [Required for metrics]
	MetricName pulumi.StringPtrInput `pulumi:"metricName"`
	// Namespace of the metric [Optional for metrics]
	MetricNamespace pulumi.StringPtrInput `pulumi:"metricNamespace"`
	// Identifier of the Azure Cloud resource [Required for metrics]
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
	// Log analytics workspace [Required for logs]
	Workspaces SloObjectiveCountMetricBadAzureMonitorWorkspaceArrayInput `pulumi:"workspaces"`
}

func (SloObjectiveCountMetricBadAzureMonitorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadAzureMonitor)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadAzureMonitorArgs) ToSloObjectiveCountMetricBadAzureMonitorOutput() SloObjectiveCountMetricBadAzureMonitorOutput {
	return i.ToSloObjectiveCountMetricBadAzureMonitorOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadAzureMonitorArgs) ToSloObjectiveCountMetricBadAzureMonitorOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadAzureMonitorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadAzureMonitorOutput)
}

// SloObjectiveCountMetricBadAzureMonitorArrayInput is an input type that accepts SloObjectiveCountMetricBadAzureMonitorArray and SloObjectiveCountMetricBadAzureMonitorArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadAzureMonitorArrayInput` via:
//
//	SloObjectiveCountMetricBadAzureMonitorArray{ SloObjectiveCountMetricBadAzureMonitorArgs{...} }
type SloObjectiveCountMetricBadAzureMonitorArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadAzureMonitorArrayOutput() SloObjectiveCountMetricBadAzureMonitorArrayOutput
	ToSloObjectiveCountMetricBadAzureMonitorArrayOutputWithContext(context.Context) SloObjectiveCountMetricBadAzureMonitorArrayOutput
}

type SloObjectiveCountMetricBadAzureMonitorArray []SloObjectiveCountMetricBadAzureMonitorInput

func (SloObjectiveCountMetricBadAzureMonitorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadAzureMonitor)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadAzureMonitorArray) ToSloObjectiveCountMetricBadAzureMonitorArrayOutput() SloObjectiveCountMetricBadAzureMonitorArrayOutput {
	return i.ToSloObjectiveCountMetricBadAzureMonitorArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadAzureMonitorArray) ToSloObjectiveCountMetricBadAzureMonitorArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadAzureMonitorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadAzureMonitorArrayOutput)
}

type SloObjectiveCountMetricBadAzureMonitorOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadAzureMonitorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadAzureMonitor)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadAzureMonitorOutput) ToSloObjectiveCountMetricBadAzureMonitorOutput() SloObjectiveCountMetricBadAzureMonitorOutput {
	return o
}

func (o SloObjectiveCountMetricBadAzureMonitorOutput) ToSloObjectiveCountMetricBadAzureMonitorOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadAzureMonitorOutput {
	return o
}

// Aggregation type [Required for metrics]
func (o SloObjectiveCountMetricBadAzureMonitorOutput) Aggregation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadAzureMonitor) *string { return v.Aggregation }).(pulumi.StringPtrOutput)
}

// Specifies source: 'metrics' or 'logs'
func (o SloObjectiveCountMetricBadAzureMonitorOutput) DataType() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadAzureMonitor) string { return v.DataType }).(pulumi.StringOutput)
}

// Dimensions of the metric [Optional for metrics]
func (o SloObjectiveCountMetricBadAzureMonitorOutput) Dimensions() SloObjectiveCountMetricBadAzureMonitorDimensionArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadAzureMonitor) []SloObjectiveCountMetricBadAzureMonitorDimension {
		return v.Dimensions
	}).(SloObjectiveCountMetricBadAzureMonitorDimensionArrayOutput)
}

// Logs query in Kusto Query Language [Required for logs]
func (o SloObjectiveCountMetricBadAzureMonitorOutput) KqlQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadAzureMonitor) *string { return v.KqlQuery }).(pulumi.StringPtrOutput)
}

// Name of the metric [Required for metrics]
func (o SloObjectiveCountMetricBadAzureMonitorOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadAzureMonitor) *string { return v.MetricName }).(pulumi.StringPtrOutput)
}

// Namespace of the metric [Optional for metrics]
func (o SloObjectiveCountMetricBadAzureMonitorOutput) MetricNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadAzureMonitor) *string { return v.MetricNamespace }).(pulumi.StringPtrOutput)
}

// Identifier of the Azure Cloud resource [Required for metrics]
func (o SloObjectiveCountMetricBadAzureMonitorOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadAzureMonitor) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// Log analytics workspace [Required for logs]
func (o SloObjectiveCountMetricBadAzureMonitorOutput) Workspaces() SloObjectiveCountMetricBadAzureMonitorWorkspaceArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadAzureMonitor) []SloObjectiveCountMetricBadAzureMonitorWorkspace {
		return v.Workspaces
	}).(SloObjectiveCountMetricBadAzureMonitorWorkspaceArrayOutput)
}

type SloObjectiveCountMetricBadAzureMonitorArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadAzureMonitorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadAzureMonitor)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadAzureMonitorArrayOutput) ToSloObjectiveCountMetricBadAzureMonitorArrayOutput() SloObjectiveCountMetricBadAzureMonitorArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadAzureMonitorArrayOutput) ToSloObjectiveCountMetricBadAzureMonitorArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadAzureMonitorArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadAzureMonitorArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricBadAzureMonitorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricBadAzureMonitor {
		return vs[0].([]SloObjectiveCountMetricBadAzureMonitor)[vs[1].(int)]
	}).(SloObjectiveCountMetricBadAzureMonitorOutput)
}

type SloObjectiveCountMetricBadAzureMonitorDimension struct {
	// The name of the previously defined alert method.
	Name string `pulumi:"name"`
	// Burn rate value.
	Value string `pulumi:"value"`
}

// SloObjectiveCountMetricBadAzureMonitorDimensionInput is an input type that accepts SloObjectiveCountMetricBadAzureMonitorDimensionArgs and SloObjectiveCountMetricBadAzureMonitorDimensionOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadAzureMonitorDimensionInput` via:
//
//	SloObjectiveCountMetricBadAzureMonitorDimensionArgs{...}
type SloObjectiveCountMetricBadAzureMonitorDimensionInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadAzureMonitorDimensionOutput() SloObjectiveCountMetricBadAzureMonitorDimensionOutput
	ToSloObjectiveCountMetricBadAzureMonitorDimensionOutputWithContext(context.Context) SloObjectiveCountMetricBadAzureMonitorDimensionOutput
}

type SloObjectiveCountMetricBadAzureMonitorDimensionArgs struct {
	// The name of the previously defined alert method.
	Name pulumi.StringInput `pulumi:"name"`
	// Burn rate value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (SloObjectiveCountMetricBadAzureMonitorDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadAzureMonitorDimension)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadAzureMonitorDimensionArgs) ToSloObjectiveCountMetricBadAzureMonitorDimensionOutput() SloObjectiveCountMetricBadAzureMonitorDimensionOutput {
	return i.ToSloObjectiveCountMetricBadAzureMonitorDimensionOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadAzureMonitorDimensionArgs) ToSloObjectiveCountMetricBadAzureMonitorDimensionOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadAzureMonitorDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadAzureMonitorDimensionOutput)
}

// SloObjectiveCountMetricBadAzureMonitorDimensionArrayInput is an input type that accepts SloObjectiveCountMetricBadAzureMonitorDimensionArray and SloObjectiveCountMetricBadAzureMonitorDimensionArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadAzureMonitorDimensionArrayInput` via:
//
//	SloObjectiveCountMetricBadAzureMonitorDimensionArray{ SloObjectiveCountMetricBadAzureMonitorDimensionArgs{...} }
type SloObjectiveCountMetricBadAzureMonitorDimensionArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadAzureMonitorDimensionArrayOutput() SloObjectiveCountMetricBadAzureMonitorDimensionArrayOutput
	ToSloObjectiveCountMetricBadAzureMonitorDimensionArrayOutputWithContext(context.Context) SloObjectiveCountMetricBadAzureMonitorDimensionArrayOutput
}

type SloObjectiveCountMetricBadAzureMonitorDimensionArray []SloObjectiveCountMetricBadAzureMonitorDimensionInput

func (SloObjectiveCountMetricBadAzureMonitorDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadAzureMonitorDimension)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadAzureMonitorDimensionArray) ToSloObjectiveCountMetricBadAzureMonitorDimensionArrayOutput() SloObjectiveCountMetricBadAzureMonitorDimensionArrayOutput {
	return i.ToSloObjectiveCountMetricBadAzureMonitorDimensionArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadAzureMonitorDimensionArray) ToSloObjectiveCountMetricBadAzureMonitorDimensionArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadAzureMonitorDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadAzureMonitorDimensionArrayOutput)
}

type SloObjectiveCountMetricBadAzureMonitorDimensionOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadAzureMonitorDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadAzureMonitorDimension)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadAzureMonitorDimensionOutput) ToSloObjectiveCountMetricBadAzureMonitorDimensionOutput() SloObjectiveCountMetricBadAzureMonitorDimensionOutput {
	return o
}

func (o SloObjectiveCountMetricBadAzureMonitorDimensionOutput) ToSloObjectiveCountMetricBadAzureMonitorDimensionOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadAzureMonitorDimensionOutput {
	return o
}

// The name of the previously defined alert method.
func (o SloObjectiveCountMetricBadAzureMonitorDimensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadAzureMonitorDimension) string { return v.Name }).(pulumi.StringOutput)
}

// Burn rate value.
func (o SloObjectiveCountMetricBadAzureMonitorDimensionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadAzureMonitorDimension) string { return v.Value }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricBadAzureMonitorDimensionArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadAzureMonitorDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadAzureMonitorDimension)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadAzureMonitorDimensionArrayOutput) ToSloObjectiveCountMetricBadAzureMonitorDimensionArrayOutput() SloObjectiveCountMetricBadAzureMonitorDimensionArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadAzureMonitorDimensionArrayOutput) ToSloObjectiveCountMetricBadAzureMonitorDimensionArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadAzureMonitorDimensionArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadAzureMonitorDimensionArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricBadAzureMonitorDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricBadAzureMonitorDimension {
		return vs[0].([]SloObjectiveCountMetricBadAzureMonitorDimension)[vs[1].(int)]
	}).(SloObjectiveCountMetricBadAzureMonitorDimensionOutput)
}

type SloObjectiveCountMetricBadAzureMonitorWorkspace struct {
	// Resource group of the workspace
	ResourceGroup string `pulumi:"resourceGroup"`
	// Subscription ID of the workspace
	SubscriptionId string `pulumi:"subscriptionId"`
	// ID of the workspace
	WorkspaceId string `pulumi:"workspaceId"`
}

// SloObjectiveCountMetricBadAzureMonitorWorkspaceInput is an input type that accepts SloObjectiveCountMetricBadAzureMonitorWorkspaceArgs and SloObjectiveCountMetricBadAzureMonitorWorkspaceOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadAzureMonitorWorkspaceInput` via:
//
//	SloObjectiveCountMetricBadAzureMonitorWorkspaceArgs{...}
type SloObjectiveCountMetricBadAzureMonitorWorkspaceInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadAzureMonitorWorkspaceOutput() SloObjectiveCountMetricBadAzureMonitorWorkspaceOutput
	ToSloObjectiveCountMetricBadAzureMonitorWorkspaceOutputWithContext(context.Context) SloObjectiveCountMetricBadAzureMonitorWorkspaceOutput
}

type SloObjectiveCountMetricBadAzureMonitorWorkspaceArgs struct {
	// Resource group of the workspace
	ResourceGroup pulumi.StringInput `pulumi:"resourceGroup"`
	// Subscription ID of the workspace
	SubscriptionId pulumi.StringInput `pulumi:"subscriptionId"`
	// ID of the workspace
	WorkspaceId pulumi.StringInput `pulumi:"workspaceId"`
}

func (SloObjectiveCountMetricBadAzureMonitorWorkspaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadAzureMonitorWorkspace)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadAzureMonitorWorkspaceArgs) ToSloObjectiveCountMetricBadAzureMonitorWorkspaceOutput() SloObjectiveCountMetricBadAzureMonitorWorkspaceOutput {
	return i.ToSloObjectiveCountMetricBadAzureMonitorWorkspaceOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadAzureMonitorWorkspaceArgs) ToSloObjectiveCountMetricBadAzureMonitorWorkspaceOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadAzureMonitorWorkspaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadAzureMonitorWorkspaceOutput)
}

// SloObjectiveCountMetricBadAzureMonitorWorkspaceArrayInput is an input type that accepts SloObjectiveCountMetricBadAzureMonitorWorkspaceArray and SloObjectiveCountMetricBadAzureMonitorWorkspaceArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadAzureMonitorWorkspaceArrayInput` via:
//
//	SloObjectiveCountMetricBadAzureMonitorWorkspaceArray{ SloObjectiveCountMetricBadAzureMonitorWorkspaceArgs{...} }
type SloObjectiveCountMetricBadAzureMonitorWorkspaceArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadAzureMonitorWorkspaceArrayOutput() SloObjectiveCountMetricBadAzureMonitorWorkspaceArrayOutput
	ToSloObjectiveCountMetricBadAzureMonitorWorkspaceArrayOutputWithContext(context.Context) SloObjectiveCountMetricBadAzureMonitorWorkspaceArrayOutput
}

type SloObjectiveCountMetricBadAzureMonitorWorkspaceArray []SloObjectiveCountMetricBadAzureMonitorWorkspaceInput

func (SloObjectiveCountMetricBadAzureMonitorWorkspaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadAzureMonitorWorkspace)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadAzureMonitorWorkspaceArray) ToSloObjectiveCountMetricBadAzureMonitorWorkspaceArrayOutput() SloObjectiveCountMetricBadAzureMonitorWorkspaceArrayOutput {
	return i.ToSloObjectiveCountMetricBadAzureMonitorWorkspaceArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadAzureMonitorWorkspaceArray) ToSloObjectiveCountMetricBadAzureMonitorWorkspaceArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadAzureMonitorWorkspaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadAzureMonitorWorkspaceArrayOutput)
}

type SloObjectiveCountMetricBadAzureMonitorWorkspaceOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadAzureMonitorWorkspaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadAzureMonitorWorkspace)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadAzureMonitorWorkspaceOutput) ToSloObjectiveCountMetricBadAzureMonitorWorkspaceOutput() SloObjectiveCountMetricBadAzureMonitorWorkspaceOutput {
	return o
}

func (o SloObjectiveCountMetricBadAzureMonitorWorkspaceOutput) ToSloObjectiveCountMetricBadAzureMonitorWorkspaceOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadAzureMonitorWorkspaceOutput {
	return o
}

// Resource group of the workspace
func (o SloObjectiveCountMetricBadAzureMonitorWorkspaceOutput) ResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadAzureMonitorWorkspace) string { return v.ResourceGroup }).(pulumi.StringOutput)
}

// Subscription ID of the workspace
func (o SloObjectiveCountMetricBadAzureMonitorWorkspaceOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadAzureMonitorWorkspace) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

// ID of the workspace
func (o SloObjectiveCountMetricBadAzureMonitorWorkspaceOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadAzureMonitorWorkspace) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricBadAzureMonitorWorkspaceArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadAzureMonitorWorkspaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadAzureMonitorWorkspace)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadAzureMonitorWorkspaceArrayOutput) ToSloObjectiveCountMetricBadAzureMonitorWorkspaceArrayOutput() SloObjectiveCountMetricBadAzureMonitorWorkspaceArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadAzureMonitorWorkspaceArrayOutput) ToSloObjectiveCountMetricBadAzureMonitorWorkspaceArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadAzureMonitorWorkspaceArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadAzureMonitorWorkspaceArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricBadAzureMonitorWorkspaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricBadAzureMonitorWorkspace {
		return vs[0].([]SloObjectiveCountMetricBadAzureMonitorWorkspace)[vs[1].(int)]
	}).(SloObjectiveCountMetricBadAzureMonitorWorkspaceOutput)
}

type SloObjectiveCountMetricBadBigquery struct {
	// Location of you BigQuery
	Location string `pulumi:"location"`
	// Project ID
	ProjectId string `pulumi:"projectId"`
	// Query for the metrics
	Query string `pulumi:"query"`
}

// SloObjectiveCountMetricBadBigqueryInput is an input type that accepts SloObjectiveCountMetricBadBigqueryArgs and SloObjectiveCountMetricBadBigqueryOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadBigqueryInput` via:
//
//	SloObjectiveCountMetricBadBigqueryArgs{...}
type SloObjectiveCountMetricBadBigqueryInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadBigqueryOutput() SloObjectiveCountMetricBadBigqueryOutput
	ToSloObjectiveCountMetricBadBigqueryOutputWithContext(context.Context) SloObjectiveCountMetricBadBigqueryOutput
}

type SloObjectiveCountMetricBadBigqueryArgs struct {
	// Location of you BigQuery
	Location pulumi.StringInput `pulumi:"location"`
	// Project ID
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// Query for the metrics
	Query pulumi.StringInput `pulumi:"query"`
}

func (SloObjectiveCountMetricBadBigqueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadBigquery)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadBigqueryArgs) ToSloObjectiveCountMetricBadBigqueryOutput() SloObjectiveCountMetricBadBigqueryOutput {
	return i.ToSloObjectiveCountMetricBadBigqueryOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadBigqueryArgs) ToSloObjectiveCountMetricBadBigqueryOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadBigqueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadBigqueryOutput)
}

// SloObjectiveCountMetricBadBigqueryArrayInput is an input type that accepts SloObjectiveCountMetricBadBigqueryArray and SloObjectiveCountMetricBadBigqueryArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadBigqueryArrayInput` via:
//
//	SloObjectiveCountMetricBadBigqueryArray{ SloObjectiveCountMetricBadBigqueryArgs{...} }
type SloObjectiveCountMetricBadBigqueryArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadBigqueryArrayOutput() SloObjectiveCountMetricBadBigqueryArrayOutput
	ToSloObjectiveCountMetricBadBigqueryArrayOutputWithContext(context.Context) SloObjectiveCountMetricBadBigqueryArrayOutput
}

type SloObjectiveCountMetricBadBigqueryArray []SloObjectiveCountMetricBadBigqueryInput

func (SloObjectiveCountMetricBadBigqueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadBigquery)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadBigqueryArray) ToSloObjectiveCountMetricBadBigqueryArrayOutput() SloObjectiveCountMetricBadBigqueryArrayOutput {
	return i.ToSloObjectiveCountMetricBadBigqueryArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadBigqueryArray) ToSloObjectiveCountMetricBadBigqueryArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadBigqueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadBigqueryArrayOutput)
}

type SloObjectiveCountMetricBadBigqueryOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadBigqueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadBigquery)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadBigqueryOutput) ToSloObjectiveCountMetricBadBigqueryOutput() SloObjectiveCountMetricBadBigqueryOutput {
	return o
}

func (o SloObjectiveCountMetricBadBigqueryOutput) ToSloObjectiveCountMetricBadBigqueryOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadBigqueryOutput {
	return o
}

// Location of you BigQuery
func (o SloObjectiveCountMetricBadBigqueryOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadBigquery) string { return v.Location }).(pulumi.StringOutput)
}

// Project ID
func (o SloObjectiveCountMetricBadBigqueryOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadBigquery) string { return v.ProjectId }).(pulumi.StringOutput)
}

// Query for the metrics
func (o SloObjectiveCountMetricBadBigqueryOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadBigquery) string { return v.Query }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricBadBigqueryArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadBigqueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadBigquery)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadBigqueryArrayOutput) ToSloObjectiveCountMetricBadBigqueryArrayOutput() SloObjectiveCountMetricBadBigqueryArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadBigqueryArrayOutput) ToSloObjectiveCountMetricBadBigqueryArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadBigqueryArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadBigqueryArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricBadBigqueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricBadBigquery {
		return vs[0].([]SloObjectiveCountMetricBadBigquery)[vs[1].(int)]
	}).(SloObjectiveCountMetricBadBigqueryOutput)
}

type SloObjectiveCountMetricBadCloudwatch struct {
	// AccountID used with cross-account observability feature
	AccountId *string `pulumi:"accountId"`
	// Dimensions of the metric [Optional for metrics]
	Dimensions []SloObjectiveCountMetricBadCloudwatchDimension `pulumi:"dimensions"`
	// JSON query
	Json *string `pulumi:"json"`
	// Name of the metric [Required for metrics]
	MetricName *string `pulumi:"metricName"`
	// Namespace of the metric
	Namespace *string `pulumi:"namespace"`
	// Region of the CloudWatch instance
	Region string `pulumi:"region"`
	// SQL query
	Sql *string `pulumi:"sql"`
	// Metric data aggregations
	Stat *string `pulumi:"stat"`
}

// SloObjectiveCountMetricBadCloudwatchInput is an input type that accepts SloObjectiveCountMetricBadCloudwatchArgs and SloObjectiveCountMetricBadCloudwatchOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadCloudwatchInput` via:
//
//	SloObjectiveCountMetricBadCloudwatchArgs{...}
type SloObjectiveCountMetricBadCloudwatchInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadCloudwatchOutput() SloObjectiveCountMetricBadCloudwatchOutput
	ToSloObjectiveCountMetricBadCloudwatchOutputWithContext(context.Context) SloObjectiveCountMetricBadCloudwatchOutput
}

type SloObjectiveCountMetricBadCloudwatchArgs struct {
	// AccountID used with cross-account observability feature
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// Dimensions of the metric [Optional for metrics]
	Dimensions SloObjectiveCountMetricBadCloudwatchDimensionArrayInput `pulumi:"dimensions"`
	// JSON query
	Json pulumi.StringPtrInput `pulumi:"json"`
	// Name of the metric [Required for metrics]
	MetricName pulumi.StringPtrInput `pulumi:"metricName"`
	// Namespace of the metric
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Region of the CloudWatch instance
	Region pulumi.StringInput `pulumi:"region"`
	// SQL query
	Sql pulumi.StringPtrInput `pulumi:"sql"`
	// Metric data aggregations
	Stat pulumi.StringPtrInput `pulumi:"stat"`
}

func (SloObjectiveCountMetricBadCloudwatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadCloudwatch)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadCloudwatchArgs) ToSloObjectiveCountMetricBadCloudwatchOutput() SloObjectiveCountMetricBadCloudwatchOutput {
	return i.ToSloObjectiveCountMetricBadCloudwatchOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadCloudwatchArgs) ToSloObjectiveCountMetricBadCloudwatchOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadCloudwatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadCloudwatchOutput)
}

// SloObjectiveCountMetricBadCloudwatchArrayInput is an input type that accepts SloObjectiveCountMetricBadCloudwatchArray and SloObjectiveCountMetricBadCloudwatchArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadCloudwatchArrayInput` via:
//
//	SloObjectiveCountMetricBadCloudwatchArray{ SloObjectiveCountMetricBadCloudwatchArgs{...} }
type SloObjectiveCountMetricBadCloudwatchArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadCloudwatchArrayOutput() SloObjectiveCountMetricBadCloudwatchArrayOutput
	ToSloObjectiveCountMetricBadCloudwatchArrayOutputWithContext(context.Context) SloObjectiveCountMetricBadCloudwatchArrayOutput
}

type SloObjectiveCountMetricBadCloudwatchArray []SloObjectiveCountMetricBadCloudwatchInput

func (SloObjectiveCountMetricBadCloudwatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadCloudwatch)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadCloudwatchArray) ToSloObjectiveCountMetricBadCloudwatchArrayOutput() SloObjectiveCountMetricBadCloudwatchArrayOutput {
	return i.ToSloObjectiveCountMetricBadCloudwatchArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadCloudwatchArray) ToSloObjectiveCountMetricBadCloudwatchArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadCloudwatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadCloudwatchArrayOutput)
}

type SloObjectiveCountMetricBadCloudwatchOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadCloudwatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadCloudwatch)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadCloudwatchOutput) ToSloObjectiveCountMetricBadCloudwatchOutput() SloObjectiveCountMetricBadCloudwatchOutput {
	return o
}

func (o SloObjectiveCountMetricBadCloudwatchOutput) ToSloObjectiveCountMetricBadCloudwatchOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadCloudwatchOutput {
	return o
}

// AccountID used with cross-account observability feature
func (o SloObjectiveCountMetricBadCloudwatchOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadCloudwatch) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// Dimensions of the metric [Optional for metrics]
func (o SloObjectiveCountMetricBadCloudwatchOutput) Dimensions() SloObjectiveCountMetricBadCloudwatchDimensionArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadCloudwatch) []SloObjectiveCountMetricBadCloudwatchDimension {
		return v.Dimensions
	}).(SloObjectiveCountMetricBadCloudwatchDimensionArrayOutput)
}

// JSON query
func (o SloObjectiveCountMetricBadCloudwatchOutput) Json() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadCloudwatch) *string { return v.Json }).(pulumi.StringPtrOutput)
}

// Name of the metric [Required for metrics]
func (o SloObjectiveCountMetricBadCloudwatchOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadCloudwatch) *string { return v.MetricName }).(pulumi.StringPtrOutput)
}

// Namespace of the metric
func (o SloObjectiveCountMetricBadCloudwatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadCloudwatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Region of the CloudWatch instance
func (o SloObjectiveCountMetricBadCloudwatchOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadCloudwatch) string { return v.Region }).(pulumi.StringOutput)
}

// SQL query
func (o SloObjectiveCountMetricBadCloudwatchOutput) Sql() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadCloudwatch) *string { return v.Sql }).(pulumi.StringPtrOutput)
}

// Metric data aggregations
func (o SloObjectiveCountMetricBadCloudwatchOutput) Stat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadCloudwatch) *string { return v.Stat }).(pulumi.StringPtrOutput)
}

type SloObjectiveCountMetricBadCloudwatchArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadCloudwatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadCloudwatch)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadCloudwatchArrayOutput) ToSloObjectiveCountMetricBadCloudwatchArrayOutput() SloObjectiveCountMetricBadCloudwatchArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadCloudwatchArrayOutput) ToSloObjectiveCountMetricBadCloudwatchArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadCloudwatchArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadCloudwatchArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricBadCloudwatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricBadCloudwatch {
		return vs[0].([]SloObjectiveCountMetricBadCloudwatch)[vs[1].(int)]
	}).(SloObjectiveCountMetricBadCloudwatchOutput)
}

type SloObjectiveCountMetricBadCloudwatchDimension struct {
	// The name of the previously defined alert method.
	Name string `pulumi:"name"`
	// Burn rate value.
	Value string `pulumi:"value"`
}

// SloObjectiveCountMetricBadCloudwatchDimensionInput is an input type that accepts SloObjectiveCountMetricBadCloudwatchDimensionArgs and SloObjectiveCountMetricBadCloudwatchDimensionOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadCloudwatchDimensionInput` via:
//
//	SloObjectiveCountMetricBadCloudwatchDimensionArgs{...}
type SloObjectiveCountMetricBadCloudwatchDimensionInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadCloudwatchDimensionOutput() SloObjectiveCountMetricBadCloudwatchDimensionOutput
	ToSloObjectiveCountMetricBadCloudwatchDimensionOutputWithContext(context.Context) SloObjectiveCountMetricBadCloudwatchDimensionOutput
}

type SloObjectiveCountMetricBadCloudwatchDimensionArgs struct {
	// The name of the previously defined alert method.
	Name pulumi.StringInput `pulumi:"name"`
	// Burn rate value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (SloObjectiveCountMetricBadCloudwatchDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadCloudwatchDimension)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadCloudwatchDimensionArgs) ToSloObjectiveCountMetricBadCloudwatchDimensionOutput() SloObjectiveCountMetricBadCloudwatchDimensionOutput {
	return i.ToSloObjectiveCountMetricBadCloudwatchDimensionOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadCloudwatchDimensionArgs) ToSloObjectiveCountMetricBadCloudwatchDimensionOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadCloudwatchDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadCloudwatchDimensionOutput)
}

// SloObjectiveCountMetricBadCloudwatchDimensionArrayInput is an input type that accepts SloObjectiveCountMetricBadCloudwatchDimensionArray and SloObjectiveCountMetricBadCloudwatchDimensionArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadCloudwatchDimensionArrayInput` via:
//
//	SloObjectiveCountMetricBadCloudwatchDimensionArray{ SloObjectiveCountMetricBadCloudwatchDimensionArgs{...} }
type SloObjectiveCountMetricBadCloudwatchDimensionArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadCloudwatchDimensionArrayOutput() SloObjectiveCountMetricBadCloudwatchDimensionArrayOutput
	ToSloObjectiveCountMetricBadCloudwatchDimensionArrayOutputWithContext(context.Context) SloObjectiveCountMetricBadCloudwatchDimensionArrayOutput
}

type SloObjectiveCountMetricBadCloudwatchDimensionArray []SloObjectiveCountMetricBadCloudwatchDimensionInput

func (SloObjectiveCountMetricBadCloudwatchDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadCloudwatchDimension)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadCloudwatchDimensionArray) ToSloObjectiveCountMetricBadCloudwatchDimensionArrayOutput() SloObjectiveCountMetricBadCloudwatchDimensionArrayOutput {
	return i.ToSloObjectiveCountMetricBadCloudwatchDimensionArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadCloudwatchDimensionArray) ToSloObjectiveCountMetricBadCloudwatchDimensionArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadCloudwatchDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadCloudwatchDimensionArrayOutput)
}

type SloObjectiveCountMetricBadCloudwatchDimensionOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadCloudwatchDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadCloudwatchDimension)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadCloudwatchDimensionOutput) ToSloObjectiveCountMetricBadCloudwatchDimensionOutput() SloObjectiveCountMetricBadCloudwatchDimensionOutput {
	return o
}

func (o SloObjectiveCountMetricBadCloudwatchDimensionOutput) ToSloObjectiveCountMetricBadCloudwatchDimensionOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadCloudwatchDimensionOutput {
	return o
}

// The name of the previously defined alert method.
func (o SloObjectiveCountMetricBadCloudwatchDimensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadCloudwatchDimension) string { return v.Name }).(pulumi.StringOutput)
}

// Burn rate value.
func (o SloObjectiveCountMetricBadCloudwatchDimensionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadCloudwatchDimension) string { return v.Value }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricBadCloudwatchDimensionArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadCloudwatchDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadCloudwatchDimension)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadCloudwatchDimensionArrayOutput) ToSloObjectiveCountMetricBadCloudwatchDimensionArrayOutput() SloObjectiveCountMetricBadCloudwatchDimensionArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadCloudwatchDimensionArrayOutput) ToSloObjectiveCountMetricBadCloudwatchDimensionArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadCloudwatchDimensionArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadCloudwatchDimensionArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricBadCloudwatchDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricBadCloudwatchDimension {
		return vs[0].([]SloObjectiveCountMetricBadCloudwatchDimension)[vs[1].(int)]
	}).(SloObjectiveCountMetricBadCloudwatchDimensionOutput)
}

type SloObjectiveCountMetricBadDatadog struct {
	// Query for the metrics
	Query string `pulumi:"query"`
}

// SloObjectiveCountMetricBadDatadogInput is an input type that accepts SloObjectiveCountMetricBadDatadogArgs and SloObjectiveCountMetricBadDatadogOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadDatadogInput` via:
//
//	SloObjectiveCountMetricBadDatadogArgs{...}
type SloObjectiveCountMetricBadDatadogInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadDatadogOutput() SloObjectiveCountMetricBadDatadogOutput
	ToSloObjectiveCountMetricBadDatadogOutputWithContext(context.Context) SloObjectiveCountMetricBadDatadogOutput
}

type SloObjectiveCountMetricBadDatadogArgs struct {
	// Query for the metrics
	Query pulumi.StringInput `pulumi:"query"`
}

func (SloObjectiveCountMetricBadDatadogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadDatadog)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadDatadogArgs) ToSloObjectiveCountMetricBadDatadogOutput() SloObjectiveCountMetricBadDatadogOutput {
	return i.ToSloObjectiveCountMetricBadDatadogOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadDatadogArgs) ToSloObjectiveCountMetricBadDatadogOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadDatadogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadDatadogOutput)
}

// SloObjectiveCountMetricBadDatadogArrayInput is an input type that accepts SloObjectiveCountMetricBadDatadogArray and SloObjectiveCountMetricBadDatadogArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadDatadogArrayInput` via:
//
//	SloObjectiveCountMetricBadDatadogArray{ SloObjectiveCountMetricBadDatadogArgs{...} }
type SloObjectiveCountMetricBadDatadogArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadDatadogArrayOutput() SloObjectiveCountMetricBadDatadogArrayOutput
	ToSloObjectiveCountMetricBadDatadogArrayOutputWithContext(context.Context) SloObjectiveCountMetricBadDatadogArrayOutput
}

type SloObjectiveCountMetricBadDatadogArray []SloObjectiveCountMetricBadDatadogInput

func (SloObjectiveCountMetricBadDatadogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadDatadog)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadDatadogArray) ToSloObjectiveCountMetricBadDatadogArrayOutput() SloObjectiveCountMetricBadDatadogArrayOutput {
	return i.ToSloObjectiveCountMetricBadDatadogArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadDatadogArray) ToSloObjectiveCountMetricBadDatadogArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadDatadogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadDatadogArrayOutput)
}

type SloObjectiveCountMetricBadDatadogOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadDatadogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadDatadog)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadDatadogOutput) ToSloObjectiveCountMetricBadDatadogOutput() SloObjectiveCountMetricBadDatadogOutput {
	return o
}

func (o SloObjectiveCountMetricBadDatadogOutput) ToSloObjectiveCountMetricBadDatadogOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadDatadogOutput {
	return o
}

// Query for the metrics
func (o SloObjectiveCountMetricBadDatadogOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadDatadog) string { return v.Query }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricBadDatadogArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadDatadogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadDatadog)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadDatadogArrayOutput) ToSloObjectiveCountMetricBadDatadogArrayOutput() SloObjectiveCountMetricBadDatadogArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadDatadogArrayOutput) ToSloObjectiveCountMetricBadDatadogArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadDatadogArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadDatadogArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricBadDatadogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricBadDatadog {
		return vs[0].([]SloObjectiveCountMetricBadDatadog)[vs[1].(int)]
	}).(SloObjectiveCountMetricBadDatadogOutput)
}

type SloObjectiveCountMetricBadDynatrace struct {
	// Selector for the metrics
	MetricSelector string `pulumi:"metricSelector"`
}

// SloObjectiveCountMetricBadDynatraceInput is an input type that accepts SloObjectiveCountMetricBadDynatraceArgs and SloObjectiveCountMetricBadDynatraceOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadDynatraceInput` via:
//
//	SloObjectiveCountMetricBadDynatraceArgs{...}
type SloObjectiveCountMetricBadDynatraceInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadDynatraceOutput() SloObjectiveCountMetricBadDynatraceOutput
	ToSloObjectiveCountMetricBadDynatraceOutputWithContext(context.Context) SloObjectiveCountMetricBadDynatraceOutput
}

type SloObjectiveCountMetricBadDynatraceArgs struct {
	// Selector for the metrics
	MetricSelector pulumi.StringInput `pulumi:"metricSelector"`
}

func (SloObjectiveCountMetricBadDynatraceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadDynatrace)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadDynatraceArgs) ToSloObjectiveCountMetricBadDynatraceOutput() SloObjectiveCountMetricBadDynatraceOutput {
	return i.ToSloObjectiveCountMetricBadDynatraceOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadDynatraceArgs) ToSloObjectiveCountMetricBadDynatraceOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadDynatraceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadDynatraceOutput)
}

// SloObjectiveCountMetricBadDynatraceArrayInput is an input type that accepts SloObjectiveCountMetricBadDynatraceArray and SloObjectiveCountMetricBadDynatraceArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadDynatraceArrayInput` via:
//
//	SloObjectiveCountMetricBadDynatraceArray{ SloObjectiveCountMetricBadDynatraceArgs{...} }
type SloObjectiveCountMetricBadDynatraceArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadDynatraceArrayOutput() SloObjectiveCountMetricBadDynatraceArrayOutput
	ToSloObjectiveCountMetricBadDynatraceArrayOutputWithContext(context.Context) SloObjectiveCountMetricBadDynatraceArrayOutput
}

type SloObjectiveCountMetricBadDynatraceArray []SloObjectiveCountMetricBadDynatraceInput

func (SloObjectiveCountMetricBadDynatraceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadDynatrace)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadDynatraceArray) ToSloObjectiveCountMetricBadDynatraceArrayOutput() SloObjectiveCountMetricBadDynatraceArrayOutput {
	return i.ToSloObjectiveCountMetricBadDynatraceArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadDynatraceArray) ToSloObjectiveCountMetricBadDynatraceArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadDynatraceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadDynatraceArrayOutput)
}

type SloObjectiveCountMetricBadDynatraceOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadDynatraceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadDynatrace)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadDynatraceOutput) ToSloObjectiveCountMetricBadDynatraceOutput() SloObjectiveCountMetricBadDynatraceOutput {
	return o
}

func (o SloObjectiveCountMetricBadDynatraceOutput) ToSloObjectiveCountMetricBadDynatraceOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadDynatraceOutput {
	return o
}

// Selector for the metrics
func (o SloObjectiveCountMetricBadDynatraceOutput) MetricSelector() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadDynatrace) string { return v.MetricSelector }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricBadDynatraceArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadDynatraceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadDynatrace)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadDynatraceArrayOutput) ToSloObjectiveCountMetricBadDynatraceArrayOutput() SloObjectiveCountMetricBadDynatraceArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadDynatraceArrayOutput) ToSloObjectiveCountMetricBadDynatraceArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadDynatraceArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadDynatraceArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricBadDynatraceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricBadDynatrace {
		return vs[0].([]SloObjectiveCountMetricBadDynatrace)[vs[1].(int)]
	}).(SloObjectiveCountMetricBadDynatraceOutput)
}

type SloObjectiveCountMetricBadElasticsearch struct {
	// Index of metrics we want to query
	Index string `pulumi:"index"`
	// Query for the metrics
	Query string `pulumi:"query"`
}

// SloObjectiveCountMetricBadElasticsearchInput is an input type that accepts SloObjectiveCountMetricBadElasticsearchArgs and SloObjectiveCountMetricBadElasticsearchOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadElasticsearchInput` via:
//
//	SloObjectiveCountMetricBadElasticsearchArgs{...}
type SloObjectiveCountMetricBadElasticsearchInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadElasticsearchOutput() SloObjectiveCountMetricBadElasticsearchOutput
	ToSloObjectiveCountMetricBadElasticsearchOutputWithContext(context.Context) SloObjectiveCountMetricBadElasticsearchOutput
}

type SloObjectiveCountMetricBadElasticsearchArgs struct {
	// Index of metrics we want to query
	Index pulumi.StringInput `pulumi:"index"`
	// Query for the metrics
	Query pulumi.StringInput `pulumi:"query"`
}

func (SloObjectiveCountMetricBadElasticsearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadElasticsearch)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadElasticsearchArgs) ToSloObjectiveCountMetricBadElasticsearchOutput() SloObjectiveCountMetricBadElasticsearchOutput {
	return i.ToSloObjectiveCountMetricBadElasticsearchOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadElasticsearchArgs) ToSloObjectiveCountMetricBadElasticsearchOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadElasticsearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadElasticsearchOutput)
}

// SloObjectiveCountMetricBadElasticsearchArrayInput is an input type that accepts SloObjectiveCountMetricBadElasticsearchArray and SloObjectiveCountMetricBadElasticsearchArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadElasticsearchArrayInput` via:
//
//	SloObjectiveCountMetricBadElasticsearchArray{ SloObjectiveCountMetricBadElasticsearchArgs{...} }
type SloObjectiveCountMetricBadElasticsearchArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadElasticsearchArrayOutput() SloObjectiveCountMetricBadElasticsearchArrayOutput
	ToSloObjectiveCountMetricBadElasticsearchArrayOutputWithContext(context.Context) SloObjectiveCountMetricBadElasticsearchArrayOutput
}

type SloObjectiveCountMetricBadElasticsearchArray []SloObjectiveCountMetricBadElasticsearchInput

func (SloObjectiveCountMetricBadElasticsearchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadElasticsearch)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadElasticsearchArray) ToSloObjectiveCountMetricBadElasticsearchArrayOutput() SloObjectiveCountMetricBadElasticsearchArrayOutput {
	return i.ToSloObjectiveCountMetricBadElasticsearchArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadElasticsearchArray) ToSloObjectiveCountMetricBadElasticsearchArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadElasticsearchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadElasticsearchArrayOutput)
}

type SloObjectiveCountMetricBadElasticsearchOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadElasticsearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadElasticsearch)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadElasticsearchOutput) ToSloObjectiveCountMetricBadElasticsearchOutput() SloObjectiveCountMetricBadElasticsearchOutput {
	return o
}

func (o SloObjectiveCountMetricBadElasticsearchOutput) ToSloObjectiveCountMetricBadElasticsearchOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadElasticsearchOutput {
	return o
}

// Index of metrics we want to query
func (o SloObjectiveCountMetricBadElasticsearchOutput) Index() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadElasticsearch) string { return v.Index }).(pulumi.StringOutput)
}

// Query for the metrics
func (o SloObjectiveCountMetricBadElasticsearchOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadElasticsearch) string { return v.Query }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricBadElasticsearchArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadElasticsearchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadElasticsearch)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadElasticsearchArrayOutput) ToSloObjectiveCountMetricBadElasticsearchArrayOutput() SloObjectiveCountMetricBadElasticsearchArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadElasticsearchArrayOutput) ToSloObjectiveCountMetricBadElasticsearchArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadElasticsearchArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadElasticsearchArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricBadElasticsearchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricBadElasticsearch {
		return vs[0].([]SloObjectiveCountMetricBadElasticsearch)[vs[1].(int)]
	}).(SloObjectiveCountMetricBadElasticsearchOutput)
}

type SloObjectiveCountMetricBadGcm struct {
	// Project ID
	ProjectId string `pulumi:"projectId"`
	// Query for the metrics
	Query string `pulumi:"query"`
}

// SloObjectiveCountMetricBadGcmInput is an input type that accepts SloObjectiveCountMetricBadGcmArgs and SloObjectiveCountMetricBadGcmOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadGcmInput` via:
//
//	SloObjectiveCountMetricBadGcmArgs{...}
type SloObjectiveCountMetricBadGcmInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadGcmOutput() SloObjectiveCountMetricBadGcmOutput
	ToSloObjectiveCountMetricBadGcmOutputWithContext(context.Context) SloObjectiveCountMetricBadGcmOutput
}

type SloObjectiveCountMetricBadGcmArgs struct {
	// Project ID
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// Query for the metrics
	Query pulumi.StringInput `pulumi:"query"`
}

func (SloObjectiveCountMetricBadGcmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadGcm)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadGcmArgs) ToSloObjectiveCountMetricBadGcmOutput() SloObjectiveCountMetricBadGcmOutput {
	return i.ToSloObjectiveCountMetricBadGcmOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadGcmArgs) ToSloObjectiveCountMetricBadGcmOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadGcmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadGcmOutput)
}

// SloObjectiveCountMetricBadGcmArrayInput is an input type that accepts SloObjectiveCountMetricBadGcmArray and SloObjectiveCountMetricBadGcmArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadGcmArrayInput` via:
//
//	SloObjectiveCountMetricBadGcmArray{ SloObjectiveCountMetricBadGcmArgs{...} }
type SloObjectiveCountMetricBadGcmArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadGcmArrayOutput() SloObjectiveCountMetricBadGcmArrayOutput
	ToSloObjectiveCountMetricBadGcmArrayOutputWithContext(context.Context) SloObjectiveCountMetricBadGcmArrayOutput
}

type SloObjectiveCountMetricBadGcmArray []SloObjectiveCountMetricBadGcmInput

func (SloObjectiveCountMetricBadGcmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadGcm)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadGcmArray) ToSloObjectiveCountMetricBadGcmArrayOutput() SloObjectiveCountMetricBadGcmArrayOutput {
	return i.ToSloObjectiveCountMetricBadGcmArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadGcmArray) ToSloObjectiveCountMetricBadGcmArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadGcmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadGcmArrayOutput)
}

type SloObjectiveCountMetricBadGcmOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadGcmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadGcm)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadGcmOutput) ToSloObjectiveCountMetricBadGcmOutput() SloObjectiveCountMetricBadGcmOutput {
	return o
}

func (o SloObjectiveCountMetricBadGcmOutput) ToSloObjectiveCountMetricBadGcmOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadGcmOutput {
	return o
}

// Project ID
func (o SloObjectiveCountMetricBadGcmOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadGcm) string { return v.ProjectId }).(pulumi.StringOutput)
}

// Query for the metrics
func (o SloObjectiveCountMetricBadGcmOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadGcm) string { return v.Query }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricBadGcmArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadGcmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadGcm)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadGcmArrayOutput) ToSloObjectiveCountMetricBadGcmArrayOutput() SloObjectiveCountMetricBadGcmArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadGcmArrayOutput) ToSloObjectiveCountMetricBadGcmArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadGcmArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadGcmArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricBadGcmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricBadGcm {
		return vs[0].([]SloObjectiveCountMetricBadGcm)[vs[1].(int)]
	}).(SloObjectiveCountMetricBadGcmOutput)
}

type SloObjectiveCountMetricBadGrafanaLoki struct {
	// Query for the logs
	Logql string `pulumi:"logql"`
}

// SloObjectiveCountMetricBadGrafanaLokiInput is an input type that accepts SloObjectiveCountMetricBadGrafanaLokiArgs and SloObjectiveCountMetricBadGrafanaLokiOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadGrafanaLokiInput` via:
//
//	SloObjectiveCountMetricBadGrafanaLokiArgs{...}
type SloObjectiveCountMetricBadGrafanaLokiInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadGrafanaLokiOutput() SloObjectiveCountMetricBadGrafanaLokiOutput
	ToSloObjectiveCountMetricBadGrafanaLokiOutputWithContext(context.Context) SloObjectiveCountMetricBadGrafanaLokiOutput
}

type SloObjectiveCountMetricBadGrafanaLokiArgs struct {
	// Query for the logs
	Logql pulumi.StringInput `pulumi:"logql"`
}

func (SloObjectiveCountMetricBadGrafanaLokiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadGrafanaLoki)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadGrafanaLokiArgs) ToSloObjectiveCountMetricBadGrafanaLokiOutput() SloObjectiveCountMetricBadGrafanaLokiOutput {
	return i.ToSloObjectiveCountMetricBadGrafanaLokiOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadGrafanaLokiArgs) ToSloObjectiveCountMetricBadGrafanaLokiOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadGrafanaLokiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadGrafanaLokiOutput)
}

// SloObjectiveCountMetricBadGrafanaLokiArrayInput is an input type that accepts SloObjectiveCountMetricBadGrafanaLokiArray and SloObjectiveCountMetricBadGrafanaLokiArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadGrafanaLokiArrayInput` via:
//
//	SloObjectiveCountMetricBadGrafanaLokiArray{ SloObjectiveCountMetricBadGrafanaLokiArgs{...} }
type SloObjectiveCountMetricBadGrafanaLokiArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadGrafanaLokiArrayOutput() SloObjectiveCountMetricBadGrafanaLokiArrayOutput
	ToSloObjectiveCountMetricBadGrafanaLokiArrayOutputWithContext(context.Context) SloObjectiveCountMetricBadGrafanaLokiArrayOutput
}

type SloObjectiveCountMetricBadGrafanaLokiArray []SloObjectiveCountMetricBadGrafanaLokiInput

func (SloObjectiveCountMetricBadGrafanaLokiArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadGrafanaLoki)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadGrafanaLokiArray) ToSloObjectiveCountMetricBadGrafanaLokiArrayOutput() SloObjectiveCountMetricBadGrafanaLokiArrayOutput {
	return i.ToSloObjectiveCountMetricBadGrafanaLokiArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadGrafanaLokiArray) ToSloObjectiveCountMetricBadGrafanaLokiArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadGrafanaLokiArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadGrafanaLokiArrayOutput)
}

type SloObjectiveCountMetricBadGrafanaLokiOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadGrafanaLokiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadGrafanaLoki)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadGrafanaLokiOutput) ToSloObjectiveCountMetricBadGrafanaLokiOutput() SloObjectiveCountMetricBadGrafanaLokiOutput {
	return o
}

func (o SloObjectiveCountMetricBadGrafanaLokiOutput) ToSloObjectiveCountMetricBadGrafanaLokiOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadGrafanaLokiOutput {
	return o
}

// Query for the logs
func (o SloObjectiveCountMetricBadGrafanaLokiOutput) Logql() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadGrafanaLoki) string { return v.Logql }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricBadGrafanaLokiArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadGrafanaLokiArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadGrafanaLoki)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadGrafanaLokiArrayOutput) ToSloObjectiveCountMetricBadGrafanaLokiArrayOutput() SloObjectiveCountMetricBadGrafanaLokiArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadGrafanaLokiArrayOutput) ToSloObjectiveCountMetricBadGrafanaLokiArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadGrafanaLokiArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadGrafanaLokiArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricBadGrafanaLokiOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricBadGrafanaLoki {
		return vs[0].([]SloObjectiveCountMetricBadGrafanaLoki)[vs[1].(int)]
	}).(SloObjectiveCountMetricBadGrafanaLokiOutput)
}

type SloObjectiveCountMetricBadGraphite struct {
	// Path to the metrics
	MetricPath string `pulumi:"metricPath"`
}

// SloObjectiveCountMetricBadGraphiteInput is an input type that accepts SloObjectiveCountMetricBadGraphiteArgs and SloObjectiveCountMetricBadGraphiteOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadGraphiteInput` via:
//
//	SloObjectiveCountMetricBadGraphiteArgs{...}
type SloObjectiveCountMetricBadGraphiteInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadGraphiteOutput() SloObjectiveCountMetricBadGraphiteOutput
	ToSloObjectiveCountMetricBadGraphiteOutputWithContext(context.Context) SloObjectiveCountMetricBadGraphiteOutput
}

type SloObjectiveCountMetricBadGraphiteArgs struct {
	// Path to the metrics
	MetricPath pulumi.StringInput `pulumi:"metricPath"`
}

func (SloObjectiveCountMetricBadGraphiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadGraphite)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadGraphiteArgs) ToSloObjectiveCountMetricBadGraphiteOutput() SloObjectiveCountMetricBadGraphiteOutput {
	return i.ToSloObjectiveCountMetricBadGraphiteOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadGraphiteArgs) ToSloObjectiveCountMetricBadGraphiteOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadGraphiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadGraphiteOutput)
}

// SloObjectiveCountMetricBadGraphiteArrayInput is an input type that accepts SloObjectiveCountMetricBadGraphiteArray and SloObjectiveCountMetricBadGraphiteArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadGraphiteArrayInput` via:
//
//	SloObjectiveCountMetricBadGraphiteArray{ SloObjectiveCountMetricBadGraphiteArgs{...} }
type SloObjectiveCountMetricBadGraphiteArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadGraphiteArrayOutput() SloObjectiveCountMetricBadGraphiteArrayOutput
	ToSloObjectiveCountMetricBadGraphiteArrayOutputWithContext(context.Context) SloObjectiveCountMetricBadGraphiteArrayOutput
}

type SloObjectiveCountMetricBadGraphiteArray []SloObjectiveCountMetricBadGraphiteInput

func (SloObjectiveCountMetricBadGraphiteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadGraphite)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadGraphiteArray) ToSloObjectiveCountMetricBadGraphiteArrayOutput() SloObjectiveCountMetricBadGraphiteArrayOutput {
	return i.ToSloObjectiveCountMetricBadGraphiteArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadGraphiteArray) ToSloObjectiveCountMetricBadGraphiteArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadGraphiteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadGraphiteArrayOutput)
}

type SloObjectiveCountMetricBadGraphiteOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadGraphiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadGraphite)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadGraphiteOutput) ToSloObjectiveCountMetricBadGraphiteOutput() SloObjectiveCountMetricBadGraphiteOutput {
	return o
}

func (o SloObjectiveCountMetricBadGraphiteOutput) ToSloObjectiveCountMetricBadGraphiteOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadGraphiteOutput {
	return o
}

// Path to the metrics
func (o SloObjectiveCountMetricBadGraphiteOutput) MetricPath() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadGraphite) string { return v.MetricPath }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricBadGraphiteArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadGraphiteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadGraphite)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadGraphiteArrayOutput) ToSloObjectiveCountMetricBadGraphiteArrayOutput() SloObjectiveCountMetricBadGraphiteArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadGraphiteArrayOutput) ToSloObjectiveCountMetricBadGraphiteArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadGraphiteArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadGraphiteArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricBadGraphiteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricBadGraphite {
		return vs[0].([]SloObjectiveCountMetricBadGraphite)[vs[1].(int)]
	}).(SloObjectiveCountMetricBadGraphiteOutput)
}

type SloObjectiveCountMetricBadHoneycomb struct {
	// Column name - required for all calculation types besides 'CONCURRENCY' and 'COUNT'
	Attribute *string `pulumi:"attribute"`
	// Calculation type
	Calculation string `pulumi:"calculation"`
}

// SloObjectiveCountMetricBadHoneycombInput is an input type that accepts SloObjectiveCountMetricBadHoneycombArgs and SloObjectiveCountMetricBadHoneycombOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadHoneycombInput` via:
//
//	SloObjectiveCountMetricBadHoneycombArgs{...}
type SloObjectiveCountMetricBadHoneycombInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadHoneycombOutput() SloObjectiveCountMetricBadHoneycombOutput
	ToSloObjectiveCountMetricBadHoneycombOutputWithContext(context.Context) SloObjectiveCountMetricBadHoneycombOutput
}

type SloObjectiveCountMetricBadHoneycombArgs struct {
	// Column name - required for all calculation types besides 'CONCURRENCY' and 'COUNT'
	Attribute pulumi.StringPtrInput `pulumi:"attribute"`
	// Calculation type
	Calculation pulumi.StringInput `pulumi:"calculation"`
}

func (SloObjectiveCountMetricBadHoneycombArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadHoneycomb)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadHoneycombArgs) ToSloObjectiveCountMetricBadHoneycombOutput() SloObjectiveCountMetricBadHoneycombOutput {
	return i.ToSloObjectiveCountMetricBadHoneycombOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadHoneycombArgs) ToSloObjectiveCountMetricBadHoneycombOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadHoneycombOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadHoneycombOutput)
}

// SloObjectiveCountMetricBadHoneycombArrayInput is an input type that accepts SloObjectiveCountMetricBadHoneycombArray and SloObjectiveCountMetricBadHoneycombArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadHoneycombArrayInput` via:
//
//	SloObjectiveCountMetricBadHoneycombArray{ SloObjectiveCountMetricBadHoneycombArgs{...} }
type SloObjectiveCountMetricBadHoneycombArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadHoneycombArrayOutput() SloObjectiveCountMetricBadHoneycombArrayOutput
	ToSloObjectiveCountMetricBadHoneycombArrayOutputWithContext(context.Context) SloObjectiveCountMetricBadHoneycombArrayOutput
}

type SloObjectiveCountMetricBadHoneycombArray []SloObjectiveCountMetricBadHoneycombInput

func (SloObjectiveCountMetricBadHoneycombArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadHoneycomb)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadHoneycombArray) ToSloObjectiveCountMetricBadHoneycombArrayOutput() SloObjectiveCountMetricBadHoneycombArrayOutput {
	return i.ToSloObjectiveCountMetricBadHoneycombArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadHoneycombArray) ToSloObjectiveCountMetricBadHoneycombArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadHoneycombArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadHoneycombArrayOutput)
}

type SloObjectiveCountMetricBadHoneycombOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadHoneycombOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadHoneycomb)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadHoneycombOutput) ToSloObjectiveCountMetricBadHoneycombOutput() SloObjectiveCountMetricBadHoneycombOutput {
	return o
}

func (o SloObjectiveCountMetricBadHoneycombOutput) ToSloObjectiveCountMetricBadHoneycombOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadHoneycombOutput {
	return o
}

// Column name - required for all calculation types besides 'CONCURRENCY' and 'COUNT'
func (o SloObjectiveCountMetricBadHoneycombOutput) Attribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadHoneycomb) *string { return v.Attribute }).(pulumi.StringPtrOutput)
}

// Calculation type
func (o SloObjectiveCountMetricBadHoneycombOutput) Calculation() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadHoneycomb) string { return v.Calculation }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricBadHoneycombArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadHoneycombArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadHoneycomb)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadHoneycombArrayOutput) ToSloObjectiveCountMetricBadHoneycombArrayOutput() SloObjectiveCountMetricBadHoneycombArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadHoneycombArrayOutput) ToSloObjectiveCountMetricBadHoneycombArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadHoneycombArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadHoneycombArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricBadHoneycombOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricBadHoneycomb {
		return vs[0].([]SloObjectiveCountMetricBadHoneycomb)[vs[1].(int)]
	}).(SloObjectiveCountMetricBadHoneycombOutput)
}

type SloObjectiveCountMetricBadInfluxdb struct {
	// Query for the metrics
	Query string `pulumi:"query"`
}

// SloObjectiveCountMetricBadInfluxdbInput is an input type that accepts SloObjectiveCountMetricBadInfluxdbArgs and SloObjectiveCountMetricBadInfluxdbOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadInfluxdbInput` via:
//
//	SloObjectiveCountMetricBadInfluxdbArgs{...}
type SloObjectiveCountMetricBadInfluxdbInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadInfluxdbOutput() SloObjectiveCountMetricBadInfluxdbOutput
	ToSloObjectiveCountMetricBadInfluxdbOutputWithContext(context.Context) SloObjectiveCountMetricBadInfluxdbOutput
}

type SloObjectiveCountMetricBadInfluxdbArgs struct {
	// Query for the metrics
	Query pulumi.StringInput `pulumi:"query"`
}

func (SloObjectiveCountMetricBadInfluxdbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadInfluxdb)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadInfluxdbArgs) ToSloObjectiveCountMetricBadInfluxdbOutput() SloObjectiveCountMetricBadInfluxdbOutput {
	return i.ToSloObjectiveCountMetricBadInfluxdbOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadInfluxdbArgs) ToSloObjectiveCountMetricBadInfluxdbOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadInfluxdbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadInfluxdbOutput)
}

// SloObjectiveCountMetricBadInfluxdbArrayInput is an input type that accepts SloObjectiveCountMetricBadInfluxdbArray and SloObjectiveCountMetricBadInfluxdbArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadInfluxdbArrayInput` via:
//
//	SloObjectiveCountMetricBadInfluxdbArray{ SloObjectiveCountMetricBadInfluxdbArgs{...} }
type SloObjectiveCountMetricBadInfluxdbArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadInfluxdbArrayOutput() SloObjectiveCountMetricBadInfluxdbArrayOutput
	ToSloObjectiveCountMetricBadInfluxdbArrayOutputWithContext(context.Context) SloObjectiveCountMetricBadInfluxdbArrayOutput
}

type SloObjectiveCountMetricBadInfluxdbArray []SloObjectiveCountMetricBadInfluxdbInput

func (SloObjectiveCountMetricBadInfluxdbArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadInfluxdb)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadInfluxdbArray) ToSloObjectiveCountMetricBadInfluxdbArrayOutput() SloObjectiveCountMetricBadInfluxdbArrayOutput {
	return i.ToSloObjectiveCountMetricBadInfluxdbArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadInfluxdbArray) ToSloObjectiveCountMetricBadInfluxdbArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadInfluxdbArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadInfluxdbArrayOutput)
}

type SloObjectiveCountMetricBadInfluxdbOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadInfluxdbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadInfluxdb)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadInfluxdbOutput) ToSloObjectiveCountMetricBadInfluxdbOutput() SloObjectiveCountMetricBadInfluxdbOutput {
	return o
}

func (o SloObjectiveCountMetricBadInfluxdbOutput) ToSloObjectiveCountMetricBadInfluxdbOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadInfluxdbOutput {
	return o
}

// Query for the metrics
func (o SloObjectiveCountMetricBadInfluxdbOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadInfluxdb) string { return v.Query }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricBadInfluxdbArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadInfluxdbArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadInfluxdb)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadInfluxdbArrayOutput) ToSloObjectiveCountMetricBadInfluxdbArrayOutput() SloObjectiveCountMetricBadInfluxdbArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadInfluxdbArrayOutput) ToSloObjectiveCountMetricBadInfluxdbArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadInfluxdbArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadInfluxdbArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricBadInfluxdbOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricBadInfluxdb {
		return vs[0].([]SloObjectiveCountMetricBadInfluxdb)[vs[1].(int)]
	}).(SloObjectiveCountMetricBadInfluxdbOutput)
}

type SloObjectiveCountMetricBadInstana struct {
	// Infrastructure metric type
	Applications []SloObjectiveCountMetricBadInstanaApplication `pulumi:"applications"`
	// Infrastructure metric type
	Infrastructures []SloObjectiveCountMetricBadInstanaInfrastructure `pulumi:"infrastructures"`
	// Instana metric type 'application' or 'infrastructure'
	MetricType string `pulumi:"metricType"`
}

// SloObjectiveCountMetricBadInstanaInput is an input type that accepts SloObjectiveCountMetricBadInstanaArgs and SloObjectiveCountMetricBadInstanaOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadInstanaInput` via:
//
//	SloObjectiveCountMetricBadInstanaArgs{...}
type SloObjectiveCountMetricBadInstanaInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadInstanaOutput() SloObjectiveCountMetricBadInstanaOutput
	ToSloObjectiveCountMetricBadInstanaOutputWithContext(context.Context) SloObjectiveCountMetricBadInstanaOutput
}

type SloObjectiveCountMetricBadInstanaArgs struct {
	// Infrastructure metric type
	Applications SloObjectiveCountMetricBadInstanaApplicationArrayInput `pulumi:"applications"`
	// Infrastructure metric type
	Infrastructures SloObjectiveCountMetricBadInstanaInfrastructureArrayInput `pulumi:"infrastructures"`
	// Instana metric type 'application' or 'infrastructure'
	MetricType pulumi.StringInput `pulumi:"metricType"`
}

func (SloObjectiveCountMetricBadInstanaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadInstana)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadInstanaArgs) ToSloObjectiveCountMetricBadInstanaOutput() SloObjectiveCountMetricBadInstanaOutput {
	return i.ToSloObjectiveCountMetricBadInstanaOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadInstanaArgs) ToSloObjectiveCountMetricBadInstanaOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadInstanaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadInstanaOutput)
}

// SloObjectiveCountMetricBadInstanaArrayInput is an input type that accepts SloObjectiveCountMetricBadInstanaArray and SloObjectiveCountMetricBadInstanaArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadInstanaArrayInput` via:
//
//	SloObjectiveCountMetricBadInstanaArray{ SloObjectiveCountMetricBadInstanaArgs{...} }
type SloObjectiveCountMetricBadInstanaArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadInstanaArrayOutput() SloObjectiveCountMetricBadInstanaArrayOutput
	ToSloObjectiveCountMetricBadInstanaArrayOutputWithContext(context.Context) SloObjectiveCountMetricBadInstanaArrayOutput
}

type SloObjectiveCountMetricBadInstanaArray []SloObjectiveCountMetricBadInstanaInput

func (SloObjectiveCountMetricBadInstanaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadInstana)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadInstanaArray) ToSloObjectiveCountMetricBadInstanaArrayOutput() SloObjectiveCountMetricBadInstanaArrayOutput {
	return i.ToSloObjectiveCountMetricBadInstanaArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadInstanaArray) ToSloObjectiveCountMetricBadInstanaArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadInstanaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadInstanaArrayOutput)
}

type SloObjectiveCountMetricBadInstanaOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadInstanaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadInstana)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadInstanaOutput) ToSloObjectiveCountMetricBadInstanaOutput() SloObjectiveCountMetricBadInstanaOutput {
	return o
}

func (o SloObjectiveCountMetricBadInstanaOutput) ToSloObjectiveCountMetricBadInstanaOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadInstanaOutput {
	return o
}

// Infrastructure metric type
func (o SloObjectiveCountMetricBadInstanaOutput) Applications() SloObjectiveCountMetricBadInstanaApplicationArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadInstana) []SloObjectiveCountMetricBadInstanaApplication {
		return v.Applications
	}).(SloObjectiveCountMetricBadInstanaApplicationArrayOutput)
}

// Infrastructure metric type
func (o SloObjectiveCountMetricBadInstanaOutput) Infrastructures() SloObjectiveCountMetricBadInstanaInfrastructureArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadInstana) []SloObjectiveCountMetricBadInstanaInfrastructure {
		return v.Infrastructures
	}).(SloObjectiveCountMetricBadInstanaInfrastructureArrayOutput)
}

// Instana metric type 'application' or 'infrastructure'
func (o SloObjectiveCountMetricBadInstanaOutput) MetricType() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadInstana) string { return v.MetricType }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricBadInstanaArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadInstanaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadInstana)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadInstanaArrayOutput) ToSloObjectiveCountMetricBadInstanaArrayOutput() SloObjectiveCountMetricBadInstanaArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadInstanaArrayOutput) ToSloObjectiveCountMetricBadInstanaArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadInstanaArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadInstanaArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricBadInstanaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricBadInstana {
		return vs[0].([]SloObjectiveCountMetricBadInstana)[vs[1].(int)]
	}).(SloObjectiveCountMetricBadInstanaOutput)
}

type SloObjectiveCountMetricBadInstanaApplication struct {
	// Aggregation type [Required for metrics]
	Aggregation string `pulumi:"aggregation"`
	// API query user passes in a JSON format
	ApiQuery string `pulumi:"apiQuery"`
	// Group by method
	GroupBies []SloObjectiveCountMetricBadInstanaApplicationGroupBy `pulumi:"groupBies"`
	// Include internal
	IncludeInternal *bool `pulumi:"includeInternal"`
	// Include synthetic
	IncludeSynthetic *bool `pulumi:"includeSynthetic"`
	// Metric ID one of 'calls', 'erroneousCalls', 'errors', 'latency'
	MetricId string `pulumi:"metricId"`
}

// SloObjectiveCountMetricBadInstanaApplicationInput is an input type that accepts SloObjectiveCountMetricBadInstanaApplicationArgs and SloObjectiveCountMetricBadInstanaApplicationOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadInstanaApplicationInput` via:
//
//	SloObjectiveCountMetricBadInstanaApplicationArgs{...}
type SloObjectiveCountMetricBadInstanaApplicationInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadInstanaApplicationOutput() SloObjectiveCountMetricBadInstanaApplicationOutput
	ToSloObjectiveCountMetricBadInstanaApplicationOutputWithContext(context.Context) SloObjectiveCountMetricBadInstanaApplicationOutput
}

type SloObjectiveCountMetricBadInstanaApplicationArgs struct {
	// Aggregation type [Required for metrics]
	Aggregation pulumi.StringInput `pulumi:"aggregation"`
	// API query user passes in a JSON format
	ApiQuery pulumi.StringInput `pulumi:"apiQuery"`
	// Group by method
	GroupBies SloObjectiveCountMetricBadInstanaApplicationGroupByArrayInput `pulumi:"groupBies"`
	// Include internal
	IncludeInternal pulumi.BoolPtrInput `pulumi:"includeInternal"`
	// Include synthetic
	IncludeSynthetic pulumi.BoolPtrInput `pulumi:"includeSynthetic"`
	// Metric ID one of 'calls', 'erroneousCalls', 'errors', 'latency'
	MetricId pulumi.StringInput `pulumi:"metricId"`
}

func (SloObjectiveCountMetricBadInstanaApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadInstanaApplication)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadInstanaApplicationArgs) ToSloObjectiveCountMetricBadInstanaApplicationOutput() SloObjectiveCountMetricBadInstanaApplicationOutput {
	return i.ToSloObjectiveCountMetricBadInstanaApplicationOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadInstanaApplicationArgs) ToSloObjectiveCountMetricBadInstanaApplicationOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadInstanaApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadInstanaApplicationOutput)
}

// SloObjectiveCountMetricBadInstanaApplicationArrayInput is an input type that accepts SloObjectiveCountMetricBadInstanaApplicationArray and SloObjectiveCountMetricBadInstanaApplicationArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadInstanaApplicationArrayInput` via:
//
//	SloObjectiveCountMetricBadInstanaApplicationArray{ SloObjectiveCountMetricBadInstanaApplicationArgs{...} }
type SloObjectiveCountMetricBadInstanaApplicationArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadInstanaApplicationArrayOutput() SloObjectiveCountMetricBadInstanaApplicationArrayOutput
	ToSloObjectiveCountMetricBadInstanaApplicationArrayOutputWithContext(context.Context) SloObjectiveCountMetricBadInstanaApplicationArrayOutput
}

type SloObjectiveCountMetricBadInstanaApplicationArray []SloObjectiveCountMetricBadInstanaApplicationInput

func (SloObjectiveCountMetricBadInstanaApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadInstanaApplication)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadInstanaApplicationArray) ToSloObjectiveCountMetricBadInstanaApplicationArrayOutput() SloObjectiveCountMetricBadInstanaApplicationArrayOutput {
	return i.ToSloObjectiveCountMetricBadInstanaApplicationArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadInstanaApplicationArray) ToSloObjectiveCountMetricBadInstanaApplicationArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadInstanaApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadInstanaApplicationArrayOutput)
}

type SloObjectiveCountMetricBadInstanaApplicationOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadInstanaApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadInstanaApplication)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadInstanaApplicationOutput) ToSloObjectiveCountMetricBadInstanaApplicationOutput() SloObjectiveCountMetricBadInstanaApplicationOutput {
	return o
}

func (o SloObjectiveCountMetricBadInstanaApplicationOutput) ToSloObjectiveCountMetricBadInstanaApplicationOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadInstanaApplicationOutput {
	return o
}

// Aggregation type [Required for metrics]
func (o SloObjectiveCountMetricBadInstanaApplicationOutput) Aggregation() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadInstanaApplication) string { return v.Aggregation }).(pulumi.StringOutput)
}

// API query user passes in a JSON format
func (o SloObjectiveCountMetricBadInstanaApplicationOutput) ApiQuery() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadInstanaApplication) string { return v.ApiQuery }).(pulumi.StringOutput)
}

// Group by method
func (o SloObjectiveCountMetricBadInstanaApplicationOutput) GroupBies() SloObjectiveCountMetricBadInstanaApplicationGroupByArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadInstanaApplication) []SloObjectiveCountMetricBadInstanaApplicationGroupBy {
		return v.GroupBies
	}).(SloObjectiveCountMetricBadInstanaApplicationGroupByArrayOutput)
}

// Include internal
func (o SloObjectiveCountMetricBadInstanaApplicationOutput) IncludeInternal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadInstanaApplication) *bool { return v.IncludeInternal }).(pulumi.BoolPtrOutput)
}

// Include synthetic
func (o SloObjectiveCountMetricBadInstanaApplicationOutput) IncludeSynthetic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadInstanaApplication) *bool { return v.IncludeSynthetic }).(pulumi.BoolPtrOutput)
}

// Metric ID one of 'calls', 'erroneousCalls', 'errors', 'latency'
func (o SloObjectiveCountMetricBadInstanaApplicationOutput) MetricId() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadInstanaApplication) string { return v.MetricId }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricBadInstanaApplicationArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadInstanaApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadInstanaApplication)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadInstanaApplicationArrayOutput) ToSloObjectiveCountMetricBadInstanaApplicationArrayOutput() SloObjectiveCountMetricBadInstanaApplicationArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadInstanaApplicationArrayOutput) ToSloObjectiveCountMetricBadInstanaApplicationArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadInstanaApplicationArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadInstanaApplicationArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricBadInstanaApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricBadInstanaApplication {
		return vs[0].([]SloObjectiveCountMetricBadInstanaApplication)[vs[1].(int)]
	}).(SloObjectiveCountMetricBadInstanaApplicationOutput)
}

type SloObjectiveCountMetricBadInstanaApplicationGroupBy struct {
	// Group by tag
	Tag string `pulumi:"tag"`
	// Tag entity - one of 'DESTINATION', 'SOURCE', 'NOT_APPLICABLE'
	TagEntity         string  `pulumi:"tagEntity"`
	TagSecondLevelKey *string `pulumi:"tagSecondLevelKey"`
}

// SloObjectiveCountMetricBadInstanaApplicationGroupByInput is an input type that accepts SloObjectiveCountMetricBadInstanaApplicationGroupByArgs and SloObjectiveCountMetricBadInstanaApplicationGroupByOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadInstanaApplicationGroupByInput` via:
//
//	SloObjectiveCountMetricBadInstanaApplicationGroupByArgs{...}
type SloObjectiveCountMetricBadInstanaApplicationGroupByInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadInstanaApplicationGroupByOutput() SloObjectiveCountMetricBadInstanaApplicationGroupByOutput
	ToSloObjectiveCountMetricBadInstanaApplicationGroupByOutputWithContext(context.Context) SloObjectiveCountMetricBadInstanaApplicationGroupByOutput
}

type SloObjectiveCountMetricBadInstanaApplicationGroupByArgs struct {
	// Group by tag
	Tag pulumi.StringInput `pulumi:"tag"`
	// Tag entity - one of 'DESTINATION', 'SOURCE', 'NOT_APPLICABLE'
	TagEntity         pulumi.StringInput    `pulumi:"tagEntity"`
	TagSecondLevelKey pulumi.StringPtrInput `pulumi:"tagSecondLevelKey"`
}

func (SloObjectiveCountMetricBadInstanaApplicationGroupByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadInstanaApplicationGroupBy)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadInstanaApplicationGroupByArgs) ToSloObjectiveCountMetricBadInstanaApplicationGroupByOutput() SloObjectiveCountMetricBadInstanaApplicationGroupByOutput {
	return i.ToSloObjectiveCountMetricBadInstanaApplicationGroupByOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadInstanaApplicationGroupByArgs) ToSloObjectiveCountMetricBadInstanaApplicationGroupByOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadInstanaApplicationGroupByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadInstanaApplicationGroupByOutput)
}

// SloObjectiveCountMetricBadInstanaApplicationGroupByArrayInput is an input type that accepts SloObjectiveCountMetricBadInstanaApplicationGroupByArray and SloObjectiveCountMetricBadInstanaApplicationGroupByArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadInstanaApplicationGroupByArrayInput` via:
//
//	SloObjectiveCountMetricBadInstanaApplicationGroupByArray{ SloObjectiveCountMetricBadInstanaApplicationGroupByArgs{...} }
type SloObjectiveCountMetricBadInstanaApplicationGroupByArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadInstanaApplicationGroupByArrayOutput() SloObjectiveCountMetricBadInstanaApplicationGroupByArrayOutput
	ToSloObjectiveCountMetricBadInstanaApplicationGroupByArrayOutputWithContext(context.Context) SloObjectiveCountMetricBadInstanaApplicationGroupByArrayOutput
}

type SloObjectiveCountMetricBadInstanaApplicationGroupByArray []SloObjectiveCountMetricBadInstanaApplicationGroupByInput

func (SloObjectiveCountMetricBadInstanaApplicationGroupByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadInstanaApplicationGroupBy)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadInstanaApplicationGroupByArray) ToSloObjectiveCountMetricBadInstanaApplicationGroupByArrayOutput() SloObjectiveCountMetricBadInstanaApplicationGroupByArrayOutput {
	return i.ToSloObjectiveCountMetricBadInstanaApplicationGroupByArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadInstanaApplicationGroupByArray) ToSloObjectiveCountMetricBadInstanaApplicationGroupByArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadInstanaApplicationGroupByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadInstanaApplicationGroupByArrayOutput)
}

type SloObjectiveCountMetricBadInstanaApplicationGroupByOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadInstanaApplicationGroupByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadInstanaApplicationGroupBy)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadInstanaApplicationGroupByOutput) ToSloObjectiveCountMetricBadInstanaApplicationGroupByOutput() SloObjectiveCountMetricBadInstanaApplicationGroupByOutput {
	return o
}

func (o SloObjectiveCountMetricBadInstanaApplicationGroupByOutput) ToSloObjectiveCountMetricBadInstanaApplicationGroupByOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadInstanaApplicationGroupByOutput {
	return o
}

// Group by tag
func (o SloObjectiveCountMetricBadInstanaApplicationGroupByOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadInstanaApplicationGroupBy) string { return v.Tag }).(pulumi.StringOutput)
}

// Tag entity - one of 'DESTINATION', 'SOURCE', 'NOT_APPLICABLE'
func (o SloObjectiveCountMetricBadInstanaApplicationGroupByOutput) TagEntity() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadInstanaApplicationGroupBy) string { return v.TagEntity }).(pulumi.StringOutput)
}

func (o SloObjectiveCountMetricBadInstanaApplicationGroupByOutput) TagSecondLevelKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadInstanaApplicationGroupBy) *string { return v.TagSecondLevelKey }).(pulumi.StringPtrOutput)
}

type SloObjectiveCountMetricBadInstanaApplicationGroupByArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadInstanaApplicationGroupByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadInstanaApplicationGroupBy)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadInstanaApplicationGroupByArrayOutput) ToSloObjectiveCountMetricBadInstanaApplicationGroupByArrayOutput() SloObjectiveCountMetricBadInstanaApplicationGroupByArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadInstanaApplicationGroupByArrayOutput) ToSloObjectiveCountMetricBadInstanaApplicationGroupByArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadInstanaApplicationGroupByArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadInstanaApplicationGroupByArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricBadInstanaApplicationGroupByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricBadInstanaApplicationGroupBy {
		return vs[0].([]SloObjectiveCountMetricBadInstanaApplicationGroupBy)[vs[1].(int)]
	}).(SloObjectiveCountMetricBadInstanaApplicationGroupByOutput)
}

type SloObjectiveCountMetricBadInstanaInfrastructure struct {
	// Metric ID one of 'calls', 'erroneousCalls', 'errors', 'latency'
	MetricId string `pulumi:"metricId"`
	// Metric retrieval method 'query' or 'snapshot'
	MetricRetrievalMethod string `pulumi:"metricRetrievalMethod"`
	// Plugin ID
	PluginId string `pulumi:"pluginId"`
	// Query for the metrics
	Query *string `pulumi:"query"`
	// Snapshot ID
	SnapshotId *string `pulumi:"snapshotId"`
}

// SloObjectiveCountMetricBadInstanaInfrastructureInput is an input type that accepts SloObjectiveCountMetricBadInstanaInfrastructureArgs and SloObjectiveCountMetricBadInstanaInfrastructureOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadInstanaInfrastructureInput` via:
//
//	SloObjectiveCountMetricBadInstanaInfrastructureArgs{...}
type SloObjectiveCountMetricBadInstanaInfrastructureInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadInstanaInfrastructureOutput() SloObjectiveCountMetricBadInstanaInfrastructureOutput
	ToSloObjectiveCountMetricBadInstanaInfrastructureOutputWithContext(context.Context) SloObjectiveCountMetricBadInstanaInfrastructureOutput
}

type SloObjectiveCountMetricBadInstanaInfrastructureArgs struct {
	// Metric ID one of 'calls', 'erroneousCalls', 'errors', 'latency'
	MetricId pulumi.StringInput `pulumi:"metricId"`
	// Metric retrieval method 'query' or 'snapshot'
	MetricRetrievalMethod pulumi.StringInput `pulumi:"metricRetrievalMethod"`
	// Plugin ID
	PluginId pulumi.StringInput `pulumi:"pluginId"`
	// Query for the metrics
	Query pulumi.StringPtrInput `pulumi:"query"`
	// Snapshot ID
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
}

func (SloObjectiveCountMetricBadInstanaInfrastructureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadInstanaInfrastructure)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadInstanaInfrastructureArgs) ToSloObjectiveCountMetricBadInstanaInfrastructureOutput() SloObjectiveCountMetricBadInstanaInfrastructureOutput {
	return i.ToSloObjectiveCountMetricBadInstanaInfrastructureOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadInstanaInfrastructureArgs) ToSloObjectiveCountMetricBadInstanaInfrastructureOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadInstanaInfrastructureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadInstanaInfrastructureOutput)
}

// SloObjectiveCountMetricBadInstanaInfrastructureArrayInput is an input type that accepts SloObjectiveCountMetricBadInstanaInfrastructureArray and SloObjectiveCountMetricBadInstanaInfrastructureArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadInstanaInfrastructureArrayInput` via:
//
//	SloObjectiveCountMetricBadInstanaInfrastructureArray{ SloObjectiveCountMetricBadInstanaInfrastructureArgs{...} }
type SloObjectiveCountMetricBadInstanaInfrastructureArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadInstanaInfrastructureArrayOutput() SloObjectiveCountMetricBadInstanaInfrastructureArrayOutput
	ToSloObjectiveCountMetricBadInstanaInfrastructureArrayOutputWithContext(context.Context) SloObjectiveCountMetricBadInstanaInfrastructureArrayOutput
}

type SloObjectiveCountMetricBadInstanaInfrastructureArray []SloObjectiveCountMetricBadInstanaInfrastructureInput

func (SloObjectiveCountMetricBadInstanaInfrastructureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadInstanaInfrastructure)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadInstanaInfrastructureArray) ToSloObjectiveCountMetricBadInstanaInfrastructureArrayOutput() SloObjectiveCountMetricBadInstanaInfrastructureArrayOutput {
	return i.ToSloObjectiveCountMetricBadInstanaInfrastructureArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadInstanaInfrastructureArray) ToSloObjectiveCountMetricBadInstanaInfrastructureArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadInstanaInfrastructureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadInstanaInfrastructureArrayOutput)
}

type SloObjectiveCountMetricBadInstanaInfrastructureOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadInstanaInfrastructureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadInstanaInfrastructure)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadInstanaInfrastructureOutput) ToSloObjectiveCountMetricBadInstanaInfrastructureOutput() SloObjectiveCountMetricBadInstanaInfrastructureOutput {
	return o
}

func (o SloObjectiveCountMetricBadInstanaInfrastructureOutput) ToSloObjectiveCountMetricBadInstanaInfrastructureOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadInstanaInfrastructureOutput {
	return o
}

// Metric ID one of 'calls', 'erroneousCalls', 'errors', 'latency'
func (o SloObjectiveCountMetricBadInstanaInfrastructureOutput) MetricId() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadInstanaInfrastructure) string { return v.MetricId }).(pulumi.StringOutput)
}

// Metric retrieval method 'query' or 'snapshot'
func (o SloObjectiveCountMetricBadInstanaInfrastructureOutput) MetricRetrievalMethod() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadInstanaInfrastructure) string { return v.MetricRetrievalMethod }).(pulumi.StringOutput)
}

// Plugin ID
func (o SloObjectiveCountMetricBadInstanaInfrastructureOutput) PluginId() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadInstanaInfrastructure) string { return v.PluginId }).(pulumi.StringOutput)
}

// Query for the metrics
func (o SloObjectiveCountMetricBadInstanaInfrastructureOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadInstanaInfrastructure) *string { return v.Query }).(pulumi.StringPtrOutput)
}

// Snapshot ID
func (o SloObjectiveCountMetricBadInstanaInfrastructureOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadInstanaInfrastructure) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

type SloObjectiveCountMetricBadInstanaInfrastructureArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadInstanaInfrastructureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadInstanaInfrastructure)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadInstanaInfrastructureArrayOutput) ToSloObjectiveCountMetricBadInstanaInfrastructureArrayOutput() SloObjectiveCountMetricBadInstanaInfrastructureArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadInstanaInfrastructureArrayOutput) ToSloObjectiveCountMetricBadInstanaInfrastructureArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadInstanaInfrastructureArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadInstanaInfrastructureArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricBadInstanaInfrastructureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricBadInstanaInfrastructure {
		return vs[0].([]SloObjectiveCountMetricBadInstanaInfrastructure)[vs[1].(int)]
	}).(SloObjectiveCountMetricBadInstanaInfrastructureOutput)
}

type SloObjectiveCountMetricBadLightstep struct {
	// Optional value to filter by percentiles
	Percentile *float64 `pulumi:"percentile"`
	// ID of the metrics stream
	StreamId *string `pulumi:"streamId"`
	// Type of data to filter by
	TypeOfData string `pulumi:"typeOfData"`
	// UQL query
	Uql *string `pulumi:"uql"`
}

// SloObjectiveCountMetricBadLightstepInput is an input type that accepts SloObjectiveCountMetricBadLightstepArgs and SloObjectiveCountMetricBadLightstepOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadLightstepInput` via:
//
//	SloObjectiveCountMetricBadLightstepArgs{...}
type SloObjectiveCountMetricBadLightstepInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadLightstepOutput() SloObjectiveCountMetricBadLightstepOutput
	ToSloObjectiveCountMetricBadLightstepOutputWithContext(context.Context) SloObjectiveCountMetricBadLightstepOutput
}

type SloObjectiveCountMetricBadLightstepArgs struct {
	// Optional value to filter by percentiles
	Percentile pulumi.Float64PtrInput `pulumi:"percentile"`
	// ID of the metrics stream
	StreamId pulumi.StringPtrInput `pulumi:"streamId"`
	// Type of data to filter by
	TypeOfData pulumi.StringInput `pulumi:"typeOfData"`
	// UQL query
	Uql pulumi.StringPtrInput `pulumi:"uql"`
}

func (SloObjectiveCountMetricBadLightstepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadLightstep)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadLightstepArgs) ToSloObjectiveCountMetricBadLightstepOutput() SloObjectiveCountMetricBadLightstepOutput {
	return i.ToSloObjectiveCountMetricBadLightstepOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadLightstepArgs) ToSloObjectiveCountMetricBadLightstepOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadLightstepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadLightstepOutput)
}

// SloObjectiveCountMetricBadLightstepArrayInput is an input type that accepts SloObjectiveCountMetricBadLightstepArray and SloObjectiveCountMetricBadLightstepArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadLightstepArrayInput` via:
//
//	SloObjectiveCountMetricBadLightstepArray{ SloObjectiveCountMetricBadLightstepArgs{...} }
type SloObjectiveCountMetricBadLightstepArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadLightstepArrayOutput() SloObjectiveCountMetricBadLightstepArrayOutput
	ToSloObjectiveCountMetricBadLightstepArrayOutputWithContext(context.Context) SloObjectiveCountMetricBadLightstepArrayOutput
}

type SloObjectiveCountMetricBadLightstepArray []SloObjectiveCountMetricBadLightstepInput

func (SloObjectiveCountMetricBadLightstepArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadLightstep)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadLightstepArray) ToSloObjectiveCountMetricBadLightstepArrayOutput() SloObjectiveCountMetricBadLightstepArrayOutput {
	return i.ToSloObjectiveCountMetricBadLightstepArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadLightstepArray) ToSloObjectiveCountMetricBadLightstepArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadLightstepArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadLightstepArrayOutput)
}

type SloObjectiveCountMetricBadLightstepOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadLightstepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadLightstep)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadLightstepOutput) ToSloObjectiveCountMetricBadLightstepOutput() SloObjectiveCountMetricBadLightstepOutput {
	return o
}

func (o SloObjectiveCountMetricBadLightstepOutput) ToSloObjectiveCountMetricBadLightstepOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadLightstepOutput {
	return o
}

// Optional value to filter by percentiles
func (o SloObjectiveCountMetricBadLightstepOutput) Percentile() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadLightstep) *float64 { return v.Percentile }).(pulumi.Float64PtrOutput)
}

// ID of the metrics stream
func (o SloObjectiveCountMetricBadLightstepOutput) StreamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadLightstep) *string { return v.StreamId }).(pulumi.StringPtrOutput)
}

// Type of data to filter by
func (o SloObjectiveCountMetricBadLightstepOutput) TypeOfData() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadLightstep) string { return v.TypeOfData }).(pulumi.StringOutput)
}

// UQL query
func (o SloObjectiveCountMetricBadLightstepOutput) Uql() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadLightstep) *string { return v.Uql }).(pulumi.StringPtrOutput)
}

type SloObjectiveCountMetricBadLightstepArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadLightstepArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadLightstep)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadLightstepArrayOutput) ToSloObjectiveCountMetricBadLightstepArrayOutput() SloObjectiveCountMetricBadLightstepArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadLightstepArrayOutput) ToSloObjectiveCountMetricBadLightstepArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadLightstepArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadLightstepArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricBadLightstepOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricBadLightstep {
		return vs[0].([]SloObjectiveCountMetricBadLightstep)[vs[1].(int)]
	}).(SloObjectiveCountMetricBadLightstepOutput)
}

type SloObjectiveCountMetricBadNewrelic struct {
	// Query for the metrics
	Nrql string `pulumi:"nrql"`
}

// SloObjectiveCountMetricBadNewrelicInput is an input type that accepts SloObjectiveCountMetricBadNewrelicArgs and SloObjectiveCountMetricBadNewrelicOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadNewrelicInput` via:
//
//	SloObjectiveCountMetricBadNewrelicArgs{...}
type SloObjectiveCountMetricBadNewrelicInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadNewrelicOutput() SloObjectiveCountMetricBadNewrelicOutput
	ToSloObjectiveCountMetricBadNewrelicOutputWithContext(context.Context) SloObjectiveCountMetricBadNewrelicOutput
}

type SloObjectiveCountMetricBadNewrelicArgs struct {
	// Query for the metrics
	Nrql pulumi.StringInput `pulumi:"nrql"`
}

func (SloObjectiveCountMetricBadNewrelicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadNewrelic)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadNewrelicArgs) ToSloObjectiveCountMetricBadNewrelicOutput() SloObjectiveCountMetricBadNewrelicOutput {
	return i.ToSloObjectiveCountMetricBadNewrelicOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadNewrelicArgs) ToSloObjectiveCountMetricBadNewrelicOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadNewrelicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadNewrelicOutput)
}

// SloObjectiveCountMetricBadNewrelicArrayInput is an input type that accepts SloObjectiveCountMetricBadNewrelicArray and SloObjectiveCountMetricBadNewrelicArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadNewrelicArrayInput` via:
//
//	SloObjectiveCountMetricBadNewrelicArray{ SloObjectiveCountMetricBadNewrelicArgs{...} }
type SloObjectiveCountMetricBadNewrelicArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadNewrelicArrayOutput() SloObjectiveCountMetricBadNewrelicArrayOutput
	ToSloObjectiveCountMetricBadNewrelicArrayOutputWithContext(context.Context) SloObjectiveCountMetricBadNewrelicArrayOutput
}

type SloObjectiveCountMetricBadNewrelicArray []SloObjectiveCountMetricBadNewrelicInput

func (SloObjectiveCountMetricBadNewrelicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadNewrelic)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadNewrelicArray) ToSloObjectiveCountMetricBadNewrelicArrayOutput() SloObjectiveCountMetricBadNewrelicArrayOutput {
	return i.ToSloObjectiveCountMetricBadNewrelicArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadNewrelicArray) ToSloObjectiveCountMetricBadNewrelicArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadNewrelicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadNewrelicArrayOutput)
}

type SloObjectiveCountMetricBadNewrelicOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadNewrelicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadNewrelic)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadNewrelicOutput) ToSloObjectiveCountMetricBadNewrelicOutput() SloObjectiveCountMetricBadNewrelicOutput {
	return o
}

func (o SloObjectiveCountMetricBadNewrelicOutput) ToSloObjectiveCountMetricBadNewrelicOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadNewrelicOutput {
	return o
}

// Query for the metrics
func (o SloObjectiveCountMetricBadNewrelicOutput) Nrql() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadNewrelic) string { return v.Nrql }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricBadNewrelicArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadNewrelicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadNewrelic)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadNewrelicArrayOutput) ToSloObjectiveCountMetricBadNewrelicArrayOutput() SloObjectiveCountMetricBadNewrelicArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadNewrelicArrayOutput) ToSloObjectiveCountMetricBadNewrelicArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadNewrelicArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadNewrelicArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricBadNewrelicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricBadNewrelic {
		return vs[0].([]SloObjectiveCountMetricBadNewrelic)[vs[1].(int)]
	}).(SloObjectiveCountMetricBadNewrelicOutput)
}

type SloObjectiveCountMetricBadOpentsdb struct {
	// Query for the metrics
	Query string `pulumi:"query"`
}

// SloObjectiveCountMetricBadOpentsdbInput is an input type that accepts SloObjectiveCountMetricBadOpentsdbArgs and SloObjectiveCountMetricBadOpentsdbOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadOpentsdbInput` via:
//
//	SloObjectiveCountMetricBadOpentsdbArgs{...}
type SloObjectiveCountMetricBadOpentsdbInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadOpentsdbOutput() SloObjectiveCountMetricBadOpentsdbOutput
	ToSloObjectiveCountMetricBadOpentsdbOutputWithContext(context.Context) SloObjectiveCountMetricBadOpentsdbOutput
}

type SloObjectiveCountMetricBadOpentsdbArgs struct {
	// Query for the metrics
	Query pulumi.StringInput `pulumi:"query"`
}

func (SloObjectiveCountMetricBadOpentsdbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadOpentsdb)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadOpentsdbArgs) ToSloObjectiveCountMetricBadOpentsdbOutput() SloObjectiveCountMetricBadOpentsdbOutput {
	return i.ToSloObjectiveCountMetricBadOpentsdbOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadOpentsdbArgs) ToSloObjectiveCountMetricBadOpentsdbOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadOpentsdbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadOpentsdbOutput)
}

// SloObjectiveCountMetricBadOpentsdbArrayInput is an input type that accepts SloObjectiveCountMetricBadOpentsdbArray and SloObjectiveCountMetricBadOpentsdbArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadOpentsdbArrayInput` via:
//
//	SloObjectiveCountMetricBadOpentsdbArray{ SloObjectiveCountMetricBadOpentsdbArgs{...} }
type SloObjectiveCountMetricBadOpentsdbArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadOpentsdbArrayOutput() SloObjectiveCountMetricBadOpentsdbArrayOutput
	ToSloObjectiveCountMetricBadOpentsdbArrayOutputWithContext(context.Context) SloObjectiveCountMetricBadOpentsdbArrayOutput
}

type SloObjectiveCountMetricBadOpentsdbArray []SloObjectiveCountMetricBadOpentsdbInput

func (SloObjectiveCountMetricBadOpentsdbArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadOpentsdb)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadOpentsdbArray) ToSloObjectiveCountMetricBadOpentsdbArrayOutput() SloObjectiveCountMetricBadOpentsdbArrayOutput {
	return i.ToSloObjectiveCountMetricBadOpentsdbArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadOpentsdbArray) ToSloObjectiveCountMetricBadOpentsdbArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadOpentsdbArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadOpentsdbArrayOutput)
}

type SloObjectiveCountMetricBadOpentsdbOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadOpentsdbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadOpentsdb)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadOpentsdbOutput) ToSloObjectiveCountMetricBadOpentsdbOutput() SloObjectiveCountMetricBadOpentsdbOutput {
	return o
}

func (o SloObjectiveCountMetricBadOpentsdbOutput) ToSloObjectiveCountMetricBadOpentsdbOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadOpentsdbOutput {
	return o
}

// Query for the metrics
func (o SloObjectiveCountMetricBadOpentsdbOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadOpentsdb) string { return v.Query }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricBadOpentsdbArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadOpentsdbArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadOpentsdb)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadOpentsdbArrayOutput) ToSloObjectiveCountMetricBadOpentsdbArrayOutput() SloObjectiveCountMetricBadOpentsdbArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadOpentsdbArrayOutput) ToSloObjectiveCountMetricBadOpentsdbArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadOpentsdbArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadOpentsdbArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricBadOpentsdbOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricBadOpentsdb {
		return vs[0].([]SloObjectiveCountMetricBadOpentsdb)[vs[1].(int)]
	}).(SloObjectiveCountMetricBadOpentsdbOutput)
}

type SloObjectiveCountMetricBadPingdom struct {
	// Pingdom uptime or transaction check's ID
	CheckId string `pulumi:"checkId"`
	// Pingdom check type - uptime or transaction
	CheckType *string `pulumi:"checkType"`
	// Optional for the Uptime checks. Use it to filter the Pingdom check results by status
	Status *string `pulumi:"status"`
}

// SloObjectiveCountMetricBadPingdomInput is an input type that accepts SloObjectiveCountMetricBadPingdomArgs and SloObjectiveCountMetricBadPingdomOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadPingdomInput` via:
//
//	SloObjectiveCountMetricBadPingdomArgs{...}
type SloObjectiveCountMetricBadPingdomInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadPingdomOutput() SloObjectiveCountMetricBadPingdomOutput
	ToSloObjectiveCountMetricBadPingdomOutputWithContext(context.Context) SloObjectiveCountMetricBadPingdomOutput
}

type SloObjectiveCountMetricBadPingdomArgs struct {
	// Pingdom uptime or transaction check's ID
	CheckId pulumi.StringInput `pulumi:"checkId"`
	// Pingdom check type - uptime or transaction
	CheckType pulumi.StringPtrInput `pulumi:"checkType"`
	// Optional for the Uptime checks. Use it to filter the Pingdom check results by status
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SloObjectiveCountMetricBadPingdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadPingdom)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadPingdomArgs) ToSloObjectiveCountMetricBadPingdomOutput() SloObjectiveCountMetricBadPingdomOutput {
	return i.ToSloObjectiveCountMetricBadPingdomOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadPingdomArgs) ToSloObjectiveCountMetricBadPingdomOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadPingdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadPingdomOutput)
}

// SloObjectiveCountMetricBadPingdomArrayInput is an input type that accepts SloObjectiveCountMetricBadPingdomArray and SloObjectiveCountMetricBadPingdomArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadPingdomArrayInput` via:
//
//	SloObjectiveCountMetricBadPingdomArray{ SloObjectiveCountMetricBadPingdomArgs{...} }
type SloObjectiveCountMetricBadPingdomArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadPingdomArrayOutput() SloObjectiveCountMetricBadPingdomArrayOutput
	ToSloObjectiveCountMetricBadPingdomArrayOutputWithContext(context.Context) SloObjectiveCountMetricBadPingdomArrayOutput
}

type SloObjectiveCountMetricBadPingdomArray []SloObjectiveCountMetricBadPingdomInput

func (SloObjectiveCountMetricBadPingdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadPingdom)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadPingdomArray) ToSloObjectiveCountMetricBadPingdomArrayOutput() SloObjectiveCountMetricBadPingdomArrayOutput {
	return i.ToSloObjectiveCountMetricBadPingdomArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadPingdomArray) ToSloObjectiveCountMetricBadPingdomArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadPingdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadPingdomArrayOutput)
}

type SloObjectiveCountMetricBadPingdomOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadPingdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadPingdom)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadPingdomOutput) ToSloObjectiveCountMetricBadPingdomOutput() SloObjectiveCountMetricBadPingdomOutput {
	return o
}

func (o SloObjectiveCountMetricBadPingdomOutput) ToSloObjectiveCountMetricBadPingdomOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadPingdomOutput {
	return o
}

// Pingdom uptime or transaction check's ID
func (o SloObjectiveCountMetricBadPingdomOutput) CheckId() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadPingdom) string { return v.CheckId }).(pulumi.StringOutput)
}

// Pingdom check type - uptime or transaction
func (o SloObjectiveCountMetricBadPingdomOutput) CheckType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadPingdom) *string { return v.CheckType }).(pulumi.StringPtrOutput)
}

// Optional for the Uptime checks. Use it to filter the Pingdom check results by status
func (o SloObjectiveCountMetricBadPingdomOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadPingdom) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SloObjectiveCountMetricBadPingdomArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadPingdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadPingdom)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadPingdomArrayOutput) ToSloObjectiveCountMetricBadPingdomArrayOutput() SloObjectiveCountMetricBadPingdomArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadPingdomArrayOutput) ToSloObjectiveCountMetricBadPingdomArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadPingdomArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadPingdomArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricBadPingdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricBadPingdom {
		return vs[0].([]SloObjectiveCountMetricBadPingdom)[vs[1].(int)]
	}).(SloObjectiveCountMetricBadPingdomOutput)
}

type SloObjectiveCountMetricBadPrometheus struct {
	// Query for the metrics
	Promql string `pulumi:"promql"`
}

// SloObjectiveCountMetricBadPrometheusInput is an input type that accepts SloObjectiveCountMetricBadPrometheusArgs and SloObjectiveCountMetricBadPrometheusOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadPrometheusInput` via:
//
//	SloObjectiveCountMetricBadPrometheusArgs{...}
type SloObjectiveCountMetricBadPrometheusInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadPrometheusOutput() SloObjectiveCountMetricBadPrometheusOutput
	ToSloObjectiveCountMetricBadPrometheusOutputWithContext(context.Context) SloObjectiveCountMetricBadPrometheusOutput
}

type SloObjectiveCountMetricBadPrometheusArgs struct {
	// Query for the metrics
	Promql pulumi.StringInput `pulumi:"promql"`
}

func (SloObjectiveCountMetricBadPrometheusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadPrometheus)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadPrometheusArgs) ToSloObjectiveCountMetricBadPrometheusOutput() SloObjectiveCountMetricBadPrometheusOutput {
	return i.ToSloObjectiveCountMetricBadPrometheusOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadPrometheusArgs) ToSloObjectiveCountMetricBadPrometheusOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadPrometheusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadPrometheusOutput)
}

// SloObjectiveCountMetricBadPrometheusArrayInput is an input type that accepts SloObjectiveCountMetricBadPrometheusArray and SloObjectiveCountMetricBadPrometheusArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadPrometheusArrayInput` via:
//
//	SloObjectiveCountMetricBadPrometheusArray{ SloObjectiveCountMetricBadPrometheusArgs{...} }
type SloObjectiveCountMetricBadPrometheusArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadPrometheusArrayOutput() SloObjectiveCountMetricBadPrometheusArrayOutput
	ToSloObjectiveCountMetricBadPrometheusArrayOutputWithContext(context.Context) SloObjectiveCountMetricBadPrometheusArrayOutput
}

type SloObjectiveCountMetricBadPrometheusArray []SloObjectiveCountMetricBadPrometheusInput

func (SloObjectiveCountMetricBadPrometheusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadPrometheus)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadPrometheusArray) ToSloObjectiveCountMetricBadPrometheusArrayOutput() SloObjectiveCountMetricBadPrometheusArrayOutput {
	return i.ToSloObjectiveCountMetricBadPrometheusArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadPrometheusArray) ToSloObjectiveCountMetricBadPrometheusArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadPrometheusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadPrometheusArrayOutput)
}

type SloObjectiveCountMetricBadPrometheusOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadPrometheusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadPrometheus)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadPrometheusOutput) ToSloObjectiveCountMetricBadPrometheusOutput() SloObjectiveCountMetricBadPrometheusOutput {
	return o
}

func (o SloObjectiveCountMetricBadPrometheusOutput) ToSloObjectiveCountMetricBadPrometheusOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadPrometheusOutput {
	return o
}

// Query for the metrics
func (o SloObjectiveCountMetricBadPrometheusOutput) Promql() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadPrometheus) string { return v.Promql }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricBadPrometheusArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadPrometheusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadPrometheus)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadPrometheusArrayOutput) ToSloObjectiveCountMetricBadPrometheusArrayOutput() SloObjectiveCountMetricBadPrometheusArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadPrometheusArrayOutput) ToSloObjectiveCountMetricBadPrometheusArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadPrometheusArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadPrometheusArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricBadPrometheusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricBadPrometheus {
		return vs[0].([]SloObjectiveCountMetricBadPrometheus)[vs[1].(int)]
	}).(SloObjectiveCountMetricBadPrometheusOutput)
}

type SloObjectiveCountMetricBadRedshift struct {
	// Redshift custer ID
	ClusterId string `pulumi:"clusterId"`
	// Database name
	DatabaseName string `pulumi:"databaseName"`
	// Query for the metrics
	Query string `pulumi:"query"`
	// Region of the CloudWatch instance
	Region string `pulumi:"region"`
}

// SloObjectiveCountMetricBadRedshiftInput is an input type that accepts SloObjectiveCountMetricBadRedshiftArgs and SloObjectiveCountMetricBadRedshiftOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadRedshiftInput` via:
//
//	SloObjectiveCountMetricBadRedshiftArgs{...}
type SloObjectiveCountMetricBadRedshiftInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadRedshiftOutput() SloObjectiveCountMetricBadRedshiftOutput
	ToSloObjectiveCountMetricBadRedshiftOutputWithContext(context.Context) SloObjectiveCountMetricBadRedshiftOutput
}

type SloObjectiveCountMetricBadRedshiftArgs struct {
	// Redshift custer ID
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// Database name
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Query for the metrics
	Query pulumi.StringInput `pulumi:"query"`
	// Region of the CloudWatch instance
	Region pulumi.StringInput `pulumi:"region"`
}

func (SloObjectiveCountMetricBadRedshiftArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadRedshift)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadRedshiftArgs) ToSloObjectiveCountMetricBadRedshiftOutput() SloObjectiveCountMetricBadRedshiftOutput {
	return i.ToSloObjectiveCountMetricBadRedshiftOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadRedshiftArgs) ToSloObjectiveCountMetricBadRedshiftOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadRedshiftOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadRedshiftOutput)
}

// SloObjectiveCountMetricBadRedshiftArrayInput is an input type that accepts SloObjectiveCountMetricBadRedshiftArray and SloObjectiveCountMetricBadRedshiftArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadRedshiftArrayInput` via:
//
//	SloObjectiveCountMetricBadRedshiftArray{ SloObjectiveCountMetricBadRedshiftArgs{...} }
type SloObjectiveCountMetricBadRedshiftArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadRedshiftArrayOutput() SloObjectiveCountMetricBadRedshiftArrayOutput
	ToSloObjectiveCountMetricBadRedshiftArrayOutputWithContext(context.Context) SloObjectiveCountMetricBadRedshiftArrayOutput
}

type SloObjectiveCountMetricBadRedshiftArray []SloObjectiveCountMetricBadRedshiftInput

func (SloObjectiveCountMetricBadRedshiftArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadRedshift)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadRedshiftArray) ToSloObjectiveCountMetricBadRedshiftArrayOutput() SloObjectiveCountMetricBadRedshiftArrayOutput {
	return i.ToSloObjectiveCountMetricBadRedshiftArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadRedshiftArray) ToSloObjectiveCountMetricBadRedshiftArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadRedshiftArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadRedshiftArrayOutput)
}

type SloObjectiveCountMetricBadRedshiftOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadRedshiftOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadRedshift)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadRedshiftOutput) ToSloObjectiveCountMetricBadRedshiftOutput() SloObjectiveCountMetricBadRedshiftOutput {
	return o
}

func (o SloObjectiveCountMetricBadRedshiftOutput) ToSloObjectiveCountMetricBadRedshiftOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadRedshiftOutput {
	return o
}

// Redshift custer ID
func (o SloObjectiveCountMetricBadRedshiftOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadRedshift) string { return v.ClusterId }).(pulumi.StringOutput)
}

// Database name
func (o SloObjectiveCountMetricBadRedshiftOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadRedshift) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// Query for the metrics
func (o SloObjectiveCountMetricBadRedshiftOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadRedshift) string { return v.Query }).(pulumi.StringOutput)
}

// Region of the CloudWatch instance
func (o SloObjectiveCountMetricBadRedshiftOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadRedshift) string { return v.Region }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricBadRedshiftArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadRedshiftArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadRedshift)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadRedshiftArrayOutput) ToSloObjectiveCountMetricBadRedshiftArrayOutput() SloObjectiveCountMetricBadRedshiftArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadRedshiftArrayOutput) ToSloObjectiveCountMetricBadRedshiftArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadRedshiftArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadRedshiftArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricBadRedshiftOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricBadRedshift {
		return vs[0].([]SloObjectiveCountMetricBadRedshift)[vs[1].(int)]
	}).(SloObjectiveCountMetricBadRedshiftOutput)
}

type SloObjectiveCountMetricBadSplunk struct {
	// Query for the metrics
	Query string `pulumi:"query"`
}

// SloObjectiveCountMetricBadSplunkInput is an input type that accepts SloObjectiveCountMetricBadSplunkArgs and SloObjectiveCountMetricBadSplunkOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadSplunkInput` via:
//
//	SloObjectiveCountMetricBadSplunkArgs{...}
type SloObjectiveCountMetricBadSplunkInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadSplunkOutput() SloObjectiveCountMetricBadSplunkOutput
	ToSloObjectiveCountMetricBadSplunkOutputWithContext(context.Context) SloObjectiveCountMetricBadSplunkOutput
}

type SloObjectiveCountMetricBadSplunkArgs struct {
	// Query for the metrics
	Query pulumi.StringInput `pulumi:"query"`
}

func (SloObjectiveCountMetricBadSplunkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadSplunk)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadSplunkArgs) ToSloObjectiveCountMetricBadSplunkOutput() SloObjectiveCountMetricBadSplunkOutput {
	return i.ToSloObjectiveCountMetricBadSplunkOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadSplunkArgs) ToSloObjectiveCountMetricBadSplunkOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadSplunkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadSplunkOutput)
}

// SloObjectiveCountMetricBadSplunkArrayInput is an input type that accepts SloObjectiveCountMetricBadSplunkArray and SloObjectiveCountMetricBadSplunkArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadSplunkArrayInput` via:
//
//	SloObjectiveCountMetricBadSplunkArray{ SloObjectiveCountMetricBadSplunkArgs{...} }
type SloObjectiveCountMetricBadSplunkArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadSplunkArrayOutput() SloObjectiveCountMetricBadSplunkArrayOutput
	ToSloObjectiveCountMetricBadSplunkArrayOutputWithContext(context.Context) SloObjectiveCountMetricBadSplunkArrayOutput
}

type SloObjectiveCountMetricBadSplunkArray []SloObjectiveCountMetricBadSplunkInput

func (SloObjectiveCountMetricBadSplunkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadSplunk)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadSplunkArray) ToSloObjectiveCountMetricBadSplunkArrayOutput() SloObjectiveCountMetricBadSplunkArrayOutput {
	return i.ToSloObjectiveCountMetricBadSplunkArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadSplunkArray) ToSloObjectiveCountMetricBadSplunkArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadSplunkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadSplunkArrayOutput)
}

type SloObjectiveCountMetricBadSplunkOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadSplunkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadSplunk)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadSplunkOutput) ToSloObjectiveCountMetricBadSplunkOutput() SloObjectiveCountMetricBadSplunkOutput {
	return o
}

func (o SloObjectiveCountMetricBadSplunkOutput) ToSloObjectiveCountMetricBadSplunkOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadSplunkOutput {
	return o
}

// Query for the metrics
func (o SloObjectiveCountMetricBadSplunkOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadSplunk) string { return v.Query }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricBadSplunkArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadSplunkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadSplunk)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadSplunkArrayOutput) ToSloObjectiveCountMetricBadSplunkArrayOutput() SloObjectiveCountMetricBadSplunkArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadSplunkArrayOutput) ToSloObjectiveCountMetricBadSplunkArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadSplunkArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadSplunkArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricBadSplunkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricBadSplunk {
		return vs[0].([]SloObjectiveCountMetricBadSplunk)[vs[1].(int)]
	}).(SloObjectiveCountMetricBadSplunkOutput)
}

type SloObjectiveCountMetricBadSplunkObservability struct {
	// Query for the metrics
	Program string `pulumi:"program"`
}

// SloObjectiveCountMetricBadSplunkObservabilityInput is an input type that accepts SloObjectiveCountMetricBadSplunkObservabilityArgs and SloObjectiveCountMetricBadSplunkObservabilityOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadSplunkObservabilityInput` via:
//
//	SloObjectiveCountMetricBadSplunkObservabilityArgs{...}
type SloObjectiveCountMetricBadSplunkObservabilityInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadSplunkObservabilityOutput() SloObjectiveCountMetricBadSplunkObservabilityOutput
	ToSloObjectiveCountMetricBadSplunkObservabilityOutputWithContext(context.Context) SloObjectiveCountMetricBadSplunkObservabilityOutput
}

type SloObjectiveCountMetricBadSplunkObservabilityArgs struct {
	// Query for the metrics
	Program pulumi.StringInput `pulumi:"program"`
}

func (SloObjectiveCountMetricBadSplunkObservabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadSplunkObservability)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadSplunkObservabilityArgs) ToSloObjectiveCountMetricBadSplunkObservabilityOutput() SloObjectiveCountMetricBadSplunkObservabilityOutput {
	return i.ToSloObjectiveCountMetricBadSplunkObservabilityOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadSplunkObservabilityArgs) ToSloObjectiveCountMetricBadSplunkObservabilityOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadSplunkObservabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadSplunkObservabilityOutput)
}

// SloObjectiveCountMetricBadSplunkObservabilityArrayInput is an input type that accepts SloObjectiveCountMetricBadSplunkObservabilityArray and SloObjectiveCountMetricBadSplunkObservabilityArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadSplunkObservabilityArrayInput` via:
//
//	SloObjectiveCountMetricBadSplunkObservabilityArray{ SloObjectiveCountMetricBadSplunkObservabilityArgs{...} }
type SloObjectiveCountMetricBadSplunkObservabilityArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadSplunkObservabilityArrayOutput() SloObjectiveCountMetricBadSplunkObservabilityArrayOutput
	ToSloObjectiveCountMetricBadSplunkObservabilityArrayOutputWithContext(context.Context) SloObjectiveCountMetricBadSplunkObservabilityArrayOutput
}

type SloObjectiveCountMetricBadSplunkObservabilityArray []SloObjectiveCountMetricBadSplunkObservabilityInput

func (SloObjectiveCountMetricBadSplunkObservabilityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadSplunkObservability)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadSplunkObservabilityArray) ToSloObjectiveCountMetricBadSplunkObservabilityArrayOutput() SloObjectiveCountMetricBadSplunkObservabilityArrayOutput {
	return i.ToSloObjectiveCountMetricBadSplunkObservabilityArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadSplunkObservabilityArray) ToSloObjectiveCountMetricBadSplunkObservabilityArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadSplunkObservabilityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadSplunkObservabilityArrayOutput)
}

type SloObjectiveCountMetricBadSplunkObservabilityOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadSplunkObservabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadSplunkObservability)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadSplunkObservabilityOutput) ToSloObjectiveCountMetricBadSplunkObservabilityOutput() SloObjectiveCountMetricBadSplunkObservabilityOutput {
	return o
}

func (o SloObjectiveCountMetricBadSplunkObservabilityOutput) ToSloObjectiveCountMetricBadSplunkObservabilityOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadSplunkObservabilityOutput {
	return o
}

// Query for the metrics
func (o SloObjectiveCountMetricBadSplunkObservabilityOutput) Program() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadSplunkObservability) string { return v.Program }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricBadSplunkObservabilityArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadSplunkObservabilityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadSplunkObservability)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadSplunkObservabilityArrayOutput) ToSloObjectiveCountMetricBadSplunkObservabilityArrayOutput() SloObjectiveCountMetricBadSplunkObservabilityArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadSplunkObservabilityArrayOutput) ToSloObjectiveCountMetricBadSplunkObservabilityArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadSplunkObservabilityArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadSplunkObservabilityArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricBadSplunkObservabilityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricBadSplunkObservability {
		return vs[0].([]SloObjectiveCountMetricBadSplunkObservability)[vs[1].(int)]
	}).(SloObjectiveCountMetricBadSplunkObservabilityOutput)
}

type SloObjectiveCountMetricBadSumologic struct {
	// Period of data aggregation
	Quantization *string `pulumi:"quantization"`
	// Query for the metrics
	Query string `pulumi:"query"`
	// Aggregation function - avg, sum, min, max, count, none
	Rollup *string `pulumi:"rollup"`
	// Sumologic source - metrics or logs
	Type string `pulumi:"type"`
}

// SloObjectiveCountMetricBadSumologicInput is an input type that accepts SloObjectiveCountMetricBadSumologicArgs and SloObjectiveCountMetricBadSumologicOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadSumologicInput` via:
//
//	SloObjectiveCountMetricBadSumologicArgs{...}
type SloObjectiveCountMetricBadSumologicInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadSumologicOutput() SloObjectiveCountMetricBadSumologicOutput
	ToSloObjectiveCountMetricBadSumologicOutputWithContext(context.Context) SloObjectiveCountMetricBadSumologicOutput
}

type SloObjectiveCountMetricBadSumologicArgs struct {
	// Period of data aggregation
	Quantization pulumi.StringPtrInput `pulumi:"quantization"`
	// Query for the metrics
	Query pulumi.StringInput `pulumi:"query"`
	// Aggregation function - avg, sum, min, max, count, none
	Rollup pulumi.StringPtrInput `pulumi:"rollup"`
	// Sumologic source - metrics or logs
	Type pulumi.StringInput `pulumi:"type"`
}

func (SloObjectiveCountMetricBadSumologicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadSumologic)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadSumologicArgs) ToSloObjectiveCountMetricBadSumologicOutput() SloObjectiveCountMetricBadSumologicOutput {
	return i.ToSloObjectiveCountMetricBadSumologicOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadSumologicArgs) ToSloObjectiveCountMetricBadSumologicOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadSumologicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadSumologicOutput)
}

// SloObjectiveCountMetricBadSumologicArrayInput is an input type that accepts SloObjectiveCountMetricBadSumologicArray and SloObjectiveCountMetricBadSumologicArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadSumologicArrayInput` via:
//
//	SloObjectiveCountMetricBadSumologicArray{ SloObjectiveCountMetricBadSumologicArgs{...} }
type SloObjectiveCountMetricBadSumologicArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadSumologicArrayOutput() SloObjectiveCountMetricBadSumologicArrayOutput
	ToSloObjectiveCountMetricBadSumologicArrayOutputWithContext(context.Context) SloObjectiveCountMetricBadSumologicArrayOutput
}

type SloObjectiveCountMetricBadSumologicArray []SloObjectiveCountMetricBadSumologicInput

func (SloObjectiveCountMetricBadSumologicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadSumologic)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadSumologicArray) ToSloObjectiveCountMetricBadSumologicArrayOutput() SloObjectiveCountMetricBadSumologicArrayOutput {
	return i.ToSloObjectiveCountMetricBadSumologicArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadSumologicArray) ToSloObjectiveCountMetricBadSumologicArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadSumologicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadSumologicArrayOutput)
}

type SloObjectiveCountMetricBadSumologicOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadSumologicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadSumologic)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadSumologicOutput) ToSloObjectiveCountMetricBadSumologicOutput() SloObjectiveCountMetricBadSumologicOutput {
	return o
}

func (o SloObjectiveCountMetricBadSumologicOutput) ToSloObjectiveCountMetricBadSumologicOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadSumologicOutput {
	return o
}

// Period of data aggregation
func (o SloObjectiveCountMetricBadSumologicOutput) Quantization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadSumologic) *string { return v.Quantization }).(pulumi.StringPtrOutput)
}

// Query for the metrics
func (o SloObjectiveCountMetricBadSumologicOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadSumologic) string { return v.Query }).(pulumi.StringOutput)
}

// Aggregation function - avg, sum, min, max, count, none
func (o SloObjectiveCountMetricBadSumologicOutput) Rollup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadSumologic) *string { return v.Rollup }).(pulumi.StringPtrOutput)
}

// Sumologic source - metrics or logs
func (o SloObjectiveCountMetricBadSumologicOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadSumologic) string { return v.Type }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricBadSumologicArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadSumologicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadSumologic)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadSumologicArrayOutput) ToSloObjectiveCountMetricBadSumologicArrayOutput() SloObjectiveCountMetricBadSumologicArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadSumologicArrayOutput) ToSloObjectiveCountMetricBadSumologicArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadSumologicArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadSumologicArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricBadSumologicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricBadSumologic {
		return vs[0].([]SloObjectiveCountMetricBadSumologic)[vs[1].(int)]
	}).(SloObjectiveCountMetricBadSumologicOutput)
}

type SloObjectiveCountMetricBadThousandeye struct {
	// ID of the test
	TestId int `pulumi:"testId"`
}

// SloObjectiveCountMetricBadThousandeyeInput is an input type that accepts SloObjectiveCountMetricBadThousandeyeArgs and SloObjectiveCountMetricBadThousandeyeOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadThousandeyeInput` via:
//
//	SloObjectiveCountMetricBadThousandeyeArgs{...}
type SloObjectiveCountMetricBadThousandeyeInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadThousandeyeOutput() SloObjectiveCountMetricBadThousandeyeOutput
	ToSloObjectiveCountMetricBadThousandeyeOutputWithContext(context.Context) SloObjectiveCountMetricBadThousandeyeOutput
}

type SloObjectiveCountMetricBadThousandeyeArgs struct {
	// ID of the test
	TestId pulumi.IntInput `pulumi:"testId"`
}

func (SloObjectiveCountMetricBadThousandeyeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadThousandeye)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadThousandeyeArgs) ToSloObjectiveCountMetricBadThousandeyeOutput() SloObjectiveCountMetricBadThousandeyeOutput {
	return i.ToSloObjectiveCountMetricBadThousandeyeOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadThousandeyeArgs) ToSloObjectiveCountMetricBadThousandeyeOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadThousandeyeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadThousandeyeOutput)
}

// SloObjectiveCountMetricBadThousandeyeArrayInput is an input type that accepts SloObjectiveCountMetricBadThousandeyeArray and SloObjectiveCountMetricBadThousandeyeArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricBadThousandeyeArrayInput` via:
//
//	SloObjectiveCountMetricBadThousandeyeArray{ SloObjectiveCountMetricBadThousandeyeArgs{...} }
type SloObjectiveCountMetricBadThousandeyeArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricBadThousandeyeArrayOutput() SloObjectiveCountMetricBadThousandeyeArrayOutput
	ToSloObjectiveCountMetricBadThousandeyeArrayOutputWithContext(context.Context) SloObjectiveCountMetricBadThousandeyeArrayOutput
}

type SloObjectiveCountMetricBadThousandeyeArray []SloObjectiveCountMetricBadThousandeyeInput

func (SloObjectiveCountMetricBadThousandeyeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadThousandeye)(nil)).Elem()
}

func (i SloObjectiveCountMetricBadThousandeyeArray) ToSloObjectiveCountMetricBadThousandeyeArrayOutput() SloObjectiveCountMetricBadThousandeyeArrayOutput {
	return i.ToSloObjectiveCountMetricBadThousandeyeArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricBadThousandeyeArray) ToSloObjectiveCountMetricBadThousandeyeArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadThousandeyeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricBadThousandeyeArrayOutput)
}

type SloObjectiveCountMetricBadThousandeyeOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadThousandeyeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricBadThousandeye)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadThousandeyeOutput) ToSloObjectiveCountMetricBadThousandeyeOutput() SloObjectiveCountMetricBadThousandeyeOutput {
	return o
}

func (o SloObjectiveCountMetricBadThousandeyeOutput) ToSloObjectiveCountMetricBadThousandeyeOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadThousandeyeOutput {
	return o
}

// ID of the test
func (o SloObjectiveCountMetricBadThousandeyeOutput) TestId() pulumi.IntOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricBadThousandeye) int { return v.TestId }).(pulumi.IntOutput)
}

type SloObjectiveCountMetricBadThousandeyeArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricBadThousandeyeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricBadThousandeye)(nil)).Elem()
}

func (o SloObjectiveCountMetricBadThousandeyeArrayOutput) ToSloObjectiveCountMetricBadThousandeyeArrayOutput() SloObjectiveCountMetricBadThousandeyeArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadThousandeyeArrayOutput) ToSloObjectiveCountMetricBadThousandeyeArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricBadThousandeyeArrayOutput {
	return o
}

func (o SloObjectiveCountMetricBadThousandeyeArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricBadThousandeyeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricBadThousandeye {
		return vs[0].([]SloObjectiveCountMetricBadThousandeye)[vs[1].(int)]
	}).(SloObjectiveCountMetricBadThousandeyeOutput)
}

type SloObjectiveCountMetricGood struct {
	// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Prometheus/#creating-slos-with-ams-prometheus)
	AmazonPrometheuses []SloObjectiveCountMetricGoodAmazonPrometheus `pulumi:"amazonPrometheuses"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/appdynamics#creating-slos-with-appdynamics)
	Appdynamics []SloObjectiveCountMetricGoodAppdynamic `pulumi:"appdynamics"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/azure-monitor#creating-slos-with-azure-monitor)
	AzureMonitors []SloObjectiveCountMetricGoodAzureMonitor `pulumi:"azureMonitors"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/bigquery#creating-slos-with-bigquery)
	Bigqueries []SloObjectiveCountMetricGoodBigquery `pulumi:"bigqueries"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_CloudWatch/#creating-slos-with-cloudwatch)
	Cloudwatches []SloObjectiveCountMetricGoodCloudwatch `pulumi:"cloudwatches"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/datadog#creating-slos-with-datadog)
	Datadogs []SloObjectiveCountMetricGoodDatadog `pulumi:"datadogs"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/dynatrace#creating-slos-with-dynatrace)
	Dynatraces []SloObjectiveCountMetricGoodDynatrace `pulumi:"dynatraces"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/elasticsearch#creating-slos-with-elasticsearch)
	Elasticsearches []SloObjectiveCountMetricGoodElasticsearch `pulumi:"elasticsearches"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/google-cloud-monitoring#creating-slos-with-google-cloud-monitoring)
	Gcms []SloObjectiveCountMetricGoodGcm `pulumi:"gcms"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/grafana-loki#creating-slos-with-grafana-loki)
	GrafanaLokis []SloObjectiveCountMetricGoodGrafanaLoki `pulumi:"grafanaLokis"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/graphite#creating-slos-with-graphite)
	Graphites []SloObjectiveCountMetricGoodGraphite `pulumi:"graphites"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/honeycomb#creating-slos-with-honeycomb)
	Honeycombs []SloObjectiveCountMetricGoodHoneycomb `pulumi:"honeycombs"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/influxdb#creating-slos-with-influxdb)
	Influxdbs []SloObjectiveCountMetricGoodInfluxdb `pulumi:"influxdbs"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/instana#creating-slos-with-instana)
	Instanas []SloObjectiveCountMetricGoodInstana `pulumi:"instanas"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/lightstep#creating-slos-with-lightstep)
	Lightsteps []SloObjectiveCountMetricGoodLightstep `pulumi:"lightsteps"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/new-relic#creating-slos-with-new-relic)
	Newrelics []SloObjectiveCountMetricGoodNewrelic `pulumi:"newrelics"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/opentsdb#creating-slos-with-opentsdb)
	Opentsdbs []SloObjectiveCountMetricGoodOpentsdb `pulumi:"opentsdbs"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/pingdom#creating-slos-with-pingdom)
	Pingdoms []SloObjectiveCountMetricGoodPingdom `pulumi:"pingdoms"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/prometheus#creating-slos-with-prometheus)
	Prometheuses []SloObjectiveCountMetricGoodPrometheus `pulumi:"prometheuses"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Redshift/#creating-slos-with-amazon-redshift)
	Redshifts []SloObjectiveCountMetricGoodRedshift `pulumi:"redshifts"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/splunk#creating-slos-with-splunk-observability)
	SplunkObservabilities []SloObjectiveCountMetricGoodSplunkObservability `pulumi:"splunkObservabilities"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/splunk#creating-slos-with-splunk)
	Splunks []SloObjectiveCountMetricGoodSplunk `pulumi:"splunks"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/sumo-logic#creating-slos-with-sumo-logic)
	Sumologics []SloObjectiveCountMetricGoodSumologic `pulumi:"sumologics"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/thousandeyes#creating-slos-with-thousandeyes)
	Thousandeyes []SloObjectiveCountMetricGoodThousandeye `pulumi:"thousandeyes"`
}

// SloObjectiveCountMetricGoodInput is an input type that accepts SloObjectiveCountMetricGoodArgs and SloObjectiveCountMetricGoodOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodInput` via:
//
//	SloObjectiveCountMetricGoodArgs{...}
type SloObjectiveCountMetricGoodInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodOutput() SloObjectiveCountMetricGoodOutput
	ToSloObjectiveCountMetricGoodOutputWithContext(context.Context) SloObjectiveCountMetricGoodOutput
}

type SloObjectiveCountMetricGoodArgs struct {
	// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Prometheus/#creating-slos-with-ams-prometheus)
	AmazonPrometheuses SloObjectiveCountMetricGoodAmazonPrometheusArrayInput `pulumi:"amazonPrometheuses"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/appdynamics#creating-slos-with-appdynamics)
	Appdynamics SloObjectiveCountMetricGoodAppdynamicArrayInput `pulumi:"appdynamics"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/azure-monitor#creating-slos-with-azure-monitor)
	AzureMonitors SloObjectiveCountMetricGoodAzureMonitorArrayInput `pulumi:"azureMonitors"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/bigquery#creating-slos-with-bigquery)
	Bigqueries SloObjectiveCountMetricGoodBigqueryArrayInput `pulumi:"bigqueries"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_CloudWatch/#creating-slos-with-cloudwatch)
	Cloudwatches SloObjectiveCountMetricGoodCloudwatchArrayInput `pulumi:"cloudwatches"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/datadog#creating-slos-with-datadog)
	Datadogs SloObjectiveCountMetricGoodDatadogArrayInput `pulumi:"datadogs"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/dynatrace#creating-slos-with-dynatrace)
	Dynatraces SloObjectiveCountMetricGoodDynatraceArrayInput `pulumi:"dynatraces"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/elasticsearch#creating-slos-with-elasticsearch)
	Elasticsearches SloObjectiveCountMetricGoodElasticsearchArrayInput `pulumi:"elasticsearches"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/google-cloud-monitoring#creating-slos-with-google-cloud-monitoring)
	Gcms SloObjectiveCountMetricGoodGcmArrayInput `pulumi:"gcms"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/grafana-loki#creating-slos-with-grafana-loki)
	GrafanaLokis SloObjectiveCountMetricGoodGrafanaLokiArrayInput `pulumi:"grafanaLokis"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/graphite#creating-slos-with-graphite)
	Graphites SloObjectiveCountMetricGoodGraphiteArrayInput `pulumi:"graphites"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/honeycomb#creating-slos-with-honeycomb)
	Honeycombs SloObjectiveCountMetricGoodHoneycombArrayInput `pulumi:"honeycombs"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/influxdb#creating-slos-with-influxdb)
	Influxdbs SloObjectiveCountMetricGoodInfluxdbArrayInput `pulumi:"influxdbs"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/instana#creating-slos-with-instana)
	Instanas SloObjectiveCountMetricGoodInstanaArrayInput `pulumi:"instanas"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/lightstep#creating-slos-with-lightstep)
	Lightsteps SloObjectiveCountMetricGoodLightstepArrayInput `pulumi:"lightsteps"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/new-relic#creating-slos-with-new-relic)
	Newrelics SloObjectiveCountMetricGoodNewrelicArrayInput `pulumi:"newrelics"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/opentsdb#creating-slos-with-opentsdb)
	Opentsdbs SloObjectiveCountMetricGoodOpentsdbArrayInput `pulumi:"opentsdbs"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/pingdom#creating-slos-with-pingdom)
	Pingdoms SloObjectiveCountMetricGoodPingdomArrayInput `pulumi:"pingdoms"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/prometheus#creating-slos-with-prometheus)
	Prometheuses SloObjectiveCountMetricGoodPrometheusArrayInput `pulumi:"prometheuses"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Redshift/#creating-slos-with-amazon-redshift)
	Redshifts SloObjectiveCountMetricGoodRedshiftArrayInput `pulumi:"redshifts"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/splunk#creating-slos-with-splunk-observability)
	SplunkObservabilities SloObjectiveCountMetricGoodSplunkObservabilityArrayInput `pulumi:"splunkObservabilities"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/splunk#creating-slos-with-splunk)
	Splunks SloObjectiveCountMetricGoodSplunkArrayInput `pulumi:"splunks"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/sumo-logic#creating-slos-with-sumo-logic)
	Sumologics SloObjectiveCountMetricGoodSumologicArrayInput `pulumi:"sumologics"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/thousandeyes#creating-slos-with-thousandeyes)
	Thousandeyes SloObjectiveCountMetricGoodThousandeyeArrayInput `pulumi:"thousandeyes"`
}

func (SloObjectiveCountMetricGoodArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGood)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodArgs) ToSloObjectiveCountMetricGoodOutput() SloObjectiveCountMetricGoodOutput {
	return i.ToSloObjectiveCountMetricGoodOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodArgs) ToSloObjectiveCountMetricGoodOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodOutput)
}

// SloObjectiveCountMetricGoodArrayInput is an input type that accepts SloObjectiveCountMetricGoodArray and SloObjectiveCountMetricGoodArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodArrayInput` via:
//
//	SloObjectiveCountMetricGoodArray{ SloObjectiveCountMetricGoodArgs{...} }
type SloObjectiveCountMetricGoodArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodArrayOutput() SloObjectiveCountMetricGoodArrayOutput
	ToSloObjectiveCountMetricGoodArrayOutputWithContext(context.Context) SloObjectiveCountMetricGoodArrayOutput
}

type SloObjectiveCountMetricGoodArray []SloObjectiveCountMetricGoodInput

func (SloObjectiveCountMetricGoodArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGood)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodArray) ToSloObjectiveCountMetricGoodArrayOutput() SloObjectiveCountMetricGoodArrayOutput {
	return i.ToSloObjectiveCountMetricGoodArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodArray) ToSloObjectiveCountMetricGoodArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodArrayOutput)
}

type SloObjectiveCountMetricGoodOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGood)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodOutput) ToSloObjectiveCountMetricGoodOutput() SloObjectiveCountMetricGoodOutput {
	return o
}

func (o SloObjectiveCountMetricGoodOutput) ToSloObjectiveCountMetricGoodOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodOutput {
	return o
}

// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Prometheus/#creating-slos-with-ams-prometheus)
func (o SloObjectiveCountMetricGoodOutput) AmazonPrometheuses() SloObjectiveCountMetricGoodAmazonPrometheusArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGood) []SloObjectiveCountMetricGoodAmazonPrometheus {
		return v.AmazonPrometheuses
	}).(SloObjectiveCountMetricGoodAmazonPrometheusArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/appdynamics#creating-slos-with-appdynamics)
func (o SloObjectiveCountMetricGoodOutput) Appdynamics() SloObjectiveCountMetricGoodAppdynamicArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGood) []SloObjectiveCountMetricGoodAppdynamic { return v.Appdynamics }).(SloObjectiveCountMetricGoodAppdynamicArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/azure-monitor#creating-slos-with-azure-monitor)
func (o SloObjectiveCountMetricGoodOutput) AzureMonitors() SloObjectiveCountMetricGoodAzureMonitorArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGood) []SloObjectiveCountMetricGoodAzureMonitor { return v.AzureMonitors }).(SloObjectiveCountMetricGoodAzureMonitorArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/bigquery#creating-slos-with-bigquery)
func (o SloObjectiveCountMetricGoodOutput) Bigqueries() SloObjectiveCountMetricGoodBigqueryArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGood) []SloObjectiveCountMetricGoodBigquery { return v.Bigqueries }).(SloObjectiveCountMetricGoodBigqueryArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_CloudWatch/#creating-slos-with-cloudwatch)
func (o SloObjectiveCountMetricGoodOutput) Cloudwatches() SloObjectiveCountMetricGoodCloudwatchArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGood) []SloObjectiveCountMetricGoodCloudwatch { return v.Cloudwatches }).(SloObjectiveCountMetricGoodCloudwatchArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/datadog#creating-slos-with-datadog)
func (o SloObjectiveCountMetricGoodOutput) Datadogs() SloObjectiveCountMetricGoodDatadogArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGood) []SloObjectiveCountMetricGoodDatadog { return v.Datadogs }).(SloObjectiveCountMetricGoodDatadogArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/dynatrace#creating-slos-with-dynatrace)
func (o SloObjectiveCountMetricGoodOutput) Dynatraces() SloObjectiveCountMetricGoodDynatraceArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGood) []SloObjectiveCountMetricGoodDynatrace { return v.Dynatraces }).(SloObjectiveCountMetricGoodDynatraceArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/elasticsearch#creating-slos-with-elasticsearch)
func (o SloObjectiveCountMetricGoodOutput) Elasticsearches() SloObjectiveCountMetricGoodElasticsearchArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGood) []SloObjectiveCountMetricGoodElasticsearch {
		return v.Elasticsearches
	}).(SloObjectiveCountMetricGoodElasticsearchArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/google-cloud-monitoring#creating-slos-with-google-cloud-monitoring)
func (o SloObjectiveCountMetricGoodOutput) Gcms() SloObjectiveCountMetricGoodGcmArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGood) []SloObjectiveCountMetricGoodGcm { return v.Gcms }).(SloObjectiveCountMetricGoodGcmArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/grafana-loki#creating-slos-with-grafana-loki)
func (o SloObjectiveCountMetricGoodOutput) GrafanaLokis() SloObjectiveCountMetricGoodGrafanaLokiArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGood) []SloObjectiveCountMetricGoodGrafanaLoki { return v.GrafanaLokis }).(SloObjectiveCountMetricGoodGrafanaLokiArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/graphite#creating-slos-with-graphite)
func (o SloObjectiveCountMetricGoodOutput) Graphites() SloObjectiveCountMetricGoodGraphiteArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGood) []SloObjectiveCountMetricGoodGraphite { return v.Graphites }).(SloObjectiveCountMetricGoodGraphiteArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/honeycomb#creating-slos-with-honeycomb)
func (o SloObjectiveCountMetricGoodOutput) Honeycombs() SloObjectiveCountMetricGoodHoneycombArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGood) []SloObjectiveCountMetricGoodHoneycomb { return v.Honeycombs }).(SloObjectiveCountMetricGoodHoneycombArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/influxdb#creating-slos-with-influxdb)
func (o SloObjectiveCountMetricGoodOutput) Influxdbs() SloObjectiveCountMetricGoodInfluxdbArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGood) []SloObjectiveCountMetricGoodInfluxdb { return v.Influxdbs }).(SloObjectiveCountMetricGoodInfluxdbArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/instana#creating-slos-with-instana)
func (o SloObjectiveCountMetricGoodOutput) Instanas() SloObjectiveCountMetricGoodInstanaArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGood) []SloObjectiveCountMetricGoodInstana { return v.Instanas }).(SloObjectiveCountMetricGoodInstanaArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/lightstep#creating-slos-with-lightstep)
func (o SloObjectiveCountMetricGoodOutput) Lightsteps() SloObjectiveCountMetricGoodLightstepArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGood) []SloObjectiveCountMetricGoodLightstep { return v.Lightsteps }).(SloObjectiveCountMetricGoodLightstepArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/new-relic#creating-slos-with-new-relic)
func (o SloObjectiveCountMetricGoodOutput) Newrelics() SloObjectiveCountMetricGoodNewrelicArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGood) []SloObjectiveCountMetricGoodNewrelic { return v.Newrelics }).(SloObjectiveCountMetricGoodNewrelicArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/opentsdb#creating-slos-with-opentsdb)
func (o SloObjectiveCountMetricGoodOutput) Opentsdbs() SloObjectiveCountMetricGoodOpentsdbArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGood) []SloObjectiveCountMetricGoodOpentsdb { return v.Opentsdbs }).(SloObjectiveCountMetricGoodOpentsdbArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/pingdom#creating-slos-with-pingdom)
func (o SloObjectiveCountMetricGoodOutput) Pingdoms() SloObjectiveCountMetricGoodPingdomArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGood) []SloObjectiveCountMetricGoodPingdom { return v.Pingdoms }).(SloObjectiveCountMetricGoodPingdomArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/prometheus#creating-slos-with-prometheus)
func (o SloObjectiveCountMetricGoodOutput) Prometheuses() SloObjectiveCountMetricGoodPrometheusArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGood) []SloObjectiveCountMetricGoodPrometheus { return v.Prometheuses }).(SloObjectiveCountMetricGoodPrometheusArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Redshift/#creating-slos-with-amazon-redshift)
func (o SloObjectiveCountMetricGoodOutput) Redshifts() SloObjectiveCountMetricGoodRedshiftArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGood) []SloObjectiveCountMetricGoodRedshift { return v.Redshifts }).(SloObjectiveCountMetricGoodRedshiftArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/splunk#creating-slos-with-splunk-observability)
func (o SloObjectiveCountMetricGoodOutput) SplunkObservabilities() SloObjectiveCountMetricGoodSplunkObservabilityArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGood) []SloObjectiveCountMetricGoodSplunkObservability {
		return v.SplunkObservabilities
	}).(SloObjectiveCountMetricGoodSplunkObservabilityArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/splunk#creating-slos-with-splunk)
func (o SloObjectiveCountMetricGoodOutput) Splunks() SloObjectiveCountMetricGoodSplunkArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGood) []SloObjectiveCountMetricGoodSplunk { return v.Splunks }).(SloObjectiveCountMetricGoodSplunkArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/sumo-logic#creating-slos-with-sumo-logic)
func (o SloObjectiveCountMetricGoodOutput) Sumologics() SloObjectiveCountMetricGoodSumologicArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGood) []SloObjectiveCountMetricGoodSumologic { return v.Sumologics }).(SloObjectiveCountMetricGoodSumologicArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/thousandeyes#creating-slos-with-thousandeyes)
func (o SloObjectiveCountMetricGoodOutput) Thousandeyes() SloObjectiveCountMetricGoodThousandeyeArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGood) []SloObjectiveCountMetricGoodThousandeye { return v.Thousandeyes }).(SloObjectiveCountMetricGoodThousandeyeArrayOutput)
}

type SloObjectiveCountMetricGoodArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGood)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodArrayOutput) ToSloObjectiveCountMetricGoodArrayOutput() SloObjectiveCountMetricGoodArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodArrayOutput) ToSloObjectiveCountMetricGoodArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricGoodOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricGood {
		return vs[0].([]SloObjectiveCountMetricGood)[vs[1].(int)]
	}).(SloObjectiveCountMetricGoodOutput)
}

type SloObjectiveCountMetricGoodAmazonPrometheus struct {
	// Query for the metrics
	Promql string `pulumi:"promql"`
}

// SloObjectiveCountMetricGoodAmazonPrometheusInput is an input type that accepts SloObjectiveCountMetricGoodAmazonPrometheusArgs and SloObjectiveCountMetricGoodAmazonPrometheusOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodAmazonPrometheusInput` via:
//
//	SloObjectiveCountMetricGoodAmazonPrometheusArgs{...}
type SloObjectiveCountMetricGoodAmazonPrometheusInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodAmazonPrometheusOutput() SloObjectiveCountMetricGoodAmazonPrometheusOutput
	ToSloObjectiveCountMetricGoodAmazonPrometheusOutputWithContext(context.Context) SloObjectiveCountMetricGoodAmazonPrometheusOutput
}

type SloObjectiveCountMetricGoodAmazonPrometheusArgs struct {
	// Query for the metrics
	Promql pulumi.StringInput `pulumi:"promql"`
}

func (SloObjectiveCountMetricGoodAmazonPrometheusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodAmazonPrometheus)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodAmazonPrometheusArgs) ToSloObjectiveCountMetricGoodAmazonPrometheusOutput() SloObjectiveCountMetricGoodAmazonPrometheusOutput {
	return i.ToSloObjectiveCountMetricGoodAmazonPrometheusOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodAmazonPrometheusArgs) ToSloObjectiveCountMetricGoodAmazonPrometheusOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodAmazonPrometheusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodAmazonPrometheusOutput)
}

// SloObjectiveCountMetricGoodAmazonPrometheusArrayInput is an input type that accepts SloObjectiveCountMetricGoodAmazonPrometheusArray and SloObjectiveCountMetricGoodAmazonPrometheusArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodAmazonPrometheusArrayInput` via:
//
//	SloObjectiveCountMetricGoodAmazonPrometheusArray{ SloObjectiveCountMetricGoodAmazonPrometheusArgs{...} }
type SloObjectiveCountMetricGoodAmazonPrometheusArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodAmazonPrometheusArrayOutput() SloObjectiveCountMetricGoodAmazonPrometheusArrayOutput
	ToSloObjectiveCountMetricGoodAmazonPrometheusArrayOutputWithContext(context.Context) SloObjectiveCountMetricGoodAmazonPrometheusArrayOutput
}

type SloObjectiveCountMetricGoodAmazonPrometheusArray []SloObjectiveCountMetricGoodAmazonPrometheusInput

func (SloObjectiveCountMetricGoodAmazonPrometheusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodAmazonPrometheus)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodAmazonPrometheusArray) ToSloObjectiveCountMetricGoodAmazonPrometheusArrayOutput() SloObjectiveCountMetricGoodAmazonPrometheusArrayOutput {
	return i.ToSloObjectiveCountMetricGoodAmazonPrometheusArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodAmazonPrometheusArray) ToSloObjectiveCountMetricGoodAmazonPrometheusArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodAmazonPrometheusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodAmazonPrometheusArrayOutput)
}

type SloObjectiveCountMetricGoodAmazonPrometheusOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodAmazonPrometheusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodAmazonPrometheus)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodAmazonPrometheusOutput) ToSloObjectiveCountMetricGoodAmazonPrometheusOutput() SloObjectiveCountMetricGoodAmazonPrometheusOutput {
	return o
}

func (o SloObjectiveCountMetricGoodAmazonPrometheusOutput) ToSloObjectiveCountMetricGoodAmazonPrometheusOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodAmazonPrometheusOutput {
	return o
}

// Query for the metrics
func (o SloObjectiveCountMetricGoodAmazonPrometheusOutput) Promql() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodAmazonPrometheus) string { return v.Promql }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricGoodAmazonPrometheusArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodAmazonPrometheusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodAmazonPrometheus)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodAmazonPrometheusArrayOutput) ToSloObjectiveCountMetricGoodAmazonPrometheusArrayOutput() SloObjectiveCountMetricGoodAmazonPrometheusArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodAmazonPrometheusArrayOutput) ToSloObjectiveCountMetricGoodAmazonPrometheusArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodAmazonPrometheusArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodAmazonPrometheusArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricGoodAmazonPrometheusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricGoodAmazonPrometheus {
		return vs[0].([]SloObjectiveCountMetricGoodAmazonPrometheus)[vs[1].(int)]
	}).(SloObjectiveCountMetricGoodAmazonPrometheusOutput)
}

type SloObjectiveCountMetricGoodAppdynamic struct {
	// Name of the added application
	ApplicationName string `pulumi:"applicationName"`
	// Path to the metrics
	MetricPath string `pulumi:"metricPath"`
}

// SloObjectiveCountMetricGoodAppdynamicInput is an input type that accepts SloObjectiveCountMetricGoodAppdynamicArgs and SloObjectiveCountMetricGoodAppdynamicOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodAppdynamicInput` via:
//
//	SloObjectiveCountMetricGoodAppdynamicArgs{...}
type SloObjectiveCountMetricGoodAppdynamicInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodAppdynamicOutput() SloObjectiveCountMetricGoodAppdynamicOutput
	ToSloObjectiveCountMetricGoodAppdynamicOutputWithContext(context.Context) SloObjectiveCountMetricGoodAppdynamicOutput
}

type SloObjectiveCountMetricGoodAppdynamicArgs struct {
	// Name of the added application
	ApplicationName pulumi.StringInput `pulumi:"applicationName"`
	// Path to the metrics
	MetricPath pulumi.StringInput `pulumi:"metricPath"`
}

func (SloObjectiveCountMetricGoodAppdynamicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodAppdynamic)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodAppdynamicArgs) ToSloObjectiveCountMetricGoodAppdynamicOutput() SloObjectiveCountMetricGoodAppdynamicOutput {
	return i.ToSloObjectiveCountMetricGoodAppdynamicOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodAppdynamicArgs) ToSloObjectiveCountMetricGoodAppdynamicOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodAppdynamicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodAppdynamicOutput)
}

// SloObjectiveCountMetricGoodAppdynamicArrayInput is an input type that accepts SloObjectiveCountMetricGoodAppdynamicArray and SloObjectiveCountMetricGoodAppdynamicArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodAppdynamicArrayInput` via:
//
//	SloObjectiveCountMetricGoodAppdynamicArray{ SloObjectiveCountMetricGoodAppdynamicArgs{...} }
type SloObjectiveCountMetricGoodAppdynamicArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodAppdynamicArrayOutput() SloObjectiveCountMetricGoodAppdynamicArrayOutput
	ToSloObjectiveCountMetricGoodAppdynamicArrayOutputWithContext(context.Context) SloObjectiveCountMetricGoodAppdynamicArrayOutput
}

type SloObjectiveCountMetricGoodAppdynamicArray []SloObjectiveCountMetricGoodAppdynamicInput

func (SloObjectiveCountMetricGoodAppdynamicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodAppdynamic)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodAppdynamicArray) ToSloObjectiveCountMetricGoodAppdynamicArrayOutput() SloObjectiveCountMetricGoodAppdynamicArrayOutput {
	return i.ToSloObjectiveCountMetricGoodAppdynamicArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodAppdynamicArray) ToSloObjectiveCountMetricGoodAppdynamicArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodAppdynamicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodAppdynamicArrayOutput)
}

type SloObjectiveCountMetricGoodAppdynamicOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodAppdynamicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodAppdynamic)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodAppdynamicOutput) ToSloObjectiveCountMetricGoodAppdynamicOutput() SloObjectiveCountMetricGoodAppdynamicOutput {
	return o
}

func (o SloObjectiveCountMetricGoodAppdynamicOutput) ToSloObjectiveCountMetricGoodAppdynamicOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodAppdynamicOutput {
	return o
}

// Name of the added application
func (o SloObjectiveCountMetricGoodAppdynamicOutput) ApplicationName() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodAppdynamic) string { return v.ApplicationName }).(pulumi.StringOutput)
}

// Path to the metrics
func (o SloObjectiveCountMetricGoodAppdynamicOutput) MetricPath() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodAppdynamic) string { return v.MetricPath }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricGoodAppdynamicArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodAppdynamicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodAppdynamic)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodAppdynamicArrayOutput) ToSloObjectiveCountMetricGoodAppdynamicArrayOutput() SloObjectiveCountMetricGoodAppdynamicArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodAppdynamicArrayOutput) ToSloObjectiveCountMetricGoodAppdynamicArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodAppdynamicArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodAppdynamicArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricGoodAppdynamicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricGoodAppdynamic {
		return vs[0].([]SloObjectiveCountMetricGoodAppdynamic)[vs[1].(int)]
	}).(SloObjectiveCountMetricGoodAppdynamicOutput)
}

type SloObjectiveCountMetricGoodAzureMonitor struct {
	// Aggregation type [Required for metrics]
	Aggregation *string `pulumi:"aggregation"`
	// Specifies source: 'metrics' or 'logs'
	DataType string `pulumi:"dataType"`
	// Dimensions of the metric [Optional for metrics]
	Dimensions []SloObjectiveCountMetricGoodAzureMonitorDimension `pulumi:"dimensions"`
	// Logs query in Kusto Query Language [Required for logs]
	KqlQuery *string `pulumi:"kqlQuery"`
	// Name of the metric [Required for metrics]
	MetricName *string `pulumi:"metricName"`
	// Namespace of the metric [Optional for metrics]
	MetricNamespace *string `pulumi:"metricNamespace"`
	// Identifier of the Azure Cloud resource [Required for metrics]
	ResourceId *string `pulumi:"resourceId"`
	// Log analytics workspace [Required for logs]
	Workspaces []SloObjectiveCountMetricGoodAzureMonitorWorkspace `pulumi:"workspaces"`
}

// SloObjectiveCountMetricGoodAzureMonitorInput is an input type that accepts SloObjectiveCountMetricGoodAzureMonitorArgs and SloObjectiveCountMetricGoodAzureMonitorOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodAzureMonitorInput` via:
//
//	SloObjectiveCountMetricGoodAzureMonitorArgs{...}
type SloObjectiveCountMetricGoodAzureMonitorInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodAzureMonitorOutput() SloObjectiveCountMetricGoodAzureMonitorOutput
	ToSloObjectiveCountMetricGoodAzureMonitorOutputWithContext(context.Context) SloObjectiveCountMetricGoodAzureMonitorOutput
}

type SloObjectiveCountMetricGoodAzureMonitorArgs struct {
	// Aggregation type [Required for metrics]
	Aggregation pulumi.StringPtrInput `pulumi:"aggregation"`
	// Specifies source: 'metrics' or 'logs'
	DataType pulumi.StringInput `pulumi:"dataType"`
	// Dimensions of the metric [Optional for metrics]
	Dimensions SloObjectiveCountMetricGoodAzureMonitorDimensionArrayInput `pulumi:"dimensions"`
	// Logs query in Kusto Query Language [Required for logs]
	KqlQuery pulumi.StringPtrInput `pulumi:"kqlQuery"`
	// Name of the metric [Required for metrics]
	MetricName pulumi.StringPtrInput `pulumi:"metricName"`
	// Namespace of the metric [Optional for metrics]
	MetricNamespace pulumi.StringPtrInput `pulumi:"metricNamespace"`
	// Identifier of the Azure Cloud resource [Required for metrics]
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
	// Log analytics workspace [Required for logs]
	Workspaces SloObjectiveCountMetricGoodAzureMonitorWorkspaceArrayInput `pulumi:"workspaces"`
}

func (SloObjectiveCountMetricGoodAzureMonitorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodAzureMonitor)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodAzureMonitorArgs) ToSloObjectiveCountMetricGoodAzureMonitorOutput() SloObjectiveCountMetricGoodAzureMonitorOutput {
	return i.ToSloObjectiveCountMetricGoodAzureMonitorOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodAzureMonitorArgs) ToSloObjectiveCountMetricGoodAzureMonitorOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodAzureMonitorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodAzureMonitorOutput)
}

// SloObjectiveCountMetricGoodAzureMonitorArrayInput is an input type that accepts SloObjectiveCountMetricGoodAzureMonitorArray and SloObjectiveCountMetricGoodAzureMonitorArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodAzureMonitorArrayInput` via:
//
//	SloObjectiveCountMetricGoodAzureMonitorArray{ SloObjectiveCountMetricGoodAzureMonitorArgs{...} }
type SloObjectiveCountMetricGoodAzureMonitorArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodAzureMonitorArrayOutput() SloObjectiveCountMetricGoodAzureMonitorArrayOutput
	ToSloObjectiveCountMetricGoodAzureMonitorArrayOutputWithContext(context.Context) SloObjectiveCountMetricGoodAzureMonitorArrayOutput
}

type SloObjectiveCountMetricGoodAzureMonitorArray []SloObjectiveCountMetricGoodAzureMonitorInput

func (SloObjectiveCountMetricGoodAzureMonitorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodAzureMonitor)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodAzureMonitorArray) ToSloObjectiveCountMetricGoodAzureMonitorArrayOutput() SloObjectiveCountMetricGoodAzureMonitorArrayOutput {
	return i.ToSloObjectiveCountMetricGoodAzureMonitorArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodAzureMonitorArray) ToSloObjectiveCountMetricGoodAzureMonitorArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodAzureMonitorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodAzureMonitorArrayOutput)
}

type SloObjectiveCountMetricGoodAzureMonitorOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodAzureMonitorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodAzureMonitor)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodAzureMonitorOutput) ToSloObjectiveCountMetricGoodAzureMonitorOutput() SloObjectiveCountMetricGoodAzureMonitorOutput {
	return o
}

func (o SloObjectiveCountMetricGoodAzureMonitorOutput) ToSloObjectiveCountMetricGoodAzureMonitorOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodAzureMonitorOutput {
	return o
}

// Aggregation type [Required for metrics]
func (o SloObjectiveCountMetricGoodAzureMonitorOutput) Aggregation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodAzureMonitor) *string { return v.Aggregation }).(pulumi.StringPtrOutput)
}

// Specifies source: 'metrics' or 'logs'
func (o SloObjectiveCountMetricGoodAzureMonitorOutput) DataType() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodAzureMonitor) string { return v.DataType }).(pulumi.StringOutput)
}

// Dimensions of the metric [Optional for metrics]
func (o SloObjectiveCountMetricGoodAzureMonitorOutput) Dimensions() SloObjectiveCountMetricGoodAzureMonitorDimensionArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodAzureMonitor) []SloObjectiveCountMetricGoodAzureMonitorDimension {
		return v.Dimensions
	}).(SloObjectiveCountMetricGoodAzureMonitorDimensionArrayOutput)
}

// Logs query in Kusto Query Language [Required for logs]
func (o SloObjectiveCountMetricGoodAzureMonitorOutput) KqlQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodAzureMonitor) *string { return v.KqlQuery }).(pulumi.StringPtrOutput)
}

// Name of the metric [Required for metrics]
func (o SloObjectiveCountMetricGoodAzureMonitorOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodAzureMonitor) *string { return v.MetricName }).(pulumi.StringPtrOutput)
}

// Namespace of the metric [Optional for metrics]
func (o SloObjectiveCountMetricGoodAzureMonitorOutput) MetricNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodAzureMonitor) *string { return v.MetricNamespace }).(pulumi.StringPtrOutput)
}

// Identifier of the Azure Cloud resource [Required for metrics]
func (o SloObjectiveCountMetricGoodAzureMonitorOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodAzureMonitor) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// Log analytics workspace [Required for logs]
func (o SloObjectiveCountMetricGoodAzureMonitorOutput) Workspaces() SloObjectiveCountMetricGoodAzureMonitorWorkspaceArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodAzureMonitor) []SloObjectiveCountMetricGoodAzureMonitorWorkspace {
		return v.Workspaces
	}).(SloObjectiveCountMetricGoodAzureMonitorWorkspaceArrayOutput)
}

type SloObjectiveCountMetricGoodAzureMonitorArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodAzureMonitorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodAzureMonitor)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodAzureMonitorArrayOutput) ToSloObjectiveCountMetricGoodAzureMonitorArrayOutput() SloObjectiveCountMetricGoodAzureMonitorArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodAzureMonitorArrayOutput) ToSloObjectiveCountMetricGoodAzureMonitorArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodAzureMonitorArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodAzureMonitorArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricGoodAzureMonitorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricGoodAzureMonitor {
		return vs[0].([]SloObjectiveCountMetricGoodAzureMonitor)[vs[1].(int)]
	}).(SloObjectiveCountMetricGoodAzureMonitorOutput)
}

type SloObjectiveCountMetricGoodAzureMonitorDimension struct {
	// The name of the previously defined alert method.
	Name string `pulumi:"name"`
	// Burn rate value.
	Value string `pulumi:"value"`
}

// SloObjectiveCountMetricGoodAzureMonitorDimensionInput is an input type that accepts SloObjectiveCountMetricGoodAzureMonitorDimensionArgs and SloObjectiveCountMetricGoodAzureMonitorDimensionOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodAzureMonitorDimensionInput` via:
//
//	SloObjectiveCountMetricGoodAzureMonitorDimensionArgs{...}
type SloObjectiveCountMetricGoodAzureMonitorDimensionInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodAzureMonitorDimensionOutput() SloObjectiveCountMetricGoodAzureMonitorDimensionOutput
	ToSloObjectiveCountMetricGoodAzureMonitorDimensionOutputWithContext(context.Context) SloObjectiveCountMetricGoodAzureMonitorDimensionOutput
}

type SloObjectiveCountMetricGoodAzureMonitorDimensionArgs struct {
	// The name of the previously defined alert method.
	Name pulumi.StringInput `pulumi:"name"`
	// Burn rate value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (SloObjectiveCountMetricGoodAzureMonitorDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodAzureMonitorDimension)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodAzureMonitorDimensionArgs) ToSloObjectiveCountMetricGoodAzureMonitorDimensionOutput() SloObjectiveCountMetricGoodAzureMonitorDimensionOutput {
	return i.ToSloObjectiveCountMetricGoodAzureMonitorDimensionOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodAzureMonitorDimensionArgs) ToSloObjectiveCountMetricGoodAzureMonitorDimensionOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodAzureMonitorDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodAzureMonitorDimensionOutput)
}

// SloObjectiveCountMetricGoodAzureMonitorDimensionArrayInput is an input type that accepts SloObjectiveCountMetricGoodAzureMonitorDimensionArray and SloObjectiveCountMetricGoodAzureMonitorDimensionArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodAzureMonitorDimensionArrayInput` via:
//
//	SloObjectiveCountMetricGoodAzureMonitorDimensionArray{ SloObjectiveCountMetricGoodAzureMonitorDimensionArgs{...} }
type SloObjectiveCountMetricGoodAzureMonitorDimensionArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodAzureMonitorDimensionArrayOutput() SloObjectiveCountMetricGoodAzureMonitorDimensionArrayOutput
	ToSloObjectiveCountMetricGoodAzureMonitorDimensionArrayOutputWithContext(context.Context) SloObjectiveCountMetricGoodAzureMonitorDimensionArrayOutput
}

type SloObjectiveCountMetricGoodAzureMonitorDimensionArray []SloObjectiveCountMetricGoodAzureMonitorDimensionInput

func (SloObjectiveCountMetricGoodAzureMonitorDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodAzureMonitorDimension)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodAzureMonitorDimensionArray) ToSloObjectiveCountMetricGoodAzureMonitorDimensionArrayOutput() SloObjectiveCountMetricGoodAzureMonitorDimensionArrayOutput {
	return i.ToSloObjectiveCountMetricGoodAzureMonitorDimensionArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodAzureMonitorDimensionArray) ToSloObjectiveCountMetricGoodAzureMonitorDimensionArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodAzureMonitorDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodAzureMonitorDimensionArrayOutput)
}

type SloObjectiveCountMetricGoodAzureMonitorDimensionOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodAzureMonitorDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodAzureMonitorDimension)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodAzureMonitorDimensionOutput) ToSloObjectiveCountMetricGoodAzureMonitorDimensionOutput() SloObjectiveCountMetricGoodAzureMonitorDimensionOutput {
	return o
}

func (o SloObjectiveCountMetricGoodAzureMonitorDimensionOutput) ToSloObjectiveCountMetricGoodAzureMonitorDimensionOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodAzureMonitorDimensionOutput {
	return o
}

// The name of the previously defined alert method.
func (o SloObjectiveCountMetricGoodAzureMonitorDimensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodAzureMonitorDimension) string { return v.Name }).(pulumi.StringOutput)
}

// Burn rate value.
func (o SloObjectiveCountMetricGoodAzureMonitorDimensionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodAzureMonitorDimension) string { return v.Value }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricGoodAzureMonitorDimensionArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodAzureMonitorDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodAzureMonitorDimension)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodAzureMonitorDimensionArrayOutput) ToSloObjectiveCountMetricGoodAzureMonitorDimensionArrayOutput() SloObjectiveCountMetricGoodAzureMonitorDimensionArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodAzureMonitorDimensionArrayOutput) ToSloObjectiveCountMetricGoodAzureMonitorDimensionArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodAzureMonitorDimensionArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodAzureMonitorDimensionArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricGoodAzureMonitorDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricGoodAzureMonitorDimension {
		return vs[0].([]SloObjectiveCountMetricGoodAzureMonitorDimension)[vs[1].(int)]
	}).(SloObjectiveCountMetricGoodAzureMonitorDimensionOutput)
}

type SloObjectiveCountMetricGoodAzureMonitorWorkspace struct {
	// Resource group of the workspace
	ResourceGroup string `pulumi:"resourceGroup"`
	// Subscription ID of the workspace
	SubscriptionId string `pulumi:"subscriptionId"`
	// ID of the workspace
	WorkspaceId string `pulumi:"workspaceId"`
}

// SloObjectiveCountMetricGoodAzureMonitorWorkspaceInput is an input type that accepts SloObjectiveCountMetricGoodAzureMonitorWorkspaceArgs and SloObjectiveCountMetricGoodAzureMonitorWorkspaceOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodAzureMonitorWorkspaceInput` via:
//
//	SloObjectiveCountMetricGoodAzureMonitorWorkspaceArgs{...}
type SloObjectiveCountMetricGoodAzureMonitorWorkspaceInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodAzureMonitorWorkspaceOutput() SloObjectiveCountMetricGoodAzureMonitorWorkspaceOutput
	ToSloObjectiveCountMetricGoodAzureMonitorWorkspaceOutputWithContext(context.Context) SloObjectiveCountMetricGoodAzureMonitorWorkspaceOutput
}

type SloObjectiveCountMetricGoodAzureMonitorWorkspaceArgs struct {
	// Resource group of the workspace
	ResourceGroup pulumi.StringInput `pulumi:"resourceGroup"`
	// Subscription ID of the workspace
	SubscriptionId pulumi.StringInput `pulumi:"subscriptionId"`
	// ID of the workspace
	WorkspaceId pulumi.StringInput `pulumi:"workspaceId"`
}

func (SloObjectiveCountMetricGoodAzureMonitorWorkspaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodAzureMonitorWorkspace)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodAzureMonitorWorkspaceArgs) ToSloObjectiveCountMetricGoodAzureMonitorWorkspaceOutput() SloObjectiveCountMetricGoodAzureMonitorWorkspaceOutput {
	return i.ToSloObjectiveCountMetricGoodAzureMonitorWorkspaceOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodAzureMonitorWorkspaceArgs) ToSloObjectiveCountMetricGoodAzureMonitorWorkspaceOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodAzureMonitorWorkspaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodAzureMonitorWorkspaceOutput)
}

// SloObjectiveCountMetricGoodAzureMonitorWorkspaceArrayInput is an input type that accepts SloObjectiveCountMetricGoodAzureMonitorWorkspaceArray and SloObjectiveCountMetricGoodAzureMonitorWorkspaceArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodAzureMonitorWorkspaceArrayInput` via:
//
//	SloObjectiveCountMetricGoodAzureMonitorWorkspaceArray{ SloObjectiveCountMetricGoodAzureMonitorWorkspaceArgs{...} }
type SloObjectiveCountMetricGoodAzureMonitorWorkspaceArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodAzureMonitorWorkspaceArrayOutput() SloObjectiveCountMetricGoodAzureMonitorWorkspaceArrayOutput
	ToSloObjectiveCountMetricGoodAzureMonitorWorkspaceArrayOutputWithContext(context.Context) SloObjectiveCountMetricGoodAzureMonitorWorkspaceArrayOutput
}

type SloObjectiveCountMetricGoodAzureMonitorWorkspaceArray []SloObjectiveCountMetricGoodAzureMonitorWorkspaceInput

func (SloObjectiveCountMetricGoodAzureMonitorWorkspaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodAzureMonitorWorkspace)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodAzureMonitorWorkspaceArray) ToSloObjectiveCountMetricGoodAzureMonitorWorkspaceArrayOutput() SloObjectiveCountMetricGoodAzureMonitorWorkspaceArrayOutput {
	return i.ToSloObjectiveCountMetricGoodAzureMonitorWorkspaceArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodAzureMonitorWorkspaceArray) ToSloObjectiveCountMetricGoodAzureMonitorWorkspaceArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodAzureMonitorWorkspaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodAzureMonitorWorkspaceArrayOutput)
}

type SloObjectiveCountMetricGoodAzureMonitorWorkspaceOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodAzureMonitorWorkspaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodAzureMonitorWorkspace)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodAzureMonitorWorkspaceOutput) ToSloObjectiveCountMetricGoodAzureMonitorWorkspaceOutput() SloObjectiveCountMetricGoodAzureMonitorWorkspaceOutput {
	return o
}

func (o SloObjectiveCountMetricGoodAzureMonitorWorkspaceOutput) ToSloObjectiveCountMetricGoodAzureMonitorWorkspaceOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodAzureMonitorWorkspaceOutput {
	return o
}

// Resource group of the workspace
func (o SloObjectiveCountMetricGoodAzureMonitorWorkspaceOutput) ResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodAzureMonitorWorkspace) string { return v.ResourceGroup }).(pulumi.StringOutput)
}

// Subscription ID of the workspace
func (o SloObjectiveCountMetricGoodAzureMonitorWorkspaceOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodAzureMonitorWorkspace) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

// ID of the workspace
func (o SloObjectiveCountMetricGoodAzureMonitorWorkspaceOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodAzureMonitorWorkspace) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricGoodAzureMonitorWorkspaceArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodAzureMonitorWorkspaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodAzureMonitorWorkspace)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodAzureMonitorWorkspaceArrayOutput) ToSloObjectiveCountMetricGoodAzureMonitorWorkspaceArrayOutput() SloObjectiveCountMetricGoodAzureMonitorWorkspaceArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodAzureMonitorWorkspaceArrayOutput) ToSloObjectiveCountMetricGoodAzureMonitorWorkspaceArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodAzureMonitorWorkspaceArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodAzureMonitorWorkspaceArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricGoodAzureMonitorWorkspaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricGoodAzureMonitorWorkspace {
		return vs[0].([]SloObjectiveCountMetricGoodAzureMonitorWorkspace)[vs[1].(int)]
	}).(SloObjectiveCountMetricGoodAzureMonitorWorkspaceOutput)
}

type SloObjectiveCountMetricGoodBigquery struct {
	// Location of you BigQuery
	Location string `pulumi:"location"`
	// Project ID
	ProjectId string `pulumi:"projectId"`
	// Query for the metrics
	Query string `pulumi:"query"`
}

// SloObjectiveCountMetricGoodBigqueryInput is an input type that accepts SloObjectiveCountMetricGoodBigqueryArgs and SloObjectiveCountMetricGoodBigqueryOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodBigqueryInput` via:
//
//	SloObjectiveCountMetricGoodBigqueryArgs{...}
type SloObjectiveCountMetricGoodBigqueryInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodBigqueryOutput() SloObjectiveCountMetricGoodBigqueryOutput
	ToSloObjectiveCountMetricGoodBigqueryOutputWithContext(context.Context) SloObjectiveCountMetricGoodBigqueryOutput
}

type SloObjectiveCountMetricGoodBigqueryArgs struct {
	// Location of you BigQuery
	Location pulumi.StringInput `pulumi:"location"`
	// Project ID
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// Query for the metrics
	Query pulumi.StringInput `pulumi:"query"`
}

func (SloObjectiveCountMetricGoodBigqueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodBigquery)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodBigqueryArgs) ToSloObjectiveCountMetricGoodBigqueryOutput() SloObjectiveCountMetricGoodBigqueryOutput {
	return i.ToSloObjectiveCountMetricGoodBigqueryOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodBigqueryArgs) ToSloObjectiveCountMetricGoodBigqueryOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodBigqueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodBigqueryOutput)
}

// SloObjectiveCountMetricGoodBigqueryArrayInput is an input type that accepts SloObjectiveCountMetricGoodBigqueryArray and SloObjectiveCountMetricGoodBigqueryArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodBigqueryArrayInput` via:
//
//	SloObjectiveCountMetricGoodBigqueryArray{ SloObjectiveCountMetricGoodBigqueryArgs{...} }
type SloObjectiveCountMetricGoodBigqueryArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodBigqueryArrayOutput() SloObjectiveCountMetricGoodBigqueryArrayOutput
	ToSloObjectiveCountMetricGoodBigqueryArrayOutputWithContext(context.Context) SloObjectiveCountMetricGoodBigqueryArrayOutput
}

type SloObjectiveCountMetricGoodBigqueryArray []SloObjectiveCountMetricGoodBigqueryInput

func (SloObjectiveCountMetricGoodBigqueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodBigquery)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodBigqueryArray) ToSloObjectiveCountMetricGoodBigqueryArrayOutput() SloObjectiveCountMetricGoodBigqueryArrayOutput {
	return i.ToSloObjectiveCountMetricGoodBigqueryArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodBigqueryArray) ToSloObjectiveCountMetricGoodBigqueryArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodBigqueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodBigqueryArrayOutput)
}

type SloObjectiveCountMetricGoodBigqueryOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodBigqueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodBigquery)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodBigqueryOutput) ToSloObjectiveCountMetricGoodBigqueryOutput() SloObjectiveCountMetricGoodBigqueryOutput {
	return o
}

func (o SloObjectiveCountMetricGoodBigqueryOutput) ToSloObjectiveCountMetricGoodBigqueryOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodBigqueryOutput {
	return o
}

// Location of you BigQuery
func (o SloObjectiveCountMetricGoodBigqueryOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodBigquery) string { return v.Location }).(pulumi.StringOutput)
}

// Project ID
func (o SloObjectiveCountMetricGoodBigqueryOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodBigquery) string { return v.ProjectId }).(pulumi.StringOutput)
}

// Query for the metrics
func (o SloObjectiveCountMetricGoodBigqueryOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodBigquery) string { return v.Query }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricGoodBigqueryArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodBigqueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodBigquery)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodBigqueryArrayOutput) ToSloObjectiveCountMetricGoodBigqueryArrayOutput() SloObjectiveCountMetricGoodBigqueryArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodBigqueryArrayOutput) ToSloObjectiveCountMetricGoodBigqueryArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodBigqueryArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodBigqueryArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricGoodBigqueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricGoodBigquery {
		return vs[0].([]SloObjectiveCountMetricGoodBigquery)[vs[1].(int)]
	}).(SloObjectiveCountMetricGoodBigqueryOutput)
}

type SloObjectiveCountMetricGoodCloudwatch struct {
	// AccountID used with cross-account observability feature
	AccountId *string `pulumi:"accountId"`
	// Dimensions of the metric [Optional for metrics]
	Dimensions []SloObjectiveCountMetricGoodCloudwatchDimension `pulumi:"dimensions"`
	// JSON query
	Json *string `pulumi:"json"`
	// Name of the metric [Required for metrics]
	MetricName *string `pulumi:"metricName"`
	// Namespace of the metric
	Namespace *string `pulumi:"namespace"`
	// Region of the CloudWatch instance
	Region string `pulumi:"region"`
	// SQL query
	Sql *string `pulumi:"sql"`
	// Metric data aggregations
	Stat *string `pulumi:"stat"`
}

// SloObjectiveCountMetricGoodCloudwatchInput is an input type that accepts SloObjectiveCountMetricGoodCloudwatchArgs and SloObjectiveCountMetricGoodCloudwatchOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodCloudwatchInput` via:
//
//	SloObjectiveCountMetricGoodCloudwatchArgs{...}
type SloObjectiveCountMetricGoodCloudwatchInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodCloudwatchOutput() SloObjectiveCountMetricGoodCloudwatchOutput
	ToSloObjectiveCountMetricGoodCloudwatchOutputWithContext(context.Context) SloObjectiveCountMetricGoodCloudwatchOutput
}

type SloObjectiveCountMetricGoodCloudwatchArgs struct {
	// AccountID used with cross-account observability feature
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// Dimensions of the metric [Optional for metrics]
	Dimensions SloObjectiveCountMetricGoodCloudwatchDimensionArrayInput `pulumi:"dimensions"`
	// JSON query
	Json pulumi.StringPtrInput `pulumi:"json"`
	// Name of the metric [Required for metrics]
	MetricName pulumi.StringPtrInput `pulumi:"metricName"`
	// Namespace of the metric
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Region of the CloudWatch instance
	Region pulumi.StringInput `pulumi:"region"`
	// SQL query
	Sql pulumi.StringPtrInput `pulumi:"sql"`
	// Metric data aggregations
	Stat pulumi.StringPtrInput `pulumi:"stat"`
}

func (SloObjectiveCountMetricGoodCloudwatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodCloudwatch)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodCloudwatchArgs) ToSloObjectiveCountMetricGoodCloudwatchOutput() SloObjectiveCountMetricGoodCloudwatchOutput {
	return i.ToSloObjectiveCountMetricGoodCloudwatchOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodCloudwatchArgs) ToSloObjectiveCountMetricGoodCloudwatchOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodCloudwatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodCloudwatchOutput)
}

// SloObjectiveCountMetricGoodCloudwatchArrayInput is an input type that accepts SloObjectiveCountMetricGoodCloudwatchArray and SloObjectiveCountMetricGoodCloudwatchArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodCloudwatchArrayInput` via:
//
//	SloObjectiveCountMetricGoodCloudwatchArray{ SloObjectiveCountMetricGoodCloudwatchArgs{...} }
type SloObjectiveCountMetricGoodCloudwatchArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodCloudwatchArrayOutput() SloObjectiveCountMetricGoodCloudwatchArrayOutput
	ToSloObjectiveCountMetricGoodCloudwatchArrayOutputWithContext(context.Context) SloObjectiveCountMetricGoodCloudwatchArrayOutput
}

type SloObjectiveCountMetricGoodCloudwatchArray []SloObjectiveCountMetricGoodCloudwatchInput

func (SloObjectiveCountMetricGoodCloudwatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodCloudwatch)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodCloudwatchArray) ToSloObjectiveCountMetricGoodCloudwatchArrayOutput() SloObjectiveCountMetricGoodCloudwatchArrayOutput {
	return i.ToSloObjectiveCountMetricGoodCloudwatchArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodCloudwatchArray) ToSloObjectiveCountMetricGoodCloudwatchArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodCloudwatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodCloudwatchArrayOutput)
}

type SloObjectiveCountMetricGoodCloudwatchOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodCloudwatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodCloudwatch)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodCloudwatchOutput) ToSloObjectiveCountMetricGoodCloudwatchOutput() SloObjectiveCountMetricGoodCloudwatchOutput {
	return o
}

func (o SloObjectiveCountMetricGoodCloudwatchOutput) ToSloObjectiveCountMetricGoodCloudwatchOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodCloudwatchOutput {
	return o
}

// AccountID used with cross-account observability feature
func (o SloObjectiveCountMetricGoodCloudwatchOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodCloudwatch) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// Dimensions of the metric [Optional for metrics]
func (o SloObjectiveCountMetricGoodCloudwatchOutput) Dimensions() SloObjectiveCountMetricGoodCloudwatchDimensionArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodCloudwatch) []SloObjectiveCountMetricGoodCloudwatchDimension {
		return v.Dimensions
	}).(SloObjectiveCountMetricGoodCloudwatchDimensionArrayOutput)
}

// JSON query
func (o SloObjectiveCountMetricGoodCloudwatchOutput) Json() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodCloudwatch) *string { return v.Json }).(pulumi.StringPtrOutput)
}

// Name of the metric [Required for metrics]
func (o SloObjectiveCountMetricGoodCloudwatchOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodCloudwatch) *string { return v.MetricName }).(pulumi.StringPtrOutput)
}

// Namespace of the metric
func (o SloObjectiveCountMetricGoodCloudwatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodCloudwatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Region of the CloudWatch instance
func (o SloObjectiveCountMetricGoodCloudwatchOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodCloudwatch) string { return v.Region }).(pulumi.StringOutput)
}

// SQL query
func (o SloObjectiveCountMetricGoodCloudwatchOutput) Sql() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodCloudwatch) *string { return v.Sql }).(pulumi.StringPtrOutput)
}

// Metric data aggregations
func (o SloObjectiveCountMetricGoodCloudwatchOutput) Stat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodCloudwatch) *string { return v.Stat }).(pulumi.StringPtrOutput)
}

type SloObjectiveCountMetricGoodCloudwatchArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodCloudwatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodCloudwatch)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodCloudwatchArrayOutput) ToSloObjectiveCountMetricGoodCloudwatchArrayOutput() SloObjectiveCountMetricGoodCloudwatchArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodCloudwatchArrayOutput) ToSloObjectiveCountMetricGoodCloudwatchArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodCloudwatchArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodCloudwatchArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricGoodCloudwatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricGoodCloudwatch {
		return vs[0].([]SloObjectiveCountMetricGoodCloudwatch)[vs[1].(int)]
	}).(SloObjectiveCountMetricGoodCloudwatchOutput)
}

type SloObjectiveCountMetricGoodCloudwatchDimension struct {
	// The name of the previously defined alert method.
	Name string `pulumi:"name"`
	// Burn rate value.
	Value string `pulumi:"value"`
}

// SloObjectiveCountMetricGoodCloudwatchDimensionInput is an input type that accepts SloObjectiveCountMetricGoodCloudwatchDimensionArgs and SloObjectiveCountMetricGoodCloudwatchDimensionOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodCloudwatchDimensionInput` via:
//
//	SloObjectiveCountMetricGoodCloudwatchDimensionArgs{...}
type SloObjectiveCountMetricGoodCloudwatchDimensionInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodCloudwatchDimensionOutput() SloObjectiveCountMetricGoodCloudwatchDimensionOutput
	ToSloObjectiveCountMetricGoodCloudwatchDimensionOutputWithContext(context.Context) SloObjectiveCountMetricGoodCloudwatchDimensionOutput
}

type SloObjectiveCountMetricGoodCloudwatchDimensionArgs struct {
	// The name of the previously defined alert method.
	Name pulumi.StringInput `pulumi:"name"`
	// Burn rate value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (SloObjectiveCountMetricGoodCloudwatchDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodCloudwatchDimension)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodCloudwatchDimensionArgs) ToSloObjectiveCountMetricGoodCloudwatchDimensionOutput() SloObjectiveCountMetricGoodCloudwatchDimensionOutput {
	return i.ToSloObjectiveCountMetricGoodCloudwatchDimensionOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodCloudwatchDimensionArgs) ToSloObjectiveCountMetricGoodCloudwatchDimensionOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodCloudwatchDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodCloudwatchDimensionOutput)
}

// SloObjectiveCountMetricGoodCloudwatchDimensionArrayInput is an input type that accepts SloObjectiveCountMetricGoodCloudwatchDimensionArray and SloObjectiveCountMetricGoodCloudwatchDimensionArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodCloudwatchDimensionArrayInput` via:
//
//	SloObjectiveCountMetricGoodCloudwatchDimensionArray{ SloObjectiveCountMetricGoodCloudwatchDimensionArgs{...} }
type SloObjectiveCountMetricGoodCloudwatchDimensionArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodCloudwatchDimensionArrayOutput() SloObjectiveCountMetricGoodCloudwatchDimensionArrayOutput
	ToSloObjectiveCountMetricGoodCloudwatchDimensionArrayOutputWithContext(context.Context) SloObjectiveCountMetricGoodCloudwatchDimensionArrayOutput
}

type SloObjectiveCountMetricGoodCloudwatchDimensionArray []SloObjectiveCountMetricGoodCloudwatchDimensionInput

func (SloObjectiveCountMetricGoodCloudwatchDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodCloudwatchDimension)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodCloudwatchDimensionArray) ToSloObjectiveCountMetricGoodCloudwatchDimensionArrayOutput() SloObjectiveCountMetricGoodCloudwatchDimensionArrayOutput {
	return i.ToSloObjectiveCountMetricGoodCloudwatchDimensionArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodCloudwatchDimensionArray) ToSloObjectiveCountMetricGoodCloudwatchDimensionArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodCloudwatchDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodCloudwatchDimensionArrayOutput)
}

type SloObjectiveCountMetricGoodCloudwatchDimensionOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodCloudwatchDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodCloudwatchDimension)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodCloudwatchDimensionOutput) ToSloObjectiveCountMetricGoodCloudwatchDimensionOutput() SloObjectiveCountMetricGoodCloudwatchDimensionOutput {
	return o
}

func (o SloObjectiveCountMetricGoodCloudwatchDimensionOutput) ToSloObjectiveCountMetricGoodCloudwatchDimensionOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodCloudwatchDimensionOutput {
	return o
}

// The name of the previously defined alert method.
func (o SloObjectiveCountMetricGoodCloudwatchDimensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodCloudwatchDimension) string { return v.Name }).(pulumi.StringOutput)
}

// Burn rate value.
func (o SloObjectiveCountMetricGoodCloudwatchDimensionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodCloudwatchDimension) string { return v.Value }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricGoodCloudwatchDimensionArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodCloudwatchDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodCloudwatchDimension)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodCloudwatchDimensionArrayOutput) ToSloObjectiveCountMetricGoodCloudwatchDimensionArrayOutput() SloObjectiveCountMetricGoodCloudwatchDimensionArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodCloudwatchDimensionArrayOutput) ToSloObjectiveCountMetricGoodCloudwatchDimensionArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodCloudwatchDimensionArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodCloudwatchDimensionArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricGoodCloudwatchDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricGoodCloudwatchDimension {
		return vs[0].([]SloObjectiveCountMetricGoodCloudwatchDimension)[vs[1].(int)]
	}).(SloObjectiveCountMetricGoodCloudwatchDimensionOutput)
}

type SloObjectiveCountMetricGoodDatadog struct {
	// Query for the metrics
	Query string `pulumi:"query"`
}

// SloObjectiveCountMetricGoodDatadogInput is an input type that accepts SloObjectiveCountMetricGoodDatadogArgs and SloObjectiveCountMetricGoodDatadogOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodDatadogInput` via:
//
//	SloObjectiveCountMetricGoodDatadogArgs{...}
type SloObjectiveCountMetricGoodDatadogInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodDatadogOutput() SloObjectiveCountMetricGoodDatadogOutput
	ToSloObjectiveCountMetricGoodDatadogOutputWithContext(context.Context) SloObjectiveCountMetricGoodDatadogOutput
}

type SloObjectiveCountMetricGoodDatadogArgs struct {
	// Query for the metrics
	Query pulumi.StringInput `pulumi:"query"`
}

func (SloObjectiveCountMetricGoodDatadogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodDatadog)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodDatadogArgs) ToSloObjectiveCountMetricGoodDatadogOutput() SloObjectiveCountMetricGoodDatadogOutput {
	return i.ToSloObjectiveCountMetricGoodDatadogOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodDatadogArgs) ToSloObjectiveCountMetricGoodDatadogOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodDatadogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodDatadogOutput)
}

// SloObjectiveCountMetricGoodDatadogArrayInput is an input type that accepts SloObjectiveCountMetricGoodDatadogArray and SloObjectiveCountMetricGoodDatadogArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodDatadogArrayInput` via:
//
//	SloObjectiveCountMetricGoodDatadogArray{ SloObjectiveCountMetricGoodDatadogArgs{...} }
type SloObjectiveCountMetricGoodDatadogArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodDatadogArrayOutput() SloObjectiveCountMetricGoodDatadogArrayOutput
	ToSloObjectiveCountMetricGoodDatadogArrayOutputWithContext(context.Context) SloObjectiveCountMetricGoodDatadogArrayOutput
}

type SloObjectiveCountMetricGoodDatadogArray []SloObjectiveCountMetricGoodDatadogInput

func (SloObjectiveCountMetricGoodDatadogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodDatadog)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodDatadogArray) ToSloObjectiveCountMetricGoodDatadogArrayOutput() SloObjectiveCountMetricGoodDatadogArrayOutput {
	return i.ToSloObjectiveCountMetricGoodDatadogArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodDatadogArray) ToSloObjectiveCountMetricGoodDatadogArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodDatadogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodDatadogArrayOutput)
}

type SloObjectiveCountMetricGoodDatadogOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodDatadogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodDatadog)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodDatadogOutput) ToSloObjectiveCountMetricGoodDatadogOutput() SloObjectiveCountMetricGoodDatadogOutput {
	return o
}

func (o SloObjectiveCountMetricGoodDatadogOutput) ToSloObjectiveCountMetricGoodDatadogOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodDatadogOutput {
	return o
}

// Query for the metrics
func (o SloObjectiveCountMetricGoodDatadogOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodDatadog) string { return v.Query }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricGoodDatadogArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodDatadogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodDatadog)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodDatadogArrayOutput) ToSloObjectiveCountMetricGoodDatadogArrayOutput() SloObjectiveCountMetricGoodDatadogArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodDatadogArrayOutput) ToSloObjectiveCountMetricGoodDatadogArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodDatadogArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodDatadogArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricGoodDatadogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricGoodDatadog {
		return vs[0].([]SloObjectiveCountMetricGoodDatadog)[vs[1].(int)]
	}).(SloObjectiveCountMetricGoodDatadogOutput)
}

type SloObjectiveCountMetricGoodDynatrace struct {
	// Selector for the metrics
	MetricSelector string `pulumi:"metricSelector"`
}

// SloObjectiveCountMetricGoodDynatraceInput is an input type that accepts SloObjectiveCountMetricGoodDynatraceArgs and SloObjectiveCountMetricGoodDynatraceOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodDynatraceInput` via:
//
//	SloObjectiveCountMetricGoodDynatraceArgs{...}
type SloObjectiveCountMetricGoodDynatraceInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodDynatraceOutput() SloObjectiveCountMetricGoodDynatraceOutput
	ToSloObjectiveCountMetricGoodDynatraceOutputWithContext(context.Context) SloObjectiveCountMetricGoodDynatraceOutput
}

type SloObjectiveCountMetricGoodDynatraceArgs struct {
	// Selector for the metrics
	MetricSelector pulumi.StringInput `pulumi:"metricSelector"`
}

func (SloObjectiveCountMetricGoodDynatraceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodDynatrace)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodDynatraceArgs) ToSloObjectiveCountMetricGoodDynatraceOutput() SloObjectiveCountMetricGoodDynatraceOutput {
	return i.ToSloObjectiveCountMetricGoodDynatraceOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodDynatraceArgs) ToSloObjectiveCountMetricGoodDynatraceOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodDynatraceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodDynatraceOutput)
}

// SloObjectiveCountMetricGoodDynatraceArrayInput is an input type that accepts SloObjectiveCountMetricGoodDynatraceArray and SloObjectiveCountMetricGoodDynatraceArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodDynatraceArrayInput` via:
//
//	SloObjectiveCountMetricGoodDynatraceArray{ SloObjectiveCountMetricGoodDynatraceArgs{...} }
type SloObjectiveCountMetricGoodDynatraceArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodDynatraceArrayOutput() SloObjectiveCountMetricGoodDynatraceArrayOutput
	ToSloObjectiveCountMetricGoodDynatraceArrayOutputWithContext(context.Context) SloObjectiveCountMetricGoodDynatraceArrayOutput
}

type SloObjectiveCountMetricGoodDynatraceArray []SloObjectiveCountMetricGoodDynatraceInput

func (SloObjectiveCountMetricGoodDynatraceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodDynatrace)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodDynatraceArray) ToSloObjectiveCountMetricGoodDynatraceArrayOutput() SloObjectiveCountMetricGoodDynatraceArrayOutput {
	return i.ToSloObjectiveCountMetricGoodDynatraceArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodDynatraceArray) ToSloObjectiveCountMetricGoodDynatraceArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodDynatraceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodDynatraceArrayOutput)
}

type SloObjectiveCountMetricGoodDynatraceOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodDynatraceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodDynatrace)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodDynatraceOutput) ToSloObjectiveCountMetricGoodDynatraceOutput() SloObjectiveCountMetricGoodDynatraceOutput {
	return o
}

func (o SloObjectiveCountMetricGoodDynatraceOutput) ToSloObjectiveCountMetricGoodDynatraceOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodDynatraceOutput {
	return o
}

// Selector for the metrics
func (o SloObjectiveCountMetricGoodDynatraceOutput) MetricSelector() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodDynatrace) string { return v.MetricSelector }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricGoodDynatraceArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodDynatraceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodDynatrace)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodDynatraceArrayOutput) ToSloObjectiveCountMetricGoodDynatraceArrayOutput() SloObjectiveCountMetricGoodDynatraceArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodDynatraceArrayOutput) ToSloObjectiveCountMetricGoodDynatraceArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodDynatraceArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodDynatraceArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricGoodDynatraceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricGoodDynatrace {
		return vs[0].([]SloObjectiveCountMetricGoodDynatrace)[vs[1].(int)]
	}).(SloObjectiveCountMetricGoodDynatraceOutput)
}

type SloObjectiveCountMetricGoodElasticsearch struct {
	// Index of metrics we want to query
	Index string `pulumi:"index"`
	// Query for the metrics
	Query string `pulumi:"query"`
}

// SloObjectiveCountMetricGoodElasticsearchInput is an input type that accepts SloObjectiveCountMetricGoodElasticsearchArgs and SloObjectiveCountMetricGoodElasticsearchOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodElasticsearchInput` via:
//
//	SloObjectiveCountMetricGoodElasticsearchArgs{...}
type SloObjectiveCountMetricGoodElasticsearchInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodElasticsearchOutput() SloObjectiveCountMetricGoodElasticsearchOutput
	ToSloObjectiveCountMetricGoodElasticsearchOutputWithContext(context.Context) SloObjectiveCountMetricGoodElasticsearchOutput
}

type SloObjectiveCountMetricGoodElasticsearchArgs struct {
	// Index of metrics we want to query
	Index pulumi.StringInput `pulumi:"index"`
	// Query for the metrics
	Query pulumi.StringInput `pulumi:"query"`
}

func (SloObjectiveCountMetricGoodElasticsearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodElasticsearch)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodElasticsearchArgs) ToSloObjectiveCountMetricGoodElasticsearchOutput() SloObjectiveCountMetricGoodElasticsearchOutput {
	return i.ToSloObjectiveCountMetricGoodElasticsearchOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodElasticsearchArgs) ToSloObjectiveCountMetricGoodElasticsearchOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodElasticsearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodElasticsearchOutput)
}

// SloObjectiveCountMetricGoodElasticsearchArrayInput is an input type that accepts SloObjectiveCountMetricGoodElasticsearchArray and SloObjectiveCountMetricGoodElasticsearchArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodElasticsearchArrayInput` via:
//
//	SloObjectiveCountMetricGoodElasticsearchArray{ SloObjectiveCountMetricGoodElasticsearchArgs{...} }
type SloObjectiveCountMetricGoodElasticsearchArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodElasticsearchArrayOutput() SloObjectiveCountMetricGoodElasticsearchArrayOutput
	ToSloObjectiveCountMetricGoodElasticsearchArrayOutputWithContext(context.Context) SloObjectiveCountMetricGoodElasticsearchArrayOutput
}

type SloObjectiveCountMetricGoodElasticsearchArray []SloObjectiveCountMetricGoodElasticsearchInput

func (SloObjectiveCountMetricGoodElasticsearchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodElasticsearch)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodElasticsearchArray) ToSloObjectiveCountMetricGoodElasticsearchArrayOutput() SloObjectiveCountMetricGoodElasticsearchArrayOutput {
	return i.ToSloObjectiveCountMetricGoodElasticsearchArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodElasticsearchArray) ToSloObjectiveCountMetricGoodElasticsearchArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodElasticsearchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodElasticsearchArrayOutput)
}

type SloObjectiveCountMetricGoodElasticsearchOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodElasticsearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodElasticsearch)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodElasticsearchOutput) ToSloObjectiveCountMetricGoodElasticsearchOutput() SloObjectiveCountMetricGoodElasticsearchOutput {
	return o
}

func (o SloObjectiveCountMetricGoodElasticsearchOutput) ToSloObjectiveCountMetricGoodElasticsearchOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodElasticsearchOutput {
	return o
}

// Index of metrics we want to query
func (o SloObjectiveCountMetricGoodElasticsearchOutput) Index() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodElasticsearch) string { return v.Index }).(pulumi.StringOutput)
}

// Query for the metrics
func (o SloObjectiveCountMetricGoodElasticsearchOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodElasticsearch) string { return v.Query }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricGoodElasticsearchArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodElasticsearchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodElasticsearch)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodElasticsearchArrayOutput) ToSloObjectiveCountMetricGoodElasticsearchArrayOutput() SloObjectiveCountMetricGoodElasticsearchArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodElasticsearchArrayOutput) ToSloObjectiveCountMetricGoodElasticsearchArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodElasticsearchArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodElasticsearchArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricGoodElasticsearchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricGoodElasticsearch {
		return vs[0].([]SloObjectiveCountMetricGoodElasticsearch)[vs[1].(int)]
	}).(SloObjectiveCountMetricGoodElasticsearchOutput)
}

type SloObjectiveCountMetricGoodGcm struct {
	// Project ID
	ProjectId string `pulumi:"projectId"`
	// Query for the metrics
	Query string `pulumi:"query"`
}

// SloObjectiveCountMetricGoodGcmInput is an input type that accepts SloObjectiveCountMetricGoodGcmArgs and SloObjectiveCountMetricGoodGcmOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodGcmInput` via:
//
//	SloObjectiveCountMetricGoodGcmArgs{...}
type SloObjectiveCountMetricGoodGcmInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodGcmOutput() SloObjectiveCountMetricGoodGcmOutput
	ToSloObjectiveCountMetricGoodGcmOutputWithContext(context.Context) SloObjectiveCountMetricGoodGcmOutput
}

type SloObjectiveCountMetricGoodGcmArgs struct {
	// Project ID
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// Query for the metrics
	Query pulumi.StringInput `pulumi:"query"`
}

func (SloObjectiveCountMetricGoodGcmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodGcm)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodGcmArgs) ToSloObjectiveCountMetricGoodGcmOutput() SloObjectiveCountMetricGoodGcmOutput {
	return i.ToSloObjectiveCountMetricGoodGcmOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodGcmArgs) ToSloObjectiveCountMetricGoodGcmOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodGcmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodGcmOutput)
}

// SloObjectiveCountMetricGoodGcmArrayInput is an input type that accepts SloObjectiveCountMetricGoodGcmArray and SloObjectiveCountMetricGoodGcmArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodGcmArrayInput` via:
//
//	SloObjectiveCountMetricGoodGcmArray{ SloObjectiveCountMetricGoodGcmArgs{...} }
type SloObjectiveCountMetricGoodGcmArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodGcmArrayOutput() SloObjectiveCountMetricGoodGcmArrayOutput
	ToSloObjectiveCountMetricGoodGcmArrayOutputWithContext(context.Context) SloObjectiveCountMetricGoodGcmArrayOutput
}

type SloObjectiveCountMetricGoodGcmArray []SloObjectiveCountMetricGoodGcmInput

func (SloObjectiveCountMetricGoodGcmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodGcm)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodGcmArray) ToSloObjectiveCountMetricGoodGcmArrayOutput() SloObjectiveCountMetricGoodGcmArrayOutput {
	return i.ToSloObjectiveCountMetricGoodGcmArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodGcmArray) ToSloObjectiveCountMetricGoodGcmArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodGcmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodGcmArrayOutput)
}

type SloObjectiveCountMetricGoodGcmOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodGcmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodGcm)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodGcmOutput) ToSloObjectiveCountMetricGoodGcmOutput() SloObjectiveCountMetricGoodGcmOutput {
	return o
}

func (o SloObjectiveCountMetricGoodGcmOutput) ToSloObjectiveCountMetricGoodGcmOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodGcmOutput {
	return o
}

// Project ID
func (o SloObjectiveCountMetricGoodGcmOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodGcm) string { return v.ProjectId }).(pulumi.StringOutput)
}

// Query for the metrics
func (o SloObjectiveCountMetricGoodGcmOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodGcm) string { return v.Query }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricGoodGcmArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodGcmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodGcm)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodGcmArrayOutput) ToSloObjectiveCountMetricGoodGcmArrayOutput() SloObjectiveCountMetricGoodGcmArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodGcmArrayOutput) ToSloObjectiveCountMetricGoodGcmArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodGcmArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodGcmArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricGoodGcmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricGoodGcm {
		return vs[0].([]SloObjectiveCountMetricGoodGcm)[vs[1].(int)]
	}).(SloObjectiveCountMetricGoodGcmOutput)
}

type SloObjectiveCountMetricGoodGrafanaLoki struct {
	// Query for the logs
	Logql string `pulumi:"logql"`
}

// SloObjectiveCountMetricGoodGrafanaLokiInput is an input type that accepts SloObjectiveCountMetricGoodGrafanaLokiArgs and SloObjectiveCountMetricGoodGrafanaLokiOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodGrafanaLokiInput` via:
//
//	SloObjectiveCountMetricGoodGrafanaLokiArgs{...}
type SloObjectiveCountMetricGoodGrafanaLokiInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodGrafanaLokiOutput() SloObjectiveCountMetricGoodGrafanaLokiOutput
	ToSloObjectiveCountMetricGoodGrafanaLokiOutputWithContext(context.Context) SloObjectiveCountMetricGoodGrafanaLokiOutput
}

type SloObjectiveCountMetricGoodGrafanaLokiArgs struct {
	// Query for the logs
	Logql pulumi.StringInput `pulumi:"logql"`
}

func (SloObjectiveCountMetricGoodGrafanaLokiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodGrafanaLoki)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodGrafanaLokiArgs) ToSloObjectiveCountMetricGoodGrafanaLokiOutput() SloObjectiveCountMetricGoodGrafanaLokiOutput {
	return i.ToSloObjectiveCountMetricGoodGrafanaLokiOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodGrafanaLokiArgs) ToSloObjectiveCountMetricGoodGrafanaLokiOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodGrafanaLokiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodGrafanaLokiOutput)
}

// SloObjectiveCountMetricGoodGrafanaLokiArrayInput is an input type that accepts SloObjectiveCountMetricGoodGrafanaLokiArray and SloObjectiveCountMetricGoodGrafanaLokiArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodGrafanaLokiArrayInput` via:
//
//	SloObjectiveCountMetricGoodGrafanaLokiArray{ SloObjectiveCountMetricGoodGrafanaLokiArgs{...} }
type SloObjectiveCountMetricGoodGrafanaLokiArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodGrafanaLokiArrayOutput() SloObjectiveCountMetricGoodGrafanaLokiArrayOutput
	ToSloObjectiveCountMetricGoodGrafanaLokiArrayOutputWithContext(context.Context) SloObjectiveCountMetricGoodGrafanaLokiArrayOutput
}

type SloObjectiveCountMetricGoodGrafanaLokiArray []SloObjectiveCountMetricGoodGrafanaLokiInput

func (SloObjectiveCountMetricGoodGrafanaLokiArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodGrafanaLoki)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodGrafanaLokiArray) ToSloObjectiveCountMetricGoodGrafanaLokiArrayOutput() SloObjectiveCountMetricGoodGrafanaLokiArrayOutput {
	return i.ToSloObjectiveCountMetricGoodGrafanaLokiArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodGrafanaLokiArray) ToSloObjectiveCountMetricGoodGrafanaLokiArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodGrafanaLokiArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodGrafanaLokiArrayOutput)
}

type SloObjectiveCountMetricGoodGrafanaLokiOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodGrafanaLokiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodGrafanaLoki)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodGrafanaLokiOutput) ToSloObjectiveCountMetricGoodGrafanaLokiOutput() SloObjectiveCountMetricGoodGrafanaLokiOutput {
	return o
}

func (o SloObjectiveCountMetricGoodGrafanaLokiOutput) ToSloObjectiveCountMetricGoodGrafanaLokiOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodGrafanaLokiOutput {
	return o
}

// Query for the logs
func (o SloObjectiveCountMetricGoodGrafanaLokiOutput) Logql() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodGrafanaLoki) string { return v.Logql }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricGoodGrafanaLokiArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodGrafanaLokiArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodGrafanaLoki)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodGrafanaLokiArrayOutput) ToSloObjectiveCountMetricGoodGrafanaLokiArrayOutput() SloObjectiveCountMetricGoodGrafanaLokiArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodGrafanaLokiArrayOutput) ToSloObjectiveCountMetricGoodGrafanaLokiArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodGrafanaLokiArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodGrafanaLokiArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricGoodGrafanaLokiOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricGoodGrafanaLoki {
		return vs[0].([]SloObjectiveCountMetricGoodGrafanaLoki)[vs[1].(int)]
	}).(SloObjectiveCountMetricGoodGrafanaLokiOutput)
}

type SloObjectiveCountMetricGoodGraphite struct {
	// Path to the metrics
	MetricPath string `pulumi:"metricPath"`
}

// SloObjectiveCountMetricGoodGraphiteInput is an input type that accepts SloObjectiveCountMetricGoodGraphiteArgs and SloObjectiveCountMetricGoodGraphiteOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodGraphiteInput` via:
//
//	SloObjectiveCountMetricGoodGraphiteArgs{...}
type SloObjectiveCountMetricGoodGraphiteInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodGraphiteOutput() SloObjectiveCountMetricGoodGraphiteOutput
	ToSloObjectiveCountMetricGoodGraphiteOutputWithContext(context.Context) SloObjectiveCountMetricGoodGraphiteOutput
}

type SloObjectiveCountMetricGoodGraphiteArgs struct {
	// Path to the metrics
	MetricPath pulumi.StringInput `pulumi:"metricPath"`
}

func (SloObjectiveCountMetricGoodGraphiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodGraphite)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodGraphiteArgs) ToSloObjectiveCountMetricGoodGraphiteOutput() SloObjectiveCountMetricGoodGraphiteOutput {
	return i.ToSloObjectiveCountMetricGoodGraphiteOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodGraphiteArgs) ToSloObjectiveCountMetricGoodGraphiteOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodGraphiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodGraphiteOutput)
}

// SloObjectiveCountMetricGoodGraphiteArrayInput is an input type that accepts SloObjectiveCountMetricGoodGraphiteArray and SloObjectiveCountMetricGoodGraphiteArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodGraphiteArrayInput` via:
//
//	SloObjectiveCountMetricGoodGraphiteArray{ SloObjectiveCountMetricGoodGraphiteArgs{...} }
type SloObjectiveCountMetricGoodGraphiteArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodGraphiteArrayOutput() SloObjectiveCountMetricGoodGraphiteArrayOutput
	ToSloObjectiveCountMetricGoodGraphiteArrayOutputWithContext(context.Context) SloObjectiveCountMetricGoodGraphiteArrayOutput
}

type SloObjectiveCountMetricGoodGraphiteArray []SloObjectiveCountMetricGoodGraphiteInput

func (SloObjectiveCountMetricGoodGraphiteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodGraphite)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodGraphiteArray) ToSloObjectiveCountMetricGoodGraphiteArrayOutput() SloObjectiveCountMetricGoodGraphiteArrayOutput {
	return i.ToSloObjectiveCountMetricGoodGraphiteArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodGraphiteArray) ToSloObjectiveCountMetricGoodGraphiteArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodGraphiteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodGraphiteArrayOutput)
}

type SloObjectiveCountMetricGoodGraphiteOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodGraphiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodGraphite)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodGraphiteOutput) ToSloObjectiveCountMetricGoodGraphiteOutput() SloObjectiveCountMetricGoodGraphiteOutput {
	return o
}

func (o SloObjectiveCountMetricGoodGraphiteOutput) ToSloObjectiveCountMetricGoodGraphiteOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodGraphiteOutput {
	return o
}

// Path to the metrics
func (o SloObjectiveCountMetricGoodGraphiteOutput) MetricPath() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodGraphite) string { return v.MetricPath }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricGoodGraphiteArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodGraphiteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodGraphite)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodGraphiteArrayOutput) ToSloObjectiveCountMetricGoodGraphiteArrayOutput() SloObjectiveCountMetricGoodGraphiteArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodGraphiteArrayOutput) ToSloObjectiveCountMetricGoodGraphiteArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodGraphiteArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodGraphiteArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricGoodGraphiteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricGoodGraphite {
		return vs[0].([]SloObjectiveCountMetricGoodGraphite)[vs[1].(int)]
	}).(SloObjectiveCountMetricGoodGraphiteOutput)
}

type SloObjectiveCountMetricGoodHoneycomb struct {
	// Column name - required for all calculation types besides 'CONCURRENCY' and 'COUNT'
	Attribute *string `pulumi:"attribute"`
	// Calculation type
	Calculation string `pulumi:"calculation"`
}

// SloObjectiveCountMetricGoodHoneycombInput is an input type that accepts SloObjectiveCountMetricGoodHoneycombArgs and SloObjectiveCountMetricGoodHoneycombOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodHoneycombInput` via:
//
//	SloObjectiveCountMetricGoodHoneycombArgs{...}
type SloObjectiveCountMetricGoodHoneycombInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodHoneycombOutput() SloObjectiveCountMetricGoodHoneycombOutput
	ToSloObjectiveCountMetricGoodHoneycombOutputWithContext(context.Context) SloObjectiveCountMetricGoodHoneycombOutput
}

type SloObjectiveCountMetricGoodHoneycombArgs struct {
	// Column name - required for all calculation types besides 'CONCURRENCY' and 'COUNT'
	Attribute pulumi.StringPtrInput `pulumi:"attribute"`
	// Calculation type
	Calculation pulumi.StringInput `pulumi:"calculation"`
}

func (SloObjectiveCountMetricGoodHoneycombArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodHoneycomb)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodHoneycombArgs) ToSloObjectiveCountMetricGoodHoneycombOutput() SloObjectiveCountMetricGoodHoneycombOutput {
	return i.ToSloObjectiveCountMetricGoodHoneycombOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodHoneycombArgs) ToSloObjectiveCountMetricGoodHoneycombOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodHoneycombOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodHoneycombOutput)
}

// SloObjectiveCountMetricGoodHoneycombArrayInput is an input type that accepts SloObjectiveCountMetricGoodHoneycombArray and SloObjectiveCountMetricGoodHoneycombArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodHoneycombArrayInput` via:
//
//	SloObjectiveCountMetricGoodHoneycombArray{ SloObjectiveCountMetricGoodHoneycombArgs{...} }
type SloObjectiveCountMetricGoodHoneycombArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodHoneycombArrayOutput() SloObjectiveCountMetricGoodHoneycombArrayOutput
	ToSloObjectiveCountMetricGoodHoneycombArrayOutputWithContext(context.Context) SloObjectiveCountMetricGoodHoneycombArrayOutput
}

type SloObjectiveCountMetricGoodHoneycombArray []SloObjectiveCountMetricGoodHoneycombInput

func (SloObjectiveCountMetricGoodHoneycombArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodHoneycomb)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodHoneycombArray) ToSloObjectiveCountMetricGoodHoneycombArrayOutput() SloObjectiveCountMetricGoodHoneycombArrayOutput {
	return i.ToSloObjectiveCountMetricGoodHoneycombArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodHoneycombArray) ToSloObjectiveCountMetricGoodHoneycombArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodHoneycombArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodHoneycombArrayOutput)
}

type SloObjectiveCountMetricGoodHoneycombOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodHoneycombOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodHoneycomb)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodHoneycombOutput) ToSloObjectiveCountMetricGoodHoneycombOutput() SloObjectiveCountMetricGoodHoneycombOutput {
	return o
}

func (o SloObjectiveCountMetricGoodHoneycombOutput) ToSloObjectiveCountMetricGoodHoneycombOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodHoneycombOutput {
	return o
}

// Column name - required for all calculation types besides 'CONCURRENCY' and 'COUNT'
func (o SloObjectiveCountMetricGoodHoneycombOutput) Attribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodHoneycomb) *string { return v.Attribute }).(pulumi.StringPtrOutput)
}

// Calculation type
func (o SloObjectiveCountMetricGoodHoneycombOutput) Calculation() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodHoneycomb) string { return v.Calculation }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricGoodHoneycombArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodHoneycombArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodHoneycomb)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodHoneycombArrayOutput) ToSloObjectiveCountMetricGoodHoneycombArrayOutput() SloObjectiveCountMetricGoodHoneycombArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodHoneycombArrayOutput) ToSloObjectiveCountMetricGoodHoneycombArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodHoneycombArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodHoneycombArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricGoodHoneycombOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricGoodHoneycomb {
		return vs[0].([]SloObjectiveCountMetricGoodHoneycomb)[vs[1].(int)]
	}).(SloObjectiveCountMetricGoodHoneycombOutput)
}

type SloObjectiveCountMetricGoodInfluxdb struct {
	// Query for the metrics
	Query string `pulumi:"query"`
}

// SloObjectiveCountMetricGoodInfluxdbInput is an input type that accepts SloObjectiveCountMetricGoodInfluxdbArgs and SloObjectiveCountMetricGoodInfluxdbOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodInfluxdbInput` via:
//
//	SloObjectiveCountMetricGoodInfluxdbArgs{...}
type SloObjectiveCountMetricGoodInfluxdbInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodInfluxdbOutput() SloObjectiveCountMetricGoodInfluxdbOutput
	ToSloObjectiveCountMetricGoodInfluxdbOutputWithContext(context.Context) SloObjectiveCountMetricGoodInfluxdbOutput
}

type SloObjectiveCountMetricGoodInfluxdbArgs struct {
	// Query for the metrics
	Query pulumi.StringInput `pulumi:"query"`
}

func (SloObjectiveCountMetricGoodInfluxdbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodInfluxdb)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodInfluxdbArgs) ToSloObjectiveCountMetricGoodInfluxdbOutput() SloObjectiveCountMetricGoodInfluxdbOutput {
	return i.ToSloObjectiveCountMetricGoodInfluxdbOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodInfluxdbArgs) ToSloObjectiveCountMetricGoodInfluxdbOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodInfluxdbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodInfluxdbOutput)
}

// SloObjectiveCountMetricGoodInfluxdbArrayInput is an input type that accepts SloObjectiveCountMetricGoodInfluxdbArray and SloObjectiveCountMetricGoodInfluxdbArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodInfluxdbArrayInput` via:
//
//	SloObjectiveCountMetricGoodInfluxdbArray{ SloObjectiveCountMetricGoodInfluxdbArgs{...} }
type SloObjectiveCountMetricGoodInfluxdbArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodInfluxdbArrayOutput() SloObjectiveCountMetricGoodInfluxdbArrayOutput
	ToSloObjectiveCountMetricGoodInfluxdbArrayOutputWithContext(context.Context) SloObjectiveCountMetricGoodInfluxdbArrayOutput
}

type SloObjectiveCountMetricGoodInfluxdbArray []SloObjectiveCountMetricGoodInfluxdbInput

func (SloObjectiveCountMetricGoodInfluxdbArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodInfluxdb)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodInfluxdbArray) ToSloObjectiveCountMetricGoodInfluxdbArrayOutput() SloObjectiveCountMetricGoodInfluxdbArrayOutput {
	return i.ToSloObjectiveCountMetricGoodInfluxdbArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodInfluxdbArray) ToSloObjectiveCountMetricGoodInfluxdbArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodInfluxdbArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodInfluxdbArrayOutput)
}

type SloObjectiveCountMetricGoodInfluxdbOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodInfluxdbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodInfluxdb)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodInfluxdbOutput) ToSloObjectiveCountMetricGoodInfluxdbOutput() SloObjectiveCountMetricGoodInfluxdbOutput {
	return o
}

func (o SloObjectiveCountMetricGoodInfluxdbOutput) ToSloObjectiveCountMetricGoodInfluxdbOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodInfluxdbOutput {
	return o
}

// Query for the metrics
func (o SloObjectiveCountMetricGoodInfluxdbOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodInfluxdb) string { return v.Query }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricGoodInfluxdbArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodInfluxdbArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodInfluxdb)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodInfluxdbArrayOutput) ToSloObjectiveCountMetricGoodInfluxdbArrayOutput() SloObjectiveCountMetricGoodInfluxdbArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodInfluxdbArrayOutput) ToSloObjectiveCountMetricGoodInfluxdbArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodInfluxdbArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodInfluxdbArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricGoodInfluxdbOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricGoodInfluxdb {
		return vs[0].([]SloObjectiveCountMetricGoodInfluxdb)[vs[1].(int)]
	}).(SloObjectiveCountMetricGoodInfluxdbOutput)
}

type SloObjectiveCountMetricGoodInstana struct {
	// Infrastructure metric type
	Applications []SloObjectiveCountMetricGoodInstanaApplication `pulumi:"applications"`
	// Infrastructure metric type
	Infrastructures []SloObjectiveCountMetricGoodInstanaInfrastructure `pulumi:"infrastructures"`
	// Instana metric type 'application' or 'infrastructure'
	MetricType string `pulumi:"metricType"`
}

// SloObjectiveCountMetricGoodInstanaInput is an input type that accepts SloObjectiveCountMetricGoodInstanaArgs and SloObjectiveCountMetricGoodInstanaOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodInstanaInput` via:
//
//	SloObjectiveCountMetricGoodInstanaArgs{...}
type SloObjectiveCountMetricGoodInstanaInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodInstanaOutput() SloObjectiveCountMetricGoodInstanaOutput
	ToSloObjectiveCountMetricGoodInstanaOutputWithContext(context.Context) SloObjectiveCountMetricGoodInstanaOutput
}

type SloObjectiveCountMetricGoodInstanaArgs struct {
	// Infrastructure metric type
	Applications SloObjectiveCountMetricGoodInstanaApplicationArrayInput `pulumi:"applications"`
	// Infrastructure metric type
	Infrastructures SloObjectiveCountMetricGoodInstanaInfrastructureArrayInput `pulumi:"infrastructures"`
	// Instana metric type 'application' or 'infrastructure'
	MetricType pulumi.StringInput `pulumi:"metricType"`
}

func (SloObjectiveCountMetricGoodInstanaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodInstana)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodInstanaArgs) ToSloObjectiveCountMetricGoodInstanaOutput() SloObjectiveCountMetricGoodInstanaOutput {
	return i.ToSloObjectiveCountMetricGoodInstanaOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodInstanaArgs) ToSloObjectiveCountMetricGoodInstanaOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodInstanaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodInstanaOutput)
}

// SloObjectiveCountMetricGoodInstanaArrayInput is an input type that accepts SloObjectiveCountMetricGoodInstanaArray and SloObjectiveCountMetricGoodInstanaArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodInstanaArrayInput` via:
//
//	SloObjectiveCountMetricGoodInstanaArray{ SloObjectiveCountMetricGoodInstanaArgs{...} }
type SloObjectiveCountMetricGoodInstanaArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodInstanaArrayOutput() SloObjectiveCountMetricGoodInstanaArrayOutput
	ToSloObjectiveCountMetricGoodInstanaArrayOutputWithContext(context.Context) SloObjectiveCountMetricGoodInstanaArrayOutput
}

type SloObjectiveCountMetricGoodInstanaArray []SloObjectiveCountMetricGoodInstanaInput

func (SloObjectiveCountMetricGoodInstanaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodInstana)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodInstanaArray) ToSloObjectiveCountMetricGoodInstanaArrayOutput() SloObjectiveCountMetricGoodInstanaArrayOutput {
	return i.ToSloObjectiveCountMetricGoodInstanaArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodInstanaArray) ToSloObjectiveCountMetricGoodInstanaArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodInstanaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodInstanaArrayOutput)
}

type SloObjectiveCountMetricGoodInstanaOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodInstanaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodInstana)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodInstanaOutput) ToSloObjectiveCountMetricGoodInstanaOutput() SloObjectiveCountMetricGoodInstanaOutput {
	return o
}

func (o SloObjectiveCountMetricGoodInstanaOutput) ToSloObjectiveCountMetricGoodInstanaOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodInstanaOutput {
	return o
}

// Infrastructure metric type
func (o SloObjectiveCountMetricGoodInstanaOutput) Applications() SloObjectiveCountMetricGoodInstanaApplicationArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodInstana) []SloObjectiveCountMetricGoodInstanaApplication {
		return v.Applications
	}).(SloObjectiveCountMetricGoodInstanaApplicationArrayOutput)
}

// Infrastructure metric type
func (o SloObjectiveCountMetricGoodInstanaOutput) Infrastructures() SloObjectiveCountMetricGoodInstanaInfrastructureArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodInstana) []SloObjectiveCountMetricGoodInstanaInfrastructure {
		return v.Infrastructures
	}).(SloObjectiveCountMetricGoodInstanaInfrastructureArrayOutput)
}

// Instana metric type 'application' or 'infrastructure'
func (o SloObjectiveCountMetricGoodInstanaOutput) MetricType() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodInstana) string { return v.MetricType }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricGoodInstanaArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodInstanaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodInstana)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodInstanaArrayOutput) ToSloObjectiveCountMetricGoodInstanaArrayOutput() SloObjectiveCountMetricGoodInstanaArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodInstanaArrayOutput) ToSloObjectiveCountMetricGoodInstanaArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodInstanaArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodInstanaArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricGoodInstanaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricGoodInstana {
		return vs[0].([]SloObjectiveCountMetricGoodInstana)[vs[1].(int)]
	}).(SloObjectiveCountMetricGoodInstanaOutput)
}

type SloObjectiveCountMetricGoodInstanaApplication struct {
	// Aggregation type [Required for metrics]
	Aggregation string `pulumi:"aggregation"`
	// API query user passes in a JSON format
	ApiQuery string `pulumi:"apiQuery"`
	// Group by method
	GroupBies []SloObjectiveCountMetricGoodInstanaApplicationGroupBy `pulumi:"groupBies"`
	// Include internal
	IncludeInternal *bool `pulumi:"includeInternal"`
	// Include synthetic
	IncludeSynthetic *bool `pulumi:"includeSynthetic"`
	// Metric ID one of 'calls', 'erroneousCalls', 'errors', 'latency'
	MetricId string `pulumi:"metricId"`
}

// SloObjectiveCountMetricGoodInstanaApplicationInput is an input type that accepts SloObjectiveCountMetricGoodInstanaApplicationArgs and SloObjectiveCountMetricGoodInstanaApplicationOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodInstanaApplicationInput` via:
//
//	SloObjectiveCountMetricGoodInstanaApplicationArgs{...}
type SloObjectiveCountMetricGoodInstanaApplicationInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodInstanaApplicationOutput() SloObjectiveCountMetricGoodInstanaApplicationOutput
	ToSloObjectiveCountMetricGoodInstanaApplicationOutputWithContext(context.Context) SloObjectiveCountMetricGoodInstanaApplicationOutput
}

type SloObjectiveCountMetricGoodInstanaApplicationArgs struct {
	// Aggregation type [Required for metrics]
	Aggregation pulumi.StringInput `pulumi:"aggregation"`
	// API query user passes in a JSON format
	ApiQuery pulumi.StringInput `pulumi:"apiQuery"`
	// Group by method
	GroupBies SloObjectiveCountMetricGoodInstanaApplicationGroupByArrayInput `pulumi:"groupBies"`
	// Include internal
	IncludeInternal pulumi.BoolPtrInput `pulumi:"includeInternal"`
	// Include synthetic
	IncludeSynthetic pulumi.BoolPtrInput `pulumi:"includeSynthetic"`
	// Metric ID one of 'calls', 'erroneousCalls', 'errors', 'latency'
	MetricId pulumi.StringInput `pulumi:"metricId"`
}

func (SloObjectiveCountMetricGoodInstanaApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodInstanaApplication)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodInstanaApplicationArgs) ToSloObjectiveCountMetricGoodInstanaApplicationOutput() SloObjectiveCountMetricGoodInstanaApplicationOutput {
	return i.ToSloObjectiveCountMetricGoodInstanaApplicationOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodInstanaApplicationArgs) ToSloObjectiveCountMetricGoodInstanaApplicationOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodInstanaApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodInstanaApplicationOutput)
}

// SloObjectiveCountMetricGoodInstanaApplicationArrayInput is an input type that accepts SloObjectiveCountMetricGoodInstanaApplicationArray and SloObjectiveCountMetricGoodInstanaApplicationArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodInstanaApplicationArrayInput` via:
//
//	SloObjectiveCountMetricGoodInstanaApplicationArray{ SloObjectiveCountMetricGoodInstanaApplicationArgs{...} }
type SloObjectiveCountMetricGoodInstanaApplicationArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodInstanaApplicationArrayOutput() SloObjectiveCountMetricGoodInstanaApplicationArrayOutput
	ToSloObjectiveCountMetricGoodInstanaApplicationArrayOutputWithContext(context.Context) SloObjectiveCountMetricGoodInstanaApplicationArrayOutput
}

type SloObjectiveCountMetricGoodInstanaApplicationArray []SloObjectiveCountMetricGoodInstanaApplicationInput

func (SloObjectiveCountMetricGoodInstanaApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodInstanaApplication)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodInstanaApplicationArray) ToSloObjectiveCountMetricGoodInstanaApplicationArrayOutput() SloObjectiveCountMetricGoodInstanaApplicationArrayOutput {
	return i.ToSloObjectiveCountMetricGoodInstanaApplicationArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodInstanaApplicationArray) ToSloObjectiveCountMetricGoodInstanaApplicationArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodInstanaApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodInstanaApplicationArrayOutput)
}

type SloObjectiveCountMetricGoodInstanaApplicationOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodInstanaApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodInstanaApplication)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodInstanaApplicationOutput) ToSloObjectiveCountMetricGoodInstanaApplicationOutput() SloObjectiveCountMetricGoodInstanaApplicationOutput {
	return o
}

func (o SloObjectiveCountMetricGoodInstanaApplicationOutput) ToSloObjectiveCountMetricGoodInstanaApplicationOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodInstanaApplicationOutput {
	return o
}

// Aggregation type [Required for metrics]
func (o SloObjectiveCountMetricGoodInstanaApplicationOutput) Aggregation() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodInstanaApplication) string { return v.Aggregation }).(pulumi.StringOutput)
}

// API query user passes in a JSON format
func (o SloObjectiveCountMetricGoodInstanaApplicationOutput) ApiQuery() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodInstanaApplication) string { return v.ApiQuery }).(pulumi.StringOutput)
}

// Group by method
func (o SloObjectiveCountMetricGoodInstanaApplicationOutput) GroupBies() SloObjectiveCountMetricGoodInstanaApplicationGroupByArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodInstanaApplication) []SloObjectiveCountMetricGoodInstanaApplicationGroupBy {
		return v.GroupBies
	}).(SloObjectiveCountMetricGoodInstanaApplicationGroupByArrayOutput)
}

// Include internal
func (o SloObjectiveCountMetricGoodInstanaApplicationOutput) IncludeInternal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodInstanaApplication) *bool { return v.IncludeInternal }).(pulumi.BoolPtrOutput)
}

// Include synthetic
func (o SloObjectiveCountMetricGoodInstanaApplicationOutput) IncludeSynthetic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodInstanaApplication) *bool { return v.IncludeSynthetic }).(pulumi.BoolPtrOutput)
}

// Metric ID one of 'calls', 'erroneousCalls', 'errors', 'latency'
func (o SloObjectiveCountMetricGoodInstanaApplicationOutput) MetricId() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodInstanaApplication) string { return v.MetricId }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricGoodInstanaApplicationArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodInstanaApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodInstanaApplication)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodInstanaApplicationArrayOutput) ToSloObjectiveCountMetricGoodInstanaApplicationArrayOutput() SloObjectiveCountMetricGoodInstanaApplicationArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodInstanaApplicationArrayOutput) ToSloObjectiveCountMetricGoodInstanaApplicationArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodInstanaApplicationArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodInstanaApplicationArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricGoodInstanaApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricGoodInstanaApplication {
		return vs[0].([]SloObjectiveCountMetricGoodInstanaApplication)[vs[1].(int)]
	}).(SloObjectiveCountMetricGoodInstanaApplicationOutput)
}

type SloObjectiveCountMetricGoodInstanaApplicationGroupBy struct {
	// Group by tag
	Tag string `pulumi:"tag"`
	// Tag entity - one of 'DESTINATION', 'SOURCE', 'NOT_APPLICABLE'
	TagEntity         string  `pulumi:"tagEntity"`
	TagSecondLevelKey *string `pulumi:"tagSecondLevelKey"`
}

// SloObjectiveCountMetricGoodInstanaApplicationGroupByInput is an input type that accepts SloObjectiveCountMetricGoodInstanaApplicationGroupByArgs and SloObjectiveCountMetricGoodInstanaApplicationGroupByOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodInstanaApplicationGroupByInput` via:
//
//	SloObjectiveCountMetricGoodInstanaApplicationGroupByArgs{...}
type SloObjectiveCountMetricGoodInstanaApplicationGroupByInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodInstanaApplicationGroupByOutput() SloObjectiveCountMetricGoodInstanaApplicationGroupByOutput
	ToSloObjectiveCountMetricGoodInstanaApplicationGroupByOutputWithContext(context.Context) SloObjectiveCountMetricGoodInstanaApplicationGroupByOutput
}

type SloObjectiveCountMetricGoodInstanaApplicationGroupByArgs struct {
	// Group by tag
	Tag pulumi.StringInput `pulumi:"tag"`
	// Tag entity - one of 'DESTINATION', 'SOURCE', 'NOT_APPLICABLE'
	TagEntity         pulumi.StringInput    `pulumi:"tagEntity"`
	TagSecondLevelKey pulumi.StringPtrInput `pulumi:"tagSecondLevelKey"`
}

func (SloObjectiveCountMetricGoodInstanaApplicationGroupByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodInstanaApplicationGroupBy)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodInstanaApplicationGroupByArgs) ToSloObjectiveCountMetricGoodInstanaApplicationGroupByOutput() SloObjectiveCountMetricGoodInstanaApplicationGroupByOutput {
	return i.ToSloObjectiveCountMetricGoodInstanaApplicationGroupByOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodInstanaApplicationGroupByArgs) ToSloObjectiveCountMetricGoodInstanaApplicationGroupByOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodInstanaApplicationGroupByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodInstanaApplicationGroupByOutput)
}

// SloObjectiveCountMetricGoodInstanaApplicationGroupByArrayInput is an input type that accepts SloObjectiveCountMetricGoodInstanaApplicationGroupByArray and SloObjectiveCountMetricGoodInstanaApplicationGroupByArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodInstanaApplicationGroupByArrayInput` via:
//
//	SloObjectiveCountMetricGoodInstanaApplicationGroupByArray{ SloObjectiveCountMetricGoodInstanaApplicationGroupByArgs{...} }
type SloObjectiveCountMetricGoodInstanaApplicationGroupByArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodInstanaApplicationGroupByArrayOutput() SloObjectiveCountMetricGoodInstanaApplicationGroupByArrayOutput
	ToSloObjectiveCountMetricGoodInstanaApplicationGroupByArrayOutputWithContext(context.Context) SloObjectiveCountMetricGoodInstanaApplicationGroupByArrayOutput
}

type SloObjectiveCountMetricGoodInstanaApplicationGroupByArray []SloObjectiveCountMetricGoodInstanaApplicationGroupByInput

func (SloObjectiveCountMetricGoodInstanaApplicationGroupByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodInstanaApplicationGroupBy)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodInstanaApplicationGroupByArray) ToSloObjectiveCountMetricGoodInstanaApplicationGroupByArrayOutput() SloObjectiveCountMetricGoodInstanaApplicationGroupByArrayOutput {
	return i.ToSloObjectiveCountMetricGoodInstanaApplicationGroupByArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodInstanaApplicationGroupByArray) ToSloObjectiveCountMetricGoodInstanaApplicationGroupByArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodInstanaApplicationGroupByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodInstanaApplicationGroupByArrayOutput)
}

type SloObjectiveCountMetricGoodInstanaApplicationGroupByOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodInstanaApplicationGroupByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodInstanaApplicationGroupBy)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodInstanaApplicationGroupByOutput) ToSloObjectiveCountMetricGoodInstanaApplicationGroupByOutput() SloObjectiveCountMetricGoodInstanaApplicationGroupByOutput {
	return o
}

func (o SloObjectiveCountMetricGoodInstanaApplicationGroupByOutput) ToSloObjectiveCountMetricGoodInstanaApplicationGroupByOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodInstanaApplicationGroupByOutput {
	return o
}

// Group by tag
func (o SloObjectiveCountMetricGoodInstanaApplicationGroupByOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodInstanaApplicationGroupBy) string { return v.Tag }).(pulumi.StringOutput)
}

// Tag entity - one of 'DESTINATION', 'SOURCE', 'NOT_APPLICABLE'
func (o SloObjectiveCountMetricGoodInstanaApplicationGroupByOutput) TagEntity() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodInstanaApplicationGroupBy) string { return v.TagEntity }).(pulumi.StringOutput)
}

func (o SloObjectiveCountMetricGoodInstanaApplicationGroupByOutput) TagSecondLevelKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodInstanaApplicationGroupBy) *string { return v.TagSecondLevelKey }).(pulumi.StringPtrOutput)
}

type SloObjectiveCountMetricGoodInstanaApplicationGroupByArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodInstanaApplicationGroupByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodInstanaApplicationGroupBy)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodInstanaApplicationGroupByArrayOutput) ToSloObjectiveCountMetricGoodInstanaApplicationGroupByArrayOutput() SloObjectiveCountMetricGoodInstanaApplicationGroupByArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodInstanaApplicationGroupByArrayOutput) ToSloObjectiveCountMetricGoodInstanaApplicationGroupByArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodInstanaApplicationGroupByArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodInstanaApplicationGroupByArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricGoodInstanaApplicationGroupByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricGoodInstanaApplicationGroupBy {
		return vs[0].([]SloObjectiveCountMetricGoodInstanaApplicationGroupBy)[vs[1].(int)]
	}).(SloObjectiveCountMetricGoodInstanaApplicationGroupByOutput)
}

type SloObjectiveCountMetricGoodInstanaInfrastructure struct {
	// Metric ID one of 'calls', 'erroneousCalls', 'errors', 'latency'
	MetricId string `pulumi:"metricId"`
	// Metric retrieval method 'query' or 'snapshot'
	MetricRetrievalMethod string `pulumi:"metricRetrievalMethod"`
	// Plugin ID
	PluginId string `pulumi:"pluginId"`
	// Query for the metrics
	Query *string `pulumi:"query"`
	// Snapshot ID
	SnapshotId *string `pulumi:"snapshotId"`
}

// SloObjectiveCountMetricGoodInstanaInfrastructureInput is an input type that accepts SloObjectiveCountMetricGoodInstanaInfrastructureArgs and SloObjectiveCountMetricGoodInstanaInfrastructureOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodInstanaInfrastructureInput` via:
//
//	SloObjectiveCountMetricGoodInstanaInfrastructureArgs{...}
type SloObjectiveCountMetricGoodInstanaInfrastructureInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodInstanaInfrastructureOutput() SloObjectiveCountMetricGoodInstanaInfrastructureOutput
	ToSloObjectiveCountMetricGoodInstanaInfrastructureOutputWithContext(context.Context) SloObjectiveCountMetricGoodInstanaInfrastructureOutput
}

type SloObjectiveCountMetricGoodInstanaInfrastructureArgs struct {
	// Metric ID one of 'calls', 'erroneousCalls', 'errors', 'latency'
	MetricId pulumi.StringInput `pulumi:"metricId"`
	// Metric retrieval method 'query' or 'snapshot'
	MetricRetrievalMethod pulumi.StringInput `pulumi:"metricRetrievalMethod"`
	// Plugin ID
	PluginId pulumi.StringInput `pulumi:"pluginId"`
	// Query for the metrics
	Query pulumi.StringPtrInput `pulumi:"query"`
	// Snapshot ID
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
}

func (SloObjectiveCountMetricGoodInstanaInfrastructureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodInstanaInfrastructure)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodInstanaInfrastructureArgs) ToSloObjectiveCountMetricGoodInstanaInfrastructureOutput() SloObjectiveCountMetricGoodInstanaInfrastructureOutput {
	return i.ToSloObjectiveCountMetricGoodInstanaInfrastructureOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodInstanaInfrastructureArgs) ToSloObjectiveCountMetricGoodInstanaInfrastructureOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodInstanaInfrastructureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodInstanaInfrastructureOutput)
}

// SloObjectiveCountMetricGoodInstanaInfrastructureArrayInput is an input type that accepts SloObjectiveCountMetricGoodInstanaInfrastructureArray and SloObjectiveCountMetricGoodInstanaInfrastructureArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodInstanaInfrastructureArrayInput` via:
//
//	SloObjectiveCountMetricGoodInstanaInfrastructureArray{ SloObjectiveCountMetricGoodInstanaInfrastructureArgs{...} }
type SloObjectiveCountMetricGoodInstanaInfrastructureArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodInstanaInfrastructureArrayOutput() SloObjectiveCountMetricGoodInstanaInfrastructureArrayOutput
	ToSloObjectiveCountMetricGoodInstanaInfrastructureArrayOutputWithContext(context.Context) SloObjectiveCountMetricGoodInstanaInfrastructureArrayOutput
}

type SloObjectiveCountMetricGoodInstanaInfrastructureArray []SloObjectiveCountMetricGoodInstanaInfrastructureInput

func (SloObjectiveCountMetricGoodInstanaInfrastructureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodInstanaInfrastructure)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodInstanaInfrastructureArray) ToSloObjectiveCountMetricGoodInstanaInfrastructureArrayOutput() SloObjectiveCountMetricGoodInstanaInfrastructureArrayOutput {
	return i.ToSloObjectiveCountMetricGoodInstanaInfrastructureArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodInstanaInfrastructureArray) ToSloObjectiveCountMetricGoodInstanaInfrastructureArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodInstanaInfrastructureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodInstanaInfrastructureArrayOutput)
}

type SloObjectiveCountMetricGoodInstanaInfrastructureOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodInstanaInfrastructureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodInstanaInfrastructure)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodInstanaInfrastructureOutput) ToSloObjectiveCountMetricGoodInstanaInfrastructureOutput() SloObjectiveCountMetricGoodInstanaInfrastructureOutput {
	return o
}

func (o SloObjectiveCountMetricGoodInstanaInfrastructureOutput) ToSloObjectiveCountMetricGoodInstanaInfrastructureOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodInstanaInfrastructureOutput {
	return o
}

// Metric ID one of 'calls', 'erroneousCalls', 'errors', 'latency'
func (o SloObjectiveCountMetricGoodInstanaInfrastructureOutput) MetricId() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodInstanaInfrastructure) string { return v.MetricId }).(pulumi.StringOutput)
}

// Metric retrieval method 'query' or 'snapshot'
func (o SloObjectiveCountMetricGoodInstanaInfrastructureOutput) MetricRetrievalMethod() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodInstanaInfrastructure) string { return v.MetricRetrievalMethod }).(pulumi.StringOutput)
}

// Plugin ID
func (o SloObjectiveCountMetricGoodInstanaInfrastructureOutput) PluginId() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodInstanaInfrastructure) string { return v.PluginId }).(pulumi.StringOutput)
}

// Query for the metrics
func (o SloObjectiveCountMetricGoodInstanaInfrastructureOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodInstanaInfrastructure) *string { return v.Query }).(pulumi.StringPtrOutput)
}

// Snapshot ID
func (o SloObjectiveCountMetricGoodInstanaInfrastructureOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodInstanaInfrastructure) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

type SloObjectiveCountMetricGoodInstanaInfrastructureArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodInstanaInfrastructureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodInstanaInfrastructure)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodInstanaInfrastructureArrayOutput) ToSloObjectiveCountMetricGoodInstanaInfrastructureArrayOutput() SloObjectiveCountMetricGoodInstanaInfrastructureArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodInstanaInfrastructureArrayOutput) ToSloObjectiveCountMetricGoodInstanaInfrastructureArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodInstanaInfrastructureArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodInstanaInfrastructureArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricGoodInstanaInfrastructureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricGoodInstanaInfrastructure {
		return vs[0].([]SloObjectiveCountMetricGoodInstanaInfrastructure)[vs[1].(int)]
	}).(SloObjectiveCountMetricGoodInstanaInfrastructureOutput)
}

type SloObjectiveCountMetricGoodLightstep struct {
	// Optional value to filter by percentiles
	Percentile *float64 `pulumi:"percentile"`
	// ID of the metrics stream
	StreamId *string `pulumi:"streamId"`
	// Type of data to filter by
	TypeOfData string `pulumi:"typeOfData"`
	// UQL query
	Uql *string `pulumi:"uql"`
}

// SloObjectiveCountMetricGoodLightstepInput is an input type that accepts SloObjectiveCountMetricGoodLightstepArgs and SloObjectiveCountMetricGoodLightstepOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodLightstepInput` via:
//
//	SloObjectiveCountMetricGoodLightstepArgs{...}
type SloObjectiveCountMetricGoodLightstepInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodLightstepOutput() SloObjectiveCountMetricGoodLightstepOutput
	ToSloObjectiveCountMetricGoodLightstepOutputWithContext(context.Context) SloObjectiveCountMetricGoodLightstepOutput
}

type SloObjectiveCountMetricGoodLightstepArgs struct {
	// Optional value to filter by percentiles
	Percentile pulumi.Float64PtrInput `pulumi:"percentile"`
	// ID of the metrics stream
	StreamId pulumi.StringPtrInput `pulumi:"streamId"`
	// Type of data to filter by
	TypeOfData pulumi.StringInput `pulumi:"typeOfData"`
	// UQL query
	Uql pulumi.StringPtrInput `pulumi:"uql"`
}

func (SloObjectiveCountMetricGoodLightstepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodLightstep)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodLightstepArgs) ToSloObjectiveCountMetricGoodLightstepOutput() SloObjectiveCountMetricGoodLightstepOutput {
	return i.ToSloObjectiveCountMetricGoodLightstepOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodLightstepArgs) ToSloObjectiveCountMetricGoodLightstepOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodLightstepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodLightstepOutput)
}

// SloObjectiveCountMetricGoodLightstepArrayInput is an input type that accepts SloObjectiveCountMetricGoodLightstepArray and SloObjectiveCountMetricGoodLightstepArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodLightstepArrayInput` via:
//
//	SloObjectiveCountMetricGoodLightstepArray{ SloObjectiveCountMetricGoodLightstepArgs{...} }
type SloObjectiveCountMetricGoodLightstepArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodLightstepArrayOutput() SloObjectiveCountMetricGoodLightstepArrayOutput
	ToSloObjectiveCountMetricGoodLightstepArrayOutputWithContext(context.Context) SloObjectiveCountMetricGoodLightstepArrayOutput
}

type SloObjectiveCountMetricGoodLightstepArray []SloObjectiveCountMetricGoodLightstepInput

func (SloObjectiveCountMetricGoodLightstepArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodLightstep)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodLightstepArray) ToSloObjectiveCountMetricGoodLightstepArrayOutput() SloObjectiveCountMetricGoodLightstepArrayOutput {
	return i.ToSloObjectiveCountMetricGoodLightstepArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodLightstepArray) ToSloObjectiveCountMetricGoodLightstepArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodLightstepArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodLightstepArrayOutput)
}

type SloObjectiveCountMetricGoodLightstepOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodLightstepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodLightstep)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodLightstepOutput) ToSloObjectiveCountMetricGoodLightstepOutput() SloObjectiveCountMetricGoodLightstepOutput {
	return o
}

func (o SloObjectiveCountMetricGoodLightstepOutput) ToSloObjectiveCountMetricGoodLightstepOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodLightstepOutput {
	return o
}

// Optional value to filter by percentiles
func (o SloObjectiveCountMetricGoodLightstepOutput) Percentile() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodLightstep) *float64 { return v.Percentile }).(pulumi.Float64PtrOutput)
}

// ID of the metrics stream
func (o SloObjectiveCountMetricGoodLightstepOutput) StreamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodLightstep) *string { return v.StreamId }).(pulumi.StringPtrOutput)
}

// Type of data to filter by
func (o SloObjectiveCountMetricGoodLightstepOutput) TypeOfData() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodLightstep) string { return v.TypeOfData }).(pulumi.StringOutput)
}

// UQL query
func (o SloObjectiveCountMetricGoodLightstepOutput) Uql() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodLightstep) *string { return v.Uql }).(pulumi.StringPtrOutput)
}

type SloObjectiveCountMetricGoodLightstepArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodLightstepArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodLightstep)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodLightstepArrayOutput) ToSloObjectiveCountMetricGoodLightstepArrayOutput() SloObjectiveCountMetricGoodLightstepArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodLightstepArrayOutput) ToSloObjectiveCountMetricGoodLightstepArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodLightstepArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodLightstepArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricGoodLightstepOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricGoodLightstep {
		return vs[0].([]SloObjectiveCountMetricGoodLightstep)[vs[1].(int)]
	}).(SloObjectiveCountMetricGoodLightstepOutput)
}

type SloObjectiveCountMetricGoodNewrelic struct {
	// Query for the metrics
	Nrql string `pulumi:"nrql"`
}

// SloObjectiveCountMetricGoodNewrelicInput is an input type that accepts SloObjectiveCountMetricGoodNewrelicArgs and SloObjectiveCountMetricGoodNewrelicOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodNewrelicInput` via:
//
//	SloObjectiveCountMetricGoodNewrelicArgs{...}
type SloObjectiveCountMetricGoodNewrelicInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodNewrelicOutput() SloObjectiveCountMetricGoodNewrelicOutput
	ToSloObjectiveCountMetricGoodNewrelicOutputWithContext(context.Context) SloObjectiveCountMetricGoodNewrelicOutput
}

type SloObjectiveCountMetricGoodNewrelicArgs struct {
	// Query for the metrics
	Nrql pulumi.StringInput `pulumi:"nrql"`
}

func (SloObjectiveCountMetricGoodNewrelicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodNewrelic)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodNewrelicArgs) ToSloObjectiveCountMetricGoodNewrelicOutput() SloObjectiveCountMetricGoodNewrelicOutput {
	return i.ToSloObjectiveCountMetricGoodNewrelicOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodNewrelicArgs) ToSloObjectiveCountMetricGoodNewrelicOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodNewrelicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodNewrelicOutput)
}

// SloObjectiveCountMetricGoodNewrelicArrayInput is an input type that accepts SloObjectiveCountMetricGoodNewrelicArray and SloObjectiveCountMetricGoodNewrelicArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodNewrelicArrayInput` via:
//
//	SloObjectiveCountMetricGoodNewrelicArray{ SloObjectiveCountMetricGoodNewrelicArgs{...} }
type SloObjectiveCountMetricGoodNewrelicArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodNewrelicArrayOutput() SloObjectiveCountMetricGoodNewrelicArrayOutput
	ToSloObjectiveCountMetricGoodNewrelicArrayOutputWithContext(context.Context) SloObjectiveCountMetricGoodNewrelicArrayOutput
}

type SloObjectiveCountMetricGoodNewrelicArray []SloObjectiveCountMetricGoodNewrelicInput

func (SloObjectiveCountMetricGoodNewrelicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodNewrelic)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodNewrelicArray) ToSloObjectiveCountMetricGoodNewrelicArrayOutput() SloObjectiveCountMetricGoodNewrelicArrayOutput {
	return i.ToSloObjectiveCountMetricGoodNewrelicArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodNewrelicArray) ToSloObjectiveCountMetricGoodNewrelicArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodNewrelicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodNewrelicArrayOutput)
}

type SloObjectiveCountMetricGoodNewrelicOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodNewrelicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodNewrelic)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodNewrelicOutput) ToSloObjectiveCountMetricGoodNewrelicOutput() SloObjectiveCountMetricGoodNewrelicOutput {
	return o
}

func (o SloObjectiveCountMetricGoodNewrelicOutput) ToSloObjectiveCountMetricGoodNewrelicOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodNewrelicOutput {
	return o
}

// Query for the metrics
func (o SloObjectiveCountMetricGoodNewrelicOutput) Nrql() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodNewrelic) string { return v.Nrql }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricGoodNewrelicArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodNewrelicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodNewrelic)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodNewrelicArrayOutput) ToSloObjectiveCountMetricGoodNewrelicArrayOutput() SloObjectiveCountMetricGoodNewrelicArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodNewrelicArrayOutput) ToSloObjectiveCountMetricGoodNewrelicArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodNewrelicArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodNewrelicArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricGoodNewrelicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricGoodNewrelic {
		return vs[0].([]SloObjectiveCountMetricGoodNewrelic)[vs[1].(int)]
	}).(SloObjectiveCountMetricGoodNewrelicOutput)
}

type SloObjectiveCountMetricGoodOpentsdb struct {
	// Query for the metrics
	Query string `pulumi:"query"`
}

// SloObjectiveCountMetricGoodOpentsdbInput is an input type that accepts SloObjectiveCountMetricGoodOpentsdbArgs and SloObjectiveCountMetricGoodOpentsdbOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodOpentsdbInput` via:
//
//	SloObjectiveCountMetricGoodOpentsdbArgs{...}
type SloObjectiveCountMetricGoodOpentsdbInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodOpentsdbOutput() SloObjectiveCountMetricGoodOpentsdbOutput
	ToSloObjectiveCountMetricGoodOpentsdbOutputWithContext(context.Context) SloObjectiveCountMetricGoodOpentsdbOutput
}

type SloObjectiveCountMetricGoodOpentsdbArgs struct {
	// Query for the metrics
	Query pulumi.StringInput `pulumi:"query"`
}

func (SloObjectiveCountMetricGoodOpentsdbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodOpentsdb)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodOpentsdbArgs) ToSloObjectiveCountMetricGoodOpentsdbOutput() SloObjectiveCountMetricGoodOpentsdbOutput {
	return i.ToSloObjectiveCountMetricGoodOpentsdbOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodOpentsdbArgs) ToSloObjectiveCountMetricGoodOpentsdbOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodOpentsdbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodOpentsdbOutput)
}

// SloObjectiveCountMetricGoodOpentsdbArrayInput is an input type that accepts SloObjectiveCountMetricGoodOpentsdbArray and SloObjectiveCountMetricGoodOpentsdbArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodOpentsdbArrayInput` via:
//
//	SloObjectiveCountMetricGoodOpentsdbArray{ SloObjectiveCountMetricGoodOpentsdbArgs{...} }
type SloObjectiveCountMetricGoodOpentsdbArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodOpentsdbArrayOutput() SloObjectiveCountMetricGoodOpentsdbArrayOutput
	ToSloObjectiveCountMetricGoodOpentsdbArrayOutputWithContext(context.Context) SloObjectiveCountMetricGoodOpentsdbArrayOutput
}

type SloObjectiveCountMetricGoodOpentsdbArray []SloObjectiveCountMetricGoodOpentsdbInput

func (SloObjectiveCountMetricGoodOpentsdbArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodOpentsdb)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodOpentsdbArray) ToSloObjectiveCountMetricGoodOpentsdbArrayOutput() SloObjectiveCountMetricGoodOpentsdbArrayOutput {
	return i.ToSloObjectiveCountMetricGoodOpentsdbArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodOpentsdbArray) ToSloObjectiveCountMetricGoodOpentsdbArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodOpentsdbArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodOpentsdbArrayOutput)
}

type SloObjectiveCountMetricGoodOpentsdbOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodOpentsdbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodOpentsdb)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodOpentsdbOutput) ToSloObjectiveCountMetricGoodOpentsdbOutput() SloObjectiveCountMetricGoodOpentsdbOutput {
	return o
}

func (o SloObjectiveCountMetricGoodOpentsdbOutput) ToSloObjectiveCountMetricGoodOpentsdbOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodOpentsdbOutput {
	return o
}

// Query for the metrics
func (o SloObjectiveCountMetricGoodOpentsdbOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodOpentsdb) string { return v.Query }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricGoodOpentsdbArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodOpentsdbArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodOpentsdb)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodOpentsdbArrayOutput) ToSloObjectiveCountMetricGoodOpentsdbArrayOutput() SloObjectiveCountMetricGoodOpentsdbArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodOpentsdbArrayOutput) ToSloObjectiveCountMetricGoodOpentsdbArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodOpentsdbArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodOpentsdbArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricGoodOpentsdbOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricGoodOpentsdb {
		return vs[0].([]SloObjectiveCountMetricGoodOpentsdb)[vs[1].(int)]
	}).(SloObjectiveCountMetricGoodOpentsdbOutput)
}

type SloObjectiveCountMetricGoodPingdom struct {
	// Pingdom uptime or transaction check's ID
	CheckId string `pulumi:"checkId"`
	// Pingdom check type - uptime or transaction
	CheckType *string `pulumi:"checkType"`
	// Optional for the Uptime checks. Use it to filter the Pingdom check results by status
	Status *string `pulumi:"status"`
}

// SloObjectiveCountMetricGoodPingdomInput is an input type that accepts SloObjectiveCountMetricGoodPingdomArgs and SloObjectiveCountMetricGoodPingdomOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodPingdomInput` via:
//
//	SloObjectiveCountMetricGoodPingdomArgs{...}
type SloObjectiveCountMetricGoodPingdomInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodPingdomOutput() SloObjectiveCountMetricGoodPingdomOutput
	ToSloObjectiveCountMetricGoodPingdomOutputWithContext(context.Context) SloObjectiveCountMetricGoodPingdomOutput
}

type SloObjectiveCountMetricGoodPingdomArgs struct {
	// Pingdom uptime or transaction check's ID
	CheckId pulumi.StringInput `pulumi:"checkId"`
	// Pingdom check type - uptime or transaction
	CheckType pulumi.StringPtrInput `pulumi:"checkType"`
	// Optional for the Uptime checks. Use it to filter the Pingdom check results by status
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SloObjectiveCountMetricGoodPingdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodPingdom)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodPingdomArgs) ToSloObjectiveCountMetricGoodPingdomOutput() SloObjectiveCountMetricGoodPingdomOutput {
	return i.ToSloObjectiveCountMetricGoodPingdomOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodPingdomArgs) ToSloObjectiveCountMetricGoodPingdomOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodPingdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodPingdomOutput)
}

// SloObjectiveCountMetricGoodPingdomArrayInput is an input type that accepts SloObjectiveCountMetricGoodPingdomArray and SloObjectiveCountMetricGoodPingdomArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodPingdomArrayInput` via:
//
//	SloObjectiveCountMetricGoodPingdomArray{ SloObjectiveCountMetricGoodPingdomArgs{...} }
type SloObjectiveCountMetricGoodPingdomArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodPingdomArrayOutput() SloObjectiveCountMetricGoodPingdomArrayOutput
	ToSloObjectiveCountMetricGoodPingdomArrayOutputWithContext(context.Context) SloObjectiveCountMetricGoodPingdomArrayOutput
}

type SloObjectiveCountMetricGoodPingdomArray []SloObjectiveCountMetricGoodPingdomInput

func (SloObjectiveCountMetricGoodPingdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodPingdom)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodPingdomArray) ToSloObjectiveCountMetricGoodPingdomArrayOutput() SloObjectiveCountMetricGoodPingdomArrayOutput {
	return i.ToSloObjectiveCountMetricGoodPingdomArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodPingdomArray) ToSloObjectiveCountMetricGoodPingdomArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodPingdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodPingdomArrayOutput)
}

type SloObjectiveCountMetricGoodPingdomOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodPingdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodPingdom)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodPingdomOutput) ToSloObjectiveCountMetricGoodPingdomOutput() SloObjectiveCountMetricGoodPingdomOutput {
	return o
}

func (o SloObjectiveCountMetricGoodPingdomOutput) ToSloObjectiveCountMetricGoodPingdomOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodPingdomOutput {
	return o
}

// Pingdom uptime or transaction check's ID
func (o SloObjectiveCountMetricGoodPingdomOutput) CheckId() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodPingdom) string { return v.CheckId }).(pulumi.StringOutput)
}

// Pingdom check type - uptime or transaction
func (o SloObjectiveCountMetricGoodPingdomOutput) CheckType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodPingdom) *string { return v.CheckType }).(pulumi.StringPtrOutput)
}

// Optional for the Uptime checks. Use it to filter the Pingdom check results by status
func (o SloObjectiveCountMetricGoodPingdomOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodPingdom) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SloObjectiveCountMetricGoodPingdomArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodPingdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodPingdom)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodPingdomArrayOutput) ToSloObjectiveCountMetricGoodPingdomArrayOutput() SloObjectiveCountMetricGoodPingdomArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodPingdomArrayOutput) ToSloObjectiveCountMetricGoodPingdomArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodPingdomArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodPingdomArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricGoodPingdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricGoodPingdom {
		return vs[0].([]SloObjectiveCountMetricGoodPingdom)[vs[1].(int)]
	}).(SloObjectiveCountMetricGoodPingdomOutput)
}

type SloObjectiveCountMetricGoodPrometheus struct {
	// Query for the metrics
	Promql string `pulumi:"promql"`
}

// SloObjectiveCountMetricGoodPrometheusInput is an input type that accepts SloObjectiveCountMetricGoodPrometheusArgs and SloObjectiveCountMetricGoodPrometheusOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodPrometheusInput` via:
//
//	SloObjectiveCountMetricGoodPrometheusArgs{...}
type SloObjectiveCountMetricGoodPrometheusInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodPrometheusOutput() SloObjectiveCountMetricGoodPrometheusOutput
	ToSloObjectiveCountMetricGoodPrometheusOutputWithContext(context.Context) SloObjectiveCountMetricGoodPrometheusOutput
}

type SloObjectiveCountMetricGoodPrometheusArgs struct {
	// Query for the metrics
	Promql pulumi.StringInput `pulumi:"promql"`
}

func (SloObjectiveCountMetricGoodPrometheusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodPrometheus)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodPrometheusArgs) ToSloObjectiveCountMetricGoodPrometheusOutput() SloObjectiveCountMetricGoodPrometheusOutput {
	return i.ToSloObjectiveCountMetricGoodPrometheusOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodPrometheusArgs) ToSloObjectiveCountMetricGoodPrometheusOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodPrometheusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodPrometheusOutput)
}

// SloObjectiveCountMetricGoodPrometheusArrayInput is an input type that accepts SloObjectiveCountMetricGoodPrometheusArray and SloObjectiveCountMetricGoodPrometheusArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodPrometheusArrayInput` via:
//
//	SloObjectiveCountMetricGoodPrometheusArray{ SloObjectiveCountMetricGoodPrometheusArgs{...} }
type SloObjectiveCountMetricGoodPrometheusArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodPrometheusArrayOutput() SloObjectiveCountMetricGoodPrometheusArrayOutput
	ToSloObjectiveCountMetricGoodPrometheusArrayOutputWithContext(context.Context) SloObjectiveCountMetricGoodPrometheusArrayOutput
}

type SloObjectiveCountMetricGoodPrometheusArray []SloObjectiveCountMetricGoodPrometheusInput

func (SloObjectiveCountMetricGoodPrometheusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodPrometheus)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodPrometheusArray) ToSloObjectiveCountMetricGoodPrometheusArrayOutput() SloObjectiveCountMetricGoodPrometheusArrayOutput {
	return i.ToSloObjectiveCountMetricGoodPrometheusArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodPrometheusArray) ToSloObjectiveCountMetricGoodPrometheusArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodPrometheusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodPrometheusArrayOutput)
}

type SloObjectiveCountMetricGoodPrometheusOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodPrometheusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodPrometheus)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodPrometheusOutput) ToSloObjectiveCountMetricGoodPrometheusOutput() SloObjectiveCountMetricGoodPrometheusOutput {
	return o
}

func (o SloObjectiveCountMetricGoodPrometheusOutput) ToSloObjectiveCountMetricGoodPrometheusOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodPrometheusOutput {
	return o
}

// Query for the metrics
func (o SloObjectiveCountMetricGoodPrometheusOutput) Promql() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodPrometheus) string { return v.Promql }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricGoodPrometheusArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodPrometheusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodPrometheus)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodPrometheusArrayOutput) ToSloObjectiveCountMetricGoodPrometheusArrayOutput() SloObjectiveCountMetricGoodPrometheusArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodPrometheusArrayOutput) ToSloObjectiveCountMetricGoodPrometheusArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodPrometheusArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodPrometheusArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricGoodPrometheusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricGoodPrometheus {
		return vs[0].([]SloObjectiveCountMetricGoodPrometheus)[vs[1].(int)]
	}).(SloObjectiveCountMetricGoodPrometheusOutput)
}

type SloObjectiveCountMetricGoodRedshift struct {
	// Redshift custer ID
	ClusterId string `pulumi:"clusterId"`
	// Database name
	DatabaseName string `pulumi:"databaseName"`
	// Query for the metrics
	Query string `pulumi:"query"`
	// Region of the CloudWatch instance
	Region string `pulumi:"region"`
}

// SloObjectiveCountMetricGoodRedshiftInput is an input type that accepts SloObjectiveCountMetricGoodRedshiftArgs and SloObjectiveCountMetricGoodRedshiftOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodRedshiftInput` via:
//
//	SloObjectiveCountMetricGoodRedshiftArgs{...}
type SloObjectiveCountMetricGoodRedshiftInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodRedshiftOutput() SloObjectiveCountMetricGoodRedshiftOutput
	ToSloObjectiveCountMetricGoodRedshiftOutputWithContext(context.Context) SloObjectiveCountMetricGoodRedshiftOutput
}

type SloObjectiveCountMetricGoodRedshiftArgs struct {
	// Redshift custer ID
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// Database name
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Query for the metrics
	Query pulumi.StringInput `pulumi:"query"`
	// Region of the CloudWatch instance
	Region pulumi.StringInput `pulumi:"region"`
}

func (SloObjectiveCountMetricGoodRedshiftArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodRedshift)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodRedshiftArgs) ToSloObjectiveCountMetricGoodRedshiftOutput() SloObjectiveCountMetricGoodRedshiftOutput {
	return i.ToSloObjectiveCountMetricGoodRedshiftOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodRedshiftArgs) ToSloObjectiveCountMetricGoodRedshiftOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodRedshiftOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodRedshiftOutput)
}

// SloObjectiveCountMetricGoodRedshiftArrayInput is an input type that accepts SloObjectiveCountMetricGoodRedshiftArray and SloObjectiveCountMetricGoodRedshiftArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodRedshiftArrayInput` via:
//
//	SloObjectiveCountMetricGoodRedshiftArray{ SloObjectiveCountMetricGoodRedshiftArgs{...} }
type SloObjectiveCountMetricGoodRedshiftArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodRedshiftArrayOutput() SloObjectiveCountMetricGoodRedshiftArrayOutput
	ToSloObjectiveCountMetricGoodRedshiftArrayOutputWithContext(context.Context) SloObjectiveCountMetricGoodRedshiftArrayOutput
}

type SloObjectiveCountMetricGoodRedshiftArray []SloObjectiveCountMetricGoodRedshiftInput

func (SloObjectiveCountMetricGoodRedshiftArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodRedshift)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodRedshiftArray) ToSloObjectiveCountMetricGoodRedshiftArrayOutput() SloObjectiveCountMetricGoodRedshiftArrayOutput {
	return i.ToSloObjectiveCountMetricGoodRedshiftArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodRedshiftArray) ToSloObjectiveCountMetricGoodRedshiftArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodRedshiftArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodRedshiftArrayOutput)
}

type SloObjectiveCountMetricGoodRedshiftOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodRedshiftOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodRedshift)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodRedshiftOutput) ToSloObjectiveCountMetricGoodRedshiftOutput() SloObjectiveCountMetricGoodRedshiftOutput {
	return o
}

func (o SloObjectiveCountMetricGoodRedshiftOutput) ToSloObjectiveCountMetricGoodRedshiftOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodRedshiftOutput {
	return o
}

// Redshift custer ID
func (o SloObjectiveCountMetricGoodRedshiftOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodRedshift) string { return v.ClusterId }).(pulumi.StringOutput)
}

// Database name
func (o SloObjectiveCountMetricGoodRedshiftOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodRedshift) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// Query for the metrics
func (o SloObjectiveCountMetricGoodRedshiftOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodRedshift) string { return v.Query }).(pulumi.StringOutput)
}

// Region of the CloudWatch instance
func (o SloObjectiveCountMetricGoodRedshiftOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodRedshift) string { return v.Region }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricGoodRedshiftArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodRedshiftArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodRedshift)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodRedshiftArrayOutput) ToSloObjectiveCountMetricGoodRedshiftArrayOutput() SloObjectiveCountMetricGoodRedshiftArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodRedshiftArrayOutput) ToSloObjectiveCountMetricGoodRedshiftArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodRedshiftArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodRedshiftArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricGoodRedshiftOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricGoodRedshift {
		return vs[0].([]SloObjectiveCountMetricGoodRedshift)[vs[1].(int)]
	}).(SloObjectiveCountMetricGoodRedshiftOutput)
}

type SloObjectiveCountMetricGoodSplunk struct {
	// Query for the metrics
	Query string `pulumi:"query"`
}

// SloObjectiveCountMetricGoodSplunkInput is an input type that accepts SloObjectiveCountMetricGoodSplunkArgs and SloObjectiveCountMetricGoodSplunkOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodSplunkInput` via:
//
//	SloObjectiveCountMetricGoodSplunkArgs{...}
type SloObjectiveCountMetricGoodSplunkInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodSplunkOutput() SloObjectiveCountMetricGoodSplunkOutput
	ToSloObjectiveCountMetricGoodSplunkOutputWithContext(context.Context) SloObjectiveCountMetricGoodSplunkOutput
}

type SloObjectiveCountMetricGoodSplunkArgs struct {
	// Query for the metrics
	Query pulumi.StringInput `pulumi:"query"`
}

func (SloObjectiveCountMetricGoodSplunkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodSplunk)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodSplunkArgs) ToSloObjectiveCountMetricGoodSplunkOutput() SloObjectiveCountMetricGoodSplunkOutput {
	return i.ToSloObjectiveCountMetricGoodSplunkOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodSplunkArgs) ToSloObjectiveCountMetricGoodSplunkOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodSplunkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodSplunkOutput)
}

// SloObjectiveCountMetricGoodSplunkArrayInput is an input type that accepts SloObjectiveCountMetricGoodSplunkArray and SloObjectiveCountMetricGoodSplunkArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodSplunkArrayInput` via:
//
//	SloObjectiveCountMetricGoodSplunkArray{ SloObjectiveCountMetricGoodSplunkArgs{...} }
type SloObjectiveCountMetricGoodSplunkArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodSplunkArrayOutput() SloObjectiveCountMetricGoodSplunkArrayOutput
	ToSloObjectiveCountMetricGoodSplunkArrayOutputWithContext(context.Context) SloObjectiveCountMetricGoodSplunkArrayOutput
}

type SloObjectiveCountMetricGoodSplunkArray []SloObjectiveCountMetricGoodSplunkInput

func (SloObjectiveCountMetricGoodSplunkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodSplunk)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodSplunkArray) ToSloObjectiveCountMetricGoodSplunkArrayOutput() SloObjectiveCountMetricGoodSplunkArrayOutput {
	return i.ToSloObjectiveCountMetricGoodSplunkArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodSplunkArray) ToSloObjectiveCountMetricGoodSplunkArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodSplunkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodSplunkArrayOutput)
}

type SloObjectiveCountMetricGoodSplunkOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodSplunkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodSplunk)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodSplunkOutput) ToSloObjectiveCountMetricGoodSplunkOutput() SloObjectiveCountMetricGoodSplunkOutput {
	return o
}

func (o SloObjectiveCountMetricGoodSplunkOutput) ToSloObjectiveCountMetricGoodSplunkOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodSplunkOutput {
	return o
}

// Query for the metrics
func (o SloObjectiveCountMetricGoodSplunkOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodSplunk) string { return v.Query }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricGoodSplunkArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodSplunkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodSplunk)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodSplunkArrayOutput) ToSloObjectiveCountMetricGoodSplunkArrayOutput() SloObjectiveCountMetricGoodSplunkArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodSplunkArrayOutput) ToSloObjectiveCountMetricGoodSplunkArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodSplunkArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodSplunkArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricGoodSplunkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricGoodSplunk {
		return vs[0].([]SloObjectiveCountMetricGoodSplunk)[vs[1].(int)]
	}).(SloObjectiveCountMetricGoodSplunkOutput)
}

type SloObjectiveCountMetricGoodSplunkObservability struct {
	// Query for the metrics
	Program string `pulumi:"program"`
}

// SloObjectiveCountMetricGoodSplunkObservabilityInput is an input type that accepts SloObjectiveCountMetricGoodSplunkObservabilityArgs and SloObjectiveCountMetricGoodSplunkObservabilityOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodSplunkObservabilityInput` via:
//
//	SloObjectiveCountMetricGoodSplunkObservabilityArgs{...}
type SloObjectiveCountMetricGoodSplunkObservabilityInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodSplunkObservabilityOutput() SloObjectiveCountMetricGoodSplunkObservabilityOutput
	ToSloObjectiveCountMetricGoodSplunkObservabilityOutputWithContext(context.Context) SloObjectiveCountMetricGoodSplunkObservabilityOutput
}

type SloObjectiveCountMetricGoodSplunkObservabilityArgs struct {
	// Query for the metrics
	Program pulumi.StringInput `pulumi:"program"`
}

func (SloObjectiveCountMetricGoodSplunkObservabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodSplunkObservability)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodSplunkObservabilityArgs) ToSloObjectiveCountMetricGoodSplunkObservabilityOutput() SloObjectiveCountMetricGoodSplunkObservabilityOutput {
	return i.ToSloObjectiveCountMetricGoodSplunkObservabilityOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodSplunkObservabilityArgs) ToSloObjectiveCountMetricGoodSplunkObservabilityOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodSplunkObservabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodSplunkObservabilityOutput)
}

// SloObjectiveCountMetricGoodSplunkObservabilityArrayInput is an input type that accepts SloObjectiveCountMetricGoodSplunkObservabilityArray and SloObjectiveCountMetricGoodSplunkObservabilityArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodSplunkObservabilityArrayInput` via:
//
//	SloObjectiveCountMetricGoodSplunkObservabilityArray{ SloObjectiveCountMetricGoodSplunkObservabilityArgs{...} }
type SloObjectiveCountMetricGoodSplunkObservabilityArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodSplunkObservabilityArrayOutput() SloObjectiveCountMetricGoodSplunkObservabilityArrayOutput
	ToSloObjectiveCountMetricGoodSplunkObservabilityArrayOutputWithContext(context.Context) SloObjectiveCountMetricGoodSplunkObservabilityArrayOutput
}

type SloObjectiveCountMetricGoodSplunkObservabilityArray []SloObjectiveCountMetricGoodSplunkObservabilityInput

func (SloObjectiveCountMetricGoodSplunkObservabilityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodSplunkObservability)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodSplunkObservabilityArray) ToSloObjectiveCountMetricGoodSplunkObservabilityArrayOutput() SloObjectiveCountMetricGoodSplunkObservabilityArrayOutput {
	return i.ToSloObjectiveCountMetricGoodSplunkObservabilityArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodSplunkObservabilityArray) ToSloObjectiveCountMetricGoodSplunkObservabilityArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodSplunkObservabilityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodSplunkObservabilityArrayOutput)
}

type SloObjectiveCountMetricGoodSplunkObservabilityOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodSplunkObservabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodSplunkObservability)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodSplunkObservabilityOutput) ToSloObjectiveCountMetricGoodSplunkObservabilityOutput() SloObjectiveCountMetricGoodSplunkObservabilityOutput {
	return o
}

func (o SloObjectiveCountMetricGoodSplunkObservabilityOutput) ToSloObjectiveCountMetricGoodSplunkObservabilityOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodSplunkObservabilityOutput {
	return o
}

// Query for the metrics
func (o SloObjectiveCountMetricGoodSplunkObservabilityOutput) Program() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodSplunkObservability) string { return v.Program }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricGoodSplunkObservabilityArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodSplunkObservabilityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodSplunkObservability)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodSplunkObservabilityArrayOutput) ToSloObjectiveCountMetricGoodSplunkObservabilityArrayOutput() SloObjectiveCountMetricGoodSplunkObservabilityArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodSplunkObservabilityArrayOutput) ToSloObjectiveCountMetricGoodSplunkObservabilityArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodSplunkObservabilityArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodSplunkObservabilityArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricGoodSplunkObservabilityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricGoodSplunkObservability {
		return vs[0].([]SloObjectiveCountMetricGoodSplunkObservability)[vs[1].(int)]
	}).(SloObjectiveCountMetricGoodSplunkObservabilityOutput)
}

type SloObjectiveCountMetricGoodSumologic struct {
	// Period of data aggregation
	Quantization *string `pulumi:"quantization"`
	// Query for the metrics
	Query string `pulumi:"query"`
	// Aggregation function - avg, sum, min, max, count, none
	Rollup *string `pulumi:"rollup"`
	// Sumologic source - metrics or logs
	Type string `pulumi:"type"`
}

// SloObjectiveCountMetricGoodSumologicInput is an input type that accepts SloObjectiveCountMetricGoodSumologicArgs and SloObjectiveCountMetricGoodSumologicOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodSumologicInput` via:
//
//	SloObjectiveCountMetricGoodSumologicArgs{...}
type SloObjectiveCountMetricGoodSumologicInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodSumologicOutput() SloObjectiveCountMetricGoodSumologicOutput
	ToSloObjectiveCountMetricGoodSumologicOutputWithContext(context.Context) SloObjectiveCountMetricGoodSumologicOutput
}

type SloObjectiveCountMetricGoodSumologicArgs struct {
	// Period of data aggregation
	Quantization pulumi.StringPtrInput `pulumi:"quantization"`
	// Query for the metrics
	Query pulumi.StringInput `pulumi:"query"`
	// Aggregation function - avg, sum, min, max, count, none
	Rollup pulumi.StringPtrInput `pulumi:"rollup"`
	// Sumologic source - metrics or logs
	Type pulumi.StringInput `pulumi:"type"`
}

func (SloObjectiveCountMetricGoodSumologicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodSumologic)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodSumologicArgs) ToSloObjectiveCountMetricGoodSumologicOutput() SloObjectiveCountMetricGoodSumologicOutput {
	return i.ToSloObjectiveCountMetricGoodSumologicOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodSumologicArgs) ToSloObjectiveCountMetricGoodSumologicOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodSumologicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodSumologicOutput)
}

// SloObjectiveCountMetricGoodSumologicArrayInput is an input type that accepts SloObjectiveCountMetricGoodSumologicArray and SloObjectiveCountMetricGoodSumologicArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodSumologicArrayInput` via:
//
//	SloObjectiveCountMetricGoodSumologicArray{ SloObjectiveCountMetricGoodSumologicArgs{...} }
type SloObjectiveCountMetricGoodSumologicArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodSumologicArrayOutput() SloObjectiveCountMetricGoodSumologicArrayOutput
	ToSloObjectiveCountMetricGoodSumologicArrayOutputWithContext(context.Context) SloObjectiveCountMetricGoodSumologicArrayOutput
}

type SloObjectiveCountMetricGoodSumologicArray []SloObjectiveCountMetricGoodSumologicInput

func (SloObjectiveCountMetricGoodSumologicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodSumologic)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodSumologicArray) ToSloObjectiveCountMetricGoodSumologicArrayOutput() SloObjectiveCountMetricGoodSumologicArrayOutput {
	return i.ToSloObjectiveCountMetricGoodSumologicArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodSumologicArray) ToSloObjectiveCountMetricGoodSumologicArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodSumologicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodSumologicArrayOutput)
}

type SloObjectiveCountMetricGoodSumologicOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodSumologicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodSumologic)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodSumologicOutput) ToSloObjectiveCountMetricGoodSumologicOutput() SloObjectiveCountMetricGoodSumologicOutput {
	return o
}

func (o SloObjectiveCountMetricGoodSumologicOutput) ToSloObjectiveCountMetricGoodSumologicOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodSumologicOutput {
	return o
}

// Period of data aggregation
func (o SloObjectiveCountMetricGoodSumologicOutput) Quantization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodSumologic) *string { return v.Quantization }).(pulumi.StringPtrOutput)
}

// Query for the metrics
func (o SloObjectiveCountMetricGoodSumologicOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodSumologic) string { return v.Query }).(pulumi.StringOutput)
}

// Aggregation function - avg, sum, min, max, count, none
func (o SloObjectiveCountMetricGoodSumologicOutput) Rollup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodSumologic) *string { return v.Rollup }).(pulumi.StringPtrOutput)
}

// Sumologic source - metrics or logs
func (o SloObjectiveCountMetricGoodSumologicOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodSumologic) string { return v.Type }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricGoodSumologicArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodSumologicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodSumologic)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodSumologicArrayOutput) ToSloObjectiveCountMetricGoodSumologicArrayOutput() SloObjectiveCountMetricGoodSumologicArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodSumologicArrayOutput) ToSloObjectiveCountMetricGoodSumologicArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodSumologicArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodSumologicArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricGoodSumologicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricGoodSumologic {
		return vs[0].([]SloObjectiveCountMetricGoodSumologic)[vs[1].(int)]
	}).(SloObjectiveCountMetricGoodSumologicOutput)
}

type SloObjectiveCountMetricGoodThousandeye struct {
	// ID of the test
	TestId int `pulumi:"testId"`
}

// SloObjectiveCountMetricGoodThousandeyeInput is an input type that accepts SloObjectiveCountMetricGoodThousandeyeArgs and SloObjectiveCountMetricGoodThousandeyeOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodThousandeyeInput` via:
//
//	SloObjectiveCountMetricGoodThousandeyeArgs{...}
type SloObjectiveCountMetricGoodThousandeyeInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodThousandeyeOutput() SloObjectiveCountMetricGoodThousandeyeOutput
	ToSloObjectiveCountMetricGoodThousandeyeOutputWithContext(context.Context) SloObjectiveCountMetricGoodThousandeyeOutput
}

type SloObjectiveCountMetricGoodThousandeyeArgs struct {
	// ID of the test
	TestId pulumi.IntInput `pulumi:"testId"`
}

func (SloObjectiveCountMetricGoodThousandeyeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodThousandeye)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodThousandeyeArgs) ToSloObjectiveCountMetricGoodThousandeyeOutput() SloObjectiveCountMetricGoodThousandeyeOutput {
	return i.ToSloObjectiveCountMetricGoodThousandeyeOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodThousandeyeArgs) ToSloObjectiveCountMetricGoodThousandeyeOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodThousandeyeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodThousandeyeOutput)
}

// SloObjectiveCountMetricGoodThousandeyeArrayInput is an input type that accepts SloObjectiveCountMetricGoodThousandeyeArray and SloObjectiveCountMetricGoodThousandeyeArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricGoodThousandeyeArrayInput` via:
//
//	SloObjectiveCountMetricGoodThousandeyeArray{ SloObjectiveCountMetricGoodThousandeyeArgs{...} }
type SloObjectiveCountMetricGoodThousandeyeArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricGoodThousandeyeArrayOutput() SloObjectiveCountMetricGoodThousandeyeArrayOutput
	ToSloObjectiveCountMetricGoodThousandeyeArrayOutputWithContext(context.Context) SloObjectiveCountMetricGoodThousandeyeArrayOutput
}

type SloObjectiveCountMetricGoodThousandeyeArray []SloObjectiveCountMetricGoodThousandeyeInput

func (SloObjectiveCountMetricGoodThousandeyeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodThousandeye)(nil)).Elem()
}

func (i SloObjectiveCountMetricGoodThousandeyeArray) ToSloObjectiveCountMetricGoodThousandeyeArrayOutput() SloObjectiveCountMetricGoodThousandeyeArrayOutput {
	return i.ToSloObjectiveCountMetricGoodThousandeyeArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricGoodThousandeyeArray) ToSloObjectiveCountMetricGoodThousandeyeArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodThousandeyeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricGoodThousandeyeArrayOutput)
}

type SloObjectiveCountMetricGoodThousandeyeOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodThousandeyeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricGoodThousandeye)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodThousandeyeOutput) ToSloObjectiveCountMetricGoodThousandeyeOutput() SloObjectiveCountMetricGoodThousandeyeOutput {
	return o
}

func (o SloObjectiveCountMetricGoodThousandeyeOutput) ToSloObjectiveCountMetricGoodThousandeyeOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodThousandeyeOutput {
	return o
}

// ID of the test
func (o SloObjectiveCountMetricGoodThousandeyeOutput) TestId() pulumi.IntOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricGoodThousandeye) int { return v.TestId }).(pulumi.IntOutput)
}

type SloObjectiveCountMetricGoodThousandeyeArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricGoodThousandeyeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricGoodThousandeye)(nil)).Elem()
}

func (o SloObjectiveCountMetricGoodThousandeyeArrayOutput) ToSloObjectiveCountMetricGoodThousandeyeArrayOutput() SloObjectiveCountMetricGoodThousandeyeArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodThousandeyeArrayOutput) ToSloObjectiveCountMetricGoodThousandeyeArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricGoodThousandeyeArrayOutput {
	return o
}

func (o SloObjectiveCountMetricGoodThousandeyeArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricGoodThousandeyeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricGoodThousandeye {
		return vs[0].([]SloObjectiveCountMetricGoodThousandeye)[vs[1].(int)]
	}).(SloObjectiveCountMetricGoodThousandeyeOutput)
}

type SloObjectiveCountMetricTotal struct {
	// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Prometheus/#creating-slos-with-ams-prometheus)
	AmazonPrometheuses []SloObjectiveCountMetricTotalAmazonPrometheus `pulumi:"amazonPrometheuses"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/appdynamics#creating-slos-with-appdynamics)
	Appdynamics []SloObjectiveCountMetricTotalAppdynamic `pulumi:"appdynamics"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/azure-monitor#creating-slos-with-azure-monitor)
	AzureMonitors []SloObjectiveCountMetricTotalAzureMonitor `pulumi:"azureMonitors"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/bigquery#creating-slos-with-bigquery)
	Bigqueries []SloObjectiveCountMetricTotalBigquery `pulumi:"bigqueries"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_CloudWatch/#creating-slos-with-cloudwatch)
	Cloudwatches []SloObjectiveCountMetricTotalCloudwatch `pulumi:"cloudwatches"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/datadog#creating-slos-with-datadog)
	Datadogs []SloObjectiveCountMetricTotalDatadog `pulumi:"datadogs"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/dynatrace#creating-slos-with-dynatrace)
	Dynatraces []SloObjectiveCountMetricTotalDynatrace `pulumi:"dynatraces"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/elasticsearch#creating-slos-with-elasticsearch)
	Elasticsearches []SloObjectiveCountMetricTotalElasticsearch `pulumi:"elasticsearches"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/google-cloud-monitoring#creating-slos-with-google-cloud-monitoring)
	Gcms []SloObjectiveCountMetricTotalGcm `pulumi:"gcms"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/grafana-loki#creating-slos-with-grafana-loki)
	GrafanaLokis []SloObjectiveCountMetricTotalGrafanaLoki `pulumi:"grafanaLokis"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/graphite#creating-slos-with-graphite)
	Graphites []SloObjectiveCountMetricTotalGraphite `pulumi:"graphites"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/honeycomb#creating-slos-with-honeycomb)
	Honeycombs []SloObjectiveCountMetricTotalHoneycomb `pulumi:"honeycombs"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/influxdb#creating-slos-with-influxdb)
	Influxdbs []SloObjectiveCountMetricTotalInfluxdb `pulumi:"influxdbs"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/instana#creating-slos-with-instana)
	Instanas []SloObjectiveCountMetricTotalInstana `pulumi:"instanas"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/lightstep#creating-slos-with-lightstep)
	Lightsteps []SloObjectiveCountMetricTotalLightstep `pulumi:"lightsteps"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/new-relic#creating-slos-with-new-relic)
	Newrelics []SloObjectiveCountMetricTotalNewrelic `pulumi:"newrelics"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/opentsdb#creating-slos-with-opentsdb)
	Opentsdbs []SloObjectiveCountMetricTotalOpentsdb `pulumi:"opentsdbs"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/pingdom#creating-slos-with-pingdom)
	Pingdoms []SloObjectiveCountMetricTotalPingdom `pulumi:"pingdoms"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/prometheus#creating-slos-with-prometheus)
	Prometheuses []SloObjectiveCountMetricTotalPrometheus `pulumi:"prometheuses"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Redshift/#creating-slos-with-amazon-redshift)
	Redshifts []SloObjectiveCountMetricTotalRedshift `pulumi:"redshifts"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/splunk#creating-slos-with-splunk-observability)
	SplunkObservabilities []SloObjectiveCountMetricTotalSplunkObservability `pulumi:"splunkObservabilities"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/splunk#creating-slos-with-splunk)
	Splunks []SloObjectiveCountMetricTotalSplunk `pulumi:"splunks"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/sumo-logic#creating-slos-with-sumo-logic)
	Sumologics []SloObjectiveCountMetricTotalSumologic `pulumi:"sumologics"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/thousandeyes#creating-slos-with-thousandeyes)
	Thousandeyes []SloObjectiveCountMetricTotalThousandeye `pulumi:"thousandeyes"`
}

// SloObjectiveCountMetricTotalInput is an input type that accepts SloObjectiveCountMetricTotalArgs and SloObjectiveCountMetricTotalOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalInput` via:
//
//	SloObjectiveCountMetricTotalArgs{...}
type SloObjectiveCountMetricTotalInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalOutput() SloObjectiveCountMetricTotalOutput
	ToSloObjectiveCountMetricTotalOutputWithContext(context.Context) SloObjectiveCountMetricTotalOutput
}

type SloObjectiveCountMetricTotalArgs struct {
	// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Prometheus/#creating-slos-with-ams-prometheus)
	AmazonPrometheuses SloObjectiveCountMetricTotalAmazonPrometheusArrayInput `pulumi:"amazonPrometheuses"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/appdynamics#creating-slos-with-appdynamics)
	Appdynamics SloObjectiveCountMetricTotalAppdynamicArrayInput `pulumi:"appdynamics"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/azure-monitor#creating-slos-with-azure-monitor)
	AzureMonitors SloObjectiveCountMetricTotalAzureMonitorArrayInput `pulumi:"azureMonitors"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/bigquery#creating-slos-with-bigquery)
	Bigqueries SloObjectiveCountMetricTotalBigqueryArrayInput `pulumi:"bigqueries"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_CloudWatch/#creating-slos-with-cloudwatch)
	Cloudwatches SloObjectiveCountMetricTotalCloudwatchArrayInput `pulumi:"cloudwatches"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/datadog#creating-slos-with-datadog)
	Datadogs SloObjectiveCountMetricTotalDatadogArrayInput `pulumi:"datadogs"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/dynatrace#creating-slos-with-dynatrace)
	Dynatraces SloObjectiveCountMetricTotalDynatraceArrayInput `pulumi:"dynatraces"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/elasticsearch#creating-slos-with-elasticsearch)
	Elasticsearches SloObjectiveCountMetricTotalElasticsearchArrayInput `pulumi:"elasticsearches"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/google-cloud-monitoring#creating-slos-with-google-cloud-monitoring)
	Gcms SloObjectiveCountMetricTotalGcmArrayInput `pulumi:"gcms"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/grafana-loki#creating-slos-with-grafana-loki)
	GrafanaLokis SloObjectiveCountMetricTotalGrafanaLokiArrayInput `pulumi:"grafanaLokis"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/graphite#creating-slos-with-graphite)
	Graphites SloObjectiveCountMetricTotalGraphiteArrayInput `pulumi:"graphites"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/honeycomb#creating-slos-with-honeycomb)
	Honeycombs SloObjectiveCountMetricTotalHoneycombArrayInput `pulumi:"honeycombs"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/influxdb#creating-slos-with-influxdb)
	Influxdbs SloObjectiveCountMetricTotalInfluxdbArrayInput `pulumi:"influxdbs"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/instana#creating-slos-with-instana)
	Instanas SloObjectiveCountMetricTotalInstanaArrayInput `pulumi:"instanas"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/lightstep#creating-slos-with-lightstep)
	Lightsteps SloObjectiveCountMetricTotalLightstepArrayInput `pulumi:"lightsteps"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/new-relic#creating-slos-with-new-relic)
	Newrelics SloObjectiveCountMetricTotalNewrelicArrayInput `pulumi:"newrelics"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/opentsdb#creating-slos-with-opentsdb)
	Opentsdbs SloObjectiveCountMetricTotalOpentsdbArrayInput `pulumi:"opentsdbs"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/pingdom#creating-slos-with-pingdom)
	Pingdoms SloObjectiveCountMetricTotalPingdomArrayInput `pulumi:"pingdoms"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/prometheus#creating-slos-with-prometheus)
	Prometheuses SloObjectiveCountMetricTotalPrometheusArrayInput `pulumi:"prometheuses"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Redshift/#creating-slos-with-amazon-redshift)
	Redshifts SloObjectiveCountMetricTotalRedshiftArrayInput `pulumi:"redshifts"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/splunk#creating-slos-with-splunk-observability)
	SplunkObservabilities SloObjectiveCountMetricTotalSplunkObservabilityArrayInput `pulumi:"splunkObservabilities"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/splunk#creating-slos-with-splunk)
	Splunks SloObjectiveCountMetricTotalSplunkArrayInput `pulumi:"splunks"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/sumo-logic#creating-slos-with-sumo-logic)
	Sumologics SloObjectiveCountMetricTotalSumologicArrayInput `pulumi:"sumologics"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/thousandeyes#creating-slos-with-thousandeyes)
	Thousandeyes SloObjectiveCountMetricTotalThousandeyeArrayInput `pulumi:"thousandeyes"`
}

func (SloObjectiveCountMetricTotalArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotal)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalArgs) ToSloObjectiveCountMetricTotalOutput() SloObjectiveCountMetricTotalOutput {
	return i.ToSloObjectiveCountMetricTotalOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalArgs) ToSloObjectiveCountMetricTotalOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalOutput)
}

// SloObjectiveCountMetricTotalArrayInput is an input type that accepts SloObjectiveCountMetricTotalArray and SloObjectiveCountMetricTotalArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalArrayInput` via:
//
//	SloObjectiveCountMetricTotalArray{ SloObjectiveCountMetricTotalArgs{...} }
type SloObjectiveCountMetricTotalArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalArrayOutput() SloObjectiveCountMetricTotalArrayOutput
	ToSloObjectiveCountMetricTotalArrayOutputWithContext(context.Context) SloObjectiveCountMetricTotalArrayOutput
}

type SloObjectiveCountMetricTotalArray []SloObjectiveCountMetricTotalInput

func (SloObjectiveCountMetricTotalArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotal)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalArray) ToSloObjectiveCountMetricTotalArrayOutput() SloObjectiveCountMetricTotalArrayOutput {
	return i.ToSloObjectiveCountMetricTotalArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalArray) ToSloObjectiveCountMetricTotalArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalArrayOutput)
}

type SloObjectiveCountMetricTotalOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotal)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalOutput) ToSloObjectiveCountMetricTotalOutput() SloObjectiveCountMetricTotalOutput {
	return o
}

func (o SloObjectiveCountMetricTotalOutput) ToSloObjectiveCountMetricTotalOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalOutput {
	return o
}

// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Prometheus/#creating-slos-with-ams-prometheus)
func (o SloObjectiveCountMetricTotalOutput) AmazonPrometheuses() SloObjectiveCountMetricTotalAmazonPrometheusArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotal) []SloObjectiveCountMetricTotalAmazonPrometheus {
		return v.AmazonPrometheuses
	}).(SloObjectiveCountMetricTotalAmazonPrometheusArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/appdynamics#creating-slos-with-appdynamics)
func (o SloObjectiveCountMetricTotalOutput) Appdynamics() SloObjectiveCountMetricTotalAppdynamicArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotal) []SloObjectiveCountMetricTotalAppdynamic { return v.Appdynamics }).(SloObjectiveCountMetricTotalAppdynamicArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/azure-monitor#creating-slos-with-azure-monitor)
func (o SloObjectiveCountMetricTotalOutput) AzureMonitors() SloObjectiveCountMetricTotalAzureMonitorArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotal) []SloObjectiveCountMetricTotalAzureMonitor {
		return v.AzureMonitors
	}).(SloObjectiveCountMetricTotalAzureMonitorArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/bigquery#creating-slos-with-bigquery)
func (o SloObjectiveCountMetricTotalOutput) Bigqueries() SloObjectiveCountMetricTotalBigqueryArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotal) []SloObjectiveCountMetricTotalBigquery { return v.Bigqueries }).(SloObjectiveCountMetricTotalBigqueryArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_CloudWatch/#creating-slos-with-cloudwatch)
func (o SloObjectiveCountMetricTotalOutput) Cloudwatches() SloObjectiveCountMetricTotalCloudwatchArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotal) []SloObjectiveCountMetricTotalCloudwatch { return v.Cloudwatches }).(SloObjectiveCountMetricTotalCloudwatchArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/datadog#creating-slos-with-datadog)
func (o SloObjectiveCountMetricTotalOutput) Datadogs() SloObjectiveCountMetricTotalDatadogArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotal) []SloObjectiveCountMetricTotalDatadog { return v.Datadogs }).(SloObjectiveCountMetricTotalDatadogArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/dynatrace#creating-slos-with-dynatrace)
func (o SloObjectiveCountMetricTotalOutput) Dynatraces() SloObjectiveCountMetricTotalDynatraceArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotal) []SloObjectiveCountMetricTotalDynatrace { return v.Dynatraces }).(SloObjectiveCountMetricTotalDynatraceArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/elasticsearch#creating-slos-with-elasticsearch)
func (o SloObjectiveCountMetricTotalOutput) Elasticsearches() SloObjectiveCountMetricTotalElasticsearchArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotal) []SloObjectiveCountMetricTotalElasticsearch {
		return v.Elasticsearches
	}).(SloObjectiveCountMetricTotalElasticsearchArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/google-cloud-monitoring#creating-slos-with-google-cloud-monitoring)
func (o SloObjectiveCountMetricTotalOutput) Gcms() SloObjectiveCountMetricTotalGcmArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotal) []SloObjectiveCountMetricTotalGcm { return v.Gcms }).(SloObjectiveCountMetricTotalGcmArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/grafana-loki#creating-slos-with-grafana-loki)
func (o SloObjectiveCountMetricTotalOutput) GrafanaLokis() SloObjectiveCountMetricTotalGrafanaLokiArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotal) []SloObjectiveCountMetricTotalGrafanaLoki { return v.GrafanaLokis }).(SloObjectiveCountMetricTotalGrafanaLokiArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/graphite#creating-slos-with-graphite)
func (o SloObjectiveCountMetricTotalOutput) Graphites() SloObjectiveCountMetricTotalGraphiteArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotal) []SloObjectiveCountMetricTotalGraphite { return v.Graphites }).(SloObjectiveCountMetricTotalGraphiteArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/honeycomb#creating-slos-with-honeycomb)
func (o SloObjectiveCountMetricTotalOutput) Honeycombs() SloObjectiveCountMetricTotalHoneycombArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotal) []SloObjectiveCountMetricTotalHoneycomb { return v.Honeycombs }).(SloObjectiveCountMetricTotalHoneycombArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/influxdb#creating-slos-with-influxdb)
func (o SloObjectiveCountMetricTotalOutput) Influxdbs() SloObjectiveCountMetricTotalInfluxdbArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotal) []SloObjectiveCountMetricTotalInfluxdb { return v.Influxdbs }).(SloObjectiveCountMetricTotalInfluxdbArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/instana#creating-slos-with-instana)
func (o SloObjectiveCountMetricTotalOutput) Instanas() SloObjectiveCountMetricTotalInstanaArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotal) []SloObjectiveCountMetricTotalInstana { return v.Instanas }).(SloObjectiveCountMetricTotalInstanaArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/lightstep#creating-slos-with-lightstep)
func (o SloObjectiveCountMetricTotalOutput) Lightsteps() SloObjectiveCountMetricTotalLightstepArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotal) []SloObjectiveCountMetricTotalLightstep { return v.Lightsteps }).(SloObjectiveCountMetricTotalLightstepArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/new-relic#creating-slos-with-new-relic)
func (o SloObjectiveCountMetricTotalOutput) Newrelics() SloObjectiveCountMetricTotalNewrelicArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotal) []SloObjectiveCountMetricTotalNewrelic { return v.Newrelics }).(SloObjectiveCountMetricTotalNewrelicArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/opentsdb#creating-slos-with-opentsdb)
func (o SloObjectiveCountMetricTotalOutput) Opentsdbs() SloObjectiveCountMetricTotalOpentsdbArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotal) []SloObjectiveCountMetricTotalOpentsdb { return v.Opentsdbs }).(SloObjectiveCountMetricTotalOpentsdbArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/pingdom#creating-slos-with-pingdom)
func (o SloObjectiveCountMetricTotalOutput) Pingdoms() SloObjectiveCountMetricTotalPingdomArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotal) []SloObjectiveCountMetricTotalPingdom { return v.Pingdoms }).(SloObjectiveCountMetricTotalPingdomArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/prometheus#creating-slos-with-prometheus)
func (o SloObjectiveCountMetricTotalOutput) Prometheuses() SloObjectiveCountMetricTotalPrometheusArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotal) []SloObjectiveCountMetricTotalPrometheus { return v.Prometheuses }).(SloObjectiveCountMetricTotalPrometheusArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Redshift/#creating-slos-with-amazon-redshift)
func (o SloObjectiveCountMetricTotalOutput) Redshifts() SloObjectiveCountMetricTotalRedshiftArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotal) []SloObjectiveCountMetricTotalRedshift { return v.Redshifts }).(SloObjectiveCountMetricTotalRedshiftArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/splunk#creating-slos-with-splunk-observability)
func (o SloObjectiveCountMetricTotalOutput) SplunkObservabilities() SloObjectiveCountMetricTotalSplunkObservabilityArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotal) []SloObjectiveCountMetricTotalSplunkObservability {
		return v.SplunkObservabilities
	}).(SloObjectiveCountMetricTotalSplunkObservabilityArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/splunk#creating-slos-with-splunk)
func (o SloObjectiveCountMetricTotalOutput) Splunks() SloObjectiveCountMetricTotalSplunkArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotal) []SloObjectiveCountMetricTotalSplunk { return v.Splunks }).(SloObjectiveCountMetricTotalSplunkArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/sumo-logic#creating-slos-with-sumo-logic)
func (o SloObjectiveCountMetricTotalOutput) Sumologics() SloObjectiveCountMetricTotalSumologicArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotal) []SloObjectiveCountMetricTotalSumologic { return v.Sumologics }).(SloObjectiveCountMetricTotalSumologicArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/thousandeyes#creating-slos-with-thousandeyes)
func (o SloObjectiveCountMetricTotalOutput) Thousandeyes() SloObjectiveCountMetricTotalThousandeyeArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotal) []SloObjectiveCountMetricTotalThousandeye { return v.Thousandeyes }).(SloObjectiveCountMetricTotalThousandeyeArrayOutput)
}

type SloObjectiveCountMetricTotalArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotal)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalArrayOutput) ToSloObjectiveCountMetricTotalArrayOutput() SloObjectiveCountMetricTotalArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalArrayOutput) ToSloObjectiveCountMetricTotalArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricTotalOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricTotal {
		return vs[0].([]SloObjectiveCountMetricTotal)[vs[1].(int)]
	}).(SloObjectiveCountMetricTotalOutput)
}

type SloObjectiveCountMetricTotalAmazonPrometheus struct {
	// Query for the metrics
	Promql string `pulumi:"promql"`
}

// SloObjectiveCountMetricTotalAmazonPrometheusInput is an input type that accepts SloObjectiveCountMetricTotalAmazonPrometheusArgs and SloObjectiveCountMetricTotalAmazonPrometheusOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalAmazonPrometheusInput` via:
//
//	SloObjectiveCountMetricTotalAmazonPrometheusArgs{...}
type SloObjectiveCountMetricTotalAmazonPrometheusInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalAmazonPrometheusOutput() SloObjectiveCountMetricTotalAmazonPrometheusOutput
	ToSloObjectiveCountMetricTotalAmazonPrometheusOutputWithContext(context.Context) SloObjectiveCountMetricTotalAmazonPrometheusOutput
}

type SloObjectiveCountMetricTotalAmazonPrometheusArgs struct {
	// Query for the metrics
	Promql pulumi.StringInput `pulumi:"promql"`
}

func (SloObjectiveCountMetricTotalAmazonPrometheusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalAmazonPrometheus)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalAmazonPrometheusArgs) ToSloObjectiveCountMetricTotalAmazonPrometheusOutput() SloObjectiveCountMetricTotalAmazonPrometheusOutput {
	return i.ToSloObjectiveCountMetricTotalAmazonPrometheusOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalAmazonPrometheusArgs) ToSloObjectiveCountMetricTotalAmazonPrometheusOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalAmazonPrometheusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalAmazonPrometheusOutput)
}

// SloObjectiveCountMetricTotalAmazonPrometheusArrayInput is an input type that accepts SloObjectiveCountMetricTotalAmazonPrometheusArray and SloObjectiveCountMetricTotalAmazonPrometheusArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalAmazonPrometheusArrayInput` via:
//
//	SloObjectiveCountMetricTotalAmazonPrometheusArray{ SloObjectiveCountMetricTotalAmazonPrometheusArgs{...} }
type SloObjectiveCountMetricTotalAmazonPrometheusArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalAmazonPrometheusArrayOutput() SloObjectiveCountMetricTotalAmazonPrometheusArrayOutput
	ToSloObjectiveCountMetricTotalAmazonPrometheusArrayOutputWithContext(context.Context) SloObjectiveCountMetricTotalAmazonPrometheusArrayOutput
}

type SloObjectiveCountMetricTotalAmazonPrometheusArray []SloObjectiveCountMetricTotalAmazonPrometheusInput

func (SloObjectiveCountMetricTotalAmazonPrometheusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalAmazonPrometheus)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalAmazonPrometheusArray) ToSloObjectiveCountMetricTotalAmazonPrometheusArrayOutput() SloObjectiveCountMetricTotalAmazonPrometheusArrayOutput {
	return i.ToSloObjectiveCountMetricTotalAmazonPrometheusArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalAmazonPrometheusArray) ToSloObjectiveCountMetricTotalAmazonPrometheusArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalAmazonPrometheusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalAmazonPrometheusArrayOutput)
}

type SloObjectiveCountMetricTotalAmazonPrometheusOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalAmazonPrometheusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalAmazonPrometheus)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalAmazonPrometheusOutput) ToSloObjectiveCountMetricTotalAmazonPrometheusOutput() SloObjectiveCountMetricTotalAmazonPrometheusOutput {
	return o
}

func (o SloObjectiveCountMetricTotalAmazonPrometheusOutput) ToSloObjectiveCountMetricTotalAmazonPrometheusOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalAmazonPrometheusOutput {
	return o
}

// Query for the metrics
func (o SloObjectiveCountMetricTotalAmazonPrometheusOutput) Promql() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalAmazonPrometheus) string { return v.Promql }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricTotalAmazonPrometheusArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalAmazonPrometheusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalAmazonPrometheus)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalAmazonPrometheusArrayOutput) ToSloObjectiveCountMetricTotalAmazonPrometheusArrayOutput() SloObjectiveCountMetricTotalAmazonPrometheusArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalAmazonPrometheusArrayOutput) ToSloObjectiveCountMetricTotalAmazonPrometheusArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalAmazonPrometheusArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalAmazonPrometheusArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricTotalAmazonPrometheusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricTotalAmazonPrometheus {
		return vs[0].([]SloObjectiveCountMetricTotalAmazonPrometheus)[vs[1].(int)]
	}).(SloObjectiveCountMetricTotalAmazonPrometheusOutput)
}

type SloObjectiveCountMetricTotalAppdynamic struct {
	// Name of the added application
	ApplicationName string `pulumi:"applicationName"`
	// Path to the metrics
	MetricPath string `pulumi:"metricPath"`
}

// SloObjectiveCountMetricTotalAppdynamicInput is an input type that accepts SloObjectiveCountMetricTotalAppdynamicArgs and SloObjectiveCountMetricTotalAppdynamicOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalAppdynamicInput` via:
//
//	SloObjectiveCountMetricTotalAppdynamicArgs{...}
type SloObjectiveCountMetricTotalAppdynamicInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalAppdynamicOutput() SloObjectiveCountMetricTotalAppdynamicOutput
	ToSloObjectiveCountMetricTotalAppdynamicOutputWithContext(context.Context) SloObjectiveCountMetricTotalAppdynamicOutput
}

type SloObjectiveCountMetricTotalAppdynamicArgs struct {
	// Name of the added application
	ApplicationName pulumi.StringInput `pulumi:"applicationName"`
	// Path to the metrics
	MetricPath pulumi.StringInput `pulumi:"metricPath"`
}

func (SloObjectiveCountMetricTotalAppdynamicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalAppdynamic)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalAppdynamicArgs) ToSloObjectiveCountMetricTotalAppdynamicOutput() SloObjectiveCountMetricTotalAppdynamicOutput {
	return i.ToSloObjectiveCountMetricTotalAppdynamicOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalAppdynamicArgs) ToSloObjectiveCountMetricTotalAppdynamicOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalAppdynamicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalAppdynamicOutput)
}

// SloObjectiveCountMetricTotalAppdynamicArrayInput is an input type that accepts SloObjectiveCountMetricTotalAppdynamicArray and SloObjectiveCountMetricTotalAppdynamicArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalAppdynamicArrayInput` via:
//
//	SloObjectiveCountMetricTotalAppdynamicArray{ SloObjectiveCountMetricTotalAppdynamicArgs{...} }
type SloObjectiveCountMetricTotalAppdynamicArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalAppdynamicArrayOutput() SloObjectiveCountMetricTotalAppdynamicArrayOutput
	ToSloObjectiveCountMetricTotalAppdynamicArrayOutputWithContext(context.Context) SloObjectiveCountMetricTotalAppdynamicArrayOutput
}

type SloObjectiveCountMetricTotalAppdynamicArray []SloObjectiveCountMetricTotalAppdynamicInput

func (SloObjectiveCountMetricTotalAppdynamicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalAppdynamic)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalAppdynamicArray) ToSloObjectiveCountMetricTotalAppdynamicArrayOutput() SloObjectiveCountMetricTotalAppdynamicArrayOutput {
	return i.ToSloObjectiveCountMetricTotalAppdynamicArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalAppdynamicArray) ToSloObjectiveCountMetricTotalAppdynamicArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalAppdynamicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalAppdynamicArrayOutput)
}

type SloObjectiveCountMetricTotalAppdynamicOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalAppdynamicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalAppdynamic)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalAppdynamicOutput) ToSloObjectiveCountMetricTotalAppdynamicOutput() SloObjectiveCountMetricTotalAppdynamicOutput {
	return o
}

func (o SloObjectiveCountMetricTotalAppdynamicOutput) ToSloObjectiveCountMetricTotalAppdynamicOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalAppdynamicOutput {
	return o
}

// Name of the added application
func (o SloObjectiveCountMetricTotalAppdynamicOutput) ApplicationName() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalAppdynamic) string { return v.ApplicationName }).(pulumi.StringOutput)
}

// Path to the metrics
func (o SloObjectiveCountMetricTotalAppdynamicOutput) MetricPath() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalAppdynamic) string { return v.MetricPath }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricTotalAppdynamicArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalAppdynamicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalAppdynamic)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalAppdynamicArrayOutput) ToSloObjectiveCountMetricTotalAppdynamicArrayOutput() SloObjectiveCountMetricTotalAppdynamicArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalAppdynamicArrayOutput) ToSloObjectiveCountMetricTotalAppdynamicArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalAppdynamicArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalAppdynamicArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricTotalAppdynamicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricTotalAppdynamic {
		return vs[0].([]SloObjectiveCountMetricTotalAppdynamic)[vs[1].(int)]
	}).(SloObjectiveCountMetricTotalAppdynamicOutput)
}

type SloObjectiveCountMetricTotalAzureMonitor struct {
	// Aggregation type [Required for metrics]
	Aggregation *string `pulumi:"aggregation"`
	// Specifies source: 'metrics' or 'logs'
	DataType string `pulumi:"dataType"`
	// Dimensions of the metric [Optional for metrics]
	Dimensions []SloObjectiveCountMetricTotalAzureMonitorDimension `pulumi:"dimensions"`
	// Logs query in Kusto Query Language [Required for logs]
	KqlQuery *string `pulumi:"kqlQuery"`
	// Name of the metric [Required for metrics]
	MetricName *string `pulumi:"metricName"`
	// Namespace of the metric [Optional for metrics]
	MetricNamespace *string `pulumi:"metricNamespace"`
	// Identifier of the Azure Cloud resource [Required for metrics]
	ResourceId *string `pulumi:"resourceId"`
	// Log analytics workspace [Required for logs]
	Workspaces []SloObjectiveCountMetricTotalAzureMonitorWorkspace `pulumi:"workspaces"`
}

// SloObjectiveCountMetricTotalAzureMonitorInput is an input type that accepts SloObjectiveCountMetricTotalAzureMonitorArgs and SloObjectiveCountMetricTotalAzureMonitorOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalAzureMonitorInput` via:
//
//	SloObjectiveCountMetricTotalAzureMonitorArgs{...}
type SloObjectiveCountMetricTotalAzureMonitorInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalAzureMonitorOutput() SloObjectiveCountMetricTotalAzureMonitorOutput
	ToSloObjectiveCountMetricTotalAzureMonitorOutputWithContext(context.Context) SloObjectiveCountMetricTotalAzureMonitorOutput
}

type SloObjectiveCountMetricTotalAzureMonitorArgs struct {
	// Aggregation type [Required for metrics]
	Aggregation pulumi.StringPtrInput `pulumi:"aggregation"`
	// Specifies source: 'metrics' or 'logs'
	DataType pulumi.StringInput `pulumi:"dataType"`
	// Dimensions of the metric [Optional for metrics]
	Dimensions SloObjectiveCountMetricTotalAzureMonitorDimensionArrayInput `pulumi:"dimensions"`
	// Logs query in Kusto Query Language [Required for logs]
	KqlQuery pulumi.StringPtrInput `pulumi:"kqlQuery"`
	// Name of the metric [Required for metrics]
	MetricName pulumi.StringPtrInput `pulumi:"metricName"`
	// Namespace of the metric [Optional for metrics]
	MetricNamespace pulumi.StringPtrInput `pulumi:"metricNamespace"`
	// Identifier of the Azure Cloud resource [Required for metrics]
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
	// Log analytics workspace [Required for logs]
	Workspaces SloObjectiveCountMetricTotalAzureMonitorWorkspaceArrayInput `pulumi:"workspaces"`
}

func (SloObjectiveCountMetricTotalAzureMonitorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalAzureMonitor)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalAzureMonitorArgs) ToSloObjectiveCountMetricTotalAzureMonitorOutput() SloObjectiveCountMetricTotalAzureMonitorOutput {
	return i.ToSloObjectiveCountMetricTotalAzureMonitorOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalAzureMonitorArgs) ToSloObjectiveCountMetricTotalAzureMonitorOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalAzureMonitorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalAzureMonitorOutput)
}

// SloObjectiveCountMetricTotalAzureMonitorArrayInput is an input type that accepts SloObjectiveCountMetricTotalAzureMonitorArray and SloObjectiveCountMetricTotalAzureMonitorArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalAzureMonitorArrayInput` via:
//
//	SloObjectiveCountMetricTotalAzureMonitorArray{ SloObjectiveCountMetricTotalAzureMonitorArgs{...} }
type SloObjectiveCountMetricTotalAzureMonitorArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalAzureMonitorArrayOutput() SloObjectiveCountMetricTotalAzureMonitorArrayOutput
	ToSloObjectiveCountMetricTotalAzureMonitorArrayOutputWithContext(context.Context) SloObjectiveCountMetricTotalAzureMonitorArrayOutput
}

type SloObjectiveCountMetricTotalAzureMonitorArray []SloObjectiveCountMetricTotalAzureMonitorInput

func (SloObjectiveCountMetricTotalAzureMonitorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalAzureMonitor)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalAzureMonitorArray) ToSloObjectiveCountMetricTotalAzureMonitorArrayOutput() SloObjectiveCountMetricTotalAzureMonitorArrayOutput {
	return i.ToSloObjectiveCountMetricTotalAzureMonitorArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalAzureMonitorArray) ToSloObjectiveCountMetricTotalAzureMonitorArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalAzureMonitorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalAzureMonitorArrayOutput)
}

type SloObjectiveCountMetricTotalAzureMonitorOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalAzureMonitorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalAzureMonitor)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalAzureMonitorOutput) ToSloObjectiveCountMetricTotalAzureMonitorOutput() SloObjectiveCountMetricTotalAzureMonitorOutput {
	return o
}

func (o SloObjectiveCountMetricTotalAzureMonitorOutput) ToSloObjectiveCountMetricTotalAzureMonitorOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalAzureMonitorOutput {
	return o
}

// Aggregation type [Required for metrics]
func (o SloObjectiveCountMetricTotalAzureMonitorOutput) Aggregation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalAzureMonitor) *string { return v.Aggregation }).(pulumi.StringPtrOutput)
}

// Specifies source: 'metrics' or 'logs'
func (o SloObjectiveCountMetricTotalAzureMonitorOutput) DataType() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalAzureMonitor) string { return v.DataType }).(pulumi.StringOutput)
}

// Dimensions of the metric [Optional for metrics]
func (o SloObjectiveCountMetricTotalAzureMonitorOutput) Dimensions() SloObjectiveCountMetricTotalAzureMonitorDimensionArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalAzureMonitor) []SloObjectiveCountMetricTotalAzureMonitorDimension {
		return v.Dimensions
	}).(SloObjectiveCountMetricTotalAzureMonitorDimensionArrayOutput)
}

// Logs query in Kusto Query Language [Required for logs]
func (o SloObjectiveCountMetricTotalAzureMonitorOutput) KqlQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalAzureMonitor) *string { return v.KqlQuery }).(pulumi.StringPtrOutput)
}

// Name of the metric [Required for metrics]
func (o SloObjectiveCountMetricTotalAzureMonitorOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalAzureMonitor) *string { return v.MetricName }).(pulumi.StringPtrOutput)
}

// Namespace of the metric [Optional for metrics]
func (o SloObjectiveCountMetricTotalAzureMonitorOutput) MetricNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalAzureMonitor) *string { return v.MetricNamespace }).(pulumi.StringPtrOutput)
}

// Identifier of the Azure Cloud resource [Required for metrics]
func (o SloObjectiveCountMetricTotalAzureMonitorOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalAzureMonitor) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// Log analytics workspace [Required for logs]
func (o SloObjectiveCountMetricTotalAzureMonitorOutput) Workspaces() SloObjectiveCountMetricTotalAzureMonitorWorkspaceArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalAzureMonitor) []SloObjectiveCountMetricTotalAzureMonitorWorkspace {
		return v.Workspaces
	}).(SloObjectiveCountMetricTotalAzureMonitorWorkspaceArrayOutput)
}

type SloObjectiveCountMetricTotalAzureMonitorArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalAzureMonitorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalAzureMonitor)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalAzureMonitorArrayOutput) ToSloObjectiveCountMetricTotalAzureMonitorArrayOutput() SloObjectiveCountMetricTotalAzureMonitorArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalAzureMonitorArrayOutput) ToSloObjectiveCountMetricTotalAzureMonitorArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalAzureMonitorArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalAzureMonitorArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricTotalAzureMonitorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricTotalAzureMonitor {
		return vs[0].([]SloObjectiveCountMetricTotalAzureMonitor)[vs[1].(int)]
	}).(SloObjectiveCountMetricTotalAzureMonitorOutput)
}

type SloObjectiveCountMetricTotalAzureMonitorDimension struct {
	// The name of the previously defined alert method.
	Name string `pulumi:"name"`
	// Burn rate value.
	Value string `pulumi:"value"`
}

// SloObjectiveCountMetricTotalAzureMonitorDimensionInput is an input type that accepts SloObjectiveCountMetricTotalAzureMonitorDimensionArgs and SloObjectiveCountMetricTotalAzureMonitorDimensionOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalAzureMonitorDimensionInput` via:
//
//	SloObjectiveCountMetricTotalAzureMonitorDimensionArgs{...}
type SloObjectiveCountMetricTotalAzureMonitorDimensionInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalAzureMonitorDimensionOutput() SloObjectiveCountMetricTotalAzureMonitorDimensionOutput
	ToSloObjectiveCountMetricTotalAzureMonitorDimensionOutputWithContext(context.Context) SloObjectiveCountMetricTotalAzureMonitorDimensionOutput
}

type SloObjectiveCountMetricTotalAzureMonitorDimensionArgs struct {
	// The name of the previously defined alert method.
	Name pulumi.StringInput `pulumi:"name"`
	// Burn rate value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (SloObjectiveCountMetricTotalAzureMonitorDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalAzureMonitorDimension)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalAzureMonitorDimensionArgs) ToSloObjectiveCountMetricTotalAzureMonitorDimensionOutput() SloObjectiveCountMetricTotalAzureMonitorDimensionOutput {
	return i.ToSloObjectiveCountMetricTotalAzureMonitorDimensionOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalAzureMonitorDimensionArgs) ToSloObjectiveCountMetricTotalAzureMonitorDimensionOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalAzureMonitorDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalAzureMonitorDimensionOutput)
}

// SloObjectiveCountMetricTotalAzureMonitorDimensionArrayInput is an input type that accepts SloObjectiveCountMetricTotalAzureMonitorDimensionArray and SloObjectiveCountMetricTotalAzureMonitorDimensionArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalAzureMonitorDimensionArrayInput` via:
//
//	SloObjectiveCountMetricTotalAzureMonitorDimensionArray{ SloObjectiveCountMetricTotalAzureMonitorDimensionArgs{...} }
type SloObjectiveCountMetricTotalAzureMonitorDimensionArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalAzureMonitorDimensionArrayOutput() SloObjectiveCountMetricTotalAzureMonitorDimensionArrayOutput
	ToSloObjectiveCountMetricTotalAzureMonitorDimensionArrayOutputWithContext(context.Context) SloObjectiveCountMetricTotalAzureMonitorDimensionArrayOutput
}

type SloObjectiveCountMetricTotalAzureMonitorDimensionArray []SloObjectiveCountMetricTotalAzureMonitorDimensionInput

func (SloObjectiveCountMetricTotalAzureMonitorDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalAzureMonitorDimension)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalAzureMonitorDimensionArray) ToSloObjectiveCountMetricTotalAzureMonitorDimensionArrayOutput() SloObjectiveCountMetricTotalAzureMonitorDimensionArrayOutput {
	return i.ToSloObjectiveCountMetricTotalAzureMonitorDimensionArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalAzureMonitorDimensionArray) ToSloObjectiveCountMetricTotalAzureMonitorDimensionArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalAzureMonitorDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalAzureMonitorDimensionArrayOutput)
}

type SloObjectiveCountMetricTotalAzureMonitorDimensionOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalAzureMonitorDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalAzureMonitorDimension)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalAzureMonitorDimensionOutput) ToSloObjectiveCountMetricTotalAzureMonitorDimensionOutput() SloObjectiveCountMetricTotalAzureMonitorDimensionOutput {
	return o
}

func (o SloObjectiveCountMetricTotalAzureMonitorDimensionOutput) ToSloObjectiveCountMetricTotalAzureMonitorDimensionOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalAzureMonitorDimensionOutput {
	return o
}

// The name of the previously defined alert method.
func (o SloObjectiveCountMetricTotalAzureMonitorDimensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalAzureMonitorDimension) string { return v.Name }).(pulumi.StringOutput)
}

// Burn rate value.
func (o SloObjectiveCountMetricTotalAzureMonitorDimensionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalAzureMonitorDimension) string { return v.Value }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricTotalAzureMonitorDimensionArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalAzureMonitorDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalAzureMonitorDimension)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalAzureMonitorDimensionArrayOutput) ToSloObjectiveCountMetricTotalAzureMonitorDimensionArrayOutput() SloObjectiveCountMetricTotalAzureMonitorDimensionArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalAzureMonitorDimensionArrayOutput) ToSloObjectiveCountMetricTotalAzureMonitorDimensionArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalAzureMonitorDimensionArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalAzureMonitorDimensionArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricTotalAzureMonitorDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricTotalAzureMonitorDimension {
		return vs[0].([]SloObjectiveCountMetricTotalAzureMonitorDimension)[vs[1].(int)]
	}).(SloObjectiveCountMetricTotalAzureMonitorDimensionOutput)
}

type SloObjectiveCountMetricTotalAzureMonitorWorkspace struct {
	// Resource group of the workspace
	ResourceGroup string `pulumi:"resourceGroup"`
	// Subscription ID of the workspace
	SubscriptionId string `pulumi:"subscriptionId"`
	// ID of the workspace
	WorkspaceId string `pulumi:"workspaceId"`
}

// SloObjectiveCountMetricTotalAzureMonitorWorkspaceInput is an input type that accepts SloObjectiveCountMetricTotalAzureMonitorWorkspaceArgs and SloObjectiveCountMetricTotalAzureMonitorWorkspaceOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalAzureMonitorWorkspaceInput` via:
//
//	SloObjectiveCountMetricTotalAzureMonitorWorkspaceArgs{...}
type SloObjectiveCountMetricTotalAzureMonitorWorkspaceInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalAzureMonitorWorkspaceOutput() SloObjectiveCountMetricTotalAzureMonitorWorkspaceOutput
	ToSloObjectiveCountMetricTotalAzureMonitorWorkspaceOutputWithContext(context.Context) SloObjectiveCountMetricTotalAzureMonitorWorkspaceOutput
}

type SloObjectiveCountMetricTotalAzureMonitorWorkspaceArgs struct {
	// Resource group of the workspace
	ResourceGroup pulumi.StringInput `pulumi:"resourceGroup"`
	// Subscription ID of the workspace
	SubscriptionId pulumi.StringInput `pulumi:"subscriptionId"`
	// ID of the workspace
	WorkspaceId pulumi.StringInput `pulumi:"workspaceId"`
}

func (SloObjectiveCountMetricTotalAzureMonitorWorkspaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalAzureMonitorWorkspace)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalAzureMonitorWorkspaceArgs) ToSloObjectiveCountMetricTotalAzureMonitorWorkspaceOutput() SloObjectiveCountMetricTotalAzureMonitorWorkspaceOutput {
	return i.ToSloObjectiveCountMetricTotalAzureMonitorWorkspaceOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalAzureMonitorWorkspaceArgs) ToSloObjectiveCountMetricTotalAzureMonitorWorkspaceOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalAzureMonitorWorkspaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalAzureMonitorWorkspaceOutput)
}

// SloObjectiveCountMetricTotalAzureMonitorWorkspaceArrayInput is an input type that accepts SloObjectiveCountMetricTotalAzureMonitorWorkspaceArray and SloObjectiveCountMetricTotalAzureMonitorWorkspaceArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalAzureMonitorWorkspaceArrayInput` via:
//
//	SloObjectiveCountMetricTotalAzureMonitorWorkspaceArray{ SloObjectiveCountMetricTotalAzureMonitorWorkspaceArgs{...} }
type SloObjectiveCountMetricTotalAzureMonitorWorkspaceArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalAzureMonitorWorkspaceArrayOutput() SloObjectiveCountMetricTotalAzureMonitorWorkspaceArrayOutput
	ToSloObjectiveCountMetricTotalAzureMonitorWorkspaceArrayOutputWithContext(context.Context) SloObjectiveCountMetricTotalAzureMonitorWorkspaceArrayOutput
}

type SloObjectiveCountMetricTotalAzureMonitorWorkspaceArray []SloObjectiveCountMetricTotalAzureMonitorWorkspaceInput

func (SloObjectiveCountMetricTotalAzureMonitorWorkspaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalAzureMonitorWorkspace)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalAzureMonitorWorkspaceArray) ToSloObjectiveCountMetricTotalAzureMonitorWorkspaceArrayOutput() SloObjectiveCountMetricTotalAzureMonitorWorkspaceArrayOutput {
	return i.ToSloObjectiveCountMetricTotalAzureMonitorWorkspaceArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalAzureMonitorWorkspaceArray) ToSloObjectiveCountMetricTotalAzureMonitorWorkspaceArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalAzureMonitorWorkspaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalAzureMonitorWorkspaceArrayOutput)
}

type SloObjectiveCountMetricTotalAzureMonitorWorkspaceOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalAzureMonitorWorkspaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalAzureMonitorWorkspace)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalAzureMonitorWorkspaceOutput) ToSloObjectiveCountMetricTotalAzureMonitorWorkspaceOutput() SloObjectiveCountMetricTotalAzureMonitorWorkspaceOutput {
	return o
}

func (o SloObjectiveCountMetricTotalAzureMonitorWorkspaceOutput) ToSloObjectiveCountMetricTotalAzureMonitorWorkspaceOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalAzureMonitorWorkspaceOutput {
	return o
}

// Resource group of the workspace
func (o SloObjectiveCountMetricTotalAzureMonitorWorkspaceOutput) ResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalAzureMonitorWorkspace) string { return v.ResourceGroup }).(pulumi.StringOutput)
}

// Subscription ID of the workspace
func (o SloObjectiveCountMetricTotalAzureMonitorWorkspaceOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalAzureMonitorWorkspace) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

// ID of the workspace
func (o SloObjectiveCountMetricTotalAzureMonitorWorkspaceOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalAzureMonitorWorkspace) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricTotalAzureMonitorWorkspaceArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalAzureMonitorWorkspaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalAzureMonitorWorkspace)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalAzureMonitorWorkspaceArrayOutput) ToSloObjectiveCountMetricTotalAzureMonitorWorkspaceArrayOutput() SloObjectiveCountMetricTotalAzureMonitorWorkspaceArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalAzureMonitorWorkspaceArrayOutput) ToSloObjectiveCountMetricTotalAzureMonitorWorkspaceArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalAzureMonitorWorkspaceArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalAzureMonitorWorkspaceArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricTotalAzureMonitorWorkspaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricTotalAzureMonitorWorkspace {
		return vs[0].([]SloObjectiveCountMetricTotalAzureMonitorWorkspace)[vs[1].(int)]
	}).(SloObjectiveCountMetricTotalAzureMonitorWorkspaceOutput)
}

type SloObjectiveCountMetricTotalBigquery struct {
	// Location of you BigQuery
	Location string `pulumi:"location"`
	// Project ID
	ProjectId string `pulumi:"projectId"`
	// Query for the metrics
	Query string `pulumi:"query"`
}

// SloObjectiveCountMetricTotalBigqueryInput is an input type that accepts SloObjectiveCountMetricTotalBigqueryArgs and SloObjectiveCountMetricTotalBigqueryOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalBigqueryInput` via:
//
//	SloObjectiveCountMetricTotalBigqueryArgs{...}
type SloObjectiveCountMetricTotalBigqueryInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalBigqueryOutput() SloObjectiveCountMetricTotalBigqueryOutput
	ToSloObjectiveCountMetricTotalBigqueryOutputWithContext(context.Context) SloObjectiveCountMetricTotalBigqueryOutput
}

type SloObjectiveCountMetricTotalBigqueryArgs struct {
	// Location of you BigQuery
	Location pulumi.StringInput `pulumi:"location"`
	// Project ID
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// Query for the metrics
	Query pulumi.StringInput `pulumi:"query"`
}

func (SloObjectiveCountMetricTotalBigqueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalBigquery)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalBigqueryArgs) ToSloObjectiveCountMetricTotalBigqueryOutput() SloObjectiveCountMetricTotalBigqueryOutput {
	return i.ToSloObjectiveCountMetricTotalBigqueryOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalBigqueryArgs) ToSloObjectiveCountMetricTotalBigqueryOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalBigqueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalBigqueryOutput)
}

// SloObjectiveCountMetricTotalBigqueryArrayInput is an input type that accepts SloObjectiveCountMetricTotalBigqueryArray and SloObjectiveCountMetricTotalBigqueryArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalBigqueryArrayInput` via:
//
//	SloObjectiveCountMetricTotalBigqueryArray{ SloObjectiveCountMetricTotalBigqueryArgs{...} }
type SloObjectiveCountMetricTotalBigqueryArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalBigqueryArrayOutput() SloObjectiveCountMetricTotalBigqueryArrayOutput
	ToSloObjectiveCountMetricTotalBigqueryArrayOutputWithContext(context.Context) SloObjectiveCountMetricTotalBigqueryArrayOutput
}

type SloObjectiveCountMetricTotalBigqueryArray []SloObjectiveCountMetricTotalBigqueryInput

func (SloObjectiveCountMetricTotalBigqueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalBigquery)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalBigqueryArray) ToSloObjectiveCountMetricTotalBigqueryArrayOutput() SloObjectiveCountMetricTotalBigqueryArrayOutput {
	return i.ToSloObjectiveCountMetricTotalBigqueryArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalBigqueryArray) ToSloObjectiveCountMetricTotalBigqueryArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalBigqueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalBigqueryArrayOutput)
}

type SloObjectiveCountMetricTotalBigqueryOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalBigqueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalBigquery)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalBigqueryOutput) ToSloObjectiveCountMetricTotalBigqueryOutput() SloObjectiveCountMetricTotalBigqueryOutput {
	return o
}

func (o SloObjectiveCountMetricTotalBigqueryOutput) ToSloObjectiveCountMetricTotalBigqueryOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalBigqueryOutput {
	return o
}

// Location of you BigQuery
func (o SloObjectiveCountMetricTotalBigqueryOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalBigquery) string { return v.Location }).(pulumi.StringOutput)
}

// Project ID
func (o SloObjectiveCountMetricTotalBigqueryOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalBigquery) string { return v.ProjectId }).(pulumi.StringOutput)
}

// Query for the metrics
func (o SloObjectiveCountMetricTotalBigqueryOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalBigquery) string { return v.Query }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricTotalBigqueryArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalBigqueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalBigquery)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalBigqueryArrayOutput) ToSloObjectiveCountMetricTotalBigqueryArrayOutput() SloObjectiveCountMetricTotalBigqueryArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalBigqueryArrayOutput) ToSloObjectiveCountMetricTotalBigqueryArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalBigqueryArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalBigqueryArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricTotalBigqueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricTotalBigquery {
		return vs[0].([]SloObjectiveCountMetricTotalBigquery)[vs[1].(int)]
	}).(SloObjectiveCountMetricTotalBigqueryOutput)
}

type SloObjectiveCountMetricTotalCloudwatch struct {
	// AccountID used with cross-account observability feature
	AccountId *string `pulumi:"accountId"`
	// Dimensions of the metric [Optional for metrics]
	Dimensions []SloObjectiveCountMetricTotalCloudwatchDimension `pulumi:"dimensions"`
	// JSON query
	Json *string `pulumi:"json"`
	// Name of the metric [Required for metrics]
	MetricName *string `pulumi:"metricName"`
	// Namespace of the metric
	Namespace *string `pulumi:"namespace"`
	// Region of the CloudWatch instance
	Region string `pulumi:"region"`
	// SQL query
	Sql *string `pulumi:"sql"`
	// Metric data aggregations
	Stat *string `pulumi:"stat"`
}

// SloObjectiveCountMetricTotalCloudwatchInput is an input type that accepts SloObjectiveCountMetricTotalCloudwatchArgs and SloObjectiveCountMetricTotalCloudwatchOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalCloudwatchInput` via:
//
//	SloObjectiveCountMetricTotalCloudwatchArgs{...}
type SloObjectiveCountMetricTotalCloudwatchInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalCloudwatchOutput() SloObjectiveCountMetricTotalCloudwatchOutput
	ToSloObjectiveCountMetricTotalCloudwatchOutputWithContext(context.Context) SloObjectiveCountMetricTotalCloudwatchOutput
}

type SloObjectiveCountMetricTotalCloudwatchArgs struct {
	// AccountID used with cross-account observability feature
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// Dimensions of the metric [Optional for metrics]
	Dimensions SloObjectiveCountMetricTotalCloudwatchDimensionArrayInput `pulumi:"dimensions"`
	// JSON query
	Json pulumi.StringPtrInput `pulumi:"json"`
	// Name of the metric [Required for metrics]
	MetricName pulumi.StringPtrInput `pulumi:"metricName"`
	// Namespace of the metric
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Region of the CloudWatch instance
	Region pulumi.StringInput `pulumi:"region"`
	// SQL query
	Sql pulumi.StringPtrInput `pulumi:"sql"`
	// Metric data aggregations
	Stat pulumi.StringPtrInput `pulumi:"stat"`
}

func (SloObjectiveCountMetricTotalCloudwatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalCloudwatch)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalCloudwatchArgs) ToSloObjectiveCountMetricTotalCloudwatchOutput() SloObjectiveCountMetricTotalCloudwatchOutput {
	return i.ToSloObjectiveCountMetricTotalCloudwatchOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalCloudwatchArgs) ToSloObjectiveCountMetricTotalCloudwatchOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalCloudwatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalCloudwatchOutput)
}

// SloObjectiveCountMetricTotalCloudwatchArrayInput is an input type that accepts SloObjectiveCountMetricTotalCloudwatchArray and SloObjectiveCountMetricTotalCloudwatchArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalCloudwatchArrayInput` via:
//
//	SloObjectiveCountMetricTotalCloudwatchArray{ SloObjectiveCountMetricTotalCloudwatchArgs{...} }
type SloObjectiveCountMetricTotalCloudwatchArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalCloudwatchArrayOutput() SloObjectiveCountMetricTotalCloudwatchArrayOutput
	ToSloObjectiveCountMetricTotalCloudwatchArrayOutputWithContext(context.Context) SloObjectiveCountMetricTotalCloudwatchArrayOutput
}

type SloObjectiveCountMetricTotalCloudwatchArray []SloObjectiveCountMetricTotalCloudwatchInput

func (SloObjectiveCountMetricTotalCloudwatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalCloudwatch)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalCloudwatchArray) ToSloObjectiveCountMetricTotalCloudwatchArrayOutput() SloObjectiveCountMetricTotalCloudwatchArrayOutput {
	return i.ToSloObjectiveCountMetricTotalCloudwatchArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalCloudwatchArray) ToSloObjectiveCountMetricTotalCloudwatchArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalCloudwatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalCloudwatchArrayOutput)
}

type SloObjectiveCountMetricTotalCloudwatchOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalCloudwatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalCloudwatch)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalCloudwatchOutput) ToSloObjectiveCountMetricTotalCloudwatchOutput() SloObjectiveCountMetricTotalCloudwatchOutput {
	return o
}

func (o SloObjectiveCountMetricTotalCloudwatchOutput) ToSloObjectiveCountMetricTotalCloudwatchOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalCloudwatchOutput {
	return o
}

// AccountID used with cross-account observability feature
func (o SloObjectiveCountMetricTotalCloudwatchOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalCloudwatch) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// Dimensions of the metric [Optional for metrics]
func (o SloObjectiveCountMetricTotalCloudwatchOutput) Dimensions() SloObjectiveCountMetricTotalCloudwatchDimensionArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalCloudwatch) []SloObjectiveCountMetricTotalCloudwatchDimension {
		return v.Dimensions
	}).(SloObjectiveCountMetricTotalCloudwatchDimensionArrayOutput)
}

// JSON query
func (o SloObjectiveCountMetricTotalCloudwatchOutput) Json() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalCloudwatch) *string { return v.Json }).(pulumi.StringPtrOutput)
}

// Name of the metric [Required for metrics]
func (o SloObjectiveCountMetricTotalCloudwatchOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalCloudwatch) *string { return v.MetricName }).(pulumi.StringPtrOutput)
}

// Namespace of the metric
func (o SloObjectiveCountMetricTotalCloudwatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalCloudwatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Region of the CloudWatch instance
func (o SloObjectiveCountMetricTotalCloudwatchOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalCloudwatch) string { return v.Region }).(pulumi.StringOutput)
}

// SQL query
func (o SloObjectiveCountMetricTotalCloudwatchOutput) Sql() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalCloudwatch) *string { return v.Sql }).(pulumi.StringPtrOutput)
}

// Metric data aggregations
func (o SloObjectiveCountMetricTotalCloudwatchOutput) Stat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalCloudwatch) *string { return v.Stat }).(pulumi.StringPtrOutput)
}

type SloObjectiveCountMetricTotalCloudwatchArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalCloudwatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalCloudwatch)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalCloudwatchArrayOutput) ToSloObjectiveCountMetricTotalCloudwatchArrayOutput() SloObjectiveCountMetricTotalCloudwatchArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalCloudwatchArrayOutput) ToSloObjectiveCountMetricTotalCloudwatchArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalCloudwatchArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalCloudwatchArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricTotalCloudwatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricTotalCloudwatch {
		return vs[0].([]SloObjectiveCountMetricTotalCloudwatch)[vs[1].(int)]
	}).(SloObjectiveCountMetricTotalCloudwatchOutput)
}

type SloObjectiveCountMetricTotalCloudwatchDimension struct {
	// The name of the previously defined alert method.
	Name string `pulumi:"name"`
	// Burn rate value.
	Value string `pulumi:"value"`
}

// SloObjectiveCountMetricTotalCloudwatchDimensionInput is an input type that accepts SloObjectiveCountMetricTotalCloudwatchDimensionArgs and SloObjectiveCountMetricTotalCloudwatchDimensionOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalCloudwatchDimensionInput` via:
//
//	SloObjectiveCountMetricTotalCloudwatchDimensionArgs{...}
type SloObjectiveCountMetricTotalCloudwatchDimensionInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalCloudwatchDimensionOutput() SloObjectiveCountMetricTotalCloudwatchDimensionOutput
	ToSloObjectiveCountMetricTotalCloudwatchDimensionOutputWithContext(context.Context) SloObjectiveCountMetricTotalCloudwatchDimensionOutput
}

type SloObjectiveCountMetricTotalCloudwatchDimensionArgs struct {
	// The name of the previously defined alert method.
	Name pulumi.StringInput `pulumi:"name"`
	// Burn rate value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (SloObjectiveCountMetricTotalCloudwatchDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalCloudwatchDimension)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalCloudwatchDimensionArgs) ToSloObjectiveCountMetricTotalCloudwatchDimensionOutput() SloObjectiveCountMetricTotalCloudwatchDimensionOutput {
	return i.ToSloObjectiveCountMetricTotalCloudwatchDimensionOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalCloudwatchDimensionArgs) ToSloObjectiveCountMetricTotalCloudwatchDimensionOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalCloudwatchDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalCloudwatchDimensionOutput)
}

// SloObjectiveCountMetricTotalCloudwatchDimensionArrayInput is an input type that accepts SloObjectiveCountMetricTotalCloudwatchDimensionArray and SloObjectiveCountMetricTotalCloudwatchDimensionArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalCloudwatchDimensionArrayInput` via:
//
//	SloObjectiveCountMetricTotalCloudwatchDimensionArray{ SloObjectiveCountMetricTotalCloudwatchDimensionArgs{...} }
type SloObjectiveCountMetricTotalCloudwatchDimensionArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalCloudwatchDimensionArrayOutput() SloObjectiveCountMetricTotalCloudwatchDimensionArrayOutput
	ToSloObjectiveCountMetricTotalCloudwatchDimensionArrayOutputWithContext(context.Context) SloObjectiveCountMetricTotalCloudwatchDimensionArrayOutput
}

type SloObjectiveCountMetricTotalCloudwatchDimensionArray []SloObjectiveCountMetricTotalCloudwatchDimensionInput

func (SloObjectiveCountMetricTotalCloudwatchDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalCloudwatchDimension)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalCloudwatchDimensionArray) ToSloObjectiveCountMetricTotalCloudwatchDimensionArrayOutput() SloObjectiveCountMetricTotalCloudwatchDimensionArrayOutput {
	return i.ToSloObjectiveCountMetricTotalCloudwatchDimensionArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalCloudwatchDimensionArray) ToSloObjectiveCountMetricTotalCloudwatchDimensionArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalCloudwatchDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalCloudwatchDimensionArrayOutput)
}

type SloObjectiveCountMetricTotalCloudwatchDimensionOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalCloudwatchDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalCloudwatchDimension)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalCloudwatchDimensionOutput) ToSloObjectiveCountMetricTotalCloudwatchDimensionOutput() SloObjectiveCountMetricTotalCloudwatchDimensionOutput {
	return o
}

func (o SloObjectiveCountMetricTotalCloudwatchDimensionOutput) ToSloObjectiveCountMetricTotalCloudwatchDimensionOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalCloudwatchDimensionOutput {
	return o
}

// The name of the previously defined alert method.
func (o SloObjectiveCountMetricTotalCloudwatchDimensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalCloudwatchDimension) string { return v.Name }).(pulumi.StringOutput)
}

// Burn rate value.
func (o SloObjectiveCountMetricTotalCloudwatchDimensionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalCloudwatchDimension) string { return v.Value }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricTotalCloudwatchDimensionArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalCloudwatchDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalCloudwatchDimension)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalCloudwatchDimensionArrayOutput) ToSloObjectiveCountMetricTotalCloudwatchDimensionArrayOutput() SloObjectiveCountMetricTotalCloudwatchDimensionArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalCloudwatchDimensionArrayOutput) ToSloObjectiveCountMetricTotalCloudwatchDimensionArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalCloudwatchDimensionArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalCloudwatchDimensionArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricTotalCloudwatchDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricTotalCloudwatchDimension {
		return vs[0].([]SloObjectiveCountMetricTotalCloudwatchDimension)[vs[1].(int)]
	}).(SloObjectiveCountMetricTotalCloudwatchDimensionOutput)
}

type SloObjectiveCountMetricTotalDatadog struct {
	// Query for the metrics
	Query string `pulumi:"query"`
}

// SloObjectiveCountMetricTotalDatadogInput is an input type that accepts SloObjectiveCountMetricTotalDatadogArgs and SloObjectiveCountMetricTotalDatadogOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalDatadogInput` via:
//
//	SloObjectiveCountMetricTotalDatadogArgs{...}
type SloObjectiveCountMetricTotalDatadogInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalDatadogOutput() SloObjectiveCountMetricTotalDatadogOutput
	ToSloObjectiveCountMetricTotalDatadogOutputWithContext(context.Context) SloObjectiveCountMetricTotalDatadogOutput
}

type SloObjectiveCountMetricTotalDatadogArgs struct {
	// Query for the metrics
	Query pulumi.StringInput `pulumi:"query"`
}

func (SloObjectiveCountMetricTotalDatadogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalDatadog)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalDatadogArgs) ToSloObjectiveCountMetricTotalDatadogOutput() SloObjectiveCountMetricTotalDatadogOutput {
	return i.ToSloObjectiveCountMetricTotalDatadogOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalDatadogArgs) ToSloObjectiveCountMetricTotalDatadogOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalDatadogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalDatadogOutput)
}

// SloObjectiveCountMetricTotalDatadogArrayInput is an input type that accepts SloObjectiveCountMetricTotalDatadogArray and SloObjectiveCountMetricTotalDatadogArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalDatadogArrayInput` via:
//
//	SloObjectiveCountMetricTotalDatadogArray{ SloObjectiveCountMetricTotalDatadogArgs{...} }
type SloObjectiveCountMetricTotalDatadogArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalDatadogArrayOutput() SloObjectiveCountMetricTotalDatadogArrayOutput
	ToSloObjectiveCountMetricTotalDatadogArrayOutputWithContext(context.Context) SloObjectiveCountMetricTotalDatadogArrayOutput
}

type SloObjectiveCountMetricTotalDatadogArray []SloObjectiveCountMetricTotalDatadogInput

func (SloObjectiveCountMetricTotalDatadogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalDatadog)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalDatadogArray) ToSloObjectiveCountMetricTotalDatadogArrayOutput() SloObjectiveCountMetricTotalDatadogArrayOutput {
	return i.ToSloObjectiveCountMetricTotalDatadogArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalDatadogArray) ToSloObjectiveCountMetricTotalDatadogArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalDatadogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalDatadogArrayOutput)
}

type SloObjectiveCountMetricTotalDatadogOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalDatadogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalDatadog)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalDatadogOutput) ToSloObjectiveCountMetricTotalDatadogOutput() SloObjectiveCountMetricTotalDatadogOutput {
	return o
}

func (o SloObjectiveCountMetricTotalDatadogOutput) ToSloObjectiveCountMetricTotalDatadogOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalDatadogOutput {
	return o
}

// Query for the metrics
func (o SloObjectiveCountMetricTotalDatadogOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalDatadog) string { return v.Query }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricTotalDatadogArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalDatadogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalDatadog)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalDatadogArrayOutput) ToSloObjectiveCountMetricTotalDatadogArrayOutput() SloObjectiveCountMetricTotalDatadogArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalDatadogArrayOutput) ToSloObjectiveCountMetricTotalDatadogArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalDatadogArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalDatadogArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricTotalDatadogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricTotalDatadog {
		return vs[0].([]SloObjectiveCountMetricTotalDatadog)[vs[1].(int)]
	}).(SloObjectiveCountMetricTotalDatadogOutput)
}

type SloObjectiveCountMetricTotalDynatrace struct {
	// Selector for the metrics
	MetricSelector string `pulumi:"metricSelector"`
}

// SloObjectiveCountMetricTotalDynatraceInput is an input type that accepts SloObjectiveCountMetricTotalDynatraceArgs and SloObjectiveCountMetricTotalDynatraceOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalDynatraceInput` via:
//
//	SloObjectiveCountMetricTotalDynatraceArgs{...}
type SloObjectiveCountMetricTotalDynatraceInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalDynatraceOutput() SloObjectiveCountMetricTotalDynatraceOutput
	ToSloObjectiveCountMetricTotalDynatraceOutputWithContext(context.Context) SloObjectiveCountMetricTotalDynatraceOutput
}

type SloObjectiveCountMetricTotalDynatraceArgs struct {
	// Selector for the metrics
	MetricSelector pulumi.StringInput `pulumi:"metricSelector"`
}

func (SloObjectiveCountMetricTotalDynatraceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalDynatrace)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalDynatraceArgs) ToSloObjectiveCountMetricTotalDynatraceOutput() SloObjectiveCountMetricTotalDynatraceOutput {
	return i.ToSloObjectiveCountMetricTotalDynatraceOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalDynatraceArgs) ToSloObjectiveCountMetricTotalDynatraceOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalDynatraceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalDynatraceOutput)
}

// SloObjectiveCountMetricTotalDynatraceArrayInput is an input type that accepts SloObjectiveCountMetricTotalDynatraceArray and SloObjectiveCountMetricTotalDynatraceArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalDynatraceArrayInput` via:
//
//	SloObjectiveCountMetricTotalDynatraceArray{ SloObjectiveCountMetricTotalDynatraceArgs{...} }
type SloObjectiveCountMetricTotalDynatraceArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalDynatraceArrayOutput() SloObjectiveCountMetricTotalDynatraceArrayOutput
	ToSloObjectiveCountMetricTotalDynatraceArrayOutputWithContext(context.Context) SloObjectiveCountMetricTotalDynatraceArrayOutput
}

type SloObjectiveCountMetricTotalDynatraceArray []SloObjectiveCountMetricTotalDynatraceInput

func (SloObjectiveCountMetricTotalDynatraceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalDynatrace)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalDynatraceArray) ToSloObjectiveCountMetricTotalDynatraceArrayOutput() SloObjectiveCountMetricTotalDynatraceArrayOutput {
	return i.ToSloObjectiveCountMetricTotalDynatraceArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalDynatraceArray) ToSloObjectiveCountMetricTotalDynatraceArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalDynatraceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalDynatraceArrayOutput)
}

type SloObjectiveCountMetricTotalDynatraceOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalDynatraceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalDynatrace)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalDynatraceOutput) ToSloObjectiveCountMetricTotalDynatraceOutput() SloObjectiveCountMetricTotalDynatraceOutput {
	return o
}

func (o SloObjectiveCountMetricTotalDynatraceOutput) ToSloObjectiveCountMetricTotalDynatraceOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalDynatraceOutput {
	return o
}

// Selector for the metrics
func (o SloObjectiveCountMetricTotalDynatraceOutput) MetricSelector() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalDynatrace) string { return v.MetricSelector }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricTotalDynatraceArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalDynatraceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalDynatrace)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalDynatraceArrayOutput) ToSloObjectiveCountMetricTotalDynatraceArrayOutput() SloObjectiveCountMetricTotalDynatraceArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalDynatraceArrayOutput) ToSloObjectiveCountMetricTotalDynatraceArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalDynatraceArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalDynatraceArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricTotalDynatraceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricTotalDynatrace {
		return vs[0].([]SloObjectiveCountMetricTotalDynatrace)[vs[1].(int)]
	}).(SloObjectiveCountMetricTotalDynatraceOutput)
}

type SloObjectiveCountMetricTotalElasticsearch struct {
	// Index of metrics we want to query
	Index string `pulumi:"index"`
	// Query for the metrics
	Query string `pulumi:"query"`
}

// SloObjectiveCountMetricTotalElasticsearchInput is an input type that accepts SloObjectiveCountMetricTotalElasticsearchArgs and SloObjectiveCountMetricTotalElasticsearchOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalElasticsearchInput` via:
//
//	SloObjectiveCountMetricTotalElasticsearchArgs{...}
type SloObjectiveCountMetricTotalElasticsearchInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalElasticsearchOutput() SloObjectiveCountMetricTotalElasticsearchOutput
	ToSloObjectiveCountMetricTotalElasticsearchOutputWithContext(context.Context) SloObjectiveCountMetricTotalElasticsearchOutput
}

type SloObjectiveCountMetricTotalElasticsearchArgs struct {
	// Index of metrics we want to query
	Index pulumi.StringInput `pulumi:"index"`
	// Query for the metrics
	Query pulumi.StringInput `pulumi:"query"`
}

func (SloObjectiveCountMetricTotalElasticsearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalElasticsearch)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalElasticsearchArgs) ToSloObjectiveCountMetricTotalElasticsearchOutput() SloObjectiveCountMetricTotalElasticsearchOutput {
	return i.ToSloObjectiveCountMetricTotalElasticsearchOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalElasticsearchArgs) ToSloObjectiveCountMetricTotalElasticsearchOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalElasticsearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalElasticsearchOutput)
}

// SloObjectiveCountMetricTotalElasticsearchArrayInput is an input type that accepts SloObjectiveCountMetricTotalElasticsearchArray and SloObjectiveCountMetricTotalElasticsearchArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalElasticsearchArrayInput` via:
//
//	SloObjectiveCountMetricTotalElasticsearchArray{ SloObjectiveCountMetricTotalElasticsearchArgs{...} }
type SloObjectiveCountMetricTotalElasticsearchArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalElasticsearchArrayOutput() SloObjectiveCountMetricTotalElasticsearchArrayOutput
	ToSloObjectiveCountMetricTotalElasticsearchArrayOutputWithContext(context.Context) SloObjectiveCountMetricTotalElasticsearchArrayOutput
}

type SloObjectiveCountMetricTotalElasticsearchArray []SloObjectiveCountMetricTotalElasticsearchInput

func (SloObjectiveCountMetricTotalElasticsearchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalElasticsearch)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalElasticsearchArray) ToSloObjectiveCountMetricTotalElasticsearchArrayOutput() SloObjectiveCountMetricTotalElasticsearchArrayOutput {
	return i.ToSloObjectiveCountMetricTotalElasticsearchArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalElasticsearchArray) ToSloObjectiveCountMetricTotalElasticsearchArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalElasticsearchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalElasticsearchArrayOutput)
}

type SloObjectiveCountMetricTotalElasticsearchOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalElasticsearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalElasticsearch)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalElasticsearchOutput) ToSloObjectiveCountMetricTotalElasticsearchOutput() SloObjectiveCountMetricTotalElasticsearchOutput {
	return o
}

func (o SloObjectiveCountMetricTotalElasticsearchOutput) ToSloObjectiveCountMetricTotalElasticsearchOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalElasticsearchOutput {
	return o
}

// Index of metrics we want to query
func (o SloObjectiveCountMetricTotalElasticsearchOutput) Index() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalElasticsearch) string { return v.Index }).(pulumi.StringOutput)
}

// Query for the metrics
func (o SloObjectiveCountMetricTotalElasticsearchOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalElasticsearch) string { return v.Query }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricTotalElasticsearchArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalElasticsearchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalElasticsearch)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalElasticsearchArrayOutput) ToSloObjectiveCountMetricTotalElasticsearchArrayOutput() SloObjectiveCountMetricTotalElasticsearchArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalElasticsearchArrayOutput) ToSloObjectiveCountMetricTotalElasticsearchArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalElasticsearchArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalElasticsearchArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricTotalElasticsearchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricTotalElasticsearch {
		return vs[0].([]SloObjectiveCountMetricTotalElasticsearch)[vs[1].(int)]
	}).(SloObjectiveCountMetricTotalElasticsearchOutput)
}

type SloObjectiveCountMetricTotalGcm struct {
	// Project ID
	ProjectId string `pulumi:"projectId"`
	// Query for the metrics
	Query string `pulumi:"query"`
}

// SloObjectiveCountMetricTotalGcmInput is an input type that accepts SloObjectiveCountMetricTotalGcmArgs and SloObjectiveCountMetricTotalGcmOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalGcmInput` via:
//
//	SloObjectiveCountMetricTotalGcmArgs{...}
type SloObjectiveCountMetricTotalGcmInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalGcmOutput() SloObjectiveCountMetricTotalGcmOutput
	ToSloObjectiveCountMetricTotalGcmOutputWithContext(context.Context) SloObjectiveCountMetricTotalGcmOutput
}

type SloObjectiveCountMetricTotalGcmArgs struct {
	// Project ID
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// Query for the metrics
	Query pulumi.StringInput `pulumi:"query"`
}

func (SloObjectiveCountMetricTotalGcmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalGcm)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalGcmArgs) ToSloObjectiveCountMetricTotalGcmOutput() SloObjectiveCountMetricTotalGcmOutput {
	return i.ToSloObjectiveCountMetricTotalGcmOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalGcmArgs) ToSloObjectiveCountMetricTotalGcmOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalGcmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalGcmOutput)
}

// SloObjectiveCountMetricTotalGcmArrayInput is an input type that accepts SloObjectiveCountMetricTotalGcmArray and SloObjectiveCountMetricTotalGcmArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalGcmArrayInput` via:
//
//	SloObjectiveCountMetricTotalGcmArray{ SloObjectiveCountMetricTotalGcmArgs{...} }
type SloObjectiveCountMetricTotalGcmArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalGcmArrayOutput() SloObjectiveCountMetricTotalGcmArrayOutput
	ToSloObjectiveCountMetricTotalGcmArrayOutputWithContext(context.Context) SloObjectiveCountMetricTotalGcmArrayOutput
}

type SloObjectiveCountMetricTotalGcmArray []SloObjectiveCountMetricTotalGcmInput

func (SloObjectiveCountMetricTotalGcmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalGcm)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalGcmArray) ToSloObjectiveCountMetricTotalGcmArrayOutput() SloObjectiveCountMetricTotalGcmArrayOutput {
	return i.ToSloObjectiveCountMetricTotalGcmArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalGcmArray) ToSloObjectiveCountMetricTotalGcmArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalGcmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalGcmArrayOutput)
}

type SloObjectiveCountMetricTotalGcmOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalGcmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalGcm)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalGcmOutput) ToSloObjectiveCountMetricTotalGcmOutput() SloObjectiveCountMetricTotalGcmOutput {
	return o
}

func (o SloObjectiveCountMetricTotalGcmOutput) ToSloObjectiveCountMetricTotalGcmOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalGcmOutput {
	return o
}

// Project ID
func (o SloObjectiveCountMetricTotalGcmOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalGcm) string { return v.ProjectId }).(pulumi.StringOutput)
}

// Query for the metrics
func (o SloObjectiveCountMetricTotalGcmOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalGcm) string { return v.Query }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricTotalGcmArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalGcmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalGcm)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalGcmArrayOutput) ToSloObjectiveCountMetricTotalGcmArrayOutput() SloObjectiveCountMetricTotalGcmArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalGcmArrayOutput) ToSloObjectiveCountMetricTotalGcmArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalGcmArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalGcmArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricTotalGcmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricTotalGcm {
		return vs[0].([]SloObjectiveCountMetricTotalGcm)[vs[1].(int)]
	}).(SloObjectiveCountMetricTotalGcmOutput)
}

type SloObjectiveCountMetricTotalGrafanaLoki struct {
	// Query for the logs
	Logql string `pulumi:"logql"`
}

// SloObjectiveCountMetricTotalGrafanaLokiInput is an input type that accepts SloObjectiveCountMetricTotalGrafanaLokiArgs and SloObjectiveCountMetricTotalGrafanaLokiOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalGrafanaLokiInput` via:
//
//	SloObjectiveCountMetricTotalGrafanaLokiArgs{...}
type SloObjectiveCountMetricTotalGrafanaLokiInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalGrafanaLokiOutput() SloObjectiveCountMetricTotalGrafanaLokiOutput
	ToSloObjectiveCountMetricTotalGrafanaLokiOutputWithContext(context.Context) SloObjectiveCountMetricTotalGrafanaLokiOutput
}

type SloObjectiveCountMetricTotalGrafanaLokiArgs struct {
	// Query for the logs
	Logql pulumi.StringInput `pulumi:"logql"`
}

func (SloObjectiveCountMetricTotalGrafanaLokiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalGrafanaLoki)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalGrafanaLokiArgs) ToSloObjectiveCountMetricTotalGrafanaLokiOutput() SloObjectiveCountMetricTotalGrafanaLokiOutput {
	return i.ToSloObjectiveCountMetricTotalGrafanaLokiOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalGrafanaLokiArgs) ToSloObjectiveCountMetricTotalGrafanaLokiOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalGrafanaLokiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalGrafanaLokiOutput)
}

// SloObjectiveCountMetricTotalGrafanaLokiArrayInput is an input type that accepts SloObjectiveCountMetricTotalGrafanaLokiArray and SloObjectiveCountMetricTotalGrafanaLokiArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalGrafanaLokiArrayInput` via:
//
//	SloObjectiveCountMetricTotalGrafanaLokiArray{ SloObjectiveCountMetricTotalGrafanaLokiArgs{...} }
type SloObjectiveCountMetricTotalGrafanaLokiArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalGrafanaLokiArrayOutput() SloObjectiveCountMetricTotalGrafanaLokiArrayOutput
	ToSloObjectiveCountMetricTotalGrafanaLokiArrayOutputWithContext(context.Context) SloObjectiveCountMetricTotalGrafanaLokiArrayOutput
}

type SloObjectiveCountMetricTotalGrafanaLokiArray []SloObjectiveCountMetricTotalGrafanaLokiInput

func (SloObjectiveCountMetricTotalGrafanaLokiArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalGrafanaLoki)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalGrafanaLokiArray) ToSloObjectiveCountMetricTotalGrafanaLokiArrayOutput() SloObjectiveCountMetricTotalGrafanaLokiArrayOutput {
	return i.ToSloObjectiveCountMetricTotalGrafanaLokiArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalGrafanaLokiArray) ToSloObjectiveCountMetricTotalGrafanaLokiArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalGrafanaLokiArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalGrafanaLokiArrayOutput)
}

type SloObjectiveCountMetricTotalGrafanaLokiOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalGrafanaLokiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalGrafanaLoki)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalGrafanaLokiOutput) ToSloObjectiveCountMetricTotalGrafanaLokiOutput() SloObjectiveCountMetricTotalGrafanaLokiOutput {
	return o
}

func (o SloObjectiveCountMetricTotalGrafanaLokiOutput) ToSloObjectiveCountMetricTotalGrafanaLokiOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalGrafanaLokiOutput {
	return o
}

// Query for the logs
func (o SloObjectiveCountMetricTotalGrafanaLokiOutput) Logql() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalGrafanaLoki) string { return v.Logql }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricTotalGrafanaLokiArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalGrafanaLokiArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalGrafanaLoki)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalGrafanaLokiArrayOutput) ToSloObjectiveCountMetricTotalGrafanaLokiArrayOutput() SloObjectiveCountMetricTotalGrafanaLokiArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalGrafanaLokiArrayOutput) ToSloObjectiveCountMetricTotalGrafanaLokiArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalGrafanaLokiArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalGrafanaLokiArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricTotalGrafanaLokiOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricTotalGrafanaLoki {
		return vs[0].([]SloObjectiveCountMetricTotalGrafanaLoki)[vs[1].(int)]
	}).(SloObjectiveCountMetricTotalGrafanaLokiOutput)
}

type SloObjectiveCountMetricTotalGraphite struct {
	// Path to the metrics
	MetricPath string `pulumi:"metricPath"`
}

// SloObjectiveCountMetricTotalGraphiteInput is an input type that accepts SloObjectiveCountMetricTotalGraphiteArgs and SloObjectiveCountMetricTotalGraphiteOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalGraphiteInput` via:
//
//	SloObjectiveCountMetricTotalGraphiteArgs{...}
type SloObjectiveCountMetricTotalGraphiteInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalGraphiteOutput() SloObjectiveCountMetricTotalGraphiteOutput
	ToSloObjectiveCountMetricTotalGraphiteOutputWithContext(context.Context) SloObjectiveCountMetricTotalGraphiteOutput
}

type SloObjectiveCountMetricTotalGraphiteArgs struct {
	// Path to the metrics
	MetricPath pulumi.StringInput `pulumi:"metricPath"`
}

func (SloObjectiveCountMetricTotalGraphiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalGraphite)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalGraphiteArgs) ToSloObjectiveCountMetricTotalGraphiteOutput() SloObjectiveCountMetricTotalGraphiteOutput {
	return i.ToSloObjectiveCountMetricTotalGraphiteOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalGraphiteArgs) ToSloObjectiveCountMetricTotalGraphiteOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalGraphiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalGraphiteOutput)
}

// SloObjectiveCountMetricTotalGraphiteArrayInput is an input type that accepts SloObjectiveCountMetricTotalGraphiteArray and SloObjectiveCountMetricTotalGraphiteArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalGraphiteArrayInput` via:
//
//	SloObjectiveCountMetricTotalGraphiteArray{ SloObjectiveCountMetricTotalGraphiteArgs{...} }
type SloObjectiveCountMetricTotalGraphiteArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalGraphiteArrayOutput() SloObjectiveCountMetricTotalGraphiteArrayOutput
	ToSloObjectiveCountMetricTotalGraphiteArrayOutputWithContext(context.Context) SloObjectiveCountMetricTotalGraphiteArrayOutput
}

type SloObjectiveCountMetricTotalGraphiteArray []SloObjectiveCountMetricTotalGraphiteInput

func (SloObjectiveCountMetricTotalGraphiteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalGraphite)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalGraphiteArray) ToSloObjectiveCountMetricTotalGraphiteArrayOutput() SloObjectiveCountMetricTotalGraphiteArrayOutput {
	return i.ToSloObjectiveCountMetricTotalGraphiteArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalGraphiteArray) ToSloObjectiveCountMetricTotalGraphiteArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalGraphiteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalGraphiteArrayOutput)
}

type SloObjectiveCountMetricTotalGraphiteOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalGraphiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalGraphite)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalGraphiteOutput) ToSloObjectiveCountMetricTotalGraphiteOutput() SloObjectiveCountMetricTotalGraphiteOutput {
	return o
}

func (o SloObjectiveCountMetricTotalGraphiteOutput) ToSloObjectiveCountMetricTotalGraphiteOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalGraphiteOutput {
	return o
}

// Path to the metrics
func (o SloObjectiveCountMetricTotalGraphiteOutput) MetricPath() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalGraphite) string { return v.MetricPath }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricTotalGraphiteArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalGraphiteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalGraphite)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalGraphiteArrayOutput) ToSloObjectiveCountMetricTotalGraphiteArrayOutput() SloObjectiveCountMetricTotalGraphiteArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalGraphiteArrayOutput) ToSloObjectiveCountMetricTotalGraphiteArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalGraphiteArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalGraphiteArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricTotalGraphiteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricTotalGraphite {
		return vs[0].([]SloObjectiveCountMetricTotalGraphite)[vs[1].(int)]
	}).(SloObjectiveCountMetricTotalGraphiteOutput)
}

type SloObjectiveCountMetricTotalHoneycomb struct {
	// Column name - required for all calculation types besides 'CONCURRENCY' and 'COUNT'
	Attribute *string `pulumi:"attribute"`
	// Calculation type
	Calculation string `pulumi:"calculation"`
}

// SloObjectiveCountMetricTotalHoneycombInput is an input type that accepts SloObjectiveCountMetricTotalHoneycombArgs and SloObjectiveCountMetricTotalHoneycombOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalHoneycombInput` via:
//
//	SloObjectiveCountMetricTotalHoneycombArgs{...}
type SloObjectiveCountMetricTotalHoneycombInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalHoneycombOutput() SloObjectiveCountMetricTotalHoneycombOutput
	ToSloObjectiveCountMetricTotalHoneycombOutputWithContext(context.Context) SloObjectiveCountMetricTotalHoneycombOutput
}

type SloObjectiveCountMetricTotalHoneycombArgs struct {
	// Column name - required for all calculation types besides 'CONCURRENCY' and 'COUNT'
	Attribute pulumi.StringPtrInput `pulumi:"attribute"`
	// Calculation type
	Calculation pulumi.StringInput `pulumi:"calculation"`
}

func (SloObjectiveCountMetricTotalHoneycombArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalHoneycomb)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalHoneycombArgs) ToSloObjectiveCountMetricTotalHoneycombOutput() SloObjectiveCountMetricTotalHoneycombOutput {
	return i.ToSloObjectiveCountMetricTotalHoneycombOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalHoneycombArgs) ToSloObjectiveCountMetricTotalHoneycombOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalHoneycombOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalHoneycombOutput)
}

// SloObjectiveCountMetricTotalHoneycombArrayInput is an input type that accepts SloObjectiveCountMetricTotalHoneycombArray and SloObjectiveCountMetricTotalHoneycombArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalHoneycombArrayInput` via:
//
//	SloObjectiveCountMetricTotalHoneycombArray{ SloObjectiveCountMetricTotalHoneycombArgs{...} }
type SloObjectiveCountMetricTotalHoneycombArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalHoneycombArrayOutput() SloObjectiveCountMetricTotalHoneycombArrayOutput
	ToSloObjectiveCountMetricTotalHoneycombArrayOutputWithContext(context.Context) SloObjectiveCountMetricTotalHoneycombArrayOutput
}

type SloObjectiveCountMetricTotalHoneycombArray []SloObjectiveCountMetricTotalHoneycombInput

func (SloObjectiveCountMetricTotalHoneycombArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalHoneycomb)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalHoneycombArray) ToSloObjectiveCountMetricTotalHoneycombArrayOutput() SloObjectiveCountMetricTotalHoneycombArrayOutput {
	return i.ToSloObjectiveCountMetricTotalHoneycombArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalHoneycombArray) ToSloObjectiveCountMetricTotalHoneycombArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalHoneycombArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalHoneycombArrayOutput)
}

type SloObjectiveCountMetricTotalHoneycombOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalHoneycombOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalHoneycomb)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalHoneycombOutput) ToSloObjectiveCountMetricTotalHoneycombOutput() SloObjectiveCountMetricTotalHoneycombOutput {
	return o
}

func (o SloObjectiveCountMetricTotalHoneycombOutput) ToSloObjectiveCountMetricTotalHoneycombOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalHoneycombOutput {
	return o
}

// Column name - required for all calculation types besides 'CONCURRENCY' and 'COUNT'
func (o SloObjectiveCountMetricTotalHoneycombOutput) Attribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalHoneycomb) *string { return v.Attribute }).(pulumi.StringPtrOutput)
}

// Calculation type
func (o SloObjectiveCountMetricTotalHoneycombOutput) Calculation() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalHoneycomb) string { return v.Calculation }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricTotalHoneycombArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalHoneycombArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalHoneycomb)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalHoneycombArrayOutput) ToSloObjectiveCountMetricTotalHoneycombArrayOutput() SloObjectiveCountMetricTotalHoneycombArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalHoneycombArrayOutput) ToSloObjectiveCountMetricTotalHoneycombArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalHoneycombArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalHoneycombArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricTotalHoneycombOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricTotalHoneycomb {
		return vs[0].([]SloObjectiveCountMetricTotalHoneycomb)[vs[1].(int)]
	}).(SloObjectiveCountMetricTotalHoneycombOutput)
}

type SloObjectiveCountMetricTotalInfluxdb struct {
	// Query for the metrics
	Query string `pulumi:"query"`
}

// SloObjectiveCountMetricTotalInfluxdbInput is an input type that accepts SloObjectiveCountMetricTotalInfluxdbArgs and SloObjectiveCountMetricTotalInfluxdbOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalInfluxdbInput` via:
//
//	SloObjectiveCountMetricTotalInfluxdbArgs{...}
type SloObjectiveCountMetricTotalInfluxdbInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalInfluxdbOutput() SloObjectiveCountMetricTotalInfluxdbOutput
	ToSloObjectiveCountMetricTotalInfluxdbOutputWithContext(context.Context) SloObjectiveCountMetricTotalInfluxdbOutput
}

type SloObjectiveCountMetricTotalInfluxdbArgs struct {
	// Query for the metrics
	Query pulumi.StringInput `pulumi:"query"`
}

func (SloObjectiveCountMetricTotalInfluxdbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalInfluxdb)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalInfluxdbArgs) ToSloObjectiveCountMetricTotalInfluxdbOutput() SloObjectiveCountMetricTotalInfluxdbOutput {
	return i.ToSloObjectiveCountMetricTotalInfluxdbOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalInfluxdbArgs) ToSloObjectiveCountMetricTotalInfluxdbOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalInfluxdbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalInfluxdbOutput)
}

// SloObjectiveCountMetricTotalInfluxdbArrayInput is an input type that accepts SloObjectiveCountMetricTotalInfluxdbArray and SloObjectiveCountMetricTotalInfluxdbArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalInfluxdbArrayInput` via:
//
//	SloObjectiveCountMetricTotalInfluxdbArray{ SloObjectiveCountMetricTotalInfluxdbArgs{...} }
type SloObjectiveCountMetricTotalInfluxdbArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalInfluxdbArrayOutput() SloObjectiveCountMetricTotalInfluxdbArrayOutput
	ToSloObjectiveCountMetricTotalInfluxdbArrayOutputWithContext(context.Context) SloObjectiveCountMetricTotalInfluxdbArrayOutput
}

type SloObjectiveCountMetricTotalInfluxdbArray []SloObjectiveCountMetricTotalInfluxdbInput

func (SloObjectiveCountMetricTotalInfluxdbArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalInfluxdb)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalInfluxdbArray) ToSloObjectiveCountMetricTotalInfluxdbArrayOutput() SloObjectiveCountMetricTotalInfluxdbArrayOutput {
	return i.ToSloObjectiveCountMetricTotalInfluxdbArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalInfluxdbArray) ToSloObjectiveCountMetricTotalInfluxdbArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalInfluxdbArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalInfluxdbArrayOutput)
}

type SloObjectiveCountMetricTotalInfluxdbOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalInfluxdbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalInfluxdb)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalInfluxdbOutput) ToSloObjectiveCountMetricTotalInfluxdbOutput() SloObjectiveCountMetricTotalInfluxdbOutput {
	return o
}

func (o SloObjectiveCountMetricTotalInfluxdbOutput) ToSloObjectiveCountMetricTotalInfluxdbOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalInfluxdbOutput {
	return o
}

// Query for the metrics
func (o SloObjectiveCountMetricTotalInfluxdbOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalInfluxdb) string { return v.Query }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricTotalInfluxdbArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalInfluxdbArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalInfluxdb)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalInfluxdbArrayOutput) ToSloObjectiveCountMetricTotalInfluxdbArrayOutput() SloObjectiveCountMetricTotalInfluxdbArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalInfluxdbArrayOutput) ToSloObjectiveCountMetricTotalInfluxdbArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalInfluxdbArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalInfluxdbArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricTotalInfluxdbOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricTotalInfluxdb {
		return vs[0].([]SloObjectiveCountMetricTotalInfluxdb)[vs[1].(int)]
	}).(SloObjectiveCountMetricTotalInfluxdbOutput)
}

type SloObjectiveCountMetricTotalInstana struct {
	// Infrastructure metric type
	Applications []SloObjectiveCountMetricTotalInstanaApplication `pulumi:"applications"`
	// Infrastructure metric type
	Infrastructures []SloObjectiveCountMetricTotalInstanaInfrastructure `pulumi:"infrastructures"`
	// Instana metric type 'application' or 'infrastructure'
	MetricType string `pulumi:"metricType"`
}

// SloObjectiveCountMetricTotalInstanaInput is an input type that accepts SloObjectiveCountMetricTotalInstanaArgs and SloObjectiveCountMetricTotalInstanaOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalInstanaInput` via:
//
//	SloObjectiveCountMetricTotalInstanaArgs{...}
type SloObjectiveCountMetricTotalInstanaInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalInstanaOutput() SloObjectiveCountMetricTotalInstanaOutput
	ToSloObjectiveCountMetricTotalInstanaOutputWithContext(context.Context) SloObjectiveCountMetricTotalInstanaOutput
}

type SloObjectiveCountMetricTotalInstanaArgs struct {
	// Infrastructure metric type
	Applications SloObjectiveCountMetricTotalInstanaApplicationArrayInput `pulumi:"applications"`
	// Infrastructure metric type
	Infrastructures SloObjectiveCountMetricTotalInstanaInfrastructureArrayInput `pulumi:"infrastructures"`
	// Instana metric type 'application' or 'infrastructure'
	MetricType pulumi.StringInput `pulumi:"metricType"`
}

func (SloObjectiveCountMetricTotalInstanaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalInstana)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalInstanaArgs) ToSloObjectiveCountMetricTotalInstanaOutput() SloObjectiveCountMetricTotalInstanaOutput {
	return i.ToSloObjectiveCountMetricTotalInstanaOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalInstanaArgs) ToSloObjectiveCountMetricTotalInstanaOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalInstanaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalInstanaOutput)
}

// SloObjectiveCountMetricTotalInstanaArrayInput is an input type that accepts SloObjectiveCountMetricTotalInstanaArray and SloObjectiveCountMetricTotalInstanaArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalInstanaArrayInput` via:
//
//	SloObjectiveCountMetricTotalInstanaArray{ SloObjectiveCountMetricTotalInstanaArgs{...} }
type SloObjectiveCountMetricTotalInstanaArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalInstanaArrayOutput() SloObjectiveCountMetricTotalInstanaArrayOutput
	ToSloObjectiveCountMetricTotalInstanaArrayOutputWithContext(context.Context) SloObjectiveCountMetricTotalInstanaArrayOutput
}

type SloObjectiveCountMetricTotalInstanaArray []SloObjectiveCountMetricTotalInstanaInput

func (SloObjectiveCountMetricTotalInstanaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalInstana)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalInstanaArray) ToSloObjectiveCountMetricTotalInstanaArrayOutput() SloObjectiveCountMetricTotalInstanaArrayOutput {
	return i.ToSloObjectiveCountMetricTotalInstanaArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalInstanaArray) ToSloObjectiveCountMetricTotalInstanaArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalInstanaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalInstanaArrayOutput)
}

type SloObjectiveCountMetricTotalInstanaOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalInstanaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalInstana)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalInstanaOutput) ToSloObjectiveCountMetricTotalInstanaOutput() SloObjectiveCountMetricTotalInstanaOutput {
	return o
}

func (o SloObjectiveCountMetricTotalInstanaOutput) ToSloObjectiveCountMetricTotalInstanaOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalInstanaOutput {
	return o
}

// Infrastructure metric type
func (o SloObjectiveCountMetricTotalInstanaOutput) Applications() SloObjectiveCountMetricTotalInstanaApplicationArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalInstana) []SloObjectiveCountMetricTotalInstanaApplication {
		return v.Applications
	}).(SloObjectiveCountMetricTotalInstanaApplicationArrayOutput)
}

// Infrastructure metric type
func (o SloObjectiveCountMetricTotalInstanaOutput) Infrastructures() SloObjectiveCountMetricTotalInstanaInfrastructureArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalInstana) []SloObjectiveCountMetricTotalInstanaInfrastructure {
		return v.Infrastructures
	}).(SloObjectiveCountMetricTotalInstanaInfrastructureArrayOutput)
}

// Instana metric type 'application' or 'infrastructure'
func (o SloObjectiveCountMetricTotalInstanaOutput) MetricType() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalInstana) string { return v.MetricType }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricTotalInstanaArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalInstanaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalInstana)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalInstanaArrayOutput) ToSloObjectiveCountMetricTotalInstanaArrayOutput() SloObjectiveCountMetricTotalInstanaArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalInstanaArrayOutput) ToSloObjectiveCountMetricTotalInstanaArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalInstanaArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalInstanaArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricTotalInstanaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricTotalInstana {
		return vs[0].([]SloObjectiveCountMetricTotalInstana)[vs[1].(int)]
	}).(SloObjectiveCountMetricTotalInstanaOutput)
}

type SloObjectiveCountMetricTotalInstanaApplication struct {
	// Aggregation type [Required for metrics]
	Aggregation string `pulumi:"aggregation"`
	// API query user passes in a JSON format
	ApiQuery string `pulumi:"apiQuery"`
	// Group by method
	GroupBies []SloObjectiveCountMetricTotalInstanaApplicationGroupBy `pulumi:"groupBies"`
	// Include internal
	IncludeInternal *bool `pulumi:"includeInternal"`
	// Include synthetic
	IncludeSynthetic *bool `pulumi:"includeSynthetic"`
	// Metric ID one of 'calls', 'erroneousCalls', 'errors', 'latency'
	MetricId string `pulumi:"metricId"`
}

// SloObjectiveCountMetricTotalInstanaApplicationInput is an input type that accepts SloObjectiveCountMetricTotalInstanaApplicationArgs and SloObjectiveCountMetricTotalInstanaApplicationOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalInstanaApplicationInput` via:
//
//	SloObjectiveCountMetricTotalInstanaApplicationArgs{...}
type SloObjectiveCountMetricTotalInstanaApplicationInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalInstanaApplicationOutput() SloObjectiveCountMetricTotalInstanaApplicationOutput
	ToSloObjectiveCountMetricTotalInstanaApplicationOutputWithContext(context.Context) SloObjectiveCountMetricTotalInstanaApplicationOutput
}

type SloObjectiveCountMetricTotalInstanaApplicationArgs struct {
	// Aggregation type [Required for metrics]
	Aggregation pulumi.StringInput `pulumi:"aggregation"`
	// API query user passes in a JSON format
	ApiQuery pulumi.StringInput `pulumi:"apiQuery"`
	// Group by method
	GroupBies SloObjectiveCountMetricTotalInstanaApplicationGroupByArrayInput `pulumi:"groupBies"`
	// Include internal
	IncludeInternal pulumi.BoolPtrInput `pulumi:"includeInternal"`
	// Include synthetic
	IncludeSynthetic pulumi.BoolPtrInput `pulumi:"includeSynthetic"`
	// Metric ID one of 'calls', 'erroneousCalls', 'errors', 'latency'
	MetricId pulumi.StringInput `pulumi:"metricId"`
}

func (SloObjectiveCountMetricTotalInstanaApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalInstanaApplication)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalInstanaApplicationArgs) ToSloObjectiveCountMetricTotalInstanaApplicationOutput() SloObjectiveCountMetricTotalInstanaApplicationOutput {
	return i.ToSloObjectiveCountMetricTotalInstanaApplicationOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalInstanaApplicationArgs) ToSloObjectiveCountMetricTotalInstanaApplicationOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalInstanaApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalInstanaApplicationOutput)
}

// SloObjectiveCountMetricTotalInstanaApplicationArrayInput is an input type that accepts SloObjectiveCountMetricTotalInstanaApplicationArray and SloObjectiveCountMetricTotalInstanaApplicationArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalInstanaApplicationArrayInput` via:
//
//	SloObjectiveCountMetricTotalInstanaApplicationArray{ SloObjectiveCountMetricTotalInstanaApplicationArgs{...} }
type SloObjectiveCountMetricTotalInstanaApplicationArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalInstanaApplicationArrayOutput() SloObjectiveCountMetricTotalInstanaApplicationArrayOutput
	ToSloObjectiveCountMetricTotalInstanaApplicationArrayOutputWithContext(context.Context) SloObjectiveCountMetricTotalInstanaApplicationArrayOutput
}

type SloObjectiveCountMetricTotalInstanaApplicationArray []SloObjectiveCountMetricTotalInstanaApplicationInput

func (SloObjectiveCountMetricTotalInstanaApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalInstanaApplication)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalInstanaApplicationArray) ToSloObjectiveCountMetricTotalInstanaApplicationArrayOutput() SloObjectiveCountMetricTotalInstanaApplicationArrayOutput {
	return i.ToSloObjectiveCountMetricTotalInstanaApplicationArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalInstanaApplicationArray) ToSloObjectiveCountMetricTotalInstanaApplicationArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalInstanaApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalInstanaApplicationArrayOutput)
}

type SloObjectiveCountMetricTotalInstanaApplicationOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalInstanaApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalInstanaApplication)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalInstanaApplicationOutput) ToSloObjectiveCountMetricTotalInstanaApplicationOutput() SloObjectiveCountMetricTotalInstanaApplicationOutput {
	return o
}

func (o SloObjectiveCountMetricTotalInstanaApplicationOutput) ToSloObjectiveCountMetricTotalInstanaApplicationOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalInstanaApplicationOutput {
	return o
}

// Aggregation type [Required for metrics]
func (o SloObjectiveCountMetricTotalInstanaApplicationOutput) Aggregation() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalInstanaApplication) string { return v.Aggregation }).(pulumi.StringOutput)
}

// API query user passes in a JSON format
func (o SloObjectiveCountMetricTotalInstanaApplicationOutput) ApiQuery() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalInstanaApplication) string { return v.ApiQuery }).(pulumi.StringOutput)
}

// Group by method
func (o SloObjectiveCountMetricTotalInstanaApplicationOutput) GroupBies() SloObjectiveCountMetricTotalInstanaApplicationGroupByArrayOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalInstanaApplication) []SloObjectiveCountMetricTotalInstanaApplicationGroupBy {
		return v.GroupBies
	}).(SloObjectiveCountMetricTotalInstanaApplicationGroupByArrayOutput)
}

// Include internal
func (o SloObjectiveCountMetricTotalInstanaApplicationOutput) IncludeInternal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalInstanaApplication) *bool { return v.IncludeInternal }).(pulumi.BoolPtrOutput)
}

// Include synthetic
func (o SloObjectiveCountMetricTotalInstanaApplicationOutput) IncludeSynthetic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalInstanaApplication) *bool { return v.IncludeSynthetic }).(pulumi.BoolPtrOutput)
}

// Metric ID one of 'calls', 'erroneousCalls', 'errors', 'latency'
func (o SloObjectiveCountMetricTotalInstanaApplicationOutput) MetricId() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalInstanaApplication) string { return v.MetricId }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricTotalInstanaApplicationArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalInstanaApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalInstanaApplication)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalInstanaApplicationArrayOutput) ToSloObjectiveCountMetricTotalInstanaApplicationArrayOutput() SloObjectiveCountMetricTotalInstanaApplicationArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalInstanaApplicationArrayOutput) ToSloObjectiveCountMetricTotalInstanaApplicationArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalInstanaApplicationArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalInstanaApplicationArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricTotalInstanaApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricTotalInstanaApplication {
		return vs[0].([]SloObjectiveCountMetricTotalInstanaApplication)[vs[1].(int)]
	}).(SloObjectiveCountMetricTotalInstanaApplicationOutput)
}

type SloObjectiveCountMetricTotalInstanaApplicationGroupBy struct {
	// Group by tag
	Tag string `pulumi:"tag"`
	// Tag entity - one of 'DESTINATION', 'SOURCE', 'NOT_APPLICABLE'
	TagEntity         string  `pulumi:"tagEntity"`
	TagSecondLevelKey *string `pulumi:"tagSecondLevelKey"`
}

// SloObjectiveCountMetricTotalInstanaApplicationGroupByInput is an input type that accepts SloObjectiveCountMetricTotalInstanaApplicationGroupByArgs and SloObjectiveCountMetricTotalInstanaApplicationGroupByOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalInstanaApplicationGroupByInput` via:
//
//	SloObjectiveCountMetricTotalInstanaApplicationGroupByArgs{...}
type SloObjectiveCountMetricTotalInstanaApplicationGroupByInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalInstanaApplicationGroupByOutput() SloObjectiveCountMetricTotalInstanaApplicationGroupByOutput
	ToSloObjectiveCountMetricTotalInstanaApplicationGroupByOutputWithContext(context.Context) SloObjectiveCountMetricTotalInstanaApplicationGroupByOutput
}

type SloObjectiveCountMetricTotalInstanaApplicationGroupByArgs struct {
	// Group by tag
	Tag pulumi.StringInput `pulumi:"tag"`
	// Tag entity - one of 'DESTINATION', 'SOURCE', 'NOT_APPLICABLE'
	TagEntity         pulumi.StringInput    `pulumi:"tagEntity"`
	TagSecondLevelKey pulumi.StringPtrInput `pulumi:"tagSecondLevelKey"`
}

func (SloObjectiveCountMetricTotalInstanaApplicationGroupByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalInstanaApplicationGroupBy)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalInstanaApplicationGroupByArgs) ToSloObjectiveCountMetricTotalInstanaApplicationGroupByOutput() SloObjectiveCountMetricTotalInstanaApplicationGroupByOutput {
	return i.ToSloObjectiveCountMetricTotalInstanaApplicationGroupByOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalInstanaApplicationGroupByArgs) ToSloObjectiveCountMetricTotalInstanaApplicationGroupByOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalInstanaApplicationGroupByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalInstanaApplicationGroupByOutput)
}

// SloObjectiveCountMetricTotalInstanaApplicationGroupByArrayInput is an input type that accepts SloObjectiveCountMetricTotalInstanaApplicationGroupByArray and SloObjectiveCountMetricTotalInstanaApplicationGroupByArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalInstanaApplicationGroupByArrayInput` via:
//
//	SloObjectiveCountMetricTotalInstanaApplicationGroupByArray{ SloObjectiveCountMetricTotalInstanaApplicationGroupByArgs{...} }
type SloObjectiveCountMetricTotalInstanaApplicationGroupByArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalInstanaApplicationGroupByArrayOutput() SloObjectiveCountMetricTotalInstanaApplicationGroupByArrayOutput
	ToSloObjectiveCountMetricTotalInstanaApplicationGroupByArrayOutputWithContext(context.Context) SloObjectiveCountMetricTotalInstanaApplicationGroupByArrayOutput
}

type SloObjectiveCountMetricTotalInstanaApplicationGroupByArray []SloObjectiveCountMetricTotalInstanaApplicationGroupByInput

func (SloObjectiveCountMetricTotalInstanaApplicationGroupByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalInstanaApplicationGroupBy)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalInstanaApplicationGroupByArray) ToSloObjectiveCountMetricTotalInstanaApplicationGroupByArrayOutput() SloObjectiveCountMetricTotalInstanaApplicationGroupByArrayOutput {
	return i.ToSloObjectiveCountMetricTotalInstanaApplicationGroupByArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalInstanaApplicationGroupByArray) ToSloObjectiveCountMetricTotalInstanaApplicationGroupByArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalInstanaApplicationGroupByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalInstanaApplicationGroupByArrayOutput)
}

type SloObjectiveCountMetricTotalInstanaApplicationGroupByOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalInstanaApplicationGroupByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalInstanaApplicationGroupBy)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalInstanaApplicationGroupByOutput) ToSloObjectiveCountMetricTotalInstanaApplicationGroupByOutput() SloObjectiveCountMetricTotalInstanaApplicationGroupByOutput {
	return o
}

func (o SloObjectiveCountMetricTotalInstanaApplicationGroupByOutput) ToSloObjectiveCountMetricTotalInstanaApplicationGroupByOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalInstanaApplicationGroupByOutput {
	return o
}

// Group by tag
func (o SloObjectiveCountMetricTotalInstanaApplicationGroupByOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalInstanaApplicationGroupBy) string { return v.Tag }).(pulumi.StringOutput)
}

// Tag entity - one of 'DESTINATION', 'SOURCE', 'NOT_APPLICABLE'
func (o SloObjectiveCountMetricTotalInstanaApplicationGroupByOutput) TagEntity() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalInstanaApplicationGroupBy) string { return v.TagEntity }).(pulumi.StringOutput)
}

func (o SloObjectiveCountMetricTotalInstanaApplicationGroupByOutput) TagSecondLevelKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalInstanaApplicationGroupBy) *string { return v.TagSecondLevelKey }).(pulumi.StringPtrOutput)
}

type SloObjectiveCountMetricTotalInstanaApplicationGroupByArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalInstanaApplicationGroupByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalInstanaApplicationGroupBy)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalInstanaApplicationGroupByArrayOutput) ToSloObjectiveCountMetricTotalInstanaApplicationGroupByArrayOutput() SloObjectiveCountMetricTotalInstanaApplicationGroupByArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalInstanaApplicationGroupByArrayOutput) ToSloObjectiveCountMetricTotalInstanaApplicationGroupByArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalInstanaApplicationGroupByArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalInstanaApplicationGroupByArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricTotalInstanaApplicationGroupByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricTotalInstanaApplicationGroupBy {
		return vs[0].([]SloObjectiveCountMetricTotalInstanaApplicationGroupBy)[vs[1].(int)]
	}).(SloObjectiveCountMetricTotalInstanaApplicationGroupByOutput)
}

type SloObjectiveCountMetricTotalInstanaInfrastructure struct {
	// Metric ID one of 'calls', 'erroneousCalls', 'errors', 'latency'
	MetricId string `pulumi:"metricId"`
	// Metric retrieval method 'query' or 'snapshot'
	MetricRetrievalMethod string `pulumi:"metricRetrievalMethod"`
	// Plugin ID
	PluginId string `pulumi:"pluginId"`
	// Query for the metrics
	Query *string `pulumi:"query"`
	// Snapshot ID
	SnapshotId *string `pulumi:"snapshotId"`
}

// SloObjectiveCountMetricTotalInstanaInfrastructureInput is an input type that accepts SloObjectiveCountMetricTotalInstanaInfrastructureArgs and SloObjectiveCountMetricTotalInstanaInfrastructureOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalInstanaInfrastructureInput` via:
//
//	SloObjectiveCountMetricTotalInstanaInfrastructureArgs{...}
type SloObjectiveCountMetricTotalInstanaInfrastructureInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalInstanaInfrastructureOutput() SloObjectiveCountMetricTotalInstanaInfrastructureOutput
	ToSloObjectiveCountMetricTotalInstanaInfrastructureOutputWithContext(context.Context) SloObjectiveCountMetricTotalInstanaInfrastructureOutput
}

type SloObjectiveCountMetricTotalInstanaInfrastructureArgs struct {
	// Metric ID one of 'calls', 'erroneousCalls', 'errors', 'latency'
	MetricId pulumi.StringInput `pulumi:"metricId"`
	// Metric retrieval method 'query' or 'snapshot'
	MetricRetrievalMethod pulumi.StringInput `pulumi:"metricRetrievalMethod"`
	// Plugin ID
	PluginId pulumi.StringInput `pulumi:"pluginId"`
	// Query for the metrics
	Query pulumi.StringPtrInput `pulumi:"query"`
	// Snapshot ID
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
}

func (SloObjectiveCountMetricTotalInstanaInfrastructureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalInstanaInfrastructure)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalInstanaInfrastructureArgs) ToSloObjectiveCountMetricTotalInstanaInfrastructureOutput() SloObjectiveCountMetricTotalInstanaInfrastructureOutput {
	return i.ToSloObjectiveCountMetricTotalInstanaInfrastructureOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalInstanaInfrastructureArgs) ToSloObjectiveCountMetricTotalInstanaInfrastructureOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalInstanaInfrastructureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalInstanaInfrastructureOutput)
}

// SloObjectiveCountMetricTotalInstanaInfrastructureArrayInput is an input type that accepts SloObjectiveCountMetricTotalInstanaInfrastructureArray and SloObjectiveCountMetricTotalInstanaInfrastructureArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalInstanaInfrastructureArrayInput` via:
//
//	SloObjectiveCountMetricTotalInstanaInfrastructureArray{ SloObjectiveCountMetricTotalInstanaInfrastructureArgs{...} }
type SloObjectiveCountMetricTotalInstanaInfrastructureArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalInstanaInfrastructureArrayOutput() SloObjectiveCountMetricTotalInstanaInfrastructureArrayOutput
	ToSloObjectiveCountMetricTotalInstanaInfrastructureArrayOutputWithContext(context.Context) SloObjectiveCountMetricTotalInstanaInfrastructureArrayOutput
}

type SloObjectiveCountMetricTotalInstanaInfrastructureArray []SloObjectiveCountMetricTotalInstanaInfrastructureInput

func (SloObjectiveCountMetricTotalInstanaInfrastructureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalInstanaInfrastructure)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalInstanaInfrastructureArray) ToSloObjectiveCountMetricTotalInstanaInfrastructureArrayOutput() SloObjectiveCountMetricTotalInstanaInfrastructureArrayOutput {
	return i.ToSloObjectiveCountMetricTotalInstanaInfrastructureArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalInstanaInfrastructureArray) ToSloObjectiveCountMetricTotalInstanaInfrastructureArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalInstanaInfrastructureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalInstanaInfrastructureArrayOutput)
}

type SloObjectiveCountMetricTotalInstanaInfrastructureOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalInstanaInfrastructureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalInstanaInfrastructure)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalInstanaInfrastructureOutput) ToSloObjectiveCountMetricTotalInstanaInfrastructureOutput() SloObjectiveCountMetricTotalInstanaInfrastructureOutput {
	return o
}

func (o SloObjectiveCountMetricTotalInstanaInfrastructureOutput) ToSloObjectiveCountMetricTotalInstanaInfrastructureOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalInstanaInfrastructureOutput {
	return o
}

// Metric ID one of 'calls', 'erroneousCalls', 'errors', 'latency'
func (o SloObjectiveCountMetricTotalInstanaInfrastructureOutput) MetricId() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalInstanaInfrastructure) string { return v.MetricId }).(pulumi.StringOutput)
}

// Metric retrieval method 'query' or 'snapshot'
func (o SloObjectiveCountMetricTotalInstanaInfrastructureOutput) MetricRetrievalMethod() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalInstanaInfrastructure) string { return v.MetricRetrievalMethod }).(pulumi.StringOutput)
}

// Plugin ID
func (o SloObjectiveCountMetricTotalInstanaInfrastructureOutput) PluginId() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalInstanaInfrastructure) string { return v.PluginId }).(pulumi.StringOutput)
}

// Query for the metrics
func (o SloObjectiveCountMetricTotalInstanaInfrastructureOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalInstanaInfrastructure) *string { return v.Query }).(pulumi.StringPtrOutput)
}

// Snapshot ID
func (o SloObjectiveCountMetricTotalInstanaInfrastructureOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalInstanaInfrastructure) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

type SloObjectiveCountMetricTotalInstanaInfrastructureArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalInstanaInfrastructureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalInstanaInfrastructure)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalInstanaInfrastructureArrayOutput) ToSloObjectiveCountMetricTotalInstanaInfrastructureArrayOutput() SloObjectiveCountMetricTotalInstanaInfrastructureArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalInstanaInfrastructureArrayOutput) ToSloObjectiveCountMetricTotalInstanaInfrastructureArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalInstanaInfrastructureArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalInstanaInfrastructureArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricTotalInstanaInfrastructureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricTotalInstanaInfrastructure {
		return vs[0].([]SloObjectiveCountMetricTotalInstanaInfrastructure)[vs[1].(int)]
	}).(SloObjectiveCountMetricTotalInstanaInfrastructureOutput)
}

type SloObjectiveCountMetricTotalLightstep struct {
	// Optional value to filter by percentiles
	Percentile *float64 `pulumi:"percentile"`
	// ID of the metrics stream
	StreamId *string `pulumi:"streamId"`
	// Type of data to filter by
	TypeOfData string `pulumi:"typeOfData"`
	// UQL query
	Uql *string `pulumi:"uql"`
}

// SloObjectiveCountMetricTotalLightstepInput is an input type that accepts SloObjectiveCountMetricTotalLightstepArgs and SloObjectiveCountMetricTotalLightstepOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalLightstepInput` via:
//
//	SloObjectiveCountMetricTotalLightstepArgs{...}
type SloObjectiveCountMetricTotalLightstepInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalLightstepOutput() SloObjectiveCountMetricTotalLightstepOutput
	ToSloObjectiveCountMetricTotalLightstepOutputWithContext(context.Context) SloObjectiveCountMetricTotalLightstepOutput
}

type SloObjectiveCountMetricTotalLightstepArgs struct {
	// Optional value to filter by percentiles
	Percentile pulumi.Float64PtrInput `pulumi:"percentile"`
	// ID of the metrics stream
	StreamId pulumi.StringPtrInput `pulumi:"streamId"`
	// Type of data to filter by
	TypeOfData pulumi.StringInput `pulumi:"typeOfData"`
	// UQL query
	Uql pulumi.StringPtrInput `pulumi:"uql"`
}

func (SloObjectiveCountMetricTotalLightstepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalLightstep)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalLightstepArgs) ToSloObjectiveCountMetricTotalLightstepOutput() SloObjectiveCountMetricTotalLightstepOutput {
	return i.ToSloObjectiveCountMetricTotalLightstepOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalLightstepArgs) ToSloObjectiveCountMetricTotalLightstepOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalLightstepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalLightstepOutput)
}

// SloObjectiveCountMetricTotalLightstepArrayInput is an input type that accepts SloObjectiveCountMetricTotalLightstepArray and SloObjectiveCountMetricTotalLightstepArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalLightstepArrayInput` via:
//
//	SloObjectiveCountMetricTotalLightstepArray{ SloObjectiveCountMetricTotalLightstepArgs{...} }
type SloObjectiveCountMetricTotalLightstepArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalLightstepArrayOutput() SloObjectiveCountMetricTotalLightstepArrayOutput
	ToSloObjectiveCountMetricTotalLightstepArrayOutputWithContext(context.Context) SloObjectiveCountMetricTotalLightstepArrayOutput
}

type SloObjectiveCountMetricTotalLightstepArray []SloObjectiveCountMetricTotalLightstepInput

func (SloObjectiveCountMetricTotalLightstepArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalLightstep)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalLightstepArray) ToSloObjectiveCountMetricTotalLightstepArrayOutput() SloObjectiveCountMetricTotalLightstepArrayOutput {
	return i.ToSloObjectiveCountMetricTotalLightstepArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalLightstepArray) ToSloObjectiveCountMetricTotalLightstepArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalLightstepArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalLightstepArrayOutput)
}

type SloObjectiveCountMetricTotalLightstepOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalLightstepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalLightstep)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalLightstepOutput) ToSloObjectiveCountMetricTotalLightstepOutput() SloObjectiveCountMetricTotalLightstepOutput {
	return o
}

func (o SloObjectiveCountMetricTotalLightstepOutput) ToSloObjectiveCountMetricTotalLightstepOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalLightstepOutput {
	return o
}

// Optional value to filter by percentiles
func (o SloObjectiveCountMetricTotalLightstepOutput) Percentile() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalLightstep) *float64 { return v.Percentile }).(pulumi.Float64PtrOutput)
}

// ID of the metrics stream
func (o SloObjectiveCountMetricTotalLightstepOutput) StreamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalLightstep) *string { return v.StreamId }).(pulumi.StringPtrOutput)
}

// Type of data to filter by
func (o SloObjectiveCountMetricTotalLightstepOutput) TypeOfData() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalLightstep) string { return v.TypeOfData }).(pulumi.StringOutput)
}

// UQL query
func (o SloObjectiveCountMetricTotalLightstepOutput) Uql() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalLightstep) *string { return v.Uql }).(pulumi.StringPtrOutput)
}

type SloObjectiveCountMetricTotalLightstepArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalLightstepArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalLightstep)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalLightstepArrayOutput) ToSloObjectiveCountMetricTotalLightstepArrayOutput() SloObjectiveCountMetricTotalLightstepArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalLightstepArrayOutput) ToSloObjectiveCountMetricTotalLightstepArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalLightstepArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalLightstepArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricTotalLightstepOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricTotalLightstep {
		return vs[0].([]SloObjectiveCountMetricTotalLightstep)[vs[1].(int)]
	}).(SloObjectiveCountMetricTotalLightstepOutput)
}

type SloObjectiveCountMetricTotalNewrelic struct {
	// Query for the metrics
	Nrql string `pulumi:"nrql"`
}

// SloObjectiveCountMetricTotalNewrelicInput is an input type that accepts SloObjectiveCountMetricTotalNewrelicArgs and SloObjectiveCountMetricTotalNewrelicOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalNewrelicInput` via:
//
//	SloObjectiveCountMetricTotalNewrelicArgs{...}
type SloObjectiveCountMetricTotalNewrelicInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalNewrelicOutput() SloObjectiveCountMetricTotalNewrelicOutput
	ToSloObjectiveCountMetricTotalNewrelicOutputWithContext(context.Context) SloObjectiveCountMetricTotalNewrelicOutput
}

type SloObjectiveCountMetricTotalNewrelicArgs struct {
	// Query for the metrics
	Nrql pulumi.StringInput `pulumi:"nrql"`
}

func (SloObjectiveCountMetricTotalNewrelicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalNewrelic)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalNewrelicArgs) ToSloObjectiveCountMetricTotalNewrelicOutput() SloObjectiveCountMetricTotalNewrelicOutput {
	return i.ToSloObjectiveCountMetricTotalNewrelicOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalNewrelicArgs) ToSloObjectiveCountMetricTotalNewrelicOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalNewrelicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalNewrelicOutput)
}

// SloObjectiveCountMetricTotalNewrelicArrayInput is an input type that accepts SloObjectiveCountMetricTotalNewrelicArray and SloObjectiveCountMetricTotalNewrelicArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalNewrelicArrayInput` via:
//
//	SloObjectiveCountMetricTotalNewrelicArray{ SloObjectiveCountMetricTotalNewrelicArgs{...} }
type SloObjectiveCountMetricTotalNewrelicArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalNewrelicArrayOutput() SloObjectiveCountMetricTotalNewrelicArrayOutput
	ToSloObjectiveCountMetricTotalNewrelicArrayOutputWithContext(context.Context) SloObjectiveCountMetricTotalNewrelicArrayOutput
}

type SloObjectiveCountMetricTotalNewrelicArray []SloObjectiveCountMetricTotalNewrelicInput

func (SloObjectiveCountMetricTotalNewrelicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalNewrelic)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalNewrelicArray) ToSloObjectiveCountMetricTotalNewrelicArrayOutput() SloObjectiveCountMetricTotalNewrelicArrayOutput {
	return i.ToSloObjectiveCountMetricTotalNewrelicArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalNewrelicArray) ToSloObjectiveCountMetricTotalNewrelicArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalNewrelicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalNewrelicArrayOutput)
}

type SloObjectiveCountMetricTotalNewrelicOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalNewrelicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalNewrelic)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalNewrelicOutput) ToSloObjectiveCountMetricTotalNewrelicOutput() SloObjectiveCountMetricTotalNewrelicOutput {
	return o
}

func (o SloObjectiveCountMetricTotalNewrelicOutput) ToSloObjectiveCountMetricTotalNewrelicOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalNewrelicOutput {
	return o
}

// Query for the metrics
func (o SloObjectiveCountMetricTotalNewrelicOutput) Nrql() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalNewrelic) string { return v.Nrql }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricTotalNewrelicArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalNewrelicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalNewrelic)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalNewrelicArrayOutput) ToSloObjectiveCountMetricTotalNewrelicArrayOutput() SloObjectiveCountMetricTotalNewrelicArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalNewrelicArrayOutput) ToSloObjectiveCountMetricTotalNewrelicArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalNewrelicArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalNewrelicArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricTotalNewrelicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricTotalNewrelic {
		return vs[0].([]SloObjectiveCountMetricTotalNewrelic)[vs[1].(int)]
	}).(SloObjectiveCountMetricTotalNewrelicOutput)
}

type SloObjectiveCountMetricTotalOpentsdb struct {
	// Query for the metrics
	Query string `pulumi:"query"`
}

// SloObjectiveCountMetricTotalOpentsdbInput is an input type that accepts SloObjectiveCountMetricTotalOpentsdbArgs and SloObjectiveCountMetricTotalOpentsdbOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalOpentsdbInput` via:
//
//	SloObjectiveCountMetricTotalOpentsdbArgs{...}
type SloObjectiveCountMetricTotalOpentsdbInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalOpentsdbOutput() SloObjectiveCountMetricTotalOpentsdbOutput
	ToSloObjectiveCountMetricTotalOpentsdbOutputWithContext(context.Context) SloObjectiveCountMetricTotalOpentsdbOutput
}

type SloObjectiveCountMetricTotalOpentsdbArgs struct {
	// Query for the metrics
	Query pulumi.StringInput `pulumi:"query"`
}

func (SloObjectiveCountMetricTotalOpentsdbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalOpentsdb)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalOpentsdbArgs) ToSloObjectiveCountMetricTotalOpentsdbOutput() SloObjectiveCountMetricTotalOpentsdbOutput {
	return i.ToSloObjectiveCountMetricTotalOpentsdbOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalOpentsdbArgs) ToSloObjectiveCountMetricTotalOpentsdbOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalOpentsdbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalOpentsdbOutput)
}

// SloObjectiveCountMetricTotalOpentsdbArrayInput is an input type that accepts SloObjectiveCountMetricTotalOpentsdbArray and SloObjectiveCountMetricTotalOpentsdbArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalOpentsdbArrayInput` via:
//
//	SloObjectiveCountMetricTotalOpentsdbArray{ SloObjectiveCountMetricTotalOpentsdbArgs{...} }
type SloObjectiveCountMetricTotalOpentsdbArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalOpentsdbArrayOutput() SloObjectiveCountMetricTotalOpentsdbArrayOutput
	ToSloObjectiveCountMetricTotalOpentsdbArrayOutputWithContext(context.Context) SloObjectiveCountMetricTotalOpentsdbArrayOutput
}

type SloObjectiveCountMetricTotalOpentsdbArray []SloObjectiveCountMetricTotalOpentsdbInput

func (SloObjectiveCountMetricTotalOpentsdbArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalOpentsdb)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalOpentsdbArray) ToSloObjectiveCountMetricTotalOpentsdbArrayOutput() SloObjectiveCountMetricTotalOpentsdbArrayOutput {
	return i.ToSloObjectiveCountMetricTotalOpentsdbArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalOpentsdbArray) ToSloObjectiveCountMetricTotalOpentsdbArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalOpentsdbArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalOpentsdbArrayOutput)
}

type SloObjectiveCountMetricTotalOpentsdbOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalOpentsdbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalOpentsdb)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalOpentsdbOutput) ToSloObjectiveCountMetricTotalOpentsdbOutput() SloObjectiveCountMetricTotalOpentsdbOutput {
	return o
}

func (o SloObjectiveCountMetricTotalOpentsdbOutput) ToSloObjectiveCountMetricTotalOpentsdbOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalOpentsdbOutput {
	return o
}

// Query for the metrics
func (o SloObjectiveCountMetricTotalOpentsdbOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalOpentsdb) string { return v.Query }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricTotalOpentsdbArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalOpentsdbArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalOpentsdb)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalOpentsdbArrayOutput) ToSloObjectiveCountMetricTotalOpentsdbArrayOutput() SloObjectiveCountMetricTotalOpentsdbArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalOpentsdbArrayOutput) ToSloObjectiveCountMetricTotalOpentsdbArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalOpentsdbArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalOpentsdbArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricTotalOpentsdbOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricTotalOpentsdb {
		return vs[0].([]SloObjectiveCountMetricTotalOpentsdb)[vs[1].(int)]
	}).(SloObjectiveCountMetricTotalOpentsdbOutput)
}

type SloObjectiveCountMetricTotalPingdom struct {
	// Pingdom uptime or transaction check's ID
	CheckId string `pulumi:"checkId"`
	// Pingdom check type - uptime or transaction
	CheckType *string `pulumi:"checkType"`
	// Optional for the Uptime checks. Use it to filter the Pingdom check results by status
	Status *string `pulumi:"status"`
}

// SloObjectiveCountMetricTotalPingdomInput is an input type that accepts SloObjectiveCountMetricTotalPingdomArgs and SloObjectiveCountMetricTotalPingdomOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalPingdomInput` via:
//
//	SloObjectiveCountMetricTotalPingdomArgs{...}
type SloObjectiveCountMetricTotalPingdomInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalPingdomOutput() SloObjectiveCountMetricTotalPingdomOutput
	ToSloObjectiveCountMetricTotalPingdomOutputWithContext(context.Context) SloObjectiveCountMetricTotalPingdomOutput
}

type SloObjectiveCountMetricTotalPingdomArgs struct {
	// Pingdom uptime or transaction check's ID
	CheckId pulumi.StringInput `pulumi:"checkId"`
	// Pingdom check type - uptime or transaction
	CheckType pulumi.StringPtrInput `pulumi:"checkType"`
	// Optional for the Uptime checks. Use it to filter the Pingdom check results by status
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SloObjectiveCountMetricTotalPingdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalPingdom)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalPingdomArgs) ToSloObjectiveCountMetricTotalPingdomOutput() SloObjectiveCountMetricTotalPingdomOutput {
	return i.ToSloObjectiveCountMetricTotalPingdomOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalPingdomArgs) ToSloObjectiveCountMetricTotalPingdomOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalPingdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalPingdomOutput)
}

// SloObjectiveCountMetricTotalPingdomArrayInput is an input type that accepts SloObjectiveCountMetricTotalPingdomArray and SloObjectiveCountMetricTotalPingdomArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalPingdomArrayInput` via:
//
//	SloObjectiveCountMetricTotalPingdomArray{ SloObjectiveCountMetricTotalPingdomArgs{...} }
type SloObjectiveCountMetricTotalPingdomArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalPingdomArrayOutput() SloObjectiveCountMetricTotalPingdomArrayOutput
	ToSloObjectiveCountMetricTotalPingdomArrayOutputWithContext(context.Context) SloObjectiveCountMetricTotalPingdomArrayOutput
}

type SloObjectiveCountMetricTotalPingdomArray []SloObjectiveCountMetricTotalPingdomInput

func (SloObjectiveCountMetricTotalPingdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalPingdom)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalPingdomArray) ToSloObjectiveCountMetricTotalPingdomArrayOutput() SloObjectiveCountMetricTotalPingdomArrayOutput {
	return i.ToSloObjectiveCountMetricTotalPingdomArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalPingdomArray) ToSloObjectiveCountMetricTotalPingdomArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalPingdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalPingdomArrayOutput)
}

type SloObjectiveCountMetricTotalPingdomOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalPingdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalPingdom)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalPingdomOutput) ToSloObjectiveCountMetricTotalPingdomOutput() SloObjectiveCountMetricTotalPingdomOutput {
	return o
}

func (o SloObjectiveCountMetricTotalPingdomOutput) ToSloObjectiveCountMetricTotalPingdomOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalPingdomOutput {
	return o
}

// Pingdom uptime or transaction check's ID
func (o SloObjectiveCountMetricTotalPingdomOutput) CheckId() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalPingdom) string { return v.CheckId }).(pulumi.StringOutput)
}

// Pingdom check type - uptime or transaction
func (o SloObjectiveCountMetricTotalPingdomOutput) CheckType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalPingdom) *string { return v.CheckType }).(pulumi.StringPtrOutput)
}

// Optional for the Uptime checks. Use it to filter the Pingdom check results by status
func (o SloObjectiveCountMetricTotalPingdomOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalPingdom) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SloObjectiveCountMetricTotalPingdomArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalPingdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalPingdom)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalPingdomArrayOutput) ToSloObjectiveCountMetricTotalPingdomArrayOutput() SloObjectiveCountMetricTotalPingdomArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalPingdomArrayOutput) ToSloObjectiveCountMetricTotalPingdomArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalPingdomArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalPingdomArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricTotalPingdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricTotalPingdom {
		return vs[0].([]SloObjectiveCountMetricTotalPingdom)[vs[1].(int)]
	}).(SloObjectiveCountMetricTotalPingdomOutput)
}

type SloObjectiveCountMetricTotalPrometheus struct {
	// Query for the metrics
	Promql string `pulumi:"promql"`
}

// SloObjectiveCountMetricTotalPrometheusInput is an input type that accepts SloObjectiveCountMetricTotalPrometheusArgs and SloObjectiveCountMetricTotalPrometheusOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalPrometheusInput` via:
//
//	SloObjectiveCountMetricTotalPrometheusArgs{...}
type SloObjectiveCountMetricTotalPrometheusInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalPrometheusOutput() SloObjectiveCountMetricTotalPrometheusOutput
	ToSloObjectiveCountMetricTotalPrometheusOutputWithContext(context.Context) SloObjectiveCountMetricTotalPrometheusOutput
}

type SloObjectiveCountMetricTotalPrometheusArgs struct {
	// Query for the metrics
	Promql pulumi.StringInput `pulumi:"promql"`
}

func (SloObjectiveCountMetricTotalPrometheusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalPrometheus)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalPrometheusArgs) ToSloObjectiveCountMetricTotalPrometheusOutput() SloObjectiveCountMetricTotalPrometheusOutput {
	return i.ToSloObjectiveCountMetricTotalPrometheusOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalPrometheusArgs) ToSloObjectiveCountMetricTotalPrometheusOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalPrometheusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalPrometheusOutput)
}

// SloObjectiveCountMetricTotalPrometheusArrayInput is an input type that accepts SloObjectiveCountMetricTotalPrometheusArray and SloObjectiveCountMetricTotalPrometheusArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalPrometheusArrayInput` via:
//
//	SloObjectiveCountMetricTotalPrometheusArray{ SloObjectiveCountMetricTotalPrometheusArgs{...} }
type SloObjectiveCountMetricTotalPrometheusArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalPrometheusArrayOutput() SloObjectiveCountMetricTotalPrometheusArrayOutput
	ToSloObjectiveCountMetricTotalPrometheusArrayOutputWithContext(context.Context) SloObjectiveCountMetricTotalPrometheusArrayOutput
}

type SloObjectiveCountMetricTotalPrometheusArray []SloObjectiveCountMetricTotalPrometheusInput

func (SloObjectiveCountMetricTotalPrometheusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalPrometheus)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalPrometheusArray) ToSloObjectiveCountMetricTotalPrometheusArrayOutput() SloObjectiveCountMetricTotalPrometheusArrayOutput {
	return i.ToSloObjectiveCountMetricTotalPrometheusArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalPrometheusArray) ToSloObjectiveCountMetricTotalPrometheusArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalPrometheusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalPrometheusArrayOutput)
}

type SloObjectiveCountMetricTotalPrometheusOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalPrometheusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalPrometheus)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalPrometheusOutput) ToSloObjectiveCountMetricTotalPrometheusOutput() SloObjectiveCountMetricTotalPrometheusOutput {
	return o
}

func (o SloObjectiveCountMetricTotalPrometheusOutput) ToSloObjectiveCountMetricTotalPrometheusOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalPrometheusOutput {
	return o
}

// Query for the metrics
func (o SloObjectiveCountMetricTotalPrometheusOutput) Promql() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalPrometheus) string { return v.Promql }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricTotalPrometheusArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalPrometheusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalPrometheus)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalPrometheusArrayOutput) ToSloObjectiveCountMetricTotalPrometheusArrayOutput() SloObjectiveCountMetricTotalPrometheusArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalPrometheusArrayOutput) ToSloObjectiveCountMetricTotalPrometheusArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalPrometheusArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalPrometheusArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricTotalPrometheusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricTotalPrometheus {
		return vs[0].([]SloObjectiveCountMetricTotalPrometheus)[vs[1].(int)]
	}).(SloObjectiveCountMetricTotalPrometheusOutput)
}

type SloObjectiveCountMetricTotalRedshift struct {
	// Redshift custer ID
	ClusterId string `pulumi:"clusterId"`
	// Database name
	DatabaseName string `pulumi:"databaseName"`
	// Query for the metrics
	Query string `pulumi:"query"`
	// Region of the CloudWatch instance
	Region string `pulumi:"region"`
}

// SloObjectiveCountMetricTotalRedshiftInput is an input type that accepts SloObjectiveCountMetricTotalRedshiftArgs and SloObjectiveCountMetricTotalRedshiftOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalRedshiftInput` via:
//
//	SloObjectiveCountMetricTotalRedshiftArgs{...}
type SloObjectiveCountMetricTotalRedshiftInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalRedshiftOutput() SloObjectiveCountMetricTotalRedshiftOutput
	ToSloObjectiveCountMetricTotalRedshiftOutputWithContext(context.Context) SloObjectiveCountMetricTotalRedshiftOutput
}

type SloObjectiveCountMetricTotalRedshiftArgs struct {
	// Redshift custer ID
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// Database name
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Query for the metrics
	Query pulumi.StringInput `pulumi:"query"`
	// Region of the CloudWatch instance
	Region pulumi.StringInput `pulumi:"region"`
}

func (SloObjectiveCountMetricTotalRedshiftArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalRedshift)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalRedshiftArgs) ToSloObjectiveCountMetricTotalRedshiftOutput() SloObjectiveCountMetricTotalRedshiftOutput {
	return i.ToSloObjectiveCountMetricTotalRedshiftOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalRedshiftArgs) ToSloObjectiveCountMetricTotalRedshiftOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalRedshiftOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalRedshiftOutput)
}

// SloObjectiveCountMetricTotalRedshiftArrayInput is an input type that accepts SloObjectiveCountMetricTotalRedshiftArray and SloObjectiveCountMetricTotalRedshiftArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalRedshiftArrayInput` via:
//
//	SloObjectiveCountMetricTotalRedshiftArray{ SloObjectiveCountMetricTotalRedshiftArgs{...} }
type SloObjectiveCountMetricTotalRedshiftArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalRedshiftArrayOutput() SloObjectiveCountMetricTotalRedshiftArrayOutput
	ToSloObjectiveCountMetricTotalRedshiftArrayOutputWithContext(context.Context) SloObjectiveCountMetricTotalRedshiftArrayOutput
}

type SloObjectiveCountMetricTotalRedshiftArray []SloObjectiveCountMetricTotalRedshiftInput

func (SloObjectiveCountMetricTotalRedshiftArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalRedshift)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalRedshiftArray) ToSloObjectiveCountMetricTotalRedshiftArrayOutput() SloObjectiveCountMetricTotalRedshiftArrayOutput {
	return i.ToSloObjectiveCountMetricTotalRedshiftArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalRedshiftArray) ToSloObjectiveCountMetricTotalRedshiftArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalRedshiftArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalRedshiftArrayOutput)
}

type SloObjectiveCountMetricTotalRedshiftOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalRedshiftOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalRedshift)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalRedshiftOutput) ToSloObjectiveCountMetricTotalRedshiftOutput() SloObjectiveCountMetricTotalRedshiftOutput {
	return o
}

func (o SloObjectiveCountMetricTotalRedshiftOutput) ToSloObjectiveCountMetricTotalRedshiftOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalRedshiftOutput {
	return o
}

// Redshift custer ID
func (o SloObjectiveCountMetricTotalRedshiftOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalRedshift) string { return v.ClusterId }).(pulumi.StringOutput)
}

// Database name
func (o SloObjectiveCountMetricTotalRedshiftOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalRedshift) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// Query for the metrics
func (o SloObjectiveCountMetricTotalRedshiftOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalRedshift) string { return v.Query }).(pulumi.StringOutput)
}

// Region of the CloudWatch instance
func (o SloObjectiveCountMetricTotalRedshiftOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalRedshift) string { return v.Region }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricTotalRedshiftArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalRedshiftArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalRedshift)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalRedshiftArrayOutput) ToSloObjectiveCountMetricTotalRedshiftArrayOutput() SloObjectiveCountMetricTotalRedshiftArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalRedshiftArrayOutput) ToSloObjectiveCountMetricTotalRedshiftArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalRedshiftArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalRedshiftArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricTotalRedshiftOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricTotalRedshift {
		return vs[0].([]SloObjectiveCountMetricTotalRedshift)[vs[1].(int)]
	}).(SloObjectiveCountMetricTotalRedshiftOutput)
}

type SloObjectiveCountMetricTotalSplunk struct {
	// Query for the metrics
	Query string `pulumi:"query"`
}

// SloObjectiveCountMetricTotalSplunkInput is an input type that accepts SloObjectiveCountMetricTotalSplunkArgs and SloObjectiveCountMetricTotalSplunkOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalSplunkInput` via:
//
//	SloObjectiveCountMetricTotalSplunkArgs{...}
type SloObjectiveCountMetricTotalSplunkInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalSplunkOutput() SloObjectiveCountMetricTotalSplunkOutput
	ToSloObjectiveCountMetricTotalSplunkOutputWithContext(context.Context) SloObjectiveCountMetricTotalSplunkOutput
}

type SloObjectiveCountMetricTotalSplunkArgs struct {
	// Query for the metrics
	Query pulumi.StringInput `pulumi:"query"`
}

func (SloObjectiveCountMetricTotalSplunkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalSplunk)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalSplunkArgs) ToSloObjectiveCountMetricTotalSplunkOutput() SloObjectiveCountMetricTotalSplunkOutput {
	return i.ToSloObjectiveCountMetricTotalSplunkOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalSplunkArgs) ToSloObjectiveCountMetricTotalSplunkOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalSplunkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalSplunkOutput)
}

// SloObjectiveCountMetricTotalSplunkArrayInput is an input type that accepts SloObjectiveCountMetricTotalSplunkArray and SloObjectiveCountMetricTotalSplunkArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalSplunkArrayInput` via:
//
//	SloObjectiveCountMetricTotalSplunkArray{ SloObjectiveCountMetricTotalSplunkArgs{...} }
type SloObjectiveCountMetricTotalSplunkArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalSplunkArrayOutput() SloObjectiveCountMetricTotalSplunkArrayOutput
	ToSloObjectiveCountMetricTotalSplunkArrayOutputWithContext(context.Context) SloObjectiveCountMetricTotalSplunkArrayOutput
}

type SloObjectiveCountMetricTotalSplunkArray []SloObjectiveCountMetricTotalSplunkInput

func (SloObjectiveCountMetricTotalSplunkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalSplunk)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalSplunkArray) ToSloObjectiveCountMetricTotalSplunkArrayOutput() SloObjectiveCountMetricTotalSplunkArrayOutput {
	return i.ToSloObjectiveCountMetricTotalSplunkArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalSplunkArray) ToSloObjectiveCountMetricTotalSplunkArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalSplunkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalSplunkArrayOutput)
}

type SloObjectiveCountMetricTotalSplunkOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalSplunkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalSplunk)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalSplunkOutput) ToSloObjectiveCountMetricTotalSplunkOutput() SloObjectiveCountMetricTotalSplunkOutput {
	return o
}

func (o SloObjectiveCountMetricTotalSplunkOutput) ToSloObjectiveCountMetricTotalSplunkOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalSplunkOutput {
	return o
}

// Query for the metrics
func (o SloObjectiveCountMetricTotalSplunkOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalSplunk) string { return v.Query }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricTotalSplunkArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalSplunkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalSplunk)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalSplunkArrayOutput) ToSloObjectiveCountMetricTotalSplunkArrayOutput() SloObjectiveCountMetricTotalSplunkArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalSplunkArrayOutput) ToSloObjectiveCountMetricTotalSplunkArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalSplunkArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalSplunkArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricTotalSplunkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricTotalSplunk {
		return vs[0].([]SloObjectiveCountMetricTotalSplunk)[vs[1].(int)]
	}).(SloObjectiveCountMetricTotalSplunkOutput)
}

type SloObjectiveCountMetricTotalSplunkObservability struct {
	// Query for the metrics
	Program string `pulumi:"program"`
}

// SloObjectiveCountMetricTotalSplunkObservabilityInput is an input type that accepts SloObjectiveCountMetricTotalSplunkObservabilityArgs and SloObjectiveCountMetricTotalSplunkObservabilityOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalSplunkObservabilityInput` via:
//
//	SloObjectiveCountMetricTotalSplunkObservabilityArgs{...}
type SloObjectiveCountMetricTotalSplunkObservabilityInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalSplunkObservabilityOutput() SloObjectiveCountMetricTotalSplunkObservabilityOutput
	ToSloObjectiveCountMetricTotalSplunkObservabilityOutputWithContext(context.Context) SloObjectiveCountMetricTotalSplunkObservabilityOutput
}

type SloObjectiveCountMetricTotalSplunkObservabilityArgs struct {
	// Query for the metrics
	Program pulumi.StringInput `pulumi:"program"`
}

func (SloObjectiveCountMetricTotalSplunkObservabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalSplunkObservability)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalSplunkObservabilityArgs) ToSloObjectiveCountMetricTotalSplunkObservabilityOutput() SloObjectiveCountMetricTotalSplunkObservabilityOutput {
	return i.ToSloObjectiveCountMetricTotalSplunkObservabilityOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalSplunkObservabilityArgs) ToSloObjectiveCountMetricTotalSplunkObservabilityOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalSplunkObservabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalSplunkObservabilityOutput)
}

// SloObjectiveCountMetricTotalSplunkObservabilityArrayInput is an input type that accepts SloObjectiveCountMetricTotalSplunkObservabilityArray and SloObjectiveCountMetricTotalSplunkObservabilityArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalSplunkObservabilityArrayInput` via:
//
//	SloObjectiveCountMetricTotalSplunkObservabilityArray{ SloObjectiveCountMetricTotalSplunkObservabilityArgs{...} }
type SloObjectiveCountMetricTotalSplunkObservabilityArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalSplunkObservabilityArrayOutput() SloObjectiveCountMetricTotalSplunkObservabilityArrayOutput
	ToSloObjectiveCountMetricTotalSplunkObservabilityArrayOutputWithContext(context.Context) SloObjectiveCountMetricTotalSplunkObservabilityArrayOutput
}

type SloObjectiveCountMetricTotalSplunkObservabilityArray []SloObjectiveCountMetricTotalSplunkObservabilityInput

func (SloObjectiveCountMetricTotalSplunkObservabilityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalSplunkObservability)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalSplunkObservabilityArray) ToSloObjectiveCountMetricTotalSplunkObservabilityArrayOutput() SloObjectiveCountMetricTotalSplunkObservabilityArrayOutput {
	return i.ToSloObjectiveCountMetricTotalSplunkObservabilityArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalSplunkObservabilityArray) ToSloObjectiveCountMetricTotalSplunkObservabilityArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalSplunkObservabilityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalSplunkObservabilityArrayOutput)
}

type SloObjectiveCountMetricTotalSplunkObservabilityOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalSplunkObservabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalSplunkObservability)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalSplunkObservabilityOutput) ToSloObjectiveCountMetricTotalSplunkObservabilityOutput() SloObjectiveCountMetricTotalSplunkObservabilityOutput {
	return o
}

func (o SloObjectiveCountMetricTotalSplunkObservabilityOutput) ToSloObjectiveCountMetricTotalSplunkObservabilityOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalSplunkObservabilityOutput {
	return o
}

// Query for the metrics
func (o SloObjectiveCountMetricTotalSplunkObservabilityOutput) Program() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalSplunkObservability) string { return v.Program }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricTotalSplunkObservabilityArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalSplunkObservabilityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalSplunkObservability)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalSplunkObservabilityArrayOutput) ToSloObjectiveCountMetricTotalSplunkObservabilityArrayOutput() SloObjectiveCountMetricTotalSplunkObservabilityArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalSplunkObservabilityArrayOutput) ToSloObjectiveCountMetricTotalSplunkObservabilityArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalSplunkObservabilityArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalSplunkObservabilityArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricTotalSplunkObservabilityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricTotalSplunkObservability {
		return vs[0].([]SloObjectiveCountMetricTotalSplunkObservability)[vs[1].(int)]
	}).(SloObjectiveCountMetricTotalSplunkObservabilityOutput)
}

type SloObjectiveCountMetricTotalSumologic struct {
	// Period of data aggregation
	Quantization *string `pulumi:"quantization"`
	// Query for the metrics
	Query string `pulumi:"query"`
	// Aggregation function - avg, sum, min, max, count, none
	Rollup *string `pulumi:"rollup"`
	// Sumologic source - metrics or logs
	Type string `pulumi:"type"`
}

// SloObjectiveCountMetricTotalSumologicInput is an input type that accepts SloObjectiveCountMetricTotalSumologicArgs and SloObjectiveCountMetricTotalSumologicOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalSumologicInput` via:
//
//	SloObjectiveCountMetricTotalSumologicArgs{...}
type SloObjectiveCountMetricTotalSumologicInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalSumologicOutput() SloObjectiveCountMetricTotalSumologicOutput
	ToSloObjectiveCountMetricTotalSumologicOutputWithContext(context.Context) SloObjectiveCountMetricTotalSumologicOutput
}

type SloObjectiveCountMetricTotalSumologicArgs struct {
	// Period of data aggregation
	Quantization pulumi.StringPtrInput `pulumi:"quantization"`
	// Query for the metrics
	Query pulumi.StringInput `pulumi:"query"`
	// Aggregation function - avg, sum, min, max, count, none
	Rollup pulumi.StringPtrInput `pulumi:"rollup"`
	// Sumologic source - metrics or logs
	Type pulumi.StringInput `pulumi:"type"`
}

func (SloObjectiveCountMetricTotalSumologicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalSumologic)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalSumologicArgs) ToSloObjectiveCountMetricTotalSumologicOutput() SloObjectiveCountMetricTotalSumologicOutput {
	return i.ToSloObjectiveCountMetricTotalSumologicOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalSumologicArgs) ToSloObjectiveCountMetricTotalSumologicOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalSumologicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalSumologicOutput)
}

// SloObjectiveCountMetricTotalSumologicArrayInput is an input type that accepts SloObjectiveCountMetricTotalSumologicArray and SloObjectiveCountMetricTotalSumologicArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalSumologicArrayInput` via:
//
//	SloObjectiveCountMetricTotalSumologicArray{ SloObjectiveCountMetricTotalSumologicArgs{...} }
type SloObjectiveCountMetricTotalSumologicArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalSumologicArrayOutput() SloObjectiveCountMetricTotalSumologicArrayOutput
	ToSloObjectiveCountMetricTotalSumologicArrayOutputWithContext(context.Context) SloObjectiveCountMetricTotalSumologicArrayOutput
}

type SloObjectiveCountMetricTotalSumologicArray []SloObjectiveCountMetricTotalSumologicInput

func (SloObjectiveCountMetricTotalSumologicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalSumologic)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalSumologicArray) ToSloObjectiveCountMetricTotalSumologicArrayOutput() SloObjectiveCountMetricTotalSumologicArrayOutput {
	return i.ToSloObjectiveCountMetricTotalSumologicArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalSumologicArray) ToSloObjectiveCountMetricTotalSumologicArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalSumologicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalSumologicArrayOutput)
}

type SloObjectiveCountMetricTotalSumologicOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalSumologicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalSumologic)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalSumologicOutput) ToSloObjectiveCountMetricTotalSumologicOutput() SloObjectiveCountMetricTotalSumologicOutput {
	return o
}

func (o SloObjectiveCountMetricTotalSumologicOutput) ToSloObjectiveCountMetricTotalSumologicOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalSumologicOutput {
	return o
}

// Period of data aggregation
func (o SloObjectiveCountMetricTotalSumologicOutput) Quantization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalSumologic) *string { return v.Quantization }).(pulumi.StringPtrOutput)
}

// Query for the metrics
func (o SloObjectiveCountMetricTotalSumologicOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalSumologic) string { return v.Query }).(pulumi.StringOutput)
}

// Aggregation function - avg, sum, min, max, count, none
func (o SloObjectiveCountMetricTotalSumologicOutput) Rollup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalSumologic) *string { return v.Rollup }).(pulumi.StringPtrOutput)
}

// Sumologic source - metrics or logs
func (o SloObjectiveCountMetricTotalSumologicOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalSumologic) string { return v.Type }).(pulumi.StringOutput)
}

type SloObjectiveCountMetricTotalSumologicArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalSumologicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalSumologic)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalSumologicArrayOutput) ToSloObjectiveCountMetricTotalSumologicArrayOutput() SloObjectiveCountMetricTotalSumologicArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalSumologicArrayOutput) ToSloObjectiveCountMetricTotalSumologicArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalSumologicArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalSumologicArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricTotalSumologicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricTotalSumologic {
		return vs[0].([]SloObjectiveCountMetricTotalSumologic)[vs[1].(int)]
	}).(SloObjectiveCountMetricTotalSumologicOutput)
}

type SloObjectiveCountMetricTotalThousandeye struct {
	// ID of the test
	TestId int `pulumi:"testId"`
}

// SloObjectiveCountMetricTotalThousandeyeInput is an input type that accepts SloObjectiveCountMetricTotalThousandeyeArgs and SloObjectiveCountMetricTotalThousandeyeOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalThousandeyeInput` via:
//
//	SloObjectiveCountMetricTotalThousandeyeArgs{...}
type SloObjectiveCountMetricTotalThousandeyeInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalThousandeyeOutput() SloObjectiveCountMetricTotalThousandeyeOutput
	ToSloObjectiveCountMetricTotalThousandeyeOutputWithContext(context.Context) SloObjectiveCountMetricTotalThousandeyeOutput
}

type SloObjectiveCountMetricTotalThousandeyeArgs struct {
	// ID of the test
	TestId pulumi.IntInput `pulumi:"testId"`
}

func (SloObjectiveCountMetricTotalThousandeyeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalThousandeye)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalThousandeyeArgs) ToSloObjectiveCountMetricTotalThousandeyeOutput() SloObjectiveCountMetricTotalThousandeyeOutput {
	return i.ToSloObjectiveCountMetricTotalThousandeyeOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalThousandeyeArgs) ToSloObjectiveCountMetricTotalThousandeyeOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalThousandeyeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalThousandeyeOutput)
}

// SloObjectiveCountMetricTotalThousandeyeArrayInput is an input type that accepts SloObjectiveCountMetricTotalThousandeyeArray and SloObjectiveCountMetricTotalThousandeyeArrayOutput values.
// You can construct a concrete instance of `SloObjectiveCountMetricTotalThousandeyeArrayInput` via:
//
//	SloObjectiveCountMetricTotalThousandeyeArray{ SloObjectiveCountMetricTotalThousandeyeArgs{...} }
type SloObjectiveCountMetricTotalThousandeyeArrayInput interface {
	pulumi.Input

	ToSloObjectiveCountMetricTotalThousandeyeArrayOutput() SloObjectiveCountMetricTotalThousandeyeArrayOutput
	ToSloObjectiveCountMetricTotalThousandeyeArrayOutputWithContext(context.Context) SloObjectiveCountMetricTotalThousandeyeArrayOutput
}

type SloObjectiveCountMetricTotalThousandeyeArray []SloObjectiveCountMetricTotalThousandeyeInput

func (SloObjectiveCountMetricTotalThousandeyeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalThousandeye)(nil)).Elem()
}

func (i SloObjectiveCountMetricTotalThousandeyeArray) ToSloObjectiveCountMetricTotalThousandeyeArrayOutput() SloObjectiveCountMetricTotalThousandeyeArrayOutput {
	return i.ToSloObjectiveCountMetricTotalThousandeyeArrayOutputWithContext(context.Background())
}

func (i SloObjectiveCountMetricTotalThousandeyeArray) ToSloObjectiveCountMetricTotalThousandeyeArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalThousandeyeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveCountMetricTotalThousandeyeArrayOutput)
}

type SloObjectiveCountMetricTotalThousandeyeOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalThousandeyeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveCountMetricTotalThousandeye)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalThousandeyeOutput) ToSloObjectiveCountMetricTotalThousandeyeOutput() SloObjectiveCountMetricTotalThousandeyeOutput {
	return o
}

func (o SloObjectiveCountMetricTotalThousandeyeOutput) ToSloObjectiveCountMetricTotalThousandeyeOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalThousandeyeOutput {
	return o
}

// ID of the test
func (o SloObjectiveCountMetricTotalThousandeyeOutput) TestId() pulumi.IntOutput {
	return o.ApplyT(func(v SloObjectiveCountMetricTotalThousandeye) int { return v.TestId }).(pulumi.IntOutput)
}

type SloObjectiveCountMetricTotalThousandeyeArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveCountMetricTotalThousandeyeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveCountMetricTotalThousandeye)(nil)).Elem()
}

func (o SloObjectiveCountMetricTotalThousandeyeArrayOutput) ToSloObjectiveCountMetricTotalThousandeyeArrayOutput() SloObjectiveCountMetricTotalThousandeyeArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalThousandeyeArrayOutput) ToSloObjectiveCountMetricTotalThousandeyeArrayOutputWithContext(ctx context.Context) SloObjectiveCountMetricTotalThousandeyeArrayOutput {
	return o
}

func (o SloObjectiveCountMetricTotalThousandeyeArrayOutput) Index(i pulumi.IntInput) SloObjectiveCountMetricTotalThousandeyeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveCountMetricTotalThousandeye {
		return vs[0].([]SloObjectiveCountMetricTotalThousandeye)[vs[1].(int)]
	}).(SloObjectiveCountMetricTotalThousandeyeOutput)
}

type SloObjectiveRawMetric struct {
	// Query for the metrics
	Queries []SloObjectiveRawMetricQuery `pulumi:"queries"`
}

// SloObjectiveRawMetricInput is an input type that accepts SloObjectiveRawMetricArgs and SloObjectiveRawMetricOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricInput` via:
//
//	SloObjectiveRawMetricArgs{...}
type SloObjectiveRawMetricInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricOutput() SloObjectiveRawMetricOutput
	ToSloObjectiveRawMetricOutputWithContext(context.Context) SloObjectiveRawMetricOutput
}

type SloObjectiveRawMetricArgs struct {
	// Query for the metrics
	Queries SloObjectiveRawMetricQueryArrayInput `pulumi:"queries"`
}

func (SloObjectiveRawMetricArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetric)(nil)).Elem()
}

func (i SloObjectiveRawMetricArgs) ToSloObjectiveRawMetricOutput() SloObjectiveRawMetricOutput {
	return i.ToSloObjectiveRawMetricOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricArgs) ToSloObjectiveRawMetricOutputWithContext(ctx context.Context) SloObjectiveRawMetricOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricOutput)
}

// SloObjectiveRawMetricArrayInput is an input type that accepts SloObjectiveRawMetricArray and SloObjectiveRawMetricArrayOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricArrayInput` via:
//
//	SloObjectiveRawMetricArray{ SloObjectiveRawMetricArgs{...} }
type SloObjectiveRawMetricArrayInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricArrayOutput() SloObjectiveRawMetricArrayOutput
	ToSloObjectiveRawMetricArrayOutputWithContext(context.Context) SloObjectiveRawMetricArrayOutput
}

type SloObjectiveRawMetricArray []SloObjectiveRawMetricInput

func (SloObjectiveRawMetricArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetric)(nil)).Elem()
}

func (i SloObjectiveRawMetricArray) ToSloObjectiveRawMetricArrayOutput() SloObjectiveRawMetricArrayOutput {
	return i.ToSloObjectiveRawMetricArrayOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricArray) ToSloObjectiveRawMetricArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricArrayOutput)
}

type SloObjectiveRawMetricOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetric)(nil)).Elem()
}

func (o SloObjectiveRawMetricOutput) ToSloObjectiveRawMetricOutput() SloObjectiveRawMetricOutput {
	return o
}

func (o SloObjectiveRawMetricOutput) ToSloObjectiveRawMetricOutputWithContext(ctx context.Context) SloObjectiveRawMetricOutput {
	return o
}

// Query for the metrics
func (o SloObjectiveRawMetricOutput) Queries() SloObjectiveRawMetricQueryArrayOutput {
	return o.ApplyT(func(v SloObjectiveRawMetric) []SloObjectiveRawMetricQuery { return v.Queries }).(SloObjectiveRawMetricQueryArrayOutput)
}

type SloObjectiveRawMetricArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetric)(nil)).Elem()
}

func (o SloObjectiveRawMetricArrayOutput) ToSloObjectiveRawMetricArrayOutput() SloObjectiveRawMetricArrayOutput {
	return o
}

func (o SloObjectiveRawMetricArrayOutput) ToSloObjectiveRawMetricArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricArrayOutput {
	return o
}

func (o SloObjectiveRawMetricArrayOutput) Index(i pulumi.IntInput) SloObjectiveRawMetricOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveRawMetric {
		return vs[0].([]SloObjectiveRawMetric)[vs[1].(int)]
	}).(SloObjectiveRawMetricOutput)
}

type SloObjectiveRawMetricQuery struct {
	// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Prometheus/#creating-slos-with-ams-prometheus)
	AmazonPrometheuses []SloObjectiveRawMetricQueryAmazonPrometheus `pulumi:"amazonPrometheuses"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/appdynamics#creating-slos-with-appdynamics)
	Appdynamics []SloObjectiveRawMetricQueryAppdynamic `pulumi:"appdynamics"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/azure-monitor#creating-slos-with-azure-monitor)
	AzureMonitors []SloObjectiveRawMetricQueryAzureMonitor `pulumi:"azureMonitors"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/bigquery#creating-slos-with-bigquery)
	Bigqueries []SloObjectiveRawMetricQueryBigquery `pulumi:"bigqueries"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_CloudWatch/#creating-slos-with-cloudwatch)
	Cloudwatches []SloObjectiveRawMetricQueryCloudwatch `pulumi:"cloudwatches"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/datadog#creating-slos-with-datadog)
	Datadogs []SloObjectiveRawMetricQueryDatadog `pulumi:"datadogs"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/dynatrace#creating-slos-with-dynatrace)
	Dynatraces []SloObjectiveRawMetricQueryDynatrace `pulumi:"dynatraces"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/elasticsearch#creating-slos-with-elasticsearch)
	Elasticsearches []SloObjectiveRawMetricQueryElasticsearch `pulumi:"elasticsearches"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/google-cloud-monitoring#creating-slos-with-google-cloud-monitoring)
	Gcms []SloObjectiveRawMetricQueryGcm `pulumi:"gcms"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/grafana-loki#creating-slos-with-grafana-loki)
	GrafanaLokis []SloObjectiveRawMetricQueryGrafanaLoki `pulumi:"grafanaLokis"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/graphite#creating-slos-with-graphite)
	Graphites []SloObjectiveRawMetricQueryGraphite `pulumi:"graphites"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/honeycomb#creating-slos-with-honeycomb)
	Honeycombs []SloObjectiveRawMetricQueryHoneycomb `pulumi:"honeycombs"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/influxdb#creating-slos-with-influxdb)
	Influxdbs []SloObjectiveRawMetricQueryInfluxdb `pulumi:"influxdbs"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/instana#creating-slos-with-instana)
	Instanas []SloObjectiveRawMetricQueryInstana `pulumi:"instanas"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/lightstep#creating-slos-with-lightstep)
	Lightsteps []SloObjectiveRawMetricQueryLightstep `pulumi:"lightsteps"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/new-relic#creating-slos-with-new-relic)
	Newrelics []SloObjectiveRawMetricQueryNewrelic `pulumi:"newrelics"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/opentsdb#creating-slos-with-opentsdb)
	Opentsdbs []SloObjectiveRawMetricQueryOpentsdb `pulumi:"opentsdbs"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/pingdom#creating-slos-with-pingdom)
	Pingdoms []SloObjectiveRawMetricQueryPingdom `pulumi:"pingdoms"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/prometheus#creating-slos-with-prometheus)
	Prometheuses []SloObjectiveRawMetricQueryPrometheus `pulumi:"prometheuses"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Redshift/#creating-slos-with-amazon-redshift)
	Redshifts []SloObjectiveRawMetricQueryRedshift `pulumi:"redshifts"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/splunk#creating-slos-with-splunk-observability)
	SplunkObservabilities []SloObjectiveRawMetricQuerySplunkObservability `pulumi:"splunkObservabilities"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/splunk#creating-slos-with-splunk)
	Splunks []SloObjectiveRawMetricQuerySplunk `pulumi:"splunks"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/sumo-logic#creating-slos-with-sumo-logic)
	Sumologics []SloObjectiveRawMetricQuerySumologic `pulumi:"sumologics"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/thousandeyes#creating-slos-with-thousandeyes)
	Thousandeyes []SloObjectiveRawMetricQueryThousandeye `pulumi:"thousandeyes"`
}

// SloObjectiveRawMetricQueryInput is an input type that accepts SloObjectiveRawMetricQueryArgs and SloObjectiveRawMetricQueryOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryInput` via:
//
//	SloObjectiveRawMetricQueryArgs{...}
type SloObjectiveRawMetricQueryInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryOutput() SloObjectiveRawMetricQueryOutput
	ToSloObjectiveRawMetricQueryOutputWithContext(context.Context) SloObjectiveRawMetricQueryOutput
}

type SloObjectiveRawMetricQueryArgs struct {
	// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Prometheus/#creating-slos-with-ams-prometheus)
	AmazonPrometheuses SloObjectiveRawMetricQueryAmazonPrometheusArrayInput `pulumi:"amazonPrometheuses"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/appdynamics#creating-slos-with-appdynamics)
	Appdynamics SloObjectiveRawMetricQueryAppdynamicArrayInput `pulumi:"appdynamics"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/azure-monitor#creating-slos-with-azure-monitor)
	AzureMonitors SloObjectiveRawMetricQueryAzureMonitorArrayInput `pulumi:"azureMonitors"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/bigquery#creating-slos-with-bigquery)
	Bigqueries SloObjectiveRawMetricQueryBigqueryArrayInput `pulumi:"bigqueries"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_CloudWatch/#creating-slos-with-cloudwatch)
	Cloudwatches SloObjectiveRawMetricQueryCloudwatchArrayInput `pulumi:"cloudwatches"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/datadog#creating-slos-with-datadog)
	Datadogs SloObjectiveRawMetricQueryDatadogArrayInput `pulumi:"datadogs"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/dynatrace#creating-slos-with-dynatrace)
	Dynatraces SloObjectiveRawMetricQueryDynatraceArrayInput `pulumi:"dynatraces"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/elasticsearch#creating-slos-with-elasticsearch)
	Elasticsearches SloObjectiveRawMetricQueryElasticsearchArrayInput `pulumi:"elasticsearches"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/google-cloud-monitoring#creating-slos-with-google-cloud-monitoring)
	Gcms SloObjectiveRawMetricQueryGcmArrayInput `pulumi:"gcms"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/grafana-loki#creating-slos-with-grafana-loki)
	GrafanaLokis SloObjectiveRawMetricQueryGrafanaLokiArrayInput `pulumi:"grafanaLokis"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/graphite#creating-slos-with-graphite)
	Graphites SloObjectiveRawMetricQueryGraphiteArrayInput `pulumi:"graphites"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/honeycomb#creating-slos-with-honeycomb)
	Honeycombs SloObjectiveRawMetricQueryHoneycombArrayInput `pulumi:"honeycombs"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/influxdb#creating-slos-with-influxdb)
	Influxdbs SloObjectiveRawMetricQueryInfluxdbArrayInput `pulumi:"influxdbs"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/instana#creating-slos-with-instana)
	Instanas SloObjectiveRawMetricQueryInstanaArrayInput `pulumi:"instanas"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/lightstep#creating-slos-with-lightstep)
	Lightsteps SloObjectiveRawMetricQueryLightstepArrayInput `pulumi:"lightsteps"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/new-relic#creating-slos-with-new-relic)
	Newrelics SloObjectiveRawMetricQueryNewrelicArrayInput `pulumi:"newrelics"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/opentsdb#creating-slos-with-opentsdb)
	Opentsdbs SloObjectiveRawMetricQueryOpentsdbArrayInput `pulumi:"opentsdbs"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/pingdom#creating-slos-with-pingdom)
	Pingdoms SloObjectiveRawMetricQueryPingdomArrayInput `pulumi:"pingdoms"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/prometheus#creating-slos-with-prometheus)
	Prometheuses SloObjectiveRawMetricQueryPrometheusArrayInput `pulumi:"prometheuses"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Redshift/#creating-slos-with-amazon-redshift)
	Redshifts SloObjectiveRawMetricQueryRedshiftArrayInput `pulumi:"redshifts"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/splunk#creating-slos-with-splunk-observability)
	SplunkObservabilities SloObjectiveRawMetricQuerySplunkObservabilityArrayInput `pulumi:"splunkObservabilities"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/splunk#creating-slos-with-splunk)
	Splunks SloObjectiveRawMetricQuerySplunkArrayInput `pulumi:"splunks"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/sumo-logic#creating-slos-with-sumo-logic)
	Sumologics SloObjectiveRawMetricQuerySumologicArrayInput `pulumi:"sumologics"`
	// [Configuration documentation](https://docs.nobl9.com/Sources/thousandeyes#creating-slos-with-thousandeyes)
	Thousandeyes SloObjectiveRawMetricQueryThousandeyeArrayInput `pulumi:"thousandeyes"`
}

func (SloObjectiveRawMetricQueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQuery)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryArgs) ToSloObjectiveRawMetricQueryOutput() SloObjectiveRawMetricQueryOutput {
	return i.ToSloObjectiveRawMetricQueryOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryArgs) ToSloObjectiveRawMetricQueryOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryOutput)
}

// SloObjectiveRawMetricQueryArrayInput is an input type that accepts SloObjectiveRawMetricQueryArray and SloObjectiveRawMetricQueryArrayOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryArrayInput` via:
//
//	SloObjectiveRawMetricQueryArray{ SloObjectiveRawMetricQueryArgs{...} }
type SloObjectiveRawMetricQueryArrayInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryArrayOutput() SloObjectiveRawMetricQueryArrayOutput
	ToSloObjectiveRawMetricQueryArrayOutputWithContext(context.Context) SloObjectiveRawMetricQueryArrayOutput
}

type SloObjectiveRawMetricQueryArray []SloObjectiveRawMetricQueryInput

func (SloObjectiveRawMetricQueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQuery)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryArray) ToSloObjectiveRawMetricQueryArrayOutput() SloObjectiveRawMetricQueryArrayOutput {
	return i.ToSloObjectiveRawMetricQueryArrayOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryArray) ToSloObjectiveRawMetricQueryArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryArrayOutput)
}

type SloObjectiveRawMetricQueryOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQuery)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryOutput) ToSloObjectiveRawMetricQueryOutput() SloObjectiveRawMetricQueryOutput {
	return o
}

func (o SloObjectiveRawMetricQueryOutput) ToSloObjectiveRawMetricQueryOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryOutput {
	return o
}

// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Prometheus/#creating-slos-with-ams-prometheus)
func (o SloObjectiveRawMetricQueryOutput) AmazonPrometheuses() SloObjectiveRawMetricQueryAmazonPrometheusArrayOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQuery) []SloObjectiveRawMetricQueryAmazonPrometheus {
		return v.AmazonPrometheuses
	}).(SloObjectiveRawMetricQueryAmazonPrometheusArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/appdynamics#creating-slos-with-appdynamics)
func (o SloObjectiveRawMetricQueryOutput) Appdynamics() SloObjectiveRawMetricQueryAppdynamicArrayOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQuery) []SloObjectiveRawMetricQueryAppdynamic { return v.Appdynamics }).(SloObjectiveRawMetricQueryAppdynamicArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/azure-monitor#creating-slos-with-azure-monitor)
func (o SloObjectiveRawMetricQueryOutput) AzureMonitors() SloObjectiveRawMetricQueryAzureMonitorArrayOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQuery) []SloObjectiveRawMetricQueryAzureMonitor { return v.AzureMonitors }).(SloObjectiveRawMetricQueryAzureMonitorArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/bigquery#creating-slos-with-bigquery)
func (o SloObjectiveRawMetricQueryOutput) Bigqueries() SloObjectiveRawMetricQueryBigqueryArrayOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQuery) []SloObjectiveRawMetricQueryBigquery { return v.Bigqueries }).(SloObjectiveRawMetricQueryBigqueryArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_CloudWatch/#creating-slos-with-cloudwatch)
func (o SloObjectiveRawMetricQueryOutput) Cloudwatches() SloObjectiveRawMetricQueryCloudwatchArrayOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQuery) []SloObjectiveRawMetricQueryCloudwatch { return v.Cloudwatches }).(SloObjectiveRawMetricQueryCloudwatchArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/datadog#creating-slos-with-datadog)
func (o SloObjectiveRawMetricQueryOutput) Datadogs() SloObjectiveRawMetricQueryDatadogArrayOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQuery) []SloObjectiveRawMetricQueryDatadog { return v.Datadogs }).(SloObjectiveRawMetricQueryDatadogArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/dynatrace#creating-slos-with-dynatrace)
func (o SloObjectiveRawMetricQueryOutput) Dynatraces() SloObjectiveRawMetricQueryDynatraceArrayOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQuery) []SloObjectiveRawMetricQueryDynatrace { return v.Dynatraces }).(SloObjectiveRawMetricQueryDynatraceArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/elasticsearch#creating-slos-with-elasticsearch)
func (o SloObjectiveRawMetricQueryOutput) Elasticsearches() SloObjectiveRawMetricQueryElasticsearchArrayOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQuery) []SloObjectiveRawMetricQueryElasticsearch { return v.Elasticsearches }).(SloObjectiveRawMetricQueryElasticsearchArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/google-cloud-monitoring#creating-slos-with-google-cloud-monitoring)
func (o SloObjectiveRawMetricQueryOutput) Gcms() SloObjectiveRawMetricQueryGcmArrayOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQuery) []SloObjectiveRawMetricQueryGcm { return v.Gcms }).(SloObjectiveRawMetricQueryGcmArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/grafana-loki#creating-slos-with-grafana-loki)
func (o SloObjectiveRawMetricQueryOutput) GrafanaLokis() SloObjectiveRawMetricQueryGrafanaLokiArrayOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQuery) []SloObjectiveRawMetricQueryGrafanaLoki { return v.GrafanaLokis }).(SloObjectiveRawMetricQueryGrafanaLokiArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/graphite#creating-slos-with-graphite)
func (o SloObjectiveRawMetricQueryOutput) Graphites() SloObjectiveRawMetricQueryGraphiteArrayOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQuery) []SloObjectiveRawMetricQueryGraphite { return v.Graphites }).(SloObjectiveRawMetricQueryGraphiteArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/honeycomb#creating-slos-with-honeycomb)
func (o SloObjectiveRawMetricQueryOutput) Honeycombs() SloObjectiveRawMetricQueryHoneycombArrayOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQuery) []SloObjectiveRawMetricQueryHoneycomb { return v.Honeycombs }).(SloObjectiveRawMetricQueryHoneycombArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/influxdb#creating-slos-with-influxdb)
func (o SloObjectiveRawMetricQueryOutput) Influxdbs() SloObjectiveRawMetricQueryInfluxdbArrayOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQuery) []SloObjectiveRawMetricQueryInfluxdb { return v.Influxdbs }).(SloObjectiveRawMetricQueryInfluxdbArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/instana#creating-slos-with-instana)
func (o SloObjectiveRawMetricQueryOutput) Instanas() SloObjectiveRawMetricQueryInstanaArrayOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQuery) []SloObjectiveRawMetricQueryInstana { return v.Instanas }).(SloObjectiveRawMetricQueryInstanaArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/lightstep#creating-slos-with-lightstep)
func (o SloObjectiveRawMetricQueryOutput) Lightsteps() SloObjectiveRawMetricQueryLightstepArrayOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQuery) []SloObjectiveRawMetricQueryLightstep { return v.Lightsteps }).(SloObjectiveRawMetricQueryLightstepArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/new-relic#creating-slos-with-new-relic)
func (o SloObjectiveRawMetricQueryOutput) Newrelics() SloObjectiveRawMetricQueryNewrelicArrayOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQuery) []SloObjectiveRawMetricQueryNewrelic { return v.Newrelics }).(SloObjectiveRawMetricQueryNewrelicArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/opentsdb#creating-slos-with-opentsdb)
func (o SloObjectiveRawMetricQueryOutput) Opentsdbs() SloObjectiveRawMetricQueryOpentsdbArrayOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQuery) []SloObjectiveRawMetricQueryOpentsdb { return v.Opentsdbs }).(SloObjectiveRawMetricQueryOpentsdbArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/pingdom#creating-slos-with-pingdom)
func (o SloObjectiveRawMetricQueryOutput) Pingdoms() SloObjectiveRawMetricQueryPingdomArrayOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQuery) []SloObjectiveRawMetricQueryPingdom { return v.Pingdoms }).(SloObjectiveRawMetricQueryPingdomArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/prometheus#creating-slos-with-prometheus)
func (o SloObjectiveRawMetricQueryOutput) Prometheuses() SloObjectiveRawMetricQueryPrometheusArrayOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQuery) []SloObjectiveRawMetricQueryPrometheus { return v.Prometheuses }).(SloObjectiveRawMetricQueryPrometheusArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Redshift/#creating-slos-with-amazon-redshift)
func (o SloObjectiveRawMetricQueryOutput) Redshifts() SloObjectiveRawMetricQueryRedshiftArrayOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQuery) []SloObjectiveRawMetricQueryRedshift { return v.Redshifts }).(SloObjectiveRawMetricQueryRedshiftArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/splunk#creating-slos-with-splunk-observability)
func (o SloObjectiveRawMetricQueryOutput) SplunkObservabilities() SloObjectiveRawMetricQuerySplunkObservabilityArrayOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQuery) []SloObjectiveRawMetricQuerySplunkObservability {
		return v.SplunkObservabilities
	}).(SloObjectiveRawMetricQuerySplunkObservabilityArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/splunk#creating-slos-with-splunk)
func (o SloObjectiveRawMetricQueryOutput) Splunks() SloObjectiveRawMetricQuerySplunkArrayOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQuery) []SloObjectiveRawMetricQuerySplunk { return v.Splunks }).(SloObjectiveRawMetricQuerySplunkArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/sumo-logic#creating-slos-with-sumo-logic)
func (o SloObjectiveRawMetricQueryOutput) Sumologics() SloObjectiveRawMetricQuerySumologicArrayOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQuery) []SloObjectiveRawMetricQuerySumologic { return v.Sumologics }).(SloObjectiveRawMetricQuerySumologicArrayOutput)
}

// [Configuration documentation](https://docs.nobl9.com/Sources/thousandeyes#creating-slos-with-thousandeyes)
func (o SloObjectiveRawMetricQueryOutput) Thousandeyes() SloObjectiveRawMetricQueryThousandeyeArrayOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQuery) []SloObjectiveRawMetricQueryThousandeye { return v.Thousandeyes }).(SloObjectiveRawMetricQueryThousandeyeArrayOutput)
}

type SloObjectiveRawMetricQueryArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQuery)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryArrayOutput) ToSloObjectiveRawMetricQueryArrayOutput() SloObjectiveRawMetricQueryArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryArrayOutput) ToSloObjectiveRawMetricQueryArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryArrayOutput) Index(i pulumi.IntInput) SloObjectiveRawMetricQueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveRawMetricQuery {
		return vs[0].([]SloObjectiveRawMetricQuery)[vs[1].(int)]
	}).(SloObjectiveRawMetricQueryOutput)
}

type SloObjectiveRawMetricQueryAmazonPrometheus struct {
	// Query for the metrics
	Promql string `pulumi:"promql"`
}

// SloObjectiveRawMetricQueryAmazonPrometheusInput is an input type that accepts SloObjectiveRawMetricQueryAmazonPrometheusArgs and SloObjectiveRawMetricQueryAmazonPrometheusOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryAmazonPrometheusInput` via:
//
//	SloObjectiveRawMetricQueryAmazonPrometheusArgs{...}
type SloObjectiveRawMetricQueryAmazonPrometheusInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryAmazonPrometheusOutput() SloObjectiveRawMetricQueryAmazonPrometheusOutput
	ToSloObjectiveRawMetricQueryAmazonPrometheusOutputWithContext(context.Context) SloObjectiveRawMetricQueryAmazonPrometheusOutput
}

type SloObjectiveRawMetricQueryAmazonPrometheusArgs struct {
	// Query for the metrics
	Promql pulumi.StringInput `pulumi:"promql"`
}

func (SloObjectiveRawMetricQueryAmazonPrometheusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryAmazonPrometheus)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryAmazonPrometheusArgs) ToSloObjectiveRawMetricQueryAmazonPrometheusOutput() SloObjectiveRawMetricQueryAmazonPrometheusOutput {
	return i.ToSloObjectiveRawMetricQueryAmazonPrometheusOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryAmazonPrometheusArgs) ToSloObjectiveRawMetricQueryAmazonPrometheusOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryAmazonPrometheusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryAmazonPrometheusOutput)
}

// SloObjectiveRawMetricQueryAmazonPrometheusArrayInput is an input type that accepts SloObjectiveRawMetricQueryAmazonPrometheusArray and SloObjectiveRawMetricQueryAmazonPrometheusArrayOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryAmazonPrometheusArrayInput` via:
//
//	SloObjectiveRawMetricQueryAmazonPrometheusArray{ SloObjectiveRawMetricQueryAmazonPrometheusArgs{...} }
type SloObjectiveRawMetricQueryAmazonPrometheusArrayInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryAmazonPrometheusArrayOutput() SloObjectiveRawMetricQueryAmazonPrometheusArrayOutput
	ToSloObjectiveRawMetricQueryAmazonPrometheusArrayOutputWithContext(context.Context) SloObjectiveRawMetricQueryAmazonPrometheusArrayOutput
}

type SloObjectiveRawMetricQueryAmazonPrometheusArray []SloObjectiveRawMetricQueryAmazonPrometheusInput

func (SloObjectiveRawMetricQueryAmazonPrometheusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryAmazonPrometheus)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryAmazonPrometheusArray) ToSloObjectiveRawMetricQueryAmazonPrometheusArrayOutput() SloObjectiveRawMetricQueryAmazonPrometheusArrayOutput {
	return i.ToSloObjectiveRawMetricQueryAmazonPrometheusArrayOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryAmazonPrometheusArray) ToSloObjectiveRawMetricQueryAmazonPrometheusArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryAmazonPrometheusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryAmazonPrometheusArrayOutput)
}

type SloObjectiveRawMetricQueryAmazonPrometheusOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryAmazonPrometheusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryAmazonPrometheus)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryAmazonPrometheusOutput) ToSloObjectiveRawMetricQueryAmazonPrometheusOutput() SloObjectiveRawMetricQueryAmazonPrometheusOutput {
	return o
}

func (o SloObjectiveRawMetricQueryAmazonPrometheusOutput) ToSloObjectiveRawMetricQueryAmazonPrometheusOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryAmazonPrometheusOutput {
	return o
}

// Query for the metrics
func (o SloObjectiveRawMetricQueryAmazonPrometheusOutput) Promql() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryAmazonPrometheus) string { return v.Promql }).(pulumi.StringOutput)
}

type SloObjectiveRawMetricQueryAmazonPrometheusArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryAmazonPrometheusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryAmazonPrometheus)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryAmazonPrometheusArrayOutput) ToSloObjectiveRawMetricQueryAmazonPrometheusArrayOutput() SloObjectiveRawMetricQueryAmazonPrometheusArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryAmazonPrometheusArrayOutput) ToSloObjectiveRawMetricQueryAmazonPrometheusArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryAmazonPrometheusArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryAmazonPrometheusArrayOutput) Index(i pulumi.IntInput) SloObjectiveRawMetricQueryAmazonPrometheusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveRawMetricQueryAmazonPrometheus {
		return vs[0].([]SloObjectiveRawMetricQueryAmazonPrometheus)[vs[1].(int)]
	}).(SloObjectiveRawMetricQueryAmazonPrometheusOutput)
}

type SloObjectiveRawMetricQueryAppdynamic struct {
	// Name of the added application
	ApplicationName string `pulumi:"applicationName"`
	// Path to the metrics
	MetricPath string `pulumi:"metricPath"`
}

// SloObjectiveRawMetricQueryAppdynamicInput is an input type that accepts SloObjectiveRawMetricQueryAppdynamicArgs and SloObjectiveRawMetricQueryAppdynamicOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryAppdynamicInput` via:
//
//	SloObjectiveRawMetricQueryAppdynamicArgs{...}
type SloObjectiveRawMetricQueryAppdynamicInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryAppdynamicOutput() SloObjectiveRawMetricQueryAppdynamicOutput
	ToSloObjectiveRawMetricQueryAppdynamicOutputWithContext(context.Context) SloObjectiveRawMetricQueryAppdynamicOutput
}

type SloObjectiveRawMetricQueryAppdynamicArgs struct {
	// Name of the added application
	ApplicationName pulumi.StringInput `pulumi:"applicationName"`
	// Path to the metrics
	MetricPath pulumi.StringInput `pulumi:"metricPath"`
}

func (SloObjectiveRawMetricQueryAppdynamicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryAppdynamic)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryAppdynamicArgs) ToSloObjectiveRawMetricQueryAppdynamicOutput() SloObjectiveRawMetricQueryAppdynamicOutput {
	return i.ToSloObjectiveRawMetricQueryAppdynamicOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryAppdynamicArgs) ToSloObjectiveRawMetricQueryAppdynamicOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryAppdynamicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryAppdynamicOutput)
}

// SloObjectiveRawMetricQueryAppdynamicArrayInput is an input type that accepts SloObjectiveRawMetricQueryAppdynamicArray and SloObjectiveRawMetricQueryAppdynamicArrayOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryAppdynamicArrayInput` via:
//
//	SloObjectiveRawMetricQueryAppdynamicArray{ SloObjectiveRawMetricQueryAppdynamicArgs{...} }
type SloObjectiveRawMetricQueryAppdynamicArrayInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryAppdynamicArrayOutput() SloObjectiveRawMetricQueryAppdynamicArrayOutput
	ToSloObjectiveRawMetricQueryAppdynamicArrayOutputWithContext(context.Context) SloObjectiveRawMetricQueryAppdynamicArrayOutput
}

type SloObjectiveRawMetricQueryAppdynamicArray []SloObjectiveRawMetricQueryAppdynamicInput

func (SloObjectiveRawMetricQueryAppdynamicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryAppdynamic)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryAppdynamicArray) ToSloObjectiveRawMetricQueryAppdynamicArrayOutput() SloObjectiveRawMetricQueryAppdynamicArrayOutput {
	return i.ToSloObjectiveRawMetricQueryAppdynamicArrayOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryAppdynamicArray) ToSloObjectiveRawMetricQueryAppdynamicArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryAppdynamicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryAppdynamicArrayOutput)
}

type SloObjectiveRawMetricQueryAppdynamicOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryAppdynamicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryAppdynamic)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryAppdynamicOutput) ToSloObjectiveRawMetricQueryAppdynamicOutput() SloObjectiveRawMetricQueryAppdynamicOutput {
	return o
}

func (o SloObjectiveRawMetricQueryAppdynamicOutput) ToSloObjectiveRawMetricQueryAppdynamicOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryAppdynamicOutput {
	return o
}

// Name of the added application
func (o SloObjectiveRawMetricQueryAppdynamicOutput) ApplicationName() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryAppdynamic) string { return v.ApplicationName }).(pulumi.StringOutput)
}

// Path to the metrics
func (o SloObjectiveRawMetricQueryAppdynamicOutput) MetricPath() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryAppdynamic) string { return v.MetricPath }).(pulumi.StringOutput)
}

type SloObjectiveRawMetricQueryAppdynamicArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryAppdynamicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryAppdynamic)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryAppdynamicArrayOutput) ToSloObjectiveRawMetricQueryAppdynamicArrayOutput() SloObjectiveRawMetricQueryAppdynamicArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryAppdynamicArrayOutput) ToSloObjectiveRawMetricQueryAppdynamicArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryAppdynamicArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryAppdynamicArrayOutput) Index(i pulumi.IntInput) SloObjectiveRawMetricQueryAppdynamicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveRawMetricQueryAppdynamic {
		return vs[0].([]SloObjectiveRawMetricQueryAppdynamic)[vs[1].(int)]
	}).(SloObjectiveRawMetricQueryAppdynamicOutput)
}

type SloObjectiveRawMetricQueryAzureMonitor struct {
	// Aggregation type [Required for metrics]
	Aggregation *string `pulumi:"aggregation"`
	// Specifies source: 'metrics' or 'logs'
	DataType string `pulumi:"dataType"`
	// Dimensions of the metric [Optional for metrics]
	Dimensions []SloObjectiveRawMetricQueryAzureMonitorDimension `pulumi:"dimensions"`
	// Logs query in Kusto Query Language [Required for logs]
	KqlQuery *string `pulumi:"kqlQuery"`
	// Name of the metric [Required for metrics]
	MetricName *string `pulumi:"metricName"`
	// Namespace of the metric [Optional for metrics]
	MetricNamespace *string `pulumi:"metricNamespace"`
	// Identifier of the Azure Cloud resource [Required for metrics]
	ResourceId *string `pulumi:"resourceId"`
	// Log analytics workspace [Required for logs]
	Workspaces []SloObjectiveRawMetricQueryAzureMonitorWorkspace `pulumi:"workspaces"`
}

// SloObjectiveRawMetricQueryAzureMonitorInput is an input type that accepts SloObjectiveRawMetricQueryAzureMonitorArgs and SloObjectiveRawMetricQueryAzureMonitorOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryAzureMonitorInput` via:
//
//	SloObjectiveRawMetricQueryAzureMonitorArgs{...}
type SloObjectiveRawMetricQueryAzureMonitorInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryAzureMonitorOutput() SloObjectiveRawMetricQueryAzureMonitorOutput
	ToSloObjectiveRawMetricQueryAzureMonitorOutputWithContext(context.Context) SloObjectiveRawMetricQueryAzureMonitorOutput
}

type SloObjectiveRawMetricQueryAzureMonitorArgs struct {
	// Aggregation type [Required for metrics]
	Aggregation pulumi.StringPtrInput `pulumi:"aggregation"`
	// Specifies source: 'metrics' or 'logs'
	DataType pulumi.StringInput `pulumi:"dataType"`
	// Dimensions of the metric [Optional for metrics]
	Dimensions SloObjectiveRawMetricQueryAzureMonitorDimensionArrayInput `pulumi:"dimensions"`
	// Logs query in Kusto Query Language [Required for logs]
	KqlQuery pulumi.StringPtrInput `pulumi:"kqlQuery"`
	// Name of the metric [Required for metrics]
	MetricName pulumi.StringPtrInput `pulumi:"metricName"`
	// Namespace of the metric [Optional for metrics]
	MetricNamespace pulumi.StringPtrInput `pulumi:"metricNamespace"`
	// Identifier of the Azure Cloud resource [Required for metrics]
	ResourceId pulumi.StringPtrInput `pulumi:"resourceId"`
	// Log analytics workspace [Required for logs]
	Workspaces SloObjectiveRawMetricQueryAzureMonitorWorkspaceArrayInput `pulumi:"workspaces"`
}

func (SloObjectiveRawMetricQueryAzureMonitorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryAzureMonitor)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryAzureMonitorArgs) ToSloObjectiveRawMetricQueryAzureMonitorOutput() SloObjectiveRawMetricQueryAzureMonitorOutput {
	return i.ToSloObjectiveRawMetricQueryAzureMonitorOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryAzureMonitorArgs) ToSloObjectiveRawMetricQueryAzureMonitorOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryAzureMonitorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryAzureMonitorOutput)
}

// SloObjectiveRawMetricQueryAzureMonitorArrayInput is an input type that accepts SloObjectiveRawMetricQueryAzureMonitorArray and SloObjectiveRawMetricQueryAzureMonitorArrayOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryAzureMonitorArrayInput` via:
//
//	SloObjectiveRawMetricQueryAzureMonitorArray{ SloObjectiveRawMetricQueryAzureMonitorArgs{...} }
type SloObjectiveRawMetricQueryAzureMonitorArrayInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryAzureMonitorArrayOutput() SloObjectiveRawMetricQueryAzureMonitorArrayOutput
	ToSloObjectiveRawMetricQueryAzureMonitorArrayOutputWithContext(context.Context) SloObjectiveRawMetricQueryAzureMonitorArrayOutput
}

type SloObjectiveRawMetricQueryAzureMonitorArray []SloObjectiveRawMetricQueryAzureMonitorInput

func (SloObjectiveRawMetricQueryAzureMonitorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryAzureMonitor)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryAzureMonitorArray) ToSloObjectiveRawMetricQueryAzureMonitorArrayOutput() SloObjectiveRawMetricQueryAzureMonitorArrayOutput {
	return i.ToSloObjectiveRawMetricQueryAzureMonitorArrayOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryAzureMonitorArray) ToSloObjectiveRawMetricQueryAzureMonitorArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryAzureMonitorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryAzureMonitorArrayOutput)
}

type SloObjectiveRawMetricQueryAzureMonitorOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryAzureMonitorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryAzureMonitor)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryAzureMonitorOutput) ToSloObjectiveRawMetricQueryAzureMonitorOutput() SloObjectiveRawMetricQueryAzureMonitorOutput {
	return o
}

func (o SloObjectiveRawMetricQueryAzureMonitorOutput) ToSloObjectiveRawMetricQueryAzureMonitorOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryAzureMonitorOutput {
	return o
}

// Aggregation type [Required for metrics]
func (o SloObjectiveRawMetricQueryAzureMonitorOutput) Aggregation() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryAzureMonitor) *string { return v.Aggregation }).(pulumi.StringPtrOutput)
}

// Specifies source: 'metrics' or 'logs'
func (o SloObjectiveRawMetricQueryAzureMonitorOutput) DataType() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryAzureMonitor) string { return v.DataType }).(pulumi.StringOutput)
}

// Dimensions of the metric [Optional for metrics]
func (o SloObjectiveRawMetricQueryAzureMonitorOutput) Dimensions() SloObjectiveRawMetricQueryAzureMonitorDimensionArrayOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryAzureMonitor) []SloObjectiveRawMetricQueryAzureMonitorDimension {
		return v.Dimensions
	}).(SloObjectiveRawMetricQueryAzureMonitorDimensionArrayOutput)
}

// Logs query in Kusto Query Language [Required for logs]
func (o SloObjectiveRawMetricQueryAzureMonitorOutput) KqlQuery() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryAzureMonitor) *string { return v.KqlQuery }).(pulumi.StringPtrOutput)
}

// Name of the metric [Required for metrics]
func (o SloObjectiveRawMetricQueryAzureMonitorOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryAzureMonitor) *string { return v.MetricName }).(pulumi.StringPtrOutput)
}

// Namespace of the metric [Optional for metrics]
func (o SloObjectiveRawMetricQueryAzureMonitorOutput) MetricNamespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryAzureMonitor) *string { return v.MetricNamespace }).(pulumi.StringPtrOutput)
}

// Identifier of the Azure Cloud resource [Required for metrics]
func (o SloObjectiveRawMetricQueryAzureMonitorOutput) ResourceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryAzureMonitor) *string { return v.ResourceId }).(pulumi.StringPtrOutput)
}

// Log analytics workspace [Required for logs]
func (o SloObjectiveRawMetricQueryAzureMonitorOutput) Workspaces() SloObjectiveRawMetricQueryAzureMonitorWorkspaceArrayOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryAzureMonitor) []SloObjectiveRawMetricQueryAzureMonitorWorkspace {
		return v.Workspaces
	}).(SloObjectiveRawMetricQueryAzureMonitorWorkspaceArrayOutput)
}

type SloObjectiveRawMetricQueryAzureMonitorArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryAzureMonitorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryAzureMonitor)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryAzureMonitorArrayOutput) ToSloObjectiveRawMetricQueryAzureMonitorArrayOutput() SloObjectiveRawMetricQueryAzureMonitorArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryAzureMonitorArrayOutput) ToSloObjectiveRawMetricQueryAzureMonitorArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryAzureMonitorArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryAzureMonitorArrayOutput) Index(i pulumi.IntInput) SloObjectiveRawMetricQueryAzureMonitorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveRawMetricQueryAzureMonitor {
		return vs[0].([]SloObjectiveRawMetricQueryAzureMonitor)[vs[1].(int)]
	}).(SloObjectiveRawMetricQueryAzureMonitorOutput)
}

type SloObjectiveRawMetricQueryAzureMonitorDimension struct {
	// The name of the previously defined alert method.
	Name string `pulumi:"name"`
	// Burn rate value.
	Value string `pulumi:"value"`
}

// SloObjectiveRawMetricQueryAzureMonitorDimensionInput is an input type that accepts SloObjectiveRawMetricQueryAzureMonitorDimensionArgs and SloObjectiveRawMetricQueryAzureMonitorDimensionOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryAzureMonitorDimensionInput` via:
//
//	SloObjectiveRawMetricQueryAzureMonitorDimensionArgs{...}
type SloObjectiveRawMetricQueryAzureMonitorDimensionInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryAzureMonitorDimensionOutput() SloObjectiveRawMetricQueryAzureMonitorDimensionOutput
	ToSloObjectiveRawMetricQueryAzureMonitorDimensionOutputWithContext(context.Context) SloObjectiveRawMetricQueryAzureMonitorDimensionOutput
}

type SloObjectiveRawMetricQueryAzureMonitorDimensionArgs struct {
	// The name of the previously defined alert method.
	Name pulumi.StringInput `pulumi:"name"`
	// Burn rate value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (SloObjectiveRawMetricQueryAzureMonitorDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryAzureMonitorDimension)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryAzureMonitorDimensionArgs) ToSloObjectiveRawMetricQueryAzureMonitorDimensionOutput() SloObjectiveRawMetricQueryAzureMonitorDimensionOutput {
	return i.ToSloObjectiveRawMetricQueryAzureMonitorDimensionOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryAzureMonitorDimensionArgs) ToSloObjectiveRawMetricQueryAzureMonitorDimensionOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryAzureMonitorDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryAzureMonitorDimensionOutput)
}

// SloObjectiveRawMetricQueryAzureMonitorDimensionArrayInput is an input type that accepts SloObjectiveRawMetricQueryAzureMonitorDimensionArray and SloObjectiveRawMetricQueryAzureMonitorDimensionArrayOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryAzureMonitorDimensionArrayInput` via:
//
//	SloObjectiveRawMetricQueryAzureMonitorDimensionArray{ SloObjectiveRawMetricQueryAzureMonitorDimensionArgs{...} }
type SloObjectiveRawMetricQueryAzureMonitorDimensionArrayInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryAzureMonitorDimensionArrayOutput() SloObjectiveRawMetricQueryAzureMonitorDimensionArrayOutput
	ToSloObjectiveRawMetricQueryAzureMonitorDimensionArrayOutputWithContext(context.Context) SloObjectiveRawMetricQueryAzureMonitorDimensionArrayOutput
}

type SloObjectiveRawMetricQueryAzureMonitorDimensionArray []SloObjectiveRawMetricQueryAzureMonitorDimensionInput

func (SloObjectiveRawMetricQueryAzureMonitorDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryAzureMonitorDimension)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryAzureMonitorDimensionArray) ToSloObjectiveRawMetricQueryAzureMonitorDimensionArrayOutput() SloObjectiveRawMetricQueryAzureMonitorDimensionArrayOutput {
	return i.ToSloObjectiveRawMetricQueryAzureMonitorDimensionArrayOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryAzureMonitorDimensionArray) ToSloObjectiveRawMetricQueryAzureMonitorDimensionArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryAzureMonitorDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryAzureMonitorDimensionArrayOutput)
}

type SloObjectiveRawMetricQueryAzureMonitorDimensionOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryAzureMonitorDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryAzureMonitorDimension)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryAzureMonitorDimensionOutput) ToSloObjectiveRawMetricQueryAzureMonitorDimensionOutput() SloObjectiveRawMetricQueryAzureMonitorDimensionOutput {
	return o
}

func (o SloObjectiveRawMetricQueryAzureMonitorDimensionOutput) ToSloObjectiveRawMetricQueryAzureMonitorDimensionOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryAzureMonitorDimensionOutput {
	return o
}

// The name of the previously defined alert method.
func (o SloObjectiveRawMetricQueryAzureMonitorDimensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryAzureMonitorDimension) string { return v.Name }).(pulumi.StringOutput)
}

// Burn rate value.
func (o SloObjectiveRawMetricQueryAzureMonitorDimensionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryAzureMonitorDimension) string { return v.Value }).(pulumi.StringOutput)
}

type SloObjectiveRawMetricQueryAzureMonitorDimensionArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryAzureMonitorDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryAzureMonitorDimension)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryAzureMonitorDimensionArrayOutput) ToSloObjectiveRawMetricQueryAzureMonitorDimensionArrayOutput() SloObjectiveRawMetricQueryAzureMonitorDimensionArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryAzureMonitorDimensionArrayOutput) ToSloObjectiveRawMetricQueryAzureMonitorDimensionArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryAzureMonitorDimensionArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryAzureMonitorDimensionArrayOutput) Index(i pulumi.IntInput) SloObjectiveRawMetricQueryAzureMonitorDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveRawMetricQueryAzureMonitorDimension {
		return vs[0].([]SloObjectiveRawMetricQueryAzureMonitorDimension)[vs[1].(int)]
	}).(SloObjectiveRawMetricQueryAzureMonitorDimensionOutput)
}

type SloObjectiveRawMetricQueryAzureMonitorWorkspace struct {
	// Resource group of the workspace
	ResourceGroup string `pulumi:"resourceGroup"`
	// Subscription ID of the workspace
	SubscriptionId string `pulumi:"subscriptionId"`
	// ID of the workspace
	WorkspaceId string `pulumi:"workspaceId"`
}

// SloObjectiveRawMetricQueryAzureMonitorWorkspaceInput is an input type that accepts SloObjectiveRawMetricQueryAzureMonitorWorkspaceArgs and SloObjectiveRawMetricQueryAzureMonitorWorkspaceOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryAzureMonitorWorkspaceInput` via:
//
//	SloObjectiveRawMetricQueryAzureMonitorWorkspaceArgs{...}
type SloObjectiveRawMetricQueryAzureMonitorWorkspaceInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryAzureMonitorWorkspaceOutput() SloObjectiveRawMetricQueryAzureMonitorWorkspaceOutput
	ToSloObjectiveRawMetricQueryAzureMonitorWorkspaceOutputWithContext(context.Context) SloObjectiveRawMetricQueryAzureMonitorWorkspaceOutput
}

type SloObjectiveRawMetricQueryAzureMonitorWorkspaceArgs struct {
	// Resource group of the workspace
	ResourceGroup pulumi.StringInput `pulumi:"resourceGroup"`
	// Subscription ID of the workspace
	SubscriptionId pulumi.StringInput `pulumi:"subscriptionId"`
	// ID of the workspace
	WorkspaceId pulumi.StringInput `pulumi:"workspaceId"`
}

func (SloObjectiveRawMetricQueryAzureMonitorWorkspaceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryAzureMonitorWorkspace)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryAzureMonitorWorkspaceArgs) ToSloObjectiveRawMetricQueryAzureMonitorWorkspaceOutput() SloObjectiveRawMetricQueryAzureMonitorWorkspaceOutput {
	return i.ToSloObjectiveRawMetricQueryAzureMonitorWorkspaceOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryAzureMonitorWorkspaceArgs) ToSloObjectiveRawMetricQueryAzureMonitorWorkspaceOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryAzureMonitorWorkspaceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryAzureMonitorWorkspaceOutput)
}

// SloObjectiveRawMetricQueryAzureMonitorWorkspaceArrayInput is an input type that accepts SloObjectiveRawMetricQueryAzureMonitorWorkspaceArray and SloObjectiveRawMetricQueryAzureMonitorWorkspaceArrayOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryAzureMonitorWorkspaceArrayInput` via:
//
//	SloObjectiveRawMetricQueryAzureMonitorWorkspaceArray{ SloObjectiveRawMetricQueryAzureMonitorWorkspaceArgs{...} }
type SloObjectiveRawMetricQueryAzureMonitorWorkspaceArrayInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryAzureMonitorWorkspaceArrayOutput() SloObjectiveRawMetricQueryAzureMonitorWorkspaceArrayOutput
	ToSloObjectiveRawMetricQueryAzureMonitorWorkspaceArrayOutputWithContext(context.Context) SloObjectiveRawMetricQueryAzureMonitorWorkspaceArrayOutput
}

type SloObjectiveRawMetricQueryAzureMonitorWorkspaceArray []SloObjectiveRawMetricQueryAzureMonitorWorkspaceInput

func (SloObjectiveRawMetricQueryAzureMonitorWorkspaceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryAzureMonitorWorkspace)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryAzureMonitorWorkspaceArray) ToSloObjectiveRawMetricQueryAzureMonitorWorkspaceArrayOutput() SloObjectiveRawMetricQueryAzureMonitorWorkspaceArrayOutput {
	return i.ToSloObjectiveRawMetricQueryAzureMonitorWorkspaceArrayOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryAzureMonitorWorkspaceArray) ToSloObjectiveRawMetricQueryAzureMonitorWorkspaceArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryAzureMonitorWorkspaceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryAzureMonitorWorkspaceArrayOutput)
}

type SloObjectiveRawMetricQueryAzureMonitorWorkspaceOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryAzureMonitorWorkspaceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryAzureMonitorWorkspace)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryAzureMonitorWorkspaceOutput) ToSloObjectiveRawMetricQueryAzureMonitorWorkspaceOutput() SloObjectiveRawMetricQueryAzureMonitorWorkspaceOutput {
	return o
}

func (o SloObjectiveRawMetricQueryAzureMonitorWorkspaceOutput) ToSloObjectiveRawMetricQueryAzureMonitorWorkspaceOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryAzureMonitorWorkspaceOutput {
	return o
}

// Resource group of the workspace
func (o SloObjectiveRawMetricQueryAzureMonitorWorkspaceOutput) ResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryAzureMonitorWorkspace) string { return v.ResourceGroup }).(pulumi.StringOutput)
}

// Subscription ID of the workspace
func (o SloObjectiveRawMetricQueryAzureMonitorWorkspaceOutput) SubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryAzureMonitorWorkspace) string { return v.SubscriptionId }).(pulumi.StringOutput)
}

// ID of the workspace
func (o SloObjectiveRawMetricQueryAzureMonitorWorkspaceOutput) WorkspaceId() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryAzureMonitorWorkspace) string { return v.WorkspaceId }).(pulumi.StringOutput)
}

type SloObjectiveRawMetricQueryAzureMonitorWorkspaceArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryAzureMonitorWorkspaceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryAzureMonitorWorkspace)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryAzureMonitorWorkspaceArrayOutput) ToSloObjectiveRawMetricQueryAzureMonitorWorkspaceArrayOutput() SloObjectiveRawMetricQueryAzureMonitorWorkspaceArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryAzureMonitorWorkspaceArrayOutput) ToSloObjectiveRawMetricQueryAzureMonitorWorkspaceArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryAzureMonitorWorkspaceArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryAzureMonitorWorkspaceArrayOutput) Index(i pulumi.IntInput) SloObjectiveRawMetricQueryAzureMonitorWorkspaceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveRawMetricQueryAzureMonitorWorkspace {
		return vs[0].([]SloObjectiveRawMetricQueryAzureMonitorWorkspace)[vs[1].(int)]
	}).(SloObjectiveRawMetricQueryAzureMonitorWorkspaceOutput)
}

type SloObjectiveRawMetricQueryBigquery struct {
	// Location of you BigQuery
	Location string `pulumi:"location"`
	// Project ID
	ProjectId string `pulumi:"projectId"`
	// Query for the metrics
	Query string `pulumi:"query"`
}

// SloObjectiveRawMetricQueryBigqueryInput is an input type that accepts SloObjectiveRawMetricQueryBigqueryArgs and SloObjectiveRawMetricQueryBigqueryOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryBigqueryInput` via:
//
//	SloObjectiveRawMetricQueryBigqueryArgs{...}
type SloObjectiveRawMetricQueryBigqueryInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryBigqueryOutput() SloObjectiveRawMetricQueryBigqueryOutput
	ToSloObjectiveRawMetricQueryBigqueryOutputWithContext(context.Context) SloObjectiveRawMetricQueryBigqueryOutput
}

type SloObjectiveRawMetricQueryBigqueryArgs struct {
	// Location of you BigQuery
	Location pulumi.StringInput `pulumi:"location"`
	// Project ID
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// Query for the metrics
	Query pulumi.StringInput `pulumi:"query"`
}

func (SloObjectiveRawMetricQueryBigqueryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryBigquery)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryBigqueryArgs) ToSloObjectiveRawMetricQueryBigqueryOutput() SloObjectiveRawMetricQueryBigqueryOutput {
	return i.ToSloObjectiveRawMetricQueryBigqueryOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryBigqueryArgs) ToSloObjectiveRawMetricQueryBigqueryOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryBigqueryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryBigqueryOutput)
}

// SloObjectiveRawMetricQueryBigqueryArrayInput is an input type that accepts SloObjectiveRawMetricQueryBigqueryArray and SloObjectiveRawMetricQueryBigqueryArrayOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryBigqueryArrayInput` via:
//
//	SloObjectiveRawMetricQueryBigqueryArray{ SloObjectiveRawMetricQueryBigqueryArgs{...} }
type SloObjectiveRawMetricQueryBigqueryArrayInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryBigqueryArrayOutput() SloObjectiveRawMetricQueryBigqueryArrayOutput
	ToSloObjectiveRawMetricQueryBigqueryArrayOutputWithContext(context.Context) SloObjectiveRawMetricQueryBigqueryArrayOutput
}

type SloObjectiveRawMetricQueryBigqueryArray []SloObjectiveRawMetricQueryBigqueryInput

func (SloObjectiveRawMetricQueryBigqueryArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryBigquery)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryBigqueryArray) ToSloObjectiveRawMetricQueryBigqueryArrayOutput() SloObjectiveRawMetricQueryBigqueryArrayOutput {
	return i.ToSloObjectiveRawMetricQueryBigqueryArrayOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryBigqueryArray) ToSloObjectiveRawMetricQueryBigqueryArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryBigqueryArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryBigqueryArrayOutput)
}

type SloObjectiveRawMetricQueryBigqueryOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryBigqueryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryBigquery)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryBigqueryOutput) ToSloObjectiveRawMetricQueryBigqueryOutput() SloObjectiveRawMetricQueryBigqueryOutput {
	return o
}

func (o SloObjectiveRawMetricQueryBigqueryOutput) ToSloObjectiveRawMetricQueryBigqueryOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryBigqueryOutput {
	return o
}

// Location of you BigQuery
func (o SloObjectiveRawMetricQueryBigqueryOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryBigquery) string { return v.Location }).(pulumi.StringOutput)
}

// Project ID
func (o SloObjectiveRawMetricQueryBigqueryOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryBigquery) string { return v.ProjectId }).(pulumi.StringOutput)
}

// Query for the metrics
func (o SloObjectiveRawMetricQueryBigqueryOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryBigquery) string { return v.Query }).(pulumi.StringOutput)
}

type SloObjectiveRawMetricQueryBigqueryArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryBigqueryArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryBigquery)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryBigqueryArrayOutput) ToSloObjectiveRawMetricQueryBigqueryArrayOutput() SloObjectiveRawMetricQueryBigqueryArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryBigqueryArrayOutput) ToSloObjectiveRawMetricQueryBigqueryArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryBigqueryArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryBigqueryArrayOutput) Index(i pulumi.IntInput) SloObjectiveRawMetricQueryBigqueryOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveRawMetricQueryBigquery {
		return vs[0].([]SloObjectiveRawMetricQueryBigquery)[vs[1].(int)]
	}).(SloObjectiveRawMetricQueryBigqueryOutput)
}

type SloObjectiveRawMetricQueryCloudwatch struct {
	// AccountID used with cross-account observability feature
	AccountId *string `pulumi:"accountId"`
	// Dimensions of the metric [Optional for metrics]
	Dimensions []SloObjectiveRawMetricQueryCloudwatchDimension `pulumi:"dimensions"`
	// JSON query
	Json *string `pulumi:"json"`
	// Name of the metric [Required for metrics]
	MetricName *string `pulumi:"metricName"`
	// Namespace of the metric
	Namespace *string `pulumi:"namespace"`
	// Region of the CloudWatch instance
	Region string `pulumi:"region"`
	// SQL query
	Sql *string `pulumi:"sql"`
	// Metric data aggregations
	Stat *string `pulumi:"stat"`
}

// SloObjectiveRawMetricQueryCloudwatchInput is an input type that accepts SloObjectiveRawMetricQueryCloudwatchArgs and SloObjectiveRawMetricQueryCloudwatchOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryCloudwatchInput` via:
//
//	SloObjectiveRawMetricQueryCloudwatchArgs{...}
type SloObjectiveRawMetricQueryCloudwatchInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryCloudwatchOutput() SloObjectiveRawMetricQueryCloudwatchOutput
	ToSloObjectiveRawMetricQueryCloudwatchOutputWithContext(context.Context) SloObjectiveRawMetricQueryCloudwatchOutput
}

type SloObjectiveRawMetricQueryCloudwatchArgs struct {
	// AccountID used with cross-account observability feature
	AccountId pulumi.StringPtrInput `pulumi:"accountId"`
	// Dimensions of the metric [Optional for metrics]
	Dimensions SloObjectiveRawMetricQueryCloudwatchDimensionArrayInput `pulumi:"dimensions"`
	// JSON query
	Json pulumi.StringPtrInput `pulumi:"json"`
	// Name of the metric [Required for metrics]
	MetricName pulumi.StringPtrInput `pulumi:"metricName"`
	// Namespace of the metric
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// Region of the CloudWatch instance
	Region pulumi.StringInput `pulumi:"region"`
	// SQL query
	Sql pulumi.StringPtrInput `pulumi:"sql"`
	// Metric data aggregations
	Stat pulumi.StringPtrInput `pulumi:"stat"`
}

func (SloObjectiveRawMetricQueryCloudwatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryCloudwatch)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryCloudwatchArgs) ToSloObjectiveRawMetricQueryCloudwatchOutput() SloObjectiveRawMetricQueryCloudwatchOutput {
	return i.ToSloObjectiveRawMetricQueryCloudwatchOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryCloudwatchArgs) ToSloObjectiveRawMetricQueryCloudwatchOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryCloudwatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryCloudwatchOutput)
}

// SloObjectiveRawMetricQueryCloudwatchArrayInput is an input type that accepts SloObjectiveRawMetricQueryCloudwatchArray and SloObjectiveRawMetricQueryCloudwatchArrayOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryCloudwatchArrayInput` via:
//
//	SloObjectiveRawMetricQueryCloudwatchArray{ SloObjectiveRawMetricQueryCloudwatchArgs{...} }
type SloObjectiveRawMetricQueryCloudwatchArrayInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryCloudwatchArrayOutput() SloObjectiveRawMetricQueryCloudwatchArrayOutput
	ToSloObjectiveRawMetricQueryCloudwatchArrayOutputWithContext(context.Context) SloObjectiveRawMetricQueryCloudwatchArrayOutput
}

type SloObjectiveRawMetricQueryCloudwatchArray []SloObjectiveRawMetricQueryCloudwatchInput

func (SloObjectiveRawMetricQueryCloudwatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryCloudwatch)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryCloudwatchArray) ToSloObjectiveRawMetricQueryCloudwatchArrayOutput() SloObjectiveRawMetricQueryCloudwatchArrayOutput {
	return i.ToSloObjectiveRawMetricQueryCloudwatchArrayOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryCloudwatchArray) ToSloObjectiveRawMetricQueryCloudwatchArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryCloudwatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryCloudwatchArrayOutput)
}

type SloObjectiveRawMetricQueryCloudwatchOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryCloudwatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryCloudwatch)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryCloudwatchOutput) ToSloObjectiveRawMetricQueryCloudwatchOutput() SloObjectiveRawMetricQueryCloudwatchOutput {
	return o
}

func (o SloObjectiveRawMetricQueryCloudwatchOutput) ToSloObjectiveRawMetricQueryCloudwatchOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryCloudwatchOutput {
	return o
}

// AccountID used with cross-account observability feature
func (o SloObjectiveRawMetricQueryCloudwatchOutput) AccountId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryCloudwatch) *string { return v.AccountId }).(pulumi.StringPtrOutput)
}

// Dimensions of the metric [Optional for metrics]
func (o SloObjectiveRawMetricQueryCloudwatchOutput) Dimensions() SloObjectiveRawMetricQueryCloudwatchDimensionArrayOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryCloudwatch) []SloObjectiveRawMetricQueryCloudwatchDimension {
		return v.Dimensions
	}).(SloObjectiveRawMetricQueryCloudwatchDimensionArrayOutput)
}

// JSON query
func (o SloObjectiveRawMetricQueryCloudwatchOutput) Json() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryCloudwatch) *string { return v.Json }).(pulumi.StringPtrOutput)
}

// Name of the metric [Required for metrics]
func (o SloObjectiveRawMetricQueryCloudwatchOutput) MetricName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryCloudwatch) *string { return v.MetricName }).(pulumi.StringPtrOutput)
}

// Namespace of the metric
func (o SloObjectiveRawMetricQueryCloudwatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryCloudwatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// Region of the CloudWatch instance
func (o SloObjectiveRawMetricQueryCloudwatchOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryCloudwatch) string { return v.Region }).(pulumi.StringOutput)
}

// SQL query
func (o SloObjectiveRawMetricQueryCloudwatchOutput) Sql() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryCloudwatch) *string { return v.Sql }).(pulumi.StringPtrOutput)
}

// Metric data aggregations
func (o SloObjectiveRawMetricQueryCloudwatchOutput) Stat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryCloudwatch) *string { return v.Stat }).(pulumi.StringPtrOutput)
}

type SloObjectiveRawMetricQueryCloudwatchArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryCloudwatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryCloudwatch)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryCloudwatchArrayOutput) ToSloObjectiveRawMetricQueryCloudwatchArrayOutput() SloObjectiveRawMetricQueryCloudwatchArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryCloudwatchArrayOutput) ToSloObjectiveRawMetricQueryCloudwatchArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryCloudwatchArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryCloudwatchArrayOutput) Index(i pulumi.IntInput) SloObjectiveRawMetricQueryCloudwatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveRawMetricQueryCloudwatch {
		return vs[0].([]SloObjectiveRawMetricQueryCloudwatch)[vs[1].(int)]
	}).(SloObjectiveRawMetricQueryCloudwatchOutput)
}

type SloObjectiveRawMetricQueryCloudwatchDimension struct {
	// The name of the previously defined alert method.
	Name string `pulumi:"name"`
	// Burn rate value.
	Value string `pulumi:"value"`
}

// SloObjectiveRawMetricQueryCloudwatchDimensionInput is an input type that accepts SloObjectiveRawMetricQueryCloudwatchDimensionArgs and SloObjectiveRawMetricQueryCloudwatchDimensionOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryCloudwatchDimensionInput` via:
//
//	SloObjectiveRawMetricQueryCloudwatchDimensionArgs{...}
type SloObjectiveRawMetricQueryCloudwatchDimensionInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryCloudwatchDimensionOutput() SloObjectiveRawMetricQueryCloudwatchDimensionOutput
	ToSloObjectiveRawMetricQueryCloudwatchDimensionOutputWithContext(context.Context) SloObjectiveRawMetricQueryCloudwatchDimensionOutput
}

type SloObjectiveRawMetricQueryCloudwatchDimensionArgs struct {
	// The name of the previously defined alert method.
	Name pulumi.StringInput `pulumi:"name"`
	// Burn rate value.
	Value pulumi.StringInput `pulumi:"value"`
}

func (SloObjectiveRawMetricQueryCloudwatchDimensionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryCloudwatchDimension)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryCloudwatchDimensionArgs) ToSloObjectiveRawMetricQueryCloudwatchDimensionOutput() SloObjectiveRawMetricQueryCloudwatchDimensionOutput {
	return i.ToSloObjectiveRawMetricQueryCloudwatchDimensionOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryCloudwatchDimensionArgs) ToSloObjectiveRawMetricQueryCloudwatchDimensionOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryCloudwatchDimensionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryCloudwatchDimensionOutput)
}

// SloObjectiveRawMetricQueryCloudwatchDimensionArrayInput is an input type that accepts SloObjectiveRawMetricQueryCloudwatchDimensionArray and SloObjectiveRawMetricQueryCloudwatchDimensionArrayOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryCloudwatchDimensionArrayInput` via:
//
//	SloObjectiveRawMetricQueryCloudwatchDimensionArray{ SloObjectiveRawMetricQueryCloudwatchDimensionArgs{...} }
type SloObjectiveRawMetricQueryCloudwatchDimensionArrayInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryCloudwatchDimensionArrayOutput() SloObjectiveRawMetricQueryCloudwatchDimensionArrayOutput
	ToSloObjectiveRawMetricQueryCloudwatchDimensionArrayOutputWithContext(context.Context) SloObjectiveRawMetricQueryCloudwatchDimensionArrayOutput
}

type SloObjectiveRawMetricQueryCloudwatchDimensionArray []SloObjectiveRawMetricQueryCloudwatchDimensionInput

func (SloObjectiveRawMetricQueryCloudwatchDimensionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryCloudwatchDimension)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryCloudwatchDimensionArray) ToSloObjectiveRawMetricQueryCloudwatchDimensionArrayOutput() SloObjectiveRawMetricQueryCloudwatchDimensionArrayOutput {
	return i.ToSloObjectiveRawMetricQueryCloudwatchDimensionArrayOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryCloudwatchDimensionArray) ToSloObjectiveRawMetricQueryCloudwatchDimensionArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryCloudwatchDimensionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryCloudwatchDimensionArrayOutput)
}

type SloObjectiveRawMetricQueryCloudwatchDimensionOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryCloudwatchDimensionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryCloudwatchDimension)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryCloudwatchDimensionOutput) ToSloObjectiveRawMetricQueryCloudwatchDimensionOutput() SloObjectiveRawMetricQueryCloudwatchDimensionOutput {
	return o
}

func (o SloObjectiveRawMetricQueryCloudwatchDimensionOutput) ToSloObjectiveRawMetricQueryCloudwatchDimensionOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryCloudwatchDimensionOutput {
	return o
}

// The name of the previously defined alert method.
func (o SloObjectiveRawMetricQueryCloudwatchDimensionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryCloudwatchDimension) string { return v.Name }).(pulumi.StringOutput)
}

// Burn rate value.
func (o SloObjectiveRawMetricQueryCloudwatchDimensionOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryCloudwatchDimension) string { return v.Value }).(pulumi.StringOutput)
}

type SloObjectiveRawMetricQueryCloudwatchDimensionArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryCloudwatchDimensionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryCloudwatchDimension)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryCloudwatchDimensionArrayOutput) ToSloObjectiveRawMetricQueryCloudwatchDimensionArrayOutput() SloObjectiveRawMetricQueryCloudwatchDimensionArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryCloudwatchDimensionArrayOutput) ToSloObjectiveRawMetricQueryCloudwatchDimensionArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryCloudwatchDimensionArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryCloudwatchDimensionArrayOutput) Index(i pulumi.IntInput) SloObjectiveRawMetricQueryCloudwatchDimensionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveRawMetricQueryCloudwatchDimension {
		return vs[0].([]SloObjectiveRawMetricQueryCloudwatchDimension)[vs[1].(int)]
	}).(SloObjectiveRawMetricQueryCloudwatchDimensionOutput)
}

type SloObjectiveRawMetricQueryDatadog struct {
	// Query for the metrics
	Query string `pulumi:"query"`
}

// SloObjectiveRawMetricQueryDatadogInput is an input type that accepts SloObjectiveRawMetricQueryDatadogArgs and SloObjectiveRawMetricQueryDatadogOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryDatadogInput` via:
//
//	SloObjectiveRawMetricQueryDatadogArgs{...}
type SloObjectiveRawMetricQueryDatadogInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryDatadogOutput() SloObjectiveRawMetricQueryDatadogOutput
	ToSloObjectiveRawMetricQueryDatadogOutputWithContext(context.Context) SloObjectiveRawMetricQueryDatadogOutput
}

type SloObjectiveRawMetricQueryDatadogArgs struct {
	// Query for the metrics
	Query pulumi.StringInput `pulumi:"query"`
}

func (SloObjectiveRawMetricQueryDatadogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryDatadog)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryDatadogArgs) ToSloObjectiveRawMetricQueryDatadogOutput() SloObjectiveRawMetricQueryDatadogOutput {
	return i.ToSloObjectiveRawMetricQueryDatadogOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryDatadogArgs) ToSloObjectiveRawMetricQueryDatadogOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryDatadogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryDatadogOutput)
}

// SloObjectiveRawMetricQueryDatadogArrayInput is an input type that accepts SloObjectiveRawMetricQueryDatadogArray and SloObjectiveRawMetricQueryDatadogArrayOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryDatadogArrayInput` via:
//
//	SloObjectiveRawMetricQueryDatadogArray{ SloObjectiveRawMetricQueryDatadogArgs{...} }
type SloObjectiveRawMetricQueryDatadogArrayInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryDatadogArrayOutput() SloObjectiveRawMetricQueryDatadogArrayOutput
	ToSloObjectiveRawMetricQueryDatadogArrayOutputWithContext(context.Context) SloObjectiveRawMetricQueryDatadogArrayOutput
}

type SloObjectiveRawMetricQueryDatadogArray []SloObjectiveRawMetricQueryDatadogInput

func (SloObjectiveRawMetricQueryDatadogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryDatadog)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryDatadogArray) ToSloObjectiveRawMetricQueryDatadogArrayOutput() SloObjectiveRawMetricQueryDatadogArrayOutput {
	return i.ToSloObjectiveRawMetricQueryDatadogArrayOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryDatadogArray) ToSloObjectiveRawMetricQueryDatadogArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryDatadogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryDatadogArrayOutput)
}

type SloObjectiveRawMetricQueryDatadogOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryDatadogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryDatadog)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryDatadogOutput) ToSloObjectiveRawMetricQueryDatadogOutput() SloObjectiveRawMetricQueryDatadogOutput {
	return o
}

func (o SloObjectiveRawMetricQueryDatadogOutput) ToSloObjectiveRawMetricQueryDatadogOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryDatadogOutput {
	return o
}

// Query for the metrics
func (o SloObjectiveRawMetricQueryDatadogOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryDatadog) string { return v.Query }).(pulumi.StringOutput)
}

type SloObjectiveRawMetricQueryDatadogArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryDatadogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryDatadog)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryDatadogArrayOutput) ToSloObjectiveRawMetricQueryDatadogArrayOutput() SloObjectiveRawMetricQueryDatadogArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryDatadogArrayOutput) ToSloObjectiveRawMetricQueryDatadogArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryDatadogArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryDatadogArrayOutput) Index(i pulumi.IntInput) SloObjectiveRawMetricQueryDatadogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveRawMetricQueryDatadog {
		return vs[0].([]SloObjectiveRawMetricQueryDatadog)[vs[1].(int)]
	}).(SloObjectiveRawMetricQueryDatadogOutput)
}

type SloObjectiveRawMetricQueryDynatrace struct {
	// Selector for the metrics
	MetricSelector string `pulumi:"metricSelector"`
}

// SloObjectiveRawMetricQueryDynatraceInput is an input type that accepts SloObjectiveRawMetricQueryDynatraceArgs and SloObjectiveRawMetricQueryDynatraceOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryDynatraceInput` via:
//
//	SloObjectiveRawMetricQueryDynatraceArgs{...}
type SloObjectiveRawMetricQueryDynatraceInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryDynatraceOutput() SloObjectiveRawMetricQueryDynatraceOutput
	ToSloObjectiveRawMetricQueryDynatraceOutputWithContext(context.Context) SloObjectiveRawMetricQueryDynatraceOutput
}

type SloObjectiveRawMetricQueryDynatraceArgs struct {
	// Selector for the metrics
	MetricSelector pulumi.StringInput `pulumi:"metricSelector"`
}

func (SloObjectiveRawMetricQueryDynatraceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryDynatrace)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryDynatraceArgs) ToSloObjectiveRawMetricQueryDynatraceOutput() SloObjectiveRawMetricQueryDynatraceOutput {
	return i.ToSloObjectiveRawMetricQueryDynatraceOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryDynatraceArgs) ToSloObjectiveRawMetricQueryDynatraceOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryDynatraceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryDynatraceOutput)
}

// SloObjectiveRawMetricQueryDynatraceArrayInput is an input type that accepts SloObjectiveRawMetricQueryDynatraceArray and SloObjectiveRawMetricQueryDynatraceArrayOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryDynatraceArrayInput` via:
//
//	SloObjectiveRawMetricQueryDynatraceArray{ SloObjectiveRawMetricQueryDynatraceArgs{...} }
type SloObjectiveRawMetricQueryDynatraceArrayInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryDynatraceArrayOutput() SloObjectiveRawMetricQueryDynatraceArrayOutput
	ToSloObjectiveRawMetricQueryDynatraceArrayOutputWithContext(context.Context) SloObjectiveRawMetricQueryDynatraceArrayOutput
}

type SloObjectiveRawMetricQueryDynatraceArray []SloObjectiveRawMetricQueryDynatraceInput

func (SloObjectiveRawMetricQueryDynatraceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryDynatrace)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryDynatraceArray) ToSloObjectiveRawMetricQueryDynatraceArrayOutput() SloObjectiveRawMetricQueryDynatraceArrayOutput {
	return i.ToSloObjectiveRawMetricQueryDynatraceArrayOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryDynatraceArray) ToSloObjectiveRawMetricQueryDynatraceArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryDynatraceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryDynatraceArrayOutput)
}

type SloObjectiveRawMetricQueryDynatraceOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryDynatraceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryDynatrace)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryDynatraceOutput) ToSloObjectiveRawMetricQueryDynatraceOutput() SloObjectiveRawMetricQueryDynatraceOutput {
	return o
}

func (o SloObjectiveRawMetricQueryDynatraceOutput) ToSloObjectiveRawMetricQueryDynatraceOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryDynatraceOutput {
	return o
}

// Selector for the metrics
func (o SloObjectiveRawMetricQueryDynatraceOutput) MetricSelector() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryDynatrace) string { return v.MetricSelector }).(pulumi.StringOutput)
}

type SloObjectiveRawMetricQueryDynatraceArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryDynatraceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryDynatrace)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryDynatraceArrayOutput) ToSloObjectiveRawMetricQueryDynatraceArrayOutput() SloObjectiveRawMetricQueryDynatraceArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryDynatraceArrayOutput) ToSloObjectiveRawMetricQueryDynatraceArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryDynatraceArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryDynatraceArrayOutput) Index(i pulumi.IntInput) SloObjectiveRawMetricQueryDynatraceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveRawMetricQueryDynatrace {
		return vs[0].([]SloObjectiveRawMetricQueryDynatrace)[vs[1].(int)]
	}).(SloObjectiveRawMetricQueryDynatraceOutput)
}

type SloObjectiveRawMetricQueryElasticsearch struct {
	// Index of metrics we want to query
	Index string `pulumi:"index"`
	// Query for the metrics
	Query string `pulumi:"query"`
}

// SloObjectiveRawMetricQueryElasticsearchInput is an input type that accepts SloObjectiveRawMetricQueryElasticsearchArgs and SloObjectiveRawMetricQueryElasticsearchOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryElasticsearchInput` via:
//
//	SloObjectiveRawMetricQueryElasticsearchArgs{...}
type SloObjectiveRawMetricQueryElasticsearchInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryElasticsearchOutput() SloObjectiveRawMetricQueryElasticsearchOutput
	ToSloObjectiveRawMetricQueryElasticsearchOutputWithContext(context.Context) SloObjectiveRawMetricQueryElasticsearchOutput
}

type SloObjectiveRawMetricQueryElasticsearchArgs struct {
	// Index of metrics we want to query
	Index pulumi.StringInput `pulumi:"index"`
	// Query for the metrics
	Query pulumi.StringInput `pulumi:"query"`
}

func (SloObjectiveRawMetricQueryElasticsearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryElasticsearch)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryElasticsearchArgs) ToSloObjectiveRawMetricQueryElasticsearchOutput() SloObjectiveRawMetricQueryElasticsearchOutput {
	return i.ToSloObjectiveRawMetricQueryElasticsearchOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryElasticsearchArgs) ToSloObjectiveRawMetricQueryElasticsearchOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryElasticsearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryElasticsearchOutput)
}

// SloObjectiveRawMetricQueryElasticsearchArrayInput is an input type that accepts SloObjectiveRawMetricQueryElasticsearchArray and SloObjectiveRawMetricQueryElasticsearchArrayOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryElasticsearchArrayInput` via:
//
//	SloObjectiveRawMetricQueryElasticsearchArray{ SloObjectiveRawMetricQueryElasticsearchArgs{...} }
type SloObjectiveRawMetricQueryElasticsearchArrayInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryElasticsearchArrayOutput() SloObjectiveRawMetricQueryElasticsearchArrayOutput
	ToSloObjectiveRawMetricQueryElasticsearchArrayOutputWithContext(context.Context) SloObjectiveRawMetricQueryElasticsearchArrayOutput
}

type SloObjectiveRawMetricQueryElasticsearchArray []SloObjectiveRawMetricQueryElasticsearchInput

func (SloObjectiveRawMetricQueryElasticsearchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryElasticsearch)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryElasticsearchArray) ToSloObjectiveRawMetricQueryElasticsearchArrayOutput() SloObjectiveRawMetricQueryElasticsearchArrayOutput {
	return i.ToSloObjectiveRawMetricQueryElasticsearchArrayOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryElasticsearchArray) ToSloObjectiveRawMetricQueryElasticsearchArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryElasticsearchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryElasticsearchArrayOutput)
}

type SloObjectiveRawMetricQueryElasticsearchOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryElasticsearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryElasticsearch)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryElasticsearchOutput) ToSloObjectiveRawMetricQueryElasticsearchOutput() SloObjectiveRawMetricQueryElasticsearchOutput {
	return o
}

func (o SloObjectiveRawMetricQueryElasticsearchOutput) ToSloObjectiveRawMetricQueryElasticsearchOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryElasticsearchOutput {
	return o
}

// Index of metrics we want to query
func (o SloObjectiveRawMetricQueryElasticsearchOutput) Index() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryElasticsearch) string { return v.Index }).(pulumi.StringOutput)
}

// Query for the metrics
func (o SloObjectiveRawMetricQueryElasticsearchOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryElasticsearch) string { return v.Query }).(pulumi.StringOutput)
}

type SloObjectiveRawMetricQueryElasticsearchArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryElasticsearchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryElasticsearch)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryElasticsearchArrayOutput) ToSloObjectiveRawMetricQueryElasticsearchArrayOutput() SloObjectiveRawMetricQueryElasticsearchArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryElasticsearchArrayOutput) ToSloObjectiveRawMetricQueryElasticsearchArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryElasticsearchArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryElasticsearchArrayOutput) Index(i pulumi.IntInput) SloObjectiveRawMetricQueryElasticsearchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveRawMetricQueryElasticsearch {
		return vs[0].([]SloObjectiveRawMetricQueryElasticsearch)[vs[1].(int)]
	}).(SloObjectiveRawMetricQueryElasticsearchOutput)
}

type SloObjectiveRawMetricQueryGcm struct {
	// Project ID
	ProjectId string `pulumi:"projectId"`
	// Query for the metrics
	Query string `pulumi:"query"`
}

// SloObjectiveRawMetricQueryGcmInput is an input type that accepts SloObjectiveRawMetricQueryGcmArgs and SloObjectiveRawMetricQueryGcmOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryGcmInput` via:
//
//	SloObjectiveRawMetricQueryGcmArgs{...}
type SloObjectiveRawMetricQueryGcmInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryGcmOutput() SloObjectiveRawMetricQueryGcmOutput
	ToSloObjectiveRawMetricQueryGcmOutputWithContext(context.Context) SloObjectiveRawMetricQueryGcmOutput
}

type SloObjectiveRawMetricQueryGcmArgs struct {
	// Project ID
	ProjectId pulumi.StringInput `pulumi:"projectId"`
	// Query for the metrics
	Query pulumi.StringInput `pulumi:"query"`
}

func (SloObjectiveRawMetricQueryGcmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryGcm)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryGcmArgs) ToSloObjectiveRawMetricQueryGcmOutput() SloObjectiveRawMetricQueryGcmOutput {
	return i.ToSloObjectiveRawMetricQueryGcmOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryGcmArgs) ToSloObjectiveRawMetricQueryGcmOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryGcmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryGcmOutput)
}

// SloObjectiveRawMetricQueryGcmArrayInput is an input type that accepts SloObjectiveRawMetricQueryGcmArray and SloObjectiveRawMetricQueryGcmArrayOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryGcmArrayInput` via:
//
//	SloObjectiveRawMetricQueryGcmArray{ SloObjectiveRawMetricQueryGcmArgs{...} }
type SloObjectiveRawMetricQueryGcmArrayInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryGcmArrayOutput() SloObjectiveRawMetricQueryGcmArrayOutput
	ToSloObjectiveRawMetricQueryGcmArrayOutputWithContext(context.Context) SloObjectiveRawMetricQueryGcmArrayOutput
}

type SloObjectiveRawMetricQueryGcmArray []SloObjectiveRawMetricQueryGcmInput

func (SloObjectiveRawMetricQueryGcmArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryGcm)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryGcmArray) ToSloObjectiveRawMetricQueryGcmArrayOutput() SloObjectiveRawMetricQueryGcmArrayOutput {
	return i.ToSloObjectiveRawMetricQueryGcmArrayOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryGcmArray) ToSloObjectiveRawMetricQueryGcmArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryGcmArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryGcmArrayOutput)
}

type SloObjectiveRawMetricQueryGcmOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryGcmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryGcm)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryGcmOutput) ToSloObjectiveRawMetricQueryGcmOutput() SloObjectiveRawMetricQueryGcmOutput {
	return o
}

func (o SloObjectiveRawMetricQueryGcmOutput) ToSloObjectiveRawMetricQueryGcmOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryGcmOutput {
	return o
}

// Project ID
func (o SloObjectiveRawMetricQueryGcmOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryGcm) string { return v.ProjectId }).(pulumi.StringOutput)
}

// Query for the metrics
func (o SloObjectiveRawMetricQueryGcmOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryGcm) string { return v.Query }).(pulumi.StringOutput)
}

type SloObjectiveRawMetricQueryGcmArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryGcmArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryGcm)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryGcmArrayOutput) ToSloObjectiveRawMetricQueryGcmArrayOutput() SloObjectiveRawMetricQueryGcmArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryGcmArrayOutput) ToSloObjectiveRawMetricQueryGcmArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryGcmArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryGcmArrayOutput) Index(i pulumi.IntInput) SloObjectiveRawMetricQueryGcmOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveRawMetricQueryGcm {
		return vs[0].([]SloObjectiveRawMetricQueryGcm)[vs[1].(int)]
	}).(SloObjectiveRawMetricQueryGcmOutput)
}

type SloObjectiveRawMetricQueryGrafanaLoki struct {
	// Query for the logs
	Logql string `pulumi:"logql"`
}

// SloObjectiveRawMetricQueryGrafanaLokiInput is an input type that accepts SloObjectiveRawMetricQueryGrafanaLokiArgs and SloObjectiveRawMetricQueryGrafanaLokiOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryGrafanaLokiInput` via:
//
//	SloObjectiveRawMetricQueryGrafanaLokiArgs{...}
type SloObjectiveRawMetricQueryGrafanaLokiInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryGrafanaLokiOutput() SloObjectiveRawMetricQueryGrafanaLokiOutput
	ToSloObjectiveRawMetricQueryGrafanaLokiOutputWithContext(context.Context) SloObjectiveRawMetricQueryGrafanaLokiOutput
}

type SloObjectiveRawMetricQueryGrafanaLokiArgs struct {
	// Query for the logs
	Logql pulumi.StringInput `pulumi:"logql"`
}

func (SloObjectiveRawMetricQueryGrafanaLokiArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryGrafanaLoki)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryGrafanaLokiArgs) ToSloObjectiveRawMetricQueryGrafanaLokiOutput() SloObjectiveRawMetricQueryGrafanaLokiOutput {
	return i.ToSloObjectiveRawMetricQueryGrafanaLokiOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryGrafanaLokiArgs) ToSloObjectiveRawMetricQueryGrafanaLokiOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryGrafanaLokiOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryGrafanaLokiOutput)
}

// SloObjectiveRawMetricQueryGrafanaLokiArrayInput is an input type that accepts SloObjectiveRawMetricQueryGrafanaLokiArray and SloObjectiveRawMetricQueryGrafanaLokiArrayOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryGrafanaLokiArrayInput` via:
//
//	SloObjectiveRawMetricQueryGrafanaLokiArray{ SloObjectiveRawMetricQueryGrafanaLokiArgs{...} }
type SloObjectiveRawMetricQueryGrafanaLokiArrayInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryGrafanaLokiArrayOutput() SloObjectiveRawMetricQueryGrafanaLokiArrayOutput
	ToSloObjectiveRawMetricQueryGrafanaLokiArrayOutputWithContext(context.Context) SloObjectiveRawMetricQueryGrafanaLokiArrayOutput
}

type SloObjectiveRawMetricQueryGrafanaLokiArray []SloObjectiveRawMetricQueryGrafanaLokiInput

func (SloObjectiveRawMetricQueryGrafanaLokiArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryGrafanaLoki)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryGrafanaLokiArray) ToSloObjectiveRawMetricQueryGrafanaLokiArrayOutput() SloObjectiveRawMetricQueryGrafanaLokiArrayOutput {
	return i.ToSloObjectiveRawMetricQueryGrafanaLokiArrayOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryGrafanaLokiArray) ToSloObjectiveRawMetricQueryGrafanaLokiArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryGrafanaLokiArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryGrafanaLokiArrayOutput)
}

type SloObjectiveRawMetricQueryGrafanaLokiOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryGrafanaLokiOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryGrafanaLoki)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryGrafanaLokiOutput) ToSloObjectiveRawMetricQueryGrafanaLokiOutput() SloObjectiveRawMetricQueryGrafanaLokiOutput {
	return o
}

func (o SloObjectiveRawMetricQueryGrafanaLokiOutput) ToSloObjectiveRawMetricQueryGrafanaLokiOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryGrafanaLokiOutput {
	return o
}

// Query for the logs
func (o SloObjectiveRawMetricQueryGrafanaLokiOutput) Logql() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryGrafanaLoki) string { return v.Logql }).(pulumi.StringOutput)
}

type SloObjectiveRawMetricQueryGrafanaLokiArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryGrafanaLokiArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryGrafanaLoki)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryGrafanaLokiArrayOutput) ToSloObjectiveRawMetricQueryGrafanaLokiArrayOutput() SloObjectiveRawMetricQueryGrafanaLokiArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryGrafanaLokiArrayOutput) ToSloObjectiveRawMetricQueryGrafanaLokiArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryGrafanaLokiArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryGrafanaLokiArrayOutput) Index(i pulumi.IntInput) SloObjectiveRawMetricQueryGrafanaLokiOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveRawMetricQueryGrafanaLoki {
		return vs[0].([]SloObjectiveRawMetricQueryGrafanaLoki)[vs[1].(int)]
	}).(SloObjectiveRawMetricQueryGrafanaLokiOutput)
}

type SloObjectiveRawMetricQueryGraphite struct {
	// Path to the metrics
	MetricPath string `pulumi:"metricPath"`
}

// SloObjectiveRawMetricQueryGraphiteInput is an input type that accepts SloObjectiveRawMetricQueryGraphiteArgs and SloObjectiveRawMetricQueryGraphiteOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryGraphiteInput` via:
//
//	SloObjectiveRawMetricQueryGraphiteArgs{...}
type SloObjectiveRawMetricQueryGraphiteInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryGraphiteOutput() SloObjectiveRawMetricQueryGraphiteOutput
	ToSloObjectiveRawMetricQueryGraphiteOutputWithContext(context.Context) SloObjectiveRawMetricQueryGraphiteOutput
}

type SloObjectiveRawMetricQueryGraphiteArgs struct {
	// Path to the metrics
	MetricPath pulumi.StringInput `pulumi:"metricPath"`
}

func (SloObjectiveRawMetricQueryGraphiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryGraphite)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryGraphiteArgs) ToSloObjectiveRawMetricQueryGraphiteOutput() SloObjectiveRawMetricQueryGraphiteOutput {
	return i.ToSloObjectiveRawMetricQueryGraphiteOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryGraphiteArgs) ToSloObjectiveRawMetricQueryGraphiteOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryGraphiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryGraphiteOutput)
}

// SloObjectiveRawMetricQueryGraphiteArrayInput is an input type that accepts SloObjectiveRawMetricQueryGraphiteArray and SloObjectiveRawMetricQueryGraphiteArrayOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryGraphiteArrayInput` via:
//
//	SloObjectiveRawMetricQueryGraphiteArray{ SloObjectiveRawMetricQueryGraphiteArgs{...} }
type SloObjectiveRawMetricQueryGraphiteArrayInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryGraphiteArrayOutput() SloObjectiveRawMetricQueryGraphiteArrayOutput
	ToSloObjectiveRawMetricQueryGraphiteArrayOutputWithContext(context.Context) SloObjectiveRawMetricQueryGraphiteArrayOutput
}

type SloObjectiveRawMetricQueryGraphiteArray []SloObjectiveRawMetricQueryGraphiteInput

func (SloObjectiveRawMetricQueryGraphiteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryGraphite)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryGraphiteArray) ToSloObjectiveRawMetricQueryGraphiteArrayOutput() SloObjectiveRawMetricQueryGraphiteArrayOutput {
	return i.ToSloObjectiveRawMetricQueryGraphiteArrayOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryGraphiteArray) ToSloObjectiveRawMetricQueryGraphiteArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryGraphiteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryGraphiteArrayOutput)
}

type SloObjectiveRawMetricQueryGraphiteOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryGraphiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryGraphite)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryGraphiteOutput) ToSloObjectiveRawMetricQueryGraphiteOutput() SloObjectiveRawMetricQueryGraphiteOutput {
	return o
}

func (o SloObjectiveRawMetricQueryGraphiteOutput) ToSloObjectiveRawMetricQueryGraphiteOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryGraphiteOutput {
	return o
}

// Path to the metrics
func (o SloObjectiveRawMetricQueryGraphiteOutput) MetricPath() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryGraphite) string { return v.MetricPath }).(pulumi.StringOutput)
}

type SloObjectiveRawMetricQueryGraphiteArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryGraphiteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryGraphite)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryGraphiteArrayOutput) ToSloObjectiveRawMetricQueryGraphiteArrayOutput() SloObjectiveRawMetricQueryGraphiteArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryGraphiteArrayOutput) ToSloObjectiveRawMetricQueryGraphiteArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryGraphiteArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryGraphiteArrayOutput) Index(i pulumi.IntInput) SloObjectiveRawMetricQueryGraphiteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveRawMetricQueryGraphite {
		return vs[0].([]SloObjectiveRawMetricQueryGraphite)[vs[1].(int)]
	}).(SloObjectiveRawMetricQueryGraphiteOutput)
}

type SloObjectiveRawMetricQueryHoneycomb struct {
	// Column name - required for all calculation types besides 'CONCURRENCY' and 'COUNT'
	Attribute *string `pulumi:"attribute"`
	// Calculation type
	Calculation string `pulumi:"calculation"`
}

// SloObjectiveRawMetricQueryHoneycombInput is an input type that accepts SloObjectiveRawMetricQueryHoneycombArgs and SloObjectiveRawMetricQueryHoneycombOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryHoneycombInput` via:
//
//	SloObjectiveRawMetricQueryHoneycombArgs{...}
type SloObjectiveRawMetricQueryHoneycombInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryHoneycombOutput() SloObjectiveRawMetricQueryHoneycombOutput
	ToSloObjectiveRawMetricQueryHoneycombOutputWithContext(context.Context) SloObjectiveRawMetricQueryHoneycombOutput
}

type SloObjectiveRawMetricQueryHoneycombArgs struct {
	// Column name - required for all calculation types besides 'CONCURRENCY' and 'COUNT'
	Attribute pulumi.StringPtrInput `pulumi:"attribute"`
	// Calculation type
	Calculation pulumi.StringInput `pulumi:"calculation"`
}

func (SloObjectiveRawMetricQueryHoneycombArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryHoneycomb)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryHoneycombArgs) ToSloObjectiveRawMetricQueryHoneycombOutput() SloObjectiveRawMetricQueryHoneycombOutput {
	return i.ToSloObjectiveRawMetricQueryHoneycombOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryHoneycombArgs) ToSloObjectiveRawMetricQueryHoneycombOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryHoneycombOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryHoneycombOutput)
}

// SloObjectiveRawMetricQueryHoneycombArrayInput is an input type that accepts SloObjectiveRawMetricQueryHoneycombArray and SloObjectiveRawMetricQueryHoneycombArrayOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryHoneycombArrayInput` via:
//
//	SloObjectiveRawMetricQueryHoneycombArray{ SloObjectiveRawMetricQueryHoneycombArgs{...} }
type SloObjectiveRawMetricQueryHoneycombArrayInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryHoneycombArrayOutput() SloObjectiveRawMetricQueryHoneycombArrayOutput
	ToSloObjectiveRawMetricQueryHoneycombArrayOutputWithContext(context.Context) SloObjectiveRawMetricQueryHoneycombArrayOutput
}

type SloObjectiveRawMetricQueryHoneycombArray []SloObjectiveRawMetricQueryHoneycombInput

func (SloObjectiveRawMetricQueryHoneycombArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryHoneycomb)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryHoneycombArray) ToSloObjectiveRawMetricQueryHoneycombArrayOutput() SloObjectiveRawMetricQueryHoneycombArrayOutput {
	return i.ToSloObjectiveRawMetricQueryHoneycombArrayOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryHoneycombArray) ToSloObjectiveRawMetricQueryHoneycombArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryHoneycombArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryHoneycombArrayOutput)
}

type SloObjectiveRawMetricQueryHoneycombOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryHoneycombOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryHoneycomb)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryHoneycombOutput) ToSloObjectiveRawMetricQueryHoneycombOutput() SloObjectiveRawMetricQueryHoneycombOutput {
	return o
}

func (o SloObjectiveRawMetricQueryHoneycombOutput) ToSloObjectiveRawMetricQueryHoneycombOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryHoneycombOutput {
	return o
}

// Column name - required for all calculation types besides 'CONCURRENCY' and 'COUNT'
func (o SloObjectiveRawMetricQueryHoneycombOutput) Attribute() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryHoneycomb) *string { return v.Attribute }).(pulumi.StringPtrOutput)
}

// Calculation type
func (o SloObjectiveRawMetricQueryHoneycombOutput) Calculation() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryHoneycomb) string { return v.Calculation }).(pulumi.StringOutput)
}

type SloObjectiveRawMetricQueryHoneycombArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryHoneycombArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryHoneycomb)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryHoneycombArrayOutput) ToSloObjectiveRawMetricQueryHoneycombArrayOutput() SloObjectiveRawMetricQueryHoneycombArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryHoneycombArrayOutput) ToSloObjectiveRawMetricQueryHoneycombArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryHoneycombArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryHoneycombArrayOutput) Index(i pulumi.IntInput) SloObjectiveRawMetricQueryHoneycombOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveRawMetricQueryHoneycomb {
		return vs[0].([]SloObjectiveRawMetricQueryHoneycomb)[vs[1].(int)]
	}).(SloObjectiveRawMetricQueryHoneycombOutput)
}

type SloObjectiveRawMetricQueryInfluxdb struct {
	// Query for the metrics
	Query string `pulumi:"query"`
}

// SloObjectiveRawMetricQueryInfluxdbInput is an input type that accepts SloObjectiveRawMetricQueryInfluxdbArgs and SloObjectiveRawMetricQueryInfluxdbOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryInfluxdbInput` via:
//
//	SloObjectiveRawMetricQueryInfluxdbArgs{...}
type SloObjectiveRawMetricQueryInfluxdbInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryInfluxdbOutput() SloObjectiveRawMetricQueryInfluxdbOutput
	ToSloObjectiveRawMetricQueryInfluxdbOutputWithContext(context.Context) SloObjectiveRawMetricQueryInfluxdbOutput
}

type SloObjectiveRawMetricQueryInfluxdbArgs struct {
	// Query for the metrics
	Query pulumi.StringInput `pulumi:"query"`
}

func (SloObjectiveRawMetricQueryInfluxdbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryInfluxdb)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryInfluxdbArgs) ToSloObjectiveRawMetricQueryInfluxdbOutput() SloObjectiveRawMetricQueryInfluxdbOutput {
	return i.ToSloObjectiveRawMetricQueryInfluxdbOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryInfluxdbArgs) ToSloObjectiveRawMetricQueryInfluxdbOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryInfluxdbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryInfluxdbOutput)
}

// SloObjectiveRawMetricQueryInfluxdbArrayInput is an input type that accepts SloObjectiveRawMetricQueryInfluxdbArray and SloObjectiveRawMetricQueryInfluxdbArrayOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryInfluxdbArrayInput` via:
//
//	SloObjectiveRawMetricQueryInfluxdbArray{ SloObjectiveRawMetricQueryInfluxdbArgs{...} }
type SloObjectiveRawMetricQueryInfluxdbArrayInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryInfluxdbArrayOutput() SloObjectiveRawMetricQueryInfluxdbArrayOutput
	ToSloObjectiveRawMetricQueryInfluxdbArrayOutputWithContext(context.Context) SloObjectiveRawMetricQueryInfluxdbArrayOutput
}

type SloObjectiveRawMetricQueryInfluxdbArray []SloObjectiveRawMetricQueryInfluxdbInput

func (SloObjectiveRawMetricQueryInfluxdbArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryInfluxdb)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryInfluxdbArray) ToSloObjectiveRawMetricQueryInfluxdbArrayOutput() SloObjectiveRawMetricQueryInfluxdbArrayOutput {
	return i.ToSloObjectiveRawMetricQueryInfluxdbArrayOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryInfluxdbArray) ToSloObjectiveRawMetricQueryInfluxdbArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryInfluxdbArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryInfluxdbArrayOutput)
}

type SloObjectiveRawMetricQueryInfluxdbOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryInfluxdbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryInfluxdb)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryInfluxdbOutput) ToSloObjectiveRawMetricQueryInfluxdbOutput() SloObjectiveRawMetricQueryInfluxdbOutput {
	return o
}

func (o SloObjectiveRawMetricQueryInfluxdbOutput) ToSloObjectiveRawMetricQueryInfluxdbOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryInfluxdbOutput {
	return o
}

// Query for the metrics
func (o SloObjectiveRawMetricQueryInfluxdbOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryInfluxdb) string { return v.Query }).(pulumi.StringOutput)
}

type SloObjectiveRawMetricQueryInfluxdbArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryInfluxdbArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryInfluxdb)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryInfluxdbArrayOutput) ToSloObjectiveRawMetricQueryInfluxdbArrayOutput() SloObjectiveRawMetricQueryInfluxdbArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryInfluxdbArrayOutput) ToSloObjectiveRawMetricQueryInfluxdbArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryInfluxdbArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryInfluxdbArrayOutput) Index(i pulumi.IntInput) SloObjectiveRawMetricQueryInfluxdbOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveRawMetricQueryInfluxdb {
		return vs[0].([]SloObjectiveRawMetricQueryInfluxdb)[vs[1].(int)]
	}).(SloObjectiveRawMetricQueryInfluxdbOutput)
}

type SloObjectiveRawMetricQueryInstana struct {
	// Infrastructure metric type
	Applications []SloObjectiveRawMetricQueryInstanaApplication `pulumi:"applications"`
	// Infrastructure metric type
	Infrastructures []SloObjectiveRawMetricQueryInstanaInfrastructure `pulumi:"infrastructures"`
	// Instana metric type 'application' or 'infrastructure'
	MetricType string `pulumi:"metricType"`
}

// SloObjectiveRawMetricQueryInstanaInput is an input type that accepts SloObjectiveRawMetricQueryInstanaArgs and SloObjectiveRawMetricQueryInstanaOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryInstanaInput` via:
//
//	SloObjectiveRawMetricQueryInstanaArgs{...}
type SloObjectiveRawMetricQueryInstanaInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryInstanaOutput() SloObjectiveRawMetricQueryInstanaOutput
	ToSloObjectiveRawMetricQueryInstanaOutputWithContext(context.Context) SloObjectiveRawMetricQueryInstanaOutput
}

type SloObjectiveRawMetricQueryInstanaArgs struct {
	// Infrastructure metric type
	Applications SloObjectiveRawMetricQueryInstanaApplicationArrayInput `pulumi:"applications"`
	// Infrastructure metric type
	Infrastructures SloObjectiveRawMetricQueryInstanaInfrastructureArrayInput `pulumi:"infrastructures"`
	// Instana metric type 'application' or 'infrastructure'
	MetricType pulumi.StringInput `pulumi:"metricType"`
}

func (SloObjectiveRawMetricQueryInstanaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryInstana)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryInstanaArgs) ToSloObjectiveRawMetricQueryInstanaOutput() SloObjectiveRawMetricQueryInstanaOutput {
	return i.ToSloObjectiveRawMetricQueryInstanaOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryInstanaArgs) ToSloObjectiveRawMetricQueryInstanaOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryInstanaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryInstanaOutput)
}

// SloObjectiveRawMetricQueryInstanaArrayInput is an input type that accepts SloObjectiveRawMetricQueryInstanaArray and SloObjectiveRawMetricQueryInstanaArrayOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryInstanaArrayInput` via:
//
//	SloObjectiveRawMetricQueryInstanaArray{ SloObjectiveRawMetricQueryInstanaArgs{...} }
type SloObjectiveRawMetricQueryInstanaArrayInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryInstanaArrayOutput() SloObjectiveRawMetricQueryInstanaArrayOutput
	ToSloObjectiveRawMetricQueryInstanaArrayOutputWithContext(context.Context) SloObjectiveRawMetricQueryInstanaArrayOutput
}

type SloObjectiveRawMetricQueryInstanaArray []SloObjectiveRawMetricQueryInstanaInput

func (SloObjectiveRawMetricQueryInstanaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryInstana)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryInstanaArray) ToSloObjectiveRawMetricQueryInstanaArrayOutput() SloObjectiveRawMetricQueryInstanaArrayOutput {
	return i.ToSloObjectiveRawMetricQueryInstanaArrayOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryInstanaArray) ToSloObjectiveRawMetricQueryInstanaArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryInstanaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryInstanaArrayOutput)
}

type SloObjectiveRawMetricQueryInstanaOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryInstanaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryInstana)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryInstanaOutput) ToSloObjectiveRawMetricQueryInstanaOutput() SloObjectiveRawMetricQueryInstanaOutput {
	return o
}

func (o SloObjectiveRawMetricQueryInstanaOutput) ToSloObjectiveRawMetricQueryInstanaOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryInstanaOutput {
	return o
}

// Infrastructure metric type
func (o SloObjectiveRawMetricQueryInstanaOutput) Applications() SloObjectiveRawMetricQueryInstanaApplicationArrayOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryInstana) []SloObjectiveRawMetricQueryInstanaApplication {
		return v.Applications
	}).(SloObjectiveRawMetricQueryInstanaApplicationArrayOutput)
}

// Infrastructure metric type
func (o SloObjectiveRawMetricQueryInstanaOutput) Infrastructures() SloObjectiveRawMetricQueryInstanaInfrastructureArrayOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryInstana) []SloObjectiveRawMetricQueryInstanaInfrastructure {
		return v.Infrastructures
	}).(SloObjectiveRawMetricQueryInstanaInfrastructureArrayOutput)
}

// Instana metric type 'application' or 'infrastructure'
func (o SloObjectiveRawMetricQueryInstanaOutput) MetricType() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryInstana) string { return v.MetricType }).(pulumi.StringOutput)
}

type SloObjectiveRawMetricQueryInstanaArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryInstanaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryInstana)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryInstanaArrayOutput) ToSloObjectiveRawMetricQueryInstanaArrayOutput() SloObjectiveRawMetricQueryInstanaArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryInstanaArrayOutput) ToSloObjectiveRawMetricQueryInstanaArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryInstanaArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryInstanaArrayOutput) Index(i pulumi.IntInput) SloObjectiveRawMetricQueryInstanaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveRawMetricQueryInstana {
		return vs[0].([]SloObjectiveRawMetricQueryInstana)[vs[1].(int)]
	}).(SloObjectiveRawMetricQueryInstanaOutput)
}

type SloObjectiveRawMetricQueryInstanaApplication struct {
	// Aggregation type [Required for metrics]
	Aggregation string `pulumi:"aggregation"`
	// API query user passes in a JSON format
	ApiQuery string `pulumi:"apiQuery"`
	// Group by method
	GroupBies []SloObjectiveRawMetricQueryInstanaApplicationGroupBy `pulumi:"groupBies"`
	// Include internal
	IncludeInternal *bool `pulumi:"includeInternal"`
	// Include synthetic
	IncludeSynthetic *bool `pulumi:"includeSynthetic"`
	// Metric ID one of 'calls', 'erroneousCalls', 'errors', 'latency'
	MetricId string `pulumi:"metricId"`
}

// SloObjectiveRawMetricQueryInstanaApplicationInput is an input type that accepts SloObjectiveRawMetricQueryInstanaApplicationArgs and SloObjectiveRawMetricQueryInstanaApplicationOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryInstanaApplicationInput` via:
//
//	SloObjectiveRawMetricQueryInstanaApplicationArgs{...}
type SloObjectiveRawMetricQueryInstanaApplicationInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryInstanaApplicationOutput() SloObjectiveRawMetricQueryInstanaApplicationOutput
	ToSloObjectiveRawMetricQueryInstanaApplicationOutputWithContext(context.Context) SloObjectiveRawMetricQueryInstanaApplicationOutput
}

type SloObjectiveRawMetricQueryInstanaApplicationArgs struct {
	// Aggregation type [Required for metrics]
	Aggregation pulumi.StringInput `pulumi:"aggregation"`
	// API query user passes in a JSON format
	ApiQuery pulumi.StringInput `pulumi:"apiQuery"`
	// Group by method
	GroupBies SloObjectiveRawMetricQueryInstanaApplicationGroupByArrayInput `pulumi:"groupBies"`
	// Include internal
	IncludeInternal pulumi.BoolPtrInput `pulumi:"includeInternal"`
	// Include synthetic
	IncludeSynthetic pulumi.BoolPtrInput `pulumi:"includeSynthetic"`
	// Metric ID one of 'calls', 'erroneousCalls', 'errors', 'latency'
	MetricId pulumi.StringInput `pulumi:"metricId"`
}

func (SloObjectiveRawMetricQueryInstanaApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryInstanaApplication)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryInstanaApplicationArgs) ToSloObjectiveRawMetricQueryInstanaApplicationOutput() SloObjectiveRawMetricQueryInstanaApplicationOutput {
	return i.ToSloObjectiveRawMetricQueryInstanaApplicationOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryInstanaApplicationArgs) ToSloObjectiveRawMetricQueryInstanaApplicationOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryInstanaApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryInstanaApplicationOutput)
}

// SloObjectiveRawMetricQueryInstanaApplicationArrayInput is an input type that accepts SloObjectiveRawMetricQueryInstanaApplicationArray and SloObjectiveRawMetricQueryInstanaApplicationArrayOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryInstanaApplicationArrayInput` via:
//
//	SloObjectiveRawMetricQueryInstanaApplicationArray{ SloObjectiveRawMetricQueryInstanaApplicationArgs{...} }
type SloObjectiveRawMetricQueryInstanaApplicationArrayInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryInstanaApplicationArrayOutput() SloObjectiveRawMetricQueryInstanaApplicationArrayOutput
	ToSloObjectiveRawMetricQueryInstanaApplicationArrayOutputWithContext(context.Context) SloObjectiveRawMetricQueryInstanaApplicationArrayOutput
}

type SloObjectiveRawMetricQueryInstanaApplicationArray []SloObjectiveRawMetricQueryInstanaApplicationInput

func (SloObjectiveRawMetricQueryInstanaApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryInstanaApplication)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryInstanaApplicationArray) ToSloObjectiveRawMetricQueryInstanaApplicationArrayOutput() SloObjectiveRawMetricQueryInstanaApplicationArrayOutput {
	return i.ToSloObjectiveRawMetricQueryInstanaApplicationArrayOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryInstanaApplicationArray) ToSloObjectiveRawMetricQueryInstanaApplicationArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryInstanaApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryInstanaApplicationArrayOutput)
}

type SloObjectiveRawMetricQueryInstanaApplicationOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryInstanaApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryInstanaApplication)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryInstanaApplicationOutput) ToSloObjectiveRawMetricQueryInstanaApplicationOutput() SloObjectiveRawMetricQueryInstanaApplicationOutput {
	return o
}

func (o SloObjectiveRawMetricQueryInstanaApplicationOutput) ToSloObjectiveRawMetricQueryInstanaApplicationOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryInstanaApplicationOutput {
	return o
}

// Aggregation type [Required for metrics]
func (o SloObjectiveRawMetricQueryInstanaApplicationOutput) Aggregation() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryInstanaApplication) string { return v.Aggregation }).(pulumi.StringOutput)
}

// API query user passes in a JSON format
func (o SloObjectiveRawMetricQueryInstanaApplicationOutput) ApiQuery() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryInstanaApplication) string { return v.ApiQuery }).(pulumi.StringOutput)
}

// Group by method
func (o SloObjectiveRawMetricQueryInstanaApplicationOutput) GroupBies() SloObjectiveRawMetricQueryInstanaApplicationGroupByArrayOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryInstanaApplication) []SloObjectiveRawMetricQueryInstanaApplicationGroupBy {
		return v.GroupBies
	}).(SloObjectiveRawMetricQueryInstanaApplicationGroupByArrayOutput)
}

// Include internal
func (o SloObjectiveRawMetricQueryInstanaApplicationOutput) IncludeInternal() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryInstanaApplication) *bool { return v.IncludeInternal }).(pulumi.BoolPtrOutput)
}

// Include synthetic
func (o SloObjectiveRawMetricQueryInstanaApplicationOutput) IncludeSynthetic() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryInstanaApplication) *bool { return v.IncludeSynthetic }).(pulumi.BoolPtrOutput)
}

// Metric ID one of 'calls', 'erroneousCalls', 'errors', 'latency'
func (o SloObjectiveRawMetricQueryInstanaApplicationOutput) MetricId() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryInstanaApplication) string { return v.MetricId }).(pulumi.StringOutput)
}

type SloObjectiveRawMetricQueryInstanaApplicationArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryInstanaApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryInstanaApplication)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryInstanaApplicationArrayOutput) ToSloObjectiveRawMetricQueryInstanaApplicationArrayOutput() SloObjectiveRawMetricQueryInstanaApplicationArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryInstanaApplicationArrayOutput) ToSloObjectiveRawMetricQueryInstanaApplicationArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryInstanaApplicationArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryInstanaApplicationArrayOutput) Index(i pulumi.IntInput) SloObjectiveRawMetricQueryInstanaApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveRawMetricQueryInstanaApplication {
		return vs[0].([]SloObjectiveRawMetricQueryInstanaApplication)[vs[1].(int)]
	}).(SloObjectiveRawMetricQueryInstanaApplicationOutput)
}

type SloObjectiveRawMetricQueryInstanaApplicationGroupBy struct {
	// Group by tag
	Tag string `pulumi:"tag"`
	// Tag entity - one of 'DESTINATION', 'SOURCE', 'NOT_APPLICABLE'
	TagEntity         string  `pulumi:"tagEntity"`
	TagSecondLevelKey *string `pulumi:"tagSecondLevelKey"`
}

// SloObjectiveRawMetricQueryInstanaApplicationGroupByInput is an input type that accepts SloObjectiveRawMetricQueryInstanaApplicationGroupByArgs and SloObjectiveRawMetricQueryInstanaApplicationGroupByOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryInstanaApplicationGroupByInput` via:
//
//	SloObjectiveRawMetricQueryInstanaApplicationGroupByArgs{...}
type SloObjectiveRawMetricQueryInstanaApplicationGroupByInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryInstanaApplicationGroupByOutput() SloObjectiveRawMetricQueryInstanaApplicationGroupByOutput
	ToSloObjectiveRawMetricQueryInstanaApplicationGroupByOutputWithContext(context.Context) SloObjectiveRawMetricQueryInstanaApplicationGroupByOutput
}

type SloObjectiveRawMetricQueryInstanaApplicationGroupByArgs struct {
	// Group by tag
	Tag pulumi.StringInput `pulumi:"tag"`
	// Tag entity - one of 'DESTINATION', 'SOURCE', 'NOT_APPLICABLE'
	TagEntity         pulumi.StringInput    `pulumi:"tagEntity"`
	TagSecondLevelKey pulumi.StringPtrInput `pulumi:"tagSecondLevelKey"`
}

func (SloObjectiveRawMetricQueryInstanaApplicationGroupByArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryInstanaApplicationGroupBy)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryInstanaApplicationGroupByArgs) ToSloObjectiveRawMetricQueryInstanaApplicationGroupByOutput() SloObjectiveRawMetricQueryInstanaApplicationGroupByOutput {
	return i.ToSloObjectiveRawMetricQueryInstanaApplicationGroupByOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryInstanaApplicationGroupByArgs) ToSloObjectiveRawMetricQueryInstanaApplicationGroupByOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryInstanaApplicationGroupByOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryInstanaApplicationGroupByOutput)
}

// SloObjectiveRawMetricQueryInstanaApplicationGroupByArrayInput is an input type that accepts SloObjectiveRawMetricQueryInstanaApplicationGroupByArray and SloObjectiveRawMetricQueryInstanaApplicationGroupByArrayOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryInstanaApplicationGroupByArrayInput` via:
//
//	SloObjectiveRawMetricQueryInstanaApplicationGroupByArray{ SloObjectiveRawMetricQueryInstanaApplicationGroupByArgs{...} }
type SloObjectiveRawMetricQueryInstanaApplicationGroupByArrayInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryInstanaApplicationGroupByArrayOutput() SloObjectiveRawMetricQueryInstanaApplicationGroupByArrayOutput
	ToSloObjectiveRawMetricQueryInstanaApplicationGroupByArrayOutputWithContext(context.Context) SloObjectiveRawMetricQueryInstanaApplicationGroupByArrayOutput
}

type SloObjectiveRawMetricQueryInstanaApplicationGroupByArray []SloObjectiveRawMetricQueryInstanaApplicationGroupByInput

func (SloObjectiveRawMetricQueryInstanaApplicationGroupByArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryInstanaApplicationGroupBy)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryInstanaApplicationGroupByArray) ToSloObjectiveRawMetricQueryInstanaApplicationGroupByArrayOutput() SloObjectiveRawMetricQueryInstanaApplicationGroupByArrayOutput {
	return i.ToSloObjectiveRawMetricQueryInstanaApplicationGroupByArrayOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryInstanaApplicationGroupByArray) ToSloObjectiveRawMetricQueryInstanaApplicationGroupByArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryInstanaApplicationGroupByArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryInstanaApplicationGroupByArrayOutput)
}

type SloObjectiveRawMetricQueryInstanaApplicationGroupByOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryInstanaApplicationGroupByOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryInstanaApplicationGroupBy)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryInstanaApplicationGroupByOutput) ToSloObjectiveRawMetricQueryInstanaApplicationGroupByOutput() SloObjectiveRawMetricQueryInstanaApplicationGroupByOutput {
	return o
}

func (o SloObjectiveRawMetricQueryInstanaApplicationGroupByOutput) ToSloObjectiveRawMetricQueryInstanaApplicationGroupByOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryInstanaApplicationGroupByOutput {
	return o
}

// Group by tag
func (o SloObjectiveRawMetricQueryInstanaApplicationGroupByOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryInstanaApplicationGroupBy) string { return v.Tag }).(pulumi.StringOutput)
}

// Tag entity - one of 'DESTINATION', 'SOURCE', 'NOT_APPLICABLE'
func (o SloObjectiveRawMetricQueryInstanaApplicationGroupByOutput) TagEntity() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryInstanaApplicationGroupBy) string { return v.TagEntity }).(pulumi.StringOutput)
}

func (o SloObjectiveRawMetricQueryInstanaApplicationGroupByOutput) TagSecondLevelKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryInstanaApplicationGroupBy) *string { return v.TagSecondLevelKey }).(pulumi.StringPtrOutput)
}

type SloObjectiveRawMetricQueryInstanaApplicationGroupByArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryInstanaApplicationGroupByArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryInstanaApplicationGroupBy)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryInstanaApplicationGroupByArrayOutput) ToSloObjectiveRawMetricQueryInstanaApplicationGroupByArrayOutput() SloObjectiveRawMetricQueryInstanaApplicationGroupByArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryInstanaApplicationGroupByArrayOutput) ToSloObjectiveRawMetricQueryInstanaApplicationGroupByArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryInstanaApplicationGroupByArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryInstanaApplicationGroupByArrayOutput) Index(i pulumi.IntInput) SloObjectiveRawMetricQueryInstanaApplicationGroupByOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveRawMetricQueryInstanaApplicationGroupBy {
		return vs[0].([]SloObjectiveRawMetricQueryInstanaApplicationGroupBy)[vs[1].(int)]
	}).(SloObjectiveRawMetricQueryInstanaApplicationGroupByOutput)
}

type SloObjectiveRawMetricQueryInstanaInfrastructure struct {
	// Metric ID one of 'calls', 'erroneousCalls', 'errors', 'latency'
	MetricId string `pulumi:"metricId"`
	// Metric retrieval method 'query' or 'snapshot'
	MetricRetrievalMethod string `pulumi:"metricRetrievalMethod"`
	// Plugin ID
	PluginId string `pulumi:"pluginId"`
	// Query for the metrics
	Query *string `pulumi:"query"`
	// Snapshot ID
	SnapshotId *string `pulumi:"snapshotId"`
}

// SloObjectiveRawMetricQueryInstanaInfrastructureInput is an input type that accepts SloObjectiveRawMetricQueryInstanaInfrastructureArgs and SloObjectiveRawMetricQueryInstanaInfrastructureOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryInstanaInfrastructureInput` via:
//
//	SloObjectiveRawMetricQueryInstanaInfrastructureArgs{...}
type SloObjectiveRawMetricQueryInstanaInfrastructureInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryInstanaInfrastructureOutput() SloObjectiveRawMetricQueryInstanaInfrastructureOutput
	ToSloObjectiveRawMetricQueryInstanaInfrastructureOutputWithContext(context.Context) SloObjectiveRawMetricQueryInstanaInfrastructureOutput
}

type SloObjectiveRawMetricQueryInstanaInfrastructureArgs struct {
	// Metric ID one of 'calls', 'erroneousCalls', 'errors', 'latency'
	MetricId pulumi.StringInput `pulumi:"metricId"`
	// Metric retrieval method 'query' or 'snapshot'
	MetricRetrievalMethod pulumi.StringInput `pulumi:"metricRetrievalMethod"`
	// Plugin ID
	PluginId pulumi.StringInput `pulumi:"pluginId"`
	// Query for the metrics
	Query pulumi.StringPtrInput `pulumi:"query"`
	// Snapshot ID
	SnapshotId pulumi.StringPtrInput `pulumi:"snapshotId"`
}

func (SloObjectiveRawMetricQueryInstanaInfrastructureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryInstanaInfrastructure)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryInstanaInfrastructureArgs) ToSloObjectiveRawMetricQueryInstanaInfrastructureOutput() SloObjectiveRawMetricQueryInstanaInfrastructureOutput {
	return i.ToSloObjectiveRawMetricQueryInstanaInfrastructureOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryInstanaInfrastructureArgs) ToSloObjectiveRawMetricQueryInstanaInfrastructureOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryInstanaInfrastructureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryInstanaInfrastructureOutput)
}

// SloObjectiveRawMetricQueryInstanaInfrastructureArrayInput is an input type that accepts SloObjectiveRawMetricQueryInstanaInfrastructureArray and SloObjectiveRawMetricQueryInstanaInfrastructureArrayOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryInstanaInfrastructureArrayInput` via:
//
//	SloObjectiveRawMetricQueryInstanaInfrastructureArray{ SloObjectiveRawMetricQueryInstanaInfrastructureArgs{...} }
type SloObjectiveRawMetricQueryInstanaInfrastructureArrayInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryInstanaInfrastructureArrayOutput() SloObjectiveRawMetricQueryInstanaInfrastructureArrayOutput
	ToSloObjectiveRawMetricQueryInstanaInfrastructureArrayOutputWithContext(context.Context) SloObjectiveRawMetricQueryInstanaInfrastructureArrayOutput
}

type SloObjectiveRawMetricQueryInstanaInfrastructureArray []SloObjectiveRawMetricQueryInstanaInfrastructureInput

func (SloObjectiveRawMetricQueryInstanaInfrastructureArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryInstanaInfrastructure)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryInstanaInfrastructureArray) ToSloObjectiveRawMetricQueryInstanaInfrastructureArrayOutput() SloObjectiveRawMetricQueryInstanaInfrastructureArrayOutput {
	return i.ToSloObjectiveRawMetricQueryInstanaInfrastructureArrayOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryInstanaInfrastructureArray) ToSloObjectiveRawMetricQueryInstanaInfrastructureArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryInstanaInfrastructureArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryInstanaInfrastructureArrayOutput)
}

type SloObjectiveRawMetricQueryInstanaInfrastructureOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryInstanaInfrastructureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryInstanaInfrastructure)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryInstanaInfrastructureOutput) ToSloObjectiveRawMetricQueryInstanaInfrastructureOutput() SloObjectiveRawMetricQueryInstanaInfrastructureOutput {
	return o
}

func (o SloObjectiveRawMetricQueryInstanaInfrastructureOutput) ToSloObjectiveRawMetricQueryInstanaInfrastructureOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryInstanaInfrastructureOutput {
	return o
}

// Metric ID one of 'calls', 'erroneousCalls', 'errors', 'latency'
func (o SloObjectiveRawMetricQueryInstanaInfrastructureOutput) MetricId() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryInstanaInfrastructure) string { return v.MetricId }).(pulumi.StringOutput)
}

// Metric retrieval method 'query' or 'snapshot'
func (o SloObjectiveRawMetricQueryInstanaInfrastructureOutput) MetricRetrievalMethod() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryInstanaInfrastructure) string { return v.MetricRetrievalMethod }).(pulumi.StringOutput)
}

// Plugin ID
func (o SloObjectiveRawMetricQueryInstanaInfrastructureOutput) PluginId() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryInstanaInfrastructure) string { return v.PluginId }).(pulumi.StringOutput)
}

// Query for the metrics
func (o SloObjectiveRawMetricQueryInstanaInfrastructureOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryInstanaInfrastructure) *string { return v.Query }).(pulumi.StringPtrOutput)
}

// Snapshot ID
func (o SloObjectiveRawMetricQueryInstanaInfrastructureOutput) SnapshotId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryInstanaInfrastructure) *string { return v.SnapshotId }).(pulumi.StringPtrOutput)
}

type SloObjectiveRawMetricQueryInstanaInfrastructureArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryInstanaInfrastructureArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryInstanaInfrastructure)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryInstanaInfrastructureArrayOutput) ToSloObjectiveRawMetricQueryInstanaInfrastructureArrayOutput() SloObjectiveRawMetricQueryInstanaInfrastructureArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryInstanaInfrastructureArrayOutput) ToSloObjectiveRawMetricQueryInstanaInfrastructureArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryInstanaInfrastructureArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryInstanaInfrastructureArrayOutput) Index(i pulumi.IntInput) SloObjectiveRawMetricQueryInstanaInfrastructureOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveRawMetricQueryInstanaInfrastructure {
		return vs[0].([]SloObjectiveRawMetricQueryInstanaInfrastructure)[vs[1].(int)]
	}).(SloObjectiveRawMetricQueryInstanaInfrastructureOutput)
}

type SloObjectiveRawMetricQueryLightstep struct {
	// Optional value to filter by percentiles
	Percentile *float64 `pulumi:"percentile"`
	// ID of the metrics stream
	StreamId *string `pulumi:"streamId"`
	// Type of data to filter by
	TypeOfData string `pulumi:"typeOfData"`
	// UQL query
	Uql *string `pulumi:"uql"`
}

// SloObjectiveRawMetricQueryLightstepInput is an input type that accepts SloObjectiveRawMetricQueryLightstepArgs and SloObjectiveRawMetricQueryLightstepOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryLightstepInput` via:
//
//	SloObjectiveRawMetricQueryLightstepArgs{...}
type SloObjectiveRawMetricQueryLightstepInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryLightstepOutput() SloObjectiveRawMetricQueryLightstepOutput
	ToSloObjectiveRawMetricQueryLightstepOutputWithContext(context.Context) SloObjectiveRawMetricQueryLightstepOutput
}

type SloObjectiveRawMetricQueryLightstepArgs struct {
	// Optional value to filter by percentiles
	Percentile pulumi.Float64PtrInput `pulumi:"percentile"`
	// ID of the metrics stream
	StreamId pulumi.StringPtrInput `pulumi:"streamId"`
	// Type of data to filter by
	TypeOfData pulumi.StringInput `pulumi:"typeOfData"`
	// UQL query
	Uql pulumi.StringPtrInput `pulumi:"uql"`
}

func (SloObjectiveRawMetricQueryLightstepArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryLightstep)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryLightstepArgs) ToSloObjectiveRawMetricQueryLightstepOutput() SloObjectiveRawMetricQueryLightstepOutput {
	return i.ToSloObjectiveRawMetricQueryLightstepOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryLightstepArgs) ToSloObjectiveRawMetricQueryLightstepOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryLightstepOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryLightstepOutput)
}

// SloObjectiveRawMetricQueryLightstepArrayInput is an input type that accepts SloObjectiveRawMetricQueryLightstepArray and SloObjectiveRawMetricQueryLightstepArrayOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryLightstepArrayInput` via:
//
//	SloObjectiveRawMetricQueryLightstepArray{ SloObjectiveRawMetricQueryLightstepArgs{...} }
type SloObjectiveRawMetricQueryLightstepArrayInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryLightstepArrayOutput() SloObjectiveRawMetricQueryLightstepArrayOutput
	ToSloObjectiveRawMetricQueryLightstepArrayOutputWithContext(context.Context) SloObjectiveRawMetricQueryLightstepArrayOutput
}

type SloObjectiveRawMetricQueryLightstepArray []SloObjectiveRawMetricQueryLightstepInput

func (SloObjectiveRawMetricQueryLightstepArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryLightstep)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryLightstepArray) ToSloObjectiveRawMetricQueryLightstepArrayOutput() SloObjectiveRawMetricQueryLightstepArrayOutput {
	return i.ToSloObjectiveRawMetricQueryLightstepArrayOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryLightstepArray) ToSloObjectiveRawMetricQueryLightstepArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryLightstepArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryLightstepArrayOutput)
}

type SloObjectiveRawMetricQueryLightstepOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryLightstepOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryLightstep)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryLightstepOutput) ToSloObjectiveRawMetricQueryLightstepOutput() SloObjectiveRawMetricQueryLightstepOutput {
	return o
}

func (o SloObjectiveRawMetricQueryLightstepOutput) ToSloObjectiveRawMetricQueryLightstepOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryLightstepOutput {
	return o
}

// Optional value to filter by percentiles
func (o SloObjectiveRawMetricQueryLightstepOutput) Percentile() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryLightstep) *float64 { return v.Percentile }).(pulumi.Float64PtrOutput)
}

// ID of the metrics stream
func (o SloObjectiveRawMetricQueryLightstepOutput) StreamId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryLightstep) *string { return v.StreamId }).(pulumi.StringPtrOutput)
}

// Type of data to filter by
func (o SloObjectiveRawMetricQueryLightstepOutput) TypeOfData() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryLightstep) string { return v.TypeOfData }).(pulumi.StringOutput)
}

// UQL query
func (o SloObjectiveRawMetricQueryLightstepOutput) Uql() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryLightstep) *string { return v.Uql }).(pulumi.StringPtrOutput)
}

type SloObjectiveRawMetricQueryLightstepArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryLightstepArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryLightstep)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryLightstepArrayOutput) ToSloObjectiveRawMetricQueryLightstepArrayOutput() SloObjectiveRawMetricQueryLightstepArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryLightstepArrayOutput) ToSloObjectiveRawMetricQueryLightstepArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryLightstepArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryLightstepArrayOutput) Index(i pulumi.IntInput) SloObjectiveRawMetricQueryLightstepOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveRawMetricQueryLightstep {
		return vs[0].([]SloObjectiveRawMetricQueryLightstep)[vs[1].(int)]
	}).(SloObjectiveRawMetricQueryLightstepOutput)
}

type SloObjectiveRawMetricQueryNewrelic struct {
	// Query for the metrics
	Nrql string `pulumi:"nrql"`
}

// SloObjectiveRawMetricQueryNewrelicInput is an input type that accepts SloObjectiveRawMetricQueryNewrelicArgs and SloObjectiveRawMetricQueryNewrelicOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryNewrelicInput` via:
//
//	SloObjectiveRawMetricQueryNewrelicArgs{...}
type SloObjectiveRawMetricQueryNewrelicInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryNewrelicOutput() SloObjectiveRawMetricQueryNewrelicOutput
	ToSloObjectiveRawMetricQueryNewrelicOutputWithContext(context.Context) SloObjectiveRawMetricQueryNewrelicOutput
}

type SloObjectiveRawMetricQueryNewrelicArgs struct {
	// Query for the metrics
	Nrql pulumi.StringInput `pulumi:"nrql"`
}

func (SloObjectiveRawMetricQueryNewrelicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryNewrelic)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryNewrelicArgs) ToSloObjectiveRawMetricQueryNewrelicOutput() SloObjectiveRawMetricQueryNewrelicOutput {
	return i.ToSloObjectiveRawMetricQueryNewrelicOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryNewrelicArgs) ToSloObjectiveRawMetricQueryNewrelicOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryNewrelicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryNewrelicOutput)
}

// SloObjectiveRawMetricQueryNewrelicArrayInput is an input type that accepts SloObjectiveRawMetricQueryNewrelicArray and SloObjectiveRawMetricQueryNewrelicArrayOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryNewrelicArrayInput` via:
//
//	SloObjectiveRawMetricQueryNewrelicArray{ SloObjectiveRawMetricQueryNewrelicArgs{...} }
type SloObjectiveRawMetricQueryNewrelicArrayInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryNewrelicArrayOutput() SloObjectiveRawMetricQueryNewrelicArrayOutput
	ToSloObjectiveRawMetricQueryNewrelicArrayOutputWithContext(context.Context) SloObjectiveRawMetricQueryNewrelicArrayOutput
}

type SloObjectiveRawMetricQueryNewrelicArray []SloObjectiveRawMetricQueryNewrelicInput

func (SloObjectiveRawMetricQueryNewrelicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryNewrelic)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryNewrelicArray) ToSloObjectiveRawMetricQueryNewrelicArrayOutput() SloObjectiveRawMetricQueryNewrelicArrayOutput {
	return i.ToSloObjectiveRawMetricQueryNewrelicArrayOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryNewrelicArray) ToSloObjectiveRawMetricQueryNewrelicArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryNewrelicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryNewrelicArrayOutput)
}

type SloObjectiveRawMetricQueryNewrelicOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryNewrelicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryNewrelic)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryNewrelicOutput) ToSloObjectiveRawMetricQueryNewrelicOutput() SloObjectiveRawMetricQueryNewrelicOutput {
	return o
}

func (o SloObjectiveRawMetricQueryNewrelicOutput) ToSloObjectiveRawMetricQueryNewrelicOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryNewrelicOutput {
	return o
}

// Query for the metrics
func (o SloObjectiveRawMetricQueryNewrelicOutput) Nrql() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryNewrelic) string { return v.Nrql }).(pulumi.StringOutput)
}

type SloObjectiveRawMetricQueryNewrelicArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryNewrelicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryNewrelic)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryNewrelicArrayOutput) ToSloObjectiveRawMetricQueryNewrelicArrayOutput() SloObjectiveRawMetricQueryNewrelicArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryNewrelicArrayOutput) ToSloObjectiveRawMetricQueryNewrelicArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryNewrelicArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryNewrelicArrayOutput) Index(i pulumi.IntInput) SloObjectiveRawMetricQueryNewrelicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveRawMetricQueryNewrelic {
		return vs[0].([]SloObjectiveRawMetricQueryNewrelic)[vs[1].(int)]
	}).(SloObjectiveRawMetricQueryNewrelicOutput)
}

type SloObjectiveRawMetricQueryOpentsdb struct {
	// Query for the metrics
	Query string `pulumi:"query"`
}

// SloObjectiveRawMetricQueryOpentsdbInput is an input type that accepts SloObjectiveRawMetricQueryOpentsdbArgs and SloObjectiveRawMetricQueryOpentsdbOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryOpentsdbInput` via:
//
//	SloObjectiveRawMetricQueryOpentsdbArgs{...}
type SloObjectiveRawMetricQueryOpentsdbInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryOpentsdbOutput() SloObjectiveRawMetricQueryOpentsdbOutput
	ToSloObjectiveRawMetricQueryOpentsdbOutputWithContext(context.Context) SloObjectiveRawMetricQueryOpentsdbOutput
}

type SloObjectiveRawMetricQueryOpentsdbArgs struct {
	// Query for the metrics
	Query pulumi.StringInput `pulumi:"query"`
}

func (SloObjectiveRawMetricQueryOpentsdbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryOpentsdb)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryOpentsdbArgs) ToSloObjectiveRawMetricQueryOpentsdbOutput() SloObjectiveRawMetricQueryOpentsdbOutput {
	return i.ToSloObjectiveRawMetricQueryOpentsdbOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryOpentsdbArgs) ToSloObjectiveRawMetricQueryOpentsdbOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryOpentsdbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryOpentsdbOutput)
}

// SloObjectiveRawMetricQueryOpentsdbArrayInput is an input type that accepts SloObjectiveRawMetricQueryOpentsdbArray and SloObjectiveRawMetricQueryOpentsdbArrayOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryOpentsdbArrayInput` via:
//
//	SloObjectiveRawMetricQueryOpentsdbArray{ SloObjectiveRawMetricQueryOpentsdbArgs{...} }
type SloObjectiveRawMetricQueryOpentsdbArrayInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryOpentsdbArrayOutput() SloObjectiveRawMetricQueryOpentsdbArrayOutput
	ToSloObjectiveRawMetricQueryOpentsdbArrayOutputWithContext(context.Context) SloObjectiveRawMetricQueryOpentsdbArrayOutput
}

type SloObjectiveRawMetricQueryOpentsdbArray []SloObjectiveRawMetricQueryOpentsdbInput

func (SloObjectiveRawMetricQueryOpentsdbArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryOpentsdb)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryOpentsdbArray) ToSloObjectiveRawMetricQueryOpentsdbArrayOutput() SloObjectiveRawMetricQueryOpentsdbArrayOutput {
	return i.ToSloObjectiveRawMetricQueryOpentsdbArrayOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryOpentsdbArray) ToSloObjectiveRawMetricQueryOpentsdbArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryOpentsdbArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryOpentsdbArrayOutput)
}

type SloObjectiveRawMetricQueryOpentsdbOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryOpentsdbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryOpentsdb)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryOpentsdbOutput) ToSloObjectiveRawMetricQueryOpentsdbOutput() SloObjectiveRawMetricQueryOpentsdbOutput {
	return o
}

func (o SloObjectiveRawMetricQueryOpentsdbOutput) ToSloObjectiveRawMetricQueryOpentsdbOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryOpentsdbOutput {
	return o
}

// Query for the metrics
func (o SloObjectiveRawMetricQueryOpentsdbOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryOpentsdb) string { return v.Query }).(pulumi.StringOutput)
}

type SloObjectiveRawMetricQueryOpentsdbArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryOpentsdbArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryOpentsdb)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryOpentsdbArrayOutput) ToSloObjectiveRawMetricQueryOpentsdbArrayOutput() SloObjectiveRawMetricQueryOpentsdbArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryOpentsdbArrayOutput) ToSloObjectiveRawMetricQueryOpentsdbArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryOpentsdbArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryOpentsdbArrayOutput) Index(i pulumi.IntInput) SloObjectiveRawMetricQueryOpentsdbOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveRawMetricQueryOpentsdb {
		return vs[0].([]SloObjectiveRawMetricQueryOpentsdb)[vs[1].(int)]
	}).(SloObjectiveRawMetricQueryOpentsdbOutput)
}

type SloObjectiveRawMetricQueryPingdom struct {
	// Pingdom uptime or transaction check's ID
	CheckId string `pulumi:"checkId"`
	// Pingdom check type - uptime or transaction
	CheckType *string `pulumi:"checkType"`
	// Optional for the Uptime checks. Use it to filter the Pingdom check results by status
	Status *string `pulumi:"status"`
}

// SloObjectiveRawMetricQueryPingdomInput is an input type that accepts SloObjectiveRawMetricQueryPingdomArgs and SloObjectiveRawMetricQueryPingdomOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryPingdomInput` via:
//
//	SloObjectiveRawMetricQueryPingdomArgs{...}
type SloObjectiveRawMetricQueryPingdomInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryPingdomOutput() SloObjectiveRawMetricQueryPingdomOutput
	ToSloObjectiveRawMetricQueryPingdomOutputWithContext(context.Context) SloObjectiveRawMetricQueryPingdomOutput
}

type SloObjectiveRawMetricQueryPingdomArgs struct {
	// Pingdom uptime or transaction check's ID
	CheckId pulumi.StringInput `pulumi:"checkId"`
	// Pingdom check type - uptime or transaction
	CheckType pulumi.StringPtrInput `pulumi:"checkType"`
	// Optional for the Uptime checks. Use it to filter the Pingdom check results by status
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (SloObjectiveRawMetricQueryPingdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryPingdom)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryPingdomArgs) ToSloObjectiveRawMetricQueryPingdomOutput() SloObjectiveRawMetricQueryPingdomOutput {
	return i.ToSloObjectiveRawMetricQueryPingdomOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryPingdomArgs) ToSloObjectiveRawMetricQueryPingdomOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryPingdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryPingdomOutput)
}

// SloObjectiveRawMetricQueryPingdomArrayInput is an input type that accepts SloObjectiveRawMetricQueryPingdomArray and SloObjectiveRawMetricQueryPingdomArrayOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryPingdomArrayInput` via:
//
//	SloObjectiveRawMetricQueryPingdomArray{ SloObjectiveRawMetricQueryPingdomArgs{...} }
type SloObjectiveRawMetricQueryPingdomArrayInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryPingdomArrayOutput() SloObjectiveRawMetricQueryPingdomArrayOutput
	ToSloObjectiveRawMetricQueryPingdomArrayOutputWithContext(context.Context) SloObjectiveRawMetricQueryPingdomArrayOutput
}

type SloObjectiveRawMetricQueryPingdomArray []SloObjectiveRawMetricQueryPingdomInput

func (SloObjectiveRawMetricQueryPingdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryPingdom)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryPingdomArray) ToSloObjectiveRawMetricQueryPingdomArrayOutput() SloObjectiveRawMetricQueryPingdomArrayOutput {
	return i.ToSloObjectiveRawMetricQueryPingdomArrayOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryPingdomArray) ToSloObjectiveRawMetricQueryPingdomArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryPingdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryPingdomArrayOutput)
}

type SloObjectiveRawMetricQueryPingdomOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryPingdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryPingdom)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryPingdomOutput) ToSloObjectiveRawMetricQueryPingdomOutput() SloObjectiveRawMetricQueryPingdomOutput {
	return o
}

func (o SloObjectiveRawMetricQueryPingdomOutput) ToSloObjectiveRawMetricQueryPingdomOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryPingdomOutput {
	return o
}

// Pingdom uptime or transaction check's ID
func (o SloObjectiveRawMetricQueryPingdomOutput) CheckId() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryPingdom) string { return v.CheckId }).(pulumi.StringOutput)
}

// Pingdom check type - uptime or transaction
func (o SloObjectiveRawMetricQueryPingdomOutput) CheckType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryPingdom) *string { return v.CheckType }).(pulumi.StringPtrOutput)
}

// Optional for the Uptime checks. Use it to filter the Pingdom check results by status
func (o SloObjectiveRawMetricQueryPingdomOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryPingdom) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type SloObjectiveRawMetricQueryPingdomArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryPingdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryPingdom)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryPingdomArrayOutput) ToSloObjectiveRawMetricQueryPingdomArrayOutput() SloObjectiveRawMetricQueryPingdomArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryPingdomArrayOutput) ToSloObjectiveRawMetricQueryPingdomArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryPingdomArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryPingdomArrayOutput) Index(i pulumi.IntInput) SloObjectiveRawMetricQueryPingdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveRawMetricQueryPingdom {
		return vs[0].([]SloObjectiveRawMetricQueryPingdom)[vs[1].(int)]
	}).(SloObjectiveRawMetricQueryPingdomOutput)
}

type SloObjectiveRawMetricQueryPrometheus struct {
	// Query for the metrics
	Promql string `pulumi:"promql"`
}

// SloObjectiveRawMetricQueryPrometheusInput is an input type that accepts SloObjectiveRawMetricQueryPrometheusArgs and SloObjectiveRawMetricQueryPrometheusOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryPrometheusInput` via:
//
//	SloObjectiveRawMetricQueryPrometheusArgs{...}
type SloObjectiveRawMetricQueryPrometheusInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryPrometheusOutput() SloObjectiveRawMetricQueryPrometheusOutput
	ToSloObjectiveRawMetricQueryPrometheusOutputWithContext(context.Context) SloObjectiveRawMetricQueryPrometheusOutput
}

type SloObjectiveRawMetricQueryPrometheusArgs struct {
	// Query for the metrics
	Promql pulumi.StringInput `pulumi:"promql"`
}

func (SloObjectiveRawMetricQueryPrometheusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryPrometheus)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryPrometheusArgs) ToSloObjectiveRawMetricQueryPrometheusOutput() SloObjectiveRawMetricQueryPrometheusOutput {
	return i.ToSloObjectiveRawMetricQueryPrometheusOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryPrometheusArgs) ToSloObjectiveRawMetricQueryPrometheusOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryPrometheusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryPrometheusOutput)
}

// SloObjectiveRawMetricQueryPrometheusArrayInput is an input type that accepts SloObjectiveRawMetricQueryPrometheusArray and SloObjectiveRawMetricQueryPrometheusArrayOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryPrometheusArrayInput` via:
//
//	SloObjectiveRawMetricQueryPrometheusArray{ SloObjectiveRawMetricQueryPrometheusArgs{...} }
type SloObjectiveRawMetricQueryPrometheusArrayInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryPrometheusArrayOutput() SloObjectiveRawMetricQueryPrometheusArrayOutput
	ToSloObjectiveRawMetricQueryPrometheusArrayOutputWithContext(context.Context) SloObjectiveRawMetricQueryPrometheusArrayOutput
}

type SloObjectiveRawMetricQueryPrometheusArray []SloObjectiveRawMetricQueryPrometheusInput

func (SloObjectiveRawMetricQueryPrometheusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryPrometheus)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryPrometheusArray) ToSloObjectiveRawMetricQueryPrometheusArrayOutput() SloObjectiveRawMetricQueryPrometheusArrayOutput {
	return i.ToSloObjectiveRawMetricQueryPrometheusArrayOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryPrometheusArray) ToSloObjectiveRawMetricQueryPrometheusArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryPrometheusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryPrometheusArrayOutput)
}

type SloObjectiveRawMetricQueryPrometheusOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryPrometheusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryPrometheus)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryPrometheusOutput) ToSloObjectiveRawMetricQueryPrometheusOutput() SloObjectiveRawMetricQueryPrometheusOutput {
	return o
}

func (o SloObjectiveRawMetricQueryPrometheusOutput) ToSloObjectiveRawMetricQueryPrometheusOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryPrometheusOutput {
	return o
}

// Query for the metrics
func (o SloObjectiveRawMetricQueryPrometheusOutput) Promql() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryPrometheus) string { return v.Promql }).(pulumi.StringOutput)
}

type SloObjectiveRawMetricQueryPrometheusArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryPrometheusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryPrometheus)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryPrometheusArrayOutput) ToSloObjectiveRawMetricQueryPrometheusArrayOutput() SloObjectiveRawMetricQueryPrometheusArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryPrometheusArrayOutput) ToSloObjectiveRawMetricQueryPrometheusArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryPrometheusArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryPrometheusArrayOutput) Index(i pulumi.IntInput) SloObjectiveRawMetricQueryPrometheusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveRawMetricQueryPrometheus {
		return vs[0].([]SloObjectiveRawMetricQueryPrometheus)[vs[1].(int)]
	}).(SloObjectiveRawMetricQueryPrometheusOutput)
}

type SloObjectiveRawMetricQueryRedshift struct {
	// Redshift custer ID
	ClusterId string `pulumi:"clusterId"`
	// Database name
	DatabaseName string `pulumi:"databaseName"`
	// Query for the metrics
	Query string `pulumi:"query"`
	// Region of the CloudWatch instance
	Region string `pulumi:"region"`
}

// SloObjectiveRawMetricQueryRedshiftInput is an input type that accepts SloObjectiveRawMetricQueryRedshiftArgs and SloObjectiveRawMetricQueryRedshiftOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryRedshiftInput` via:
//
//	SloObjectiveRawMetricQueryRedshiftArgs{...}
type SloObjectiveRawMetricQueryRedshiftInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryRedshiftOutput() SloObjectiveRawMetricQueryRedshiftOutput
	ToSloObjectiveRawMetricQueryRedshiftOutputWithContext(context.Context) SloObjectiveRawMetricQueryRedshiftOutput
}

type SloObjectiveRawMetricQueryRedshiftArgs struct {
	// Redshift custer ID
	ClusterId pulumi.StringInput `pulumi:"clusterId"`
	// Database name
	DatabaseName pulumi.StringInput `pulumi:"databaseName"`
	// Query for the metrics
	Query pulumi.StringInput `pulumi:"query"`
	// Region of the CloudWatch instance
	Region pulumi.StringInput `pulumi:"region"`
}

func (SloObjectiveRawMetricQueryRedshiftArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryRedshift)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryRedshiftArgs) ToSloObjectiveRawMetricQueryRedshiftOutput() SloObjectiveRawMetricQueryRedshiftOutput {
	return i.ToSloObjectiveRawMetricQueryRedshiftOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryRedshiftArgs) ToSloObjectiveRawMetricQueryRedshiftOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryRedshiftOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryRedshiftOutput)
}

// SloObjectiveRawMetricQueryRedshiftArrayInput is an input type that accepts SloObjectiveRawMetricQueryRedshiftArray and SloObjectiveRawMetricQueryRedshiftArrayOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryRedshiftArrayInput` via:
//
//	SloObjectiveRawMetricQueryRedshiftArray{ SloObjectiveRawMetricQueryRedshiftArgs{...} }
type SloObjectiveRawMetricQueryRedshiftArrayInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryRedshiftArrayOutput() SloObjectiveRawMetricQueryRedshiftArrayOutput
	ToSloObjectiveRawMetricQueryRedshiftArrayOutputWithContext(context.Context) SloObjectiveRawMetricQueryRedshiftArrayOutput
}

type SloObjectiveRawMetricQueryRedshiftArray []SloObjectiveRawMetricQueryRedshiftInput

func (SloObjectiveRawMetricQueryRedshiftArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryRedshift)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryRedshiftArray) ToSloObjectiveRawMetricQueryRedshiftArrayOutput() SloObjectiveRawMetricQueryRedshiftArrayOutput {
	return i.ToSloObjectiveRawMetricQueryRedshiftArrayOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryRedshiftArray) ToSloObjectiveRawMetricQueryRedshiftArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryRedshiftArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryRedshiftArrayOutput)
}

type SloObjectiveRawMetricQueryRedshiftOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryRedshiftOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryRedshift)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryRedshiftOutput) ToSloObjectiveRawMetricQueryRedshiftOutput() SloObjectiveRawMetricQueryRedshiftOutput {
	return o
}

func (o SloObjectiveRawMetricQueryRedshiftOutput) ToSloObjectiveRawMetricQueryRedshiftOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryRedshiftOutput {
	return o
}

// Redshift custer ID
func (o SloObjectiveRawMetricQueryRedshiftOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryRedshift) string { return v.ClusterId }).(pulumi.StringOutput)
}

// Database name
func (o SloObjectiveRawMetricQueryRedshiftOutput) DatabaseName() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryRedshift) string { return v.DatabaseName }).(pulumi.StringOutput)
}

// Query for the metrics
func (o SloObjectiveRawMetricQueryRedshiftOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryRedshift) string { return v.Query }).(pulumi.StringOutput)
}

// Region of the CloudWatch instance
func (o SloObjectiveRawMetricQueryRedshiftOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryRedshift) string { return v.Region }).(pulumi.StringOutput)
}

type SloObjectiveRawMetricQueryRedshiftArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryRedshiftArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryRedshift)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryRedshiftArrayOutput) ToSloObjectiveRawMetricQueryRedshiftArrayOutput() SloObjectiveRawMetricQueryRedshiftArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryRedshiftArrayOutput) ToSloObjectiveRawMetricQueryRedshiftArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryRedshiftArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryRedshiftArrayOutput) Index(i pulumi.IntInput) SloObjectiveRawMetricQueryRedshiftOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveRawMetricQueryRedshift {
		return vs[0].([]SloObjectiveRawMetricQueryRedshift)[vs[1].(int)]
	}).(SloObjectiveRawMetricQueryRedshiftOutput)
}

type SloObjectiveRawMetricQuerySplunk struct {
	// Query for the metrics
	Query string `pulumi:"query"`
}

// SloObjectiveRawMetricQuerySplunkInput is an input type that accepts SloObjectiveRawMetricQuerySplunkArgs and SloObjectiveRawMetricQuerySplunkOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQuerySplunkInput` via:
//
//	SloObjectiveRawMetricQuerySplunkArgs{...}
type SloObjectiveRawMetricQuerySplunkInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQuerySplunkOutput() SloObjectiveRawMetricQuerySplunkOutput
	ToSloObjectiveRawMetricQuerySplunkOutputWithContext(context.Context) SloObjectiveRawMetricQuerySplunkOutput
}

type SloObjectiveRawMetricQuerySplunkArgs struct {
	// Query for the metrics
	Query pulumi.StringInput `pulumi:"query"`
}

func (SloObjectiveRawMetricQuerySplunkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQuerySplunk)(nil)).Elem()
}

func (i SloObjectiveRawMetricQuerySplunkArgs) ToSloObjectiveRawMetricQuerySplunkOutput() SloObjectiveRawMetricQuerySplunkOutput {
	return i.ToSloObjectiveRawMetricQuerySplunkOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQuerySplunkArgs) ToSloObjectiveRawMetricQuerySplunkOutputWithContext(ctx context.Context) SloObjectiveRawMetricQuerySplunkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQuerySplunkOutput)
}

// SloObjectiveRawMetricQuerySplunkArrayInput is an input type that accepts SloObjectiveRawMetricQuerySplunkArray and SloObjectiveRawMetricQuerySplunkArrayOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQuerySplunkArrayInput` via:
//
//	SloObjectiveRawMetricQuerySplunkArray{ SloObjectiveRawMetricQuerySplunkArgs{...} }
type SloObjectiveRawMetricQuerySplunkArrayInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQuerySplunkArrayOutput() SloObjectiveRawMetricQuerySplunkArrayOutput
	ToSloObjectiveRawMetricQuerySplunkArrayOutputWithContext(context.Context) SloObjectiveRawMetricQuerySplunkArrayOutput
}

type SloObjectiveRawMetricQuerySplunkArray []SloObjectiveRawMetricQuerySplunkInput

func (SloObjectiveRawMetricQuerySplunkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQuerySplunk)(nil)).Elem()
}

func (i SloObjectiveRawMetricQuerySplunkArray) ToSloObjectiveRawMetricQuerySplunkArrayOutput() SloObjectiveRawMetricQuerySplunkArrayOutput {
	return i.ToSloObjectiveRawMetricQuerySplunkArrayOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQuerySplunkArray) ToSloObjectiveRawMetricQuerySplunkArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQuerySplunkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQuerySplunkArrayOutput)
}

type SloObjectiveRawMetricQuerySplunkOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQuerySplunkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQuerySplunk)(nil)).Elem()
}

func (o SloObjectiveRawMetricQuerySplunkOutput) ToSloObjectiveRawMetricQuerySplunkOutput() SloObjectiveRawMetricQuerySplunkOutput {
	return o
}

func (o SloObjectiveRawMetricQuerySplunkOutput) ToSloObjectiveRawMetricQuerySplunkOutputWithContext(ctx context.Context) SloObjectiveRawMetricQuerySplunkOutput {
	return o
}

// Query for the metrics
func (o SloObjectiveRawMetricQuerySplunkOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQuerySplunk) string { return v.Query }).(pulumi.StringOutput)
}

type SloObjectiveRawMetricQuerySplunkArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQuerySplunkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQuerySplunk)(nil)).Elem()
}

func (o SloObjectiveRawMetricQuerySplunkArrayOutput) ToSloObjectiveRawMetricQuerySplunkArrayOutput() SloObjectiveRawMetricQuerySplunkArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQuerySplunkArrayOutput) ToSloObjectiveRawMetricQuerySplunkArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQuerySplunkArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQuerySplunkArrayOutput) Index(i pulumi.IntInput) SloObjectiveRawMetricQuerySplunkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveRawMetricQuerySplunk {
		return vs[0].([]SloObjectiveRawMetricQuerySplunk)[vs[1].(int)]
	}).(SloObjectiveRawMetricQuerySplunkOutput)
}

type SloObjectiveRawMetricQuerySplunkObservability struct {
	// Query for the metrics
	Program string `pulumi:"program"`
}

// SloObjectiveRawMetricQuerySplunkObservabilityInput is an input type that accepts SloObjectiveRawMetricQuerySplunkObservabilityArgs and SloObjectiveRawMetricQuerySplunkObservabilityOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQuerySplunkObservabilityInput` via:
//
//	SloObjectiveRawMetricQuerySplunkObservabilityArgs{...}
type SloObjectiveRawMetricQuerySplunkObservabilityInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQuerySplunkObservabilityOutput() SloObjectiveRawMetricQuerySplunkObservabilityOutput
	ToSloObjectiveRawMetricQuerySplunkObservabilityOutputWithContext(context.Context) SloObjectiveRawMetricQuerySplunkObservabilityOutput
}

type SloObjectiveRawMetricQuerySplunkObservabilityArgs struct {
	// Query for the metrics
	Program pulumi.StringInput `pulumi:"program"`
}

func (SloObjectiveRawMetricQuerySplunkObservabilityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQuerySplunkObservability)(nil)).Elem()
}

func (i SloObjectiveRawMetricQuerySplunkObservabilityArgs) ToSloObjectiveRawMetricQuerySplunkObservabilityOutput() SloObjectiveRawMetricQuerySplunkObservabilityOutput {
	return i.ToSloObjectiveRawMetricQuerySplunkObservabilityOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQuerySplunkObservabilityArgs) ToSloObjectiveRawMetricQuerySplunkObservabilityOutputWithContext(ctx context.Context) SloObjectiveRawMetricQuerySplunkObservabilityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQuerySplunkObservabilityOutput)
}

// SloObjectiveRawMetricQuerySplunkObservabilityArrayInput is an input type that accepts SloObjectiveRawMetricQuerySplunkObservabilityArray and SloObjectiveRawMetricQuerySplunkObservabilityArrayOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQuerySplunkObservabilityArrayInput` via:
//
//	SloObjectiveRawMetricQuerySplunkObservabilityArray{ SloObjectiveRawMetricQuerySplunkObservabilityArgs{...} }
type SloObjectiveRawMetricQuerySplunkObservabilityArrayInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQuerySplunkObservabilityArrayOutput() SloObjectiveRawMetricQuerySplunkObservabilityArrayOutput
	ToSloObjectiveRawMetricQuerySplunkObservabilityArrayOutputWithContext(context.Context) SloObjectiveRawMetricQuerySplunkObservabilityArrayOutput
}

type SloObjectiveRawMetricQuerySplunkObservabilityArray []SloObjectiveRawMetricQuerySplunkObservabilityInput

func (SloObjectiveRawMetricQuerySplunkObservabilityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQuerySplunkObservability)(nil)).Elem()
}

func (i SloObjectiveRawMetricQuerySplunkObservabilityArray) ToSloObjectiveRawMetricQuerySplunkObservabilityArrayOutput() SloObjectiveRawMetricQuerySplunkObservabilityArrayOutput {
	return i.ToSloObjectiveRawMetricQuerySplunkObservabilityArrayOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQuerySplunkObservabilityArray) ToSloObjectiveRawMetricQuerySplunkObservabilityArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQuerySplunkObservabilityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQuerySplunkObservabilityArrayOutput)
}

type SloObjectiveRawMetricQuerySplunkObservabilityOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQuerySplunkObservabilityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQuerySplunkObservability)(nil)).Elem()
}

func (o SloObjectiveRawMetricQuerySplunkObservabilityOutput) ToSloObjectiveRawMetricQuerySplunkObservabilityOutput() SloObjectiveRawMetricQuerySplunkObservabilityOutput {
	return o
}

func (o SloObjectiveRawMetricQuerySplunkObservabilityOutput) ToSloObjectiveRawMetricQuerySplunkObservabilityOutputWithContext(ctx context.Context) SloObjectiveRawMetricQuerySplunkObservabilityOutput {
	return o
}

// Query for the metrics
func (o SloObjectiveRawMetricQuerySplunkObservabilityOutput) Program() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQuerySplunkObservability) string { return v.Program }).(pulumi.StringOutput)
}

type SloObjectiveRawMetricQuerySplunkObservabilityArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQuerySplunkObservabilityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQuerySplunkObservability)(nil)).Elem()
}

func (o SloObjectiveRawMetricQuerySplunkObservabilityArrayOutput) ToSloObjectiveRawMetricQuerySplunkObservabilityArrayOutput() SloObjectiveRawMetricQuerySplunkObservabilityArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQuerySplunkObservabilityArrayOutput) ToSloObjectiveRawMetricQuerySplunkObservabilityArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQuerySplunkObservabilityArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQuerySplunkObservabilityArrayOutput) Index(i pulumi.IntInput) SloObjectiveRawMetricQuerySplunkObservabilityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveRawMetricQuerySplunkObservability {
		return vs[0].([]SloObjectiveRawMetricQuerySplunkObservability)[vs[1].(int)]
	}).(SloObjectiveRawMetricQuerySplunkObservabilityOutput)
}

type SloObjectiveRawMetricQuerySumologic struct {
	// Period of data aggregation
	Quantization *string `pulumi:"quantization"`
	// Query for the metrics
	Query string `pulumi:"query"`
	// Aggregation function - avg, sum, min, max, count, none
	Rollup *string `pulumi:"rollup"`
	// Sumologic source - metrics or logs
	Type string `pulumi:"type"`
}

// SloObjectiveRawMetricQuerySumologicInput is an input type that accepts SloObjectiveRawMetricQuerySumologicArgs and SloObjectiveRawMetricQuerySumologicOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQuerySumologicInput` via:
//
//	SloObjectiveRawMetricQuerySumologicArgs{...}
type SloObjectiveRawMetricQuerySumologicInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQuerySumologicOutput() SloObjectiveRawMetricQuerySumologicOutput
	ToSloObjectiveRawMetricQuerySumologicOutputWithContext(context.Context) SloObjectiveRawMetricQuerySumologicOutput
}

type SloObjectiveRawMetricQuerySumologicArgs struct {
	// Period of data aggregation
	Quantization pulumi.StringPtrInput `pulumi:"quantization"`
	// Query for the metrics
	Query pulumi.StringInput `pulumi:"query"`
	// Aggregation function - avg, sum, min, max, count, none
	Rollup pulumi.StringPtrInput `pulumi:"rollup"`
	// Sumologic source - metrics or logs
	Type pulumi.StringInput `pulumi:"type"`
}

func (SloObjectiveRawMetricQuerySumologicArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQuerySumologic)(nil)).Elem()
}

func (i SloObjectiveRawMetricQuerySumologicArgs) ToSloObjectiveRawMetricQuerySumologicOutput() SloObjectiveRawMetricQuerySumologicOutput {
	return i.ToSloObjectiveRawMetricQuerySumologicOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQuerySumologicArgs) ToSloObjectiveRawMetricQuerySumologicOutputWithContext(ctx context.Context) SloObjectiveRawMetricQuerySumologicOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQuerySumologicOutput)
}

// SloObjectiveRawMetricQuerySumologicArrayInput is an input type that accepts SloObjectiveRawMetricQuerySumologicArray and SloObjectiveRawMetricQuerySumologicArrayOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQuerySumologicArrayInput` via:
//
//	SloObjectiveRawMetricQuerySumologicArray{ SloObjectiveRawMetricQuerySumologicArgs{...} }
type SloObjectiveRawMetricQuerySumologicArrayInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQuerySumologicArrayOutput() SloObjectiveRawMetricQuerySumologicArrayOutput
	ToSloObjectiveRawMetricQuerySumologicArrayOutputWithContext(context.Context) SloObjectiveRawMetricQuerySumologicArrayOutput
}

type SloObjectiveRawMetricQuerySumologicArray []SloObjectiveRawMetricQuerySumologicInput

func (SloObjectiveRawMetricQuerySumologicArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQuerySumologic)(nil)).Elem()
}

func (i SloObjectiveRawMetricQuerySumologicArray) ToSloObjectiveRawMetricQuerySumologicArrayOutput() SloObjectiveRawMetricQuerySumologicArrayOutput {
	return i.ToSloObjectiveRawMetricQuerySumologicArrayOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQuerySumologicArray) ToSloObjectiveRawMetricQuerySumologicArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQuerySumologicArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQuerySumologicArrayOutput)
}

type SloObjectiveRawMetricQuerySumologicOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQuerySumologicOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQuerySumologic)(nil)).Elem()
}

func (o SloObjectiveRawMetricQuerySumologicOutput) ToSloObjectiveRawMetricQuerySumologicOutput() SloObjectiveRawMetricQuerySumologicOutput {
	return o
}

func (o SloObjectiveRawMetricQuerySumologicOutput) ToSloObjectiveRawMetricQuerySumologicOutputWithContext(ctx context.Context) SloObjectiveRawMetricQuerySumologicOutput {
	return o
}

// Period of data aggregation
func (o SloObjectiveRawMetricQuerySumologicOutput) Quantization() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQuerySumologic) *string { return v.Quantization }).(pulumi.StringPtrOutput)
}

// Query for the metrics
func (o SloObjectiveRawMetricQuerySumologicOutput) Query() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQuerySumologic) string { return v.Query }).(pulumi.StringOutput)
}

// Aggregation function - avg, sum, min, max, count, none
func (o SloObjectiveRawMetricQuerySumologicOutput) Rollup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQuerySumologic) *string { return v.Rollup }).(pulumi.StringPtrOutput)
}

// Sumologic source - metrics or logs
func (o SloObjectiveRawMetricQuerySumologicOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQuerySumologic) string { return v.Type }).(pulumi.StringOutput)
}

type SloObjectiveRawMetricQuerySumologicArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQuerySumologicArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQuerySumologic)(nil)).Elem()
}

func (o SloObjectiveRawMetricQuerySumologicArrayOutput) ToSloObjectiveRawMetricQuerySumologicArrayOutput() SloObjectiveRawMetricQuerySumologicArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQuerySumologicArrayOutput) ToSloObjectiveRawMetricQuerySumologicArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQuerySumologicArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQuerySumologicArrayOutput) Index(i pulumi.IntInput) SloObjectiveRawMetricQuerySumologicOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveRawMetricQuerySumologic {
		return vs[0].([]SloObjectiveRawMetricQuerySumologic)[vs[1].(int)]
	}).(SloObjectiveRawMetricQuerySumologicOutput)
}

type SloObjectiveRawMetricQueryThousandeye struct {
	// ID of the test
	TestId int `pulumi:"testId"`
}

// SloObjectiveRawMetricQueryThousandeyeInput is an input type that accepts SloObjectiveRawMetricQueryThousandeyeArgs and SloObjectiveRawMetricQueryThousandeyeOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryThousandeyeInput` via:
//
//	SloObjectiveRawMetricQueryThousandeyeArgs{...}
type SloObjectiveRawMetricQueryThousandeyeInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryThousandeyeOutput() SloObjectiveRawMetricQueryThousandeyeOutput
	ToSloObjectiveRawMetricQueryThousandeyeOutputWithContext(context.Context) SloObjectiveRawMetricQueryThousandeyeOutput
}

type SloObjectiveRawMetricQueryThousandeyeArgs struct {
	// ID of the test
	TestId pulumi.IntInput `pulumi:"testId"`
}

func (SloObjectiveRawMetricQueryThousandeyeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryThousandeye)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryThousandeyeArgs) ToSloObjectiveRawMetricQueryThousandeyeOutput() SloObjectiveRawMetricQueryThousandeyeOutput {
	return i.ToSloObjectiveRawMetricQueryThousandeyeOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryThousandeyeArgs) ToSloObjectiveRawMetricQueryThousandeyeOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryThousandeyeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryThousandeyeOutput)
}

// SloObjectiveRawMetricQueryThousandeyeArrayInput is an input type that accepts SloObjectiveRawMetricQueryThousandeyeArray and SloObjectiveRawMetricQueryThousandeyeArrayOutput values.
// You can construct a concrete instance of `SloObjectiveRawMetricQueryThousandeyeArrayInput` via:
//
//	SloObjectiveRawMetricQueryThousandeyeArray{ SloObjectiveRawMetricQueryThousandeyeArgs{...} }
type SloObjectiveRawMetricQueryThousandeyeArrayInput interface {
	pulumi.Input

	ToSloObjectiveRawMetricQueryThousandeyeArrayOutput() SloObjectiveRawMetricQueryThousandeyeArrayOutput
	ToSloObjectiveRawMetricQueryThousandeyeArrayOutputWithContext(context.Context) SloObjectiveRawMetricQueryThousandeyeArrayOutput
}

type SloObjectiveRawMetricQueryThousandeyeArray []SloObjectiveRawMetricQueryThousandeyeInput

func (SloObjectiveRawMetricQueryThousandeyeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryThousandeye)(nil)).Elem()
}

func (i SloObjectiveRawMetricQueryThousandeyeArray) ToSloObjectiveRawMetricQueryThousandeyeArrayOutput() SloObjectiveRawMetricQueryThousandeyeArrayOutput {
	return i.ToSloObjectiveRawMetricQueryThousandeyeArrayOutputWithContext(context.Background())
}

func (i SloObjectiveRawMetricQueryThousandeyeArray) ToSloObjectiveRawMetricQueryThousandeyeArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryThousandeyeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloObjectiveRawMetricQueryThousandeyeArrayOutput)
}

type SloObjectiveRawMetricQueryThousandeyeOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryThousandeyeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloObjectiveRawMetricQueryThousandeye)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryThousandeyeOutput) ToSloObjectiveRawMetricQueryThousandeyeOutput() SloObjectiveRawMetricQueryThousandeyeOutput {
	return o
}

func (o SloObjectiveRawMetricQueryThousandeyeOutput) ToSloObjectiveRawMetricQueryThousandeyeOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryThousandeyeOutput {
	return o
}

// ID of the test
func (o SloObjectiveRawMetricQueryThousandeyeOutput) TestId() pulumi.IntOutput {
	return o.ApplyT(func(v SloObjectiveRawMetricQueryThousandeye) int { return v.TestId }).(pulumi.IntOutput)
}

type SloObjectiveRawMetricQueryThousandeyeArrayOutput struct{ *pulumi.OutputState }

func (SloObjectiveRawMetricQueryThousandeyeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloObjectiveRawMetricQueryThousandeye)(nil)).Elem()
}

func (o SloObjectiveRawMetricQueryThousandeyeArrayOutput) ToSloObjectiveRawMetricQueryThousandeyeArrayOutput() SloObjectiveRawMetricQueryThousandeyeArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryThousandeyeArrayOutput) ToSloObjectiveRawMetricQueryThousandeyeArrayOutputWithContext(ctx context.Context) SloObjectiveRawMetricQueryThousandeyeArrayOutput {
	return o
}

func (o SloObjectiveRawMetricQueryThousandeyeArrayOutput) Index(i pulumi.IntInput) SloObjectiveRawMetricQueryThousandeyeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloObjectiveRawMetricQueryThousandeye {
		return vs[0].([]SloObjectiveRawMetricQueryThousandeye)[vs[1].(int)]
	}).(SloObjectiveRawMetricQueryThousandeyeOutput)
}

type SloTimeWindow struct {
	// Alert Policies attached to SLO
	Calendars []SloTimeWindowCalendar `pulumi:"calendars"`
	// Count of the time unit
	Count int `pulumi:"count"`
	// Is the window moving or not
	IsRolling *bool `pulumi:"isRolling"`
	// Period between start time and added count
	Period map[string]string `pulumi:"period"`
	// Unit of time
	Unit string `pulumi:"unit"`
}

// SloTimeWindowInput is an input type that accepts SloTimeWindowArgs and SloTimeWindowOutput values.
// You can construct a concrete instance of `SloTimeWindowInput` via:
//
//	SloTimeWindowArgs{...}
type SloTimeWindowInput interface {
	pulumi.Input

	ToSloTimeWindowOutput() SloTimeWindowOutput
	ToSloTimeWindowOutputWithContext(context.Context) SloTimeWindowOutput
}

type SloTimeWindowArgs struct {
	// Alert Policies attached to SLO
	Calendars SloTimeWindowCalendarArrayInput `pulumi:"calendars"`
	// Count of the time unit
	Count pulumi.IntInput `pulumi:"count"`
	// Is the window moving or not
	IsRolling pulumi.BoolPtrInput `pulumi:"isRolling"`
	// Period between start time and added count
	Period pulumi.StringMapInput `pulumi:"period"`
	// Unit of time
	Unit pulumi.StringInput `pulumi:"unit"`
}

func (SloTimeWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloTimeWindow)(nil)).Elem()
}

func (i SloTimeWindowArgs) ToSloTimeWindowOutput() SloTimeWindowOutput {
	return i.ToSloTimeWindowOutputWithContext(context.Background())
}

func (i SloTimeWindowArgs) ToSloTimeWindowOutputWithContext(ctx context.Context) SloTimeWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloTimeWindowOutput)
}

func (i SloTimeWindowArgs) ToSloTimeWindowPtrOutput() SloTimeWindowPtrOutput {
	return i.ToSloTimeWindowPtrOutputWithContext(context.Background())
}

func (i SloTimeWindowArgs) ToSloTimeWindowPtrOutputWithContext(ctx context.Context) SloTimeWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloTimeWindowOutput).ToSloTimeWindowPtrOutputWithContext(ctx)
}

// SloTimeWindowPtrInput is an input type that accepts SloTimeWindowArgs, SloTimeWindowPtr and SloTimeWindowPtrOutput values.
// You can construct a concrete instance of `SloTimeWindowPtrInput` via:
//
//	        SloTimeWindowArgs{...}
//
//	or:
//
//	        nil
type SloTimeWindowPtrInput interface {
	pulumi.Input

	ToSloTimeWindowPtrOutput() SloTimeWindowPtrOutput
	ToSloTimeWindowPtrOutputWithContext(context.Context) SloTimeWindowPtrOutput
}

type sloTimeWindowPtrType SloTimeWindowArgs

func SloTimeWindowPtr(v *SloTimeWindowArgs) SloTimeWindowPtrInput {
	return (*sloTimeWindowPtrType)(v)
}

func (*sloTimeWindowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SloTimeWindow)(nil)).Elem()
}

func (i *sloTimeWindowPtrType) ToSloTimeWindowPtrOutput() SloTimeWindowPtrOutput {
	return i.ToSloTimeWindowPtrOutputWithContext(context.Background())
}

func (i *sloTimeWindowPtrType) ToSloTimeWindowPtrOutputWithContext(ctx context.Context) SloTimeWindowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloTimeWindowPtrOutput)
}

type SloTimeWindowOutput struct{ *pulumi.OutputState }

func (SloTimeWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloTimeWindow)(nil)).Elem()
}

func (o SloTimeWindowOutput) ToSloTimeWindowOutput() SloTimeWindowOutput {
	return o
}

func (o SloTimeWindowOutput) ToSloTimeWindowOutputWithContext(ctx context.Context) SloTimeWindowOutput {
	return o
}

func (o SloTimeWindowOutput) ToSloTimeWindowPtrOutput() SloTimeWindowPtrOutput {
	return o.ToSloTimeWindowPtrOutputWithContext(context.Background())
}

func (o SloTimeWindowOutput) ToSloTimeWindowPtrOutputWithContext(ctx context.Context) SloTimeWindowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SloTimeWindow) *SloTimeWindow {
		return &v
	}).(SloTimeWindowPtrOutput)
}

// Alert Policies attached to SLO
func (o SloTimeWindowOutput) Calendars() SloTimeWindowCalendarArrayOutput {
	return o.ApplyT(func(v SloTimeWindow) []SloTimeWindowCalendar { return v.Calendars }).(SloTimeWindowCalendarArrayOutput)
}

// Count of the time unit
func (o SloTimeWindowOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v SloTimeWindow) int { return v.Count }).(pulumi.IntOutput)
}

// Is the window moving or not
func (o SloTimeWindowOutput) IsRolling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SloTimeWindow) *bool { return v.IsRolling }).(pulumi.BoolPtrOutput)
}

// Period between start time and added count
func (o SloTimeWindowOutput) Period() pulumi.StringMapOutput {
	return o.ApplyT(func(v SloTimeWindow) map[string]string { return v.Period }).(pulumi.StringMapOutput)
}

// Unit of time
func (o SloTimeWindowOutput) Unit() pulumi.StringOutput {
	return o.ApplyT(func(v SloTimeWindow) string { return v.Unit }).(pulumi.StringOutput)
}

type SloTimeWindowPtrOutput struct{ *pulumi.OutputState }

func (SloTimeWindowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SloTimeWindow)(nil)).Elem()
}

func (o SloTimeWindowPtrOutput) ToSloTimeWindowPtrOutput() SloTimeWindowPtrOutput {
	return o
}

func (o SloTimeWindowPtrOutput) ToSloTimeWindowPtrOutputWithContext(ctx context.Context) SloTimeWindowPtrOutput {
	return o
}

func (o SloTimeWindowPtrOutput) Elem() SloTimeWindowOutput {
	return o.ApplyT(func(v *SloTimeWindow) SloTimeWindow {
		if v != nil {
			return *v
		}
		var ret SloTimeWindow
		return ret
	}).(SloTimeWindowOutput)
}

// Alert Policies attached to SLO
func (o SloTimeWindowPtrOutput) Calendars() SloTimeWindowCalendarArrayOutput {
	return o.ApplyT(func(v *SloTimeWindow) []SloTimeWindowCalendar {
		if v == nil {
			return nil
		}
		return v.Calendars
	}).(SloTimeWindowCalendarArrayOutput)
}

// Count of the time unit
func (o SloTimeWindowPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SloTimeWindow) *int {
		if v == nil {
			return nil
		}
		return &v.Count
	}).(pulumi.IntPtrOutput)
}

// Is the window moving or not
func (o SloTimeWindowPtrOutput) IsRolling() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SloTimeWindow) *bool {
		if v == nil {
			return nil
		}
		return v.IsRolling
	}).(pulumi.BoolPtrOutput)
}

// Period between start time and added count
func (o SloTimeWindowPtrOutput) Period() pulumi.StringMapOutput {
	return o.ApplyT(func(v *SloTimeWindow) map[string]string {
		if v == nil {
			return nil
		}
		return v.Period
	}).(pulumi.StringMapOutput)
}

// Unit of time
func (o SloTimeWindowPtrOutput) Unit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SloTimeWindow) *string {
		if v == nil {
			return nil
		}
		return &v.Unit
	}).(pulumi.StringPtrOutput)
}

type SloTimeWindowCalendar struct {
	// Date of the start
	StartTime string `pulumi:"startTime"`
	// Timezone name in IANA Time Zone Database
	TimeZone string `pulumi:"timeZone"`
}

// SloTimeWindowCalendarInput is an input type that accepts SloTimeWindowCalendarArgs and SloTimeWindowCalendarOutput values.
// You can construct a concrete instance of `SloTimeWindowCalendarInput` via:
//
//	SloTimeWindowCalendarArgs{...}
type SloTimeWindowCalendarInput interface {
	pulumi.Input

	ToSloTimeWindowCalendarOutput() SloTimeWindowCalendarOutput
	ToSloTimeWindowCalendarOutputWithContext(context.Context) SloTimeWindowCalendarOutput
}

type SloTimeWindowCalendarArgs struct {
	// Date of the start
	StartTime pulumi.StringInput `pulumi:"startTime"`
	// Timezone name in IANA Time Zone Database
	TimeZone pulumi.StringInput `pulumi:"timeZone"`
}

func (SloTimeWindowCalendarArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SloTimeWindowCalendar)(nil)).Elem()
}

func (i SloTimeWindowCalendarArgs) ToSloTimeWindowCalendarOutput() SloTimeWindowCalendarOutput {
	return i.ToSloTimeWindowCalendarOutputWithContext(context.Background())
}

func (i SloTimeWindowCalendarArgs) ToSloTimeWindowCalendarOutputWithContext(ctx context.Context) SloTimeWindowCalendarOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloTimeWindowCalendarOutput)
}

// SloTimeWindowCalendarArrayInput is an input type that accepts SloTimeWindowCalendarArray and SloTimeWindowCalendarArrayOutput values.
// You can construct a concrete instance of `SloTimeWindowCalendarArrayInput` via:
//
//	SloTimeWindowCalendarArray{ SloTimeWindowCalendarArgs{...} }
type SloTimeWindowCalendarArrayInput interface {
	pulumi.Input

	ToSloTimeWindowCalendarArrayOutput() SloTimeWindowCalendarArrayOutput
	ToSloTimeWindowCalendarArrayOutputWithContext(context.Context) SloTimeWindowCalendarArrayOutput
}

type SloTimeWindowCalendarArray []SloTimeWindowCalendarInput

func (SloTimeWindowCalendarArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloTimeWindowCalendar)(nil)).Elem()
}

func (i SloTimeWindowCalendarArray) ToSloTimeWindowCalendarArrayOutput() SloTimeWindowCalendarArrayOutput {
	return i.ToSloTimeWindowCalendarArrayOutputWithContext(context.Background())
}

func (i SloTimeWindowCalendarArray) ToSloTimeWindowCalendarArrayOutputWithContext(ctx context.Context) SloTimeWindowCalendarArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SloTimeWindowCalendarArrayOutput)
}

type SloTimeWindowCalendarOutput struct{ *pulumi.OutputState }

func (SloTimeWindowCalendarOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SloTimeWindowCalendar)(nil)).Elem()
}

func (o SloTimeWindowCalendarOutput) ToSloTimeWindowCalendarOutput() SloTimeWindowCalendarOutput {
	return o
}

func (o SloTimeWindowCalendarOutput) ToSloTimeWindowCalendarOutputWithContext(ctx context.Context) SloTimeWindowCalendarOutput {
	return o
}

// Date of the start
func (o SloTimeWindowCalendarOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v SloTimeWindowCalendar) string { return v.StartTime }).(pulumi.StringOutput)
}

// Timezone name in IANA Time Zone Database
func (o SloTimeWindowCalendarOutput) TimeZone() pulumi.StringOutput {
	return o.ApplyT(func(v SloTimeWindowCalendar) string { return v.TimeZone }).(pulumi.StringOutput)
}

type SloTimeWindowCalendarArrayOutput struct{ *pulumi.OutputState }

func (SloTimeWindowCalendarArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SloTimeWindowCalendar)(nil)).Elem()
}

func (o SloTimeWindowCalendarArrayOutput) ToSloTimeWindowCalendarArrayOutput() SloTimeWindowCalendarArrayOutput {
	return o
}

func (o SloTimeWindowCalendarArrayOutput) ToSloTimeWindowCalendarArrayOutputWithContext(ctx context.Context) SloTimeWindowCalendarArrayOutput {
	return o
}

func (o SloTimeWindowCalendarArrayOutput) Index(i pulumi.IntInput) SloTimeWindowCalendarOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SloTimeWindowCalendar {
		return vs[0].([]SloTimeWindowCalendar)[vs[1].(int)]
	}).(SloTimeWindowCalendarOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AgentAmazonPrometheusConfigInput)(nil)).Elem(), AgentAmazonPrometheusConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentAmazonPrometheusConfigPtrInput)(nil)).Elem(), AgentAmazonPrometheusConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentAppdynamicsConfigInput)(nil)).Elem(), AgentAppdynamicsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentAppdynamicsConfigPtrInput)(nil)).Elem(), AgentAppdynamicsConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentAzureMonitorConfigInput)(nil)).Elem(), AgentAzureMonitorConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentAzureMonitorConfigPtrInput)(nil)).Elem(), AgentAzureMonitorConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentBigqueryConfigInput)(nil)).Elem(), AgentBigqueryConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentBigqueryConfigPtrInput)(nil)).Elem(), AgentBigqueryConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentCloudwatchConfigInput)(nil)).Elem(), AgentCloudwatchConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentCloudwatchConfigPtrInput)(nil)).Elem(), AgentCloudwatchConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentDatadogConfigInput)(nil)).Elem(), AgentDatadogConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentDatadogConfigPtrInput)(nil)).Elem(), AgentDatadogConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentDynatraceConfigInput)(nil)).Elem(), AgentDynatraceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentDynatraceConfigPtrInput)(nil)).Elem(), AgentDynatraceConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentElasticsearchConfigInput)(nil)).Elem(), AgentElasticsearchConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentElasticsearchConfigPtrInput)(nil)).Elem(), AgentElasticsearchConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentGcmConfigInput)(nil)).Elem(), AgentGcmConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentGcmConfigPtrInput)(nil)).Elem(), AgentGcmConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentGrafanaLokiConfigInput)(nil)).Elem(), AgentGrafanaLokiConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentGrafanaLokiConfigPtrInput)(nil)).Elem(), AgentGrafanaLokiConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentGraphiteConfigInput)(nil)).Elem(), AgentGraphiteConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentGraphiteConfigPtrInput)(nil)).Elem(), AgentGraphiteConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentHistoricalDataRetrievalInput)(nil)).Elem(), AgentHistoricalDataRetrievalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentHistoricalDataRetrievalPtrInput)(nil)).Elem(), AgentHistoricalDataRetrievalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentHistoricalDataRetrievalDefaultDurationInput)(nil)).Elem(), AgentHistoricalDataRetrievalDefaultDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentHistoricalDataRetrievalDefaultDurationArrayInput)(nil)).Elem(), AgentHistoricalDataRetrievalDefaultDurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentHistoricalDataRetrievalMaxDurationInput)(nil)).Elem(), AgentHistoricalDataRetrievalMaxDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentHistoricalDataRetrievalMaxDurationArrayInput)(nil)).Elem(), AgentHistoricalDataRetrievalMaxDurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentHoneycombConfigInput)(nil)).Elem(), AgentHoneycombConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentHoneycombConfigPtrInput)(nil)).Elem(), AgentHoneycombConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentInfluxdbConfigInput)(nil)).Elem(), AgentInfluxdbConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentInfluxdbConfigPtrInput)(nil)).Elem(), AgentInfluxdbConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentInstanaConfigInput)(nil)).Elem(), AgentInstanaConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentInstanaConfigPtrInput)(nil)).Elem(), AgentInstanaConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentLightstepConfigInput)(nil)).Elem(), AgentLightstepConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentLightstepConfigPtrInput)(nil)).Elem(), AgentLightstepConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentNewrelicConfigInput)(nil)).Elem(), AgentNewrelicConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentNewrelicConfigPtrInput)(nil)).Elem(), AgentNewrelicConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentOpentsdbConfigInput)(nil)).Elem(), AgentOpentsdbConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentOpentsdbConfigPtrInput)(nil)).Elem(), AgentOpentsdbConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentPingdomConfigInput)(nil)).Elem(), AgentPingdomConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentPingdomConfigPtrInput)(nil)).Elem(), AgentPingdomConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentPrometheusConfigInput)(nil)).Elem(), AgentPrometheusConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentPrometheusConfigPtrInput)(nil)).Elem(), AgentPrometheusConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentQueryDelayInput)(nil)).Elem(), AgentQueryDelayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentQueryDelayPtrInput)(nil)).Elem(), AgentQueryDelayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentRedshiftConfigInput)(nil)).Elem(), AgentRedshiftConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentRedshiftConfigPtrInput)(nil)).Elem(), AgentRedshiftConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSplunkConfigInput)(nil)).Elem(), AgentSplunkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSplunkConfigPtrInput)(nil)).Elem(), AgentSplunkConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSplunkObservabilityConfigInput)(nil)).Elem(), AgentSplunkObservabilityConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSplunkObservabilityConfigPtrInput)(nil)).Elem(), AgentSplunkObservabilityConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSumologicConfigInput)(nil)).Elem(), AgentSumologicConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentSumologicConfigPtrInput)(nil)).Elem(), AgentSumologicConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentThousandeyesConfigInput)(nil)).Elem(), AgentThousandeyesConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AgentThousandeyesConfigPtrInput)(nil)).Elem(), AgentThousandeyesConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertMethodPagerdutySendResolutionInput)(nil)).Elem(), AlertMethodPagerdutySendResolutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertMethodPagerdutySendResolutionPtrInput)(nil)).Elem(), AlertMethodPagerdutySendResolutionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertPolicyAlertMethodInput)(nil)).Elem(), AlertPolicyAlertMethodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertPolicyAlertMethodArrayInput)(nil)).Elem(), AlertPolicyAlertMethodArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertPolicyConditionInput)(nil)).Elem(), AlertPolicyConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertPolicyConditionArrayInput)(nil)).Elem(), AlertPolicyConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectAppdynamicsHistoricalDataRetrievalInput)(nil)).Elem(), DirectAppdynamicsHistoricalDataRetrievalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectAppdynamicsHistoricalDataRetrievalPtrInput)(nil)).Elem(), DirectAppdynamicsHistoricalDataRetrievalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectAppdynamicsHistoricalDataRetrievalDefaultDurationInput)(nil)).Elem(), DirectAppdynamicsHistoricalDataRetrievalDefaultDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectAppdynamicsHistoricalDataRetrievalDefaultDurationArrayInput)(nil)).Elem(), DirectAppdynamicsHistoricalDataRetrievalDefaultDurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectAppdynamicsHistoricalDataRetrievalMaxDurationInput)(nil)).Elem(), DirectAppdynamicsHistoricalDataRetrievalMaxDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectAppdynamicsHistoricalDataRetrievalMaxDurationArrayInput)(nil)).Elem(), DirectAppdynamicsHistoricalDataRetrievalMaxDurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectAppdynamicsQueryDelayInput)(nil)).Elem(), DirectAppdynamicsQueryDelayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectAppdynamicsQueryDelayPtrInput)(nil)).Elem(), DirectAppdynamicsQueryDelayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectAzureMonitorHistoricalDataRetrievalInput)(nil)).Elem(), DirectAzureMonitorHistoricalDataRetrievalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectAzureMonitorHistoricalDataRetrievalPtrInput)(nil)).Elem(), DirectAzureMonitorHistoricalDataRetrievalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectAzureMonitorHistoricalDataRetrievalDefaultDurationInput)(nil)).Elem(), DirectAzureMonitorHistoricalDataRetrievalDefaultDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectAzureMonitorHistoricalDataRetrievalDefaultDurationArrayInput)(nil)).Elem(), DirectAzureMonitorHistoricalDataRetrievalDefaultDurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectAzureMonitorHistoricalDataRetrievalMaxDurationInput)(nil)).Elem(), DirectAzureMonitorHistoricalDataRetrievalMaxDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectAzureMonitorHistoricalDataRetrievalMaxDurationArrayInput)(nil)).Elem(), DirectAzureMonitorHistoricalDataRetrievalMaxDurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectAzureMonitorQueryDelayInput)(nil)).Elem(), DirectAzureMonitorQueryDelayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectAzureMonitorQueryDelayPtrInput)(nil)).Elem(), DirectAzureMonitorQueryDelayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectBigqueryQueryDelayInput)(nil)).Elem(), DirectBigqueryQueryDelayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectBigqueryQueryDelayPtrInput)(nil)).Elem(), DirectBigqueryQueryDelayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectCloudwatchHistoricalDataRetrievalInput)(nil)).Elem(), DirectCloudwatchHistoricalDataRetrievalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectCloudwatchHistoricalDataRetrievalPtrInput)(nil)).Elem(), DirectCloudwatchHistoricalDataRetrievalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectCloudwatchHistoricalDataRetrievalDefaultDurationInput)(nil)).Elem(), DirectCloudwatchHistoricalDataRetrievalDefaultDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectCloudwatchHistoricalDataRetrievalDefaultDurationArrayInput)(nil)).Elem(), DirectCloudwatchHistoricalDataRetrievalDefaultDurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectCloudwatchHistoricalDataRetrievalMaxDurationInput)(nil)).Elem(), DirectCloudwatchHistoricalDataRetrievalMaxDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectCloudwatchHistoricalDataRetrievalMaxDurationArrayInput)(nil)).Elem(), DirectCloudwatchHistoricalDataRetrievalMaxDurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectCloudwatchQueryDelayInput)(nil)).Elem(), DirectCloudwatchQueryDelayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectCloudwatchQueryDelayPtrInput)(nil)).Elem(), DirectCloudwatchQueryDelayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectDatadogHistoricalDataRetrievalInput)(nil)).Elem(), DirectDatadogHistoricalDataRetrievalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectDatadogHistoricalDataRetrievalPtrInput)(nil)).Elem(), DirectDatadogHistoricalDataRetrievalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectDatadogHistoricalDataRetrievalDefaultDurationInput)(nil)).Elem(), DirectDatadogHistoricalDataRetrievalDefaultDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectDatadogHistoricalDataRetrievalDefaultDurationArrayInput)(nil)).Elem(), DirectDatadogHistoricalDataRetrievalDefaultDurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectDatadogHistoricalDataRetrievalMaxDurationInput)(nil)).Elem(), DirectDatadogHistoricalDataRetrievalMaxDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectDatadogHistoricalDataRetrievalMaxDurationArrayInput)(nil)).Elem(), DirectDatadogHistoricalDataRetrievalMaxDurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectDatadogQueryDelayInput)(nil)).Elem(), DirectDatadogQueryDelayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectDatadogQueryDelayPtrInput)(nil)).Elem(), DirectDatadogQueryDelayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectDynatraceHistoricalDataRetrievalInput)(nil)).Elem(), DirectDynatraceHistoricalDataRetrievalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectDynatraceHistoricalDataRetrievalPtrInput)(nil)).Elem(), DirectDynatraceHistoricalDataRetrievalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectDynatraceHistoricalDataRetrievalDefaultDurationInput)(nil)).Elem(), DirectDynatraceHistoricalDataRetrievalDefaultDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectDynatraceHistoricalDataRetrievalDefaultDurationArrayInput)(nil)).Elem(), DirectDynatraceHistoricalDataRetrievalDefaultDurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectDynatraceHistoricalDataRetrievalMaxDurationInput)(nil)).Elem(), DirectDynatraceHistoricalDataRetrievalMaxDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectDynatraceHistoricalDataRetrievalMaxDurationArrayInput)(nil)).Elem(), DirectDynatraceHistoricalDataRetrievalMaxDurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectDynatraceQueryDelayInput)(nil)).Elem(), DirectDynatraceQueryDelayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectDynatraceQueryDelayPtrInput)(nil)).Elem(), DirectDynatraceQueryDelayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectGcmQueryDelayInput)(nil)).Elem(), DirectGcmQueryDelayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectGcmQueryDelayPtrInput)(nil)).Elem(), DirectGcmQueryDelayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectHoneycombHistoricalDataRetrievalInput)(nil)).Elem(), DirectHoneycombHistoricalDataRetrievalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectHoneycombHistoricalDataRetrievalPtrInput)(nil)).Elem(), DirectHoneycombHistoricalDataRetrievalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectHoneycombHistoricalDataRetrievalDefaultDurationInput)(nil)).Elem(), DirectHoneycombHistoricalDataRetrievalDefaultDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectHoneycombHistoricalDataRetrievalDefaultDurationArrayInput)(nil)).Elem(), DirectHoneycombHistoricalDataRetrievalDefaultDurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectHoneycombHistoricalDataRetrievalMaxDurationInput)(nil)).Elem(), DirectHoneycombHistoricalDataRetrievalMaxDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectHoneycombHistoricalDataRetrievalMaxDurationArrayInput)(nil)).Elem(), DirectHoneycombHistoricalDataRetrievalMaxDurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectHoneycombQueryDelayInput)(nil)).Elem(), DirectHoneycombQueryDelayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectHoneycombQueryDelayPtrInput)(nil)).Elem(), DirectHoneycombQueryDelayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectInfluxdbQueryDelayInput)(nil)).Elem(), DirectInfluxdbQueryDelayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectInfluxdbQueryDelayPtrInput)(nil)).Elem(), DirectInfluxdbQueryDelayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectInstanaQueryDelayInput)(nil)).Elem(), DirectInstanaQueryDelayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectInstanaQueryDelayPtrInput)(nil)).Elem(), DirectInstanaQueryDelayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectLightstepHistoricalDataRetrievalInput)(nil)).Elem(), DirectLightstepHistoricalDataRetrievalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectLightstepHistoricalDataRetrievalPtrInput)(nil)).Elem(), DirectLightstepHistoricalDataRetrievalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectLightstepHistoricalDataRetrievalDefaultDurationInput)(nil)).Elem(), DirectLightstepHistoricalDataRetrievalDefaultDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectLightstepHistoricalDataRetrievalDefaultDurationArrayInput)(nil)).Elem(), DirectLightstepHistoricalDataRetrievalDefaultDurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectLightstepHistoricalDataRetrievalMaxDurationInput)(nil)).Elem(), DirectLightstepHistoricalDataRetrievalMaxDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectLightstepHistoricalDataRetrievalMaxDurationArrayInput)(nil)).Elem(), DirectLightstepHistoricalDataRetrievalMaxDurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectLightstepQueryDelayInput)(nil)).Elem(), DirectLightstepQueryDelayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectLightstepQueryDelayPtrInput)(nil)).Elem(), DirectLightstepQueryDelayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectNewrelicHistoricalDataRetrievalInput)(nil)).Elem(), DirectNewrelicHistoricalDataRetrievalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectNewrelicHistoricalDataRetrievalPtrInput)(nil)).Elem(), DirectNewrelicHistoricalDataRetrievalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectNewrelicHistoricalDataRetrievalDefaultDurationInput)(nil)).Elem(), DirectNewrelicHistoricalDataRetrievalDefaultDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectNewrelicHistoricalDataRetrievalDefaultDurationArrayInput)(nil)).Elem(), DirectNewrelicHistoricalDataRetrievalDefaultDurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectNewrelicHistoricalDataRetrievalMaxDurationInput)(nil)).Elem(), DirectNewrelicHistoricalDataRetrievalMaxDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectNewrelicHistoricalDataRetrievalMaxDurationArrayInput)(nil)).Elem(), DirectNewrelicHistoricalDataRetrievalMaxDurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectNewrelicQueryDelayInput)(nil)).Elem(), DirectNewrelicQueryDelayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectNewrelicQueryDelayPtrInput)(nil)).Elem(), DirectNewrelicQueryDelayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectPingdomQueryDelayInput)(nil)).Elem(), DirectPingdomQueryDelayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectPingdomQueryDelayPtrInput)(nil)).Elem(), DirectPingdomQueryDelayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectRedshiftQueryDelayInput)(nil)).Elem(), DirectRedshiftQueryDelayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectRedshiftQueryDelayPtrInput)(nil)).Elem(), DirectRedshiftQueryDelayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectSplunkHistoricalDataRetrievalInput)(nil)).Elem(), DirectSplunkHistoricalDataRetrievalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectSplunkHistoricalDataRetrievalPtrInput)(nil)).Elem(), DirectSplunkHistoricalDataRetrievalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectSplunkHistoricalDataRetrievalDefaultDurationInput)(nil)).Elem(), DirectSplunkHistoricalDataRetrievalDefaultDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectSplunkHistoricalDataRetrievalDefaultDurationArrayInput)(nil)).Elem(), DirectSplunkHistoricalDataRetrievalDefaultDurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectSplunkHistoricalDataRetrievalMaxDurationInput)(nil)).Elem(), DirectSplunkHistoricalDataRetrievalMaxDurationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectSplunkHistoricalDataRetrievalMaxDurationArrayInput)(nil)).Elem(), DirectSplunkHistoricalDataRetrievalMaxDurationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectSplunkObservabilityQueryDelayInput)(nil)).Elem(), DirectSplunkObservabilityQueryDelayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectSplunkObservabilityQueryDelayPtrInput)(nil)).Elem(), DirectSplunkObservabilityQueryDelayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectSplunkQueryDelayInput)(nil)).Elem(), DirectSplunkQueryDelayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectSplunkQueryDelayPtrInput)(nil)).Elem(), DirectSplunkQueryDelayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectSumologicQueryDelayInput)(nil)).Elem(), DirectSumologicQueryDelayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectSumologicQueryDelayPtrInput)(nil)).Elem(), DirectSumologicQueryDelayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectThousandeyesQueryDelayInput)(nil)).Elem(), DirectThousandeyesQueryDelayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectThousandeyesQueryDelayPtrInput)(nil)).Elem(), DirectThousandeyesQueryDelayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectLabelInput)(nil)).Elem(), ProjectLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectLabelArrayInput)(nil)).Elem(), ProjectLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLabelInput)(nil)).Elem(), ServiceLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceLabelArrayInput)(nil)).Elem(), ServiceLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloAnomalyConfigInput)(nil)).Elem(), SloAnomalyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloAnomalyConfigPtrInput)(nil)).Elem(), SloAnomalyConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloAnomalyConfigNoDataInput)(nil)).Elem(), SloAnomalyConfigNoDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloAnomalyConfigNoDataPtrInput)(nil)).Elem(), SloAnomalyConfigNoDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloAnomalyConfigNoDataAlertMethodInput)(nil)).Elem(), SloAnomalyConfigNoDataAlertMethodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloAnomalyConfigNoDataAlertMethodArrayInput)(nil)).Elem(), SloAnomalyConfigNoDataAlertMethodArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloAttachmentInput)(nil)).Elem(), SloAttachmentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloAttachmentArrayInput)(nil)).Elem(), SloAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloCompositeInput)(nil)).Elem(), SloCompositeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloCompositePtrInput)(nil)).Elem(), SloCompositeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloCompositeBurnRateConditionInput)(nil)).Elem(), SloCompositeBurnRateConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloCompositeBurnRateConditionArrayInput)(nil)).Elem(), SloCompositeBurnRateConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloIndicatorInput)(nil)).Elem(), SloIndicatorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloIndicatorPtrInput)(nil)).Elem(), SloIndicatorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloLabelInput)(nil)).Elem(), SloLabelArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloLabelArrayInput)(nil)).Elem(), SloLabelArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveInput)(nil)).Elem(), SloObjectiveArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveArrayInput)(nil)).Elem(), SloObjectiveArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricInput)(nil)).Elem(), SloObjectiveCountMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricArrayInput)(nil)).Elem(), SloObjectiveCountMetricArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadInput)(nil)).Elem(), SloObjectiveCountMetricBadArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadArrayInput)(nil)).Elem(), SloObjectiveCountMetricBadArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadAmazonPrometheusInput)(nil)).Elem(), SloObjectiveCountMetricBadAmazonPrometheusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadAmazonPrometheusArrayInput)(nil)).Elem(), SloObjectiveCountMetricBadAmazonPrometheusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadAppdynamicInput)(nil)).Elem(), SloObjectiveCountMetricBadAppdynamicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadAppdynamicArrayInput)(nil)).Elem(), SloObjectiveCountMetricBadAppdynamicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadAzureMonitorInput)(nil)).Elem(), SloObjectiveCountMetricBadAzureMonitorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadAzureMonitorArrayInput)(nil)).Elem(), SloObjectiveCountMetricBadAzureMonitorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadAzureMonitorDimensionInput)(nil)).Elem(), SloObjectiveCountMetricBadAzureMonitorDimensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadAzureMonitorDimensionArrayInput)(nil)).Elem(), SloObjectiveCountMetricBadAzureMonitorDimensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadAzureMonitorWorkspaceInput)(nil)).Elem(), SloObjectiveCountMetricBadAzureMonitorWorkspaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadAzureMonitorWorkspaceArrayInput)(nil)).Elem(), SloObjectiveCountMetricBadAzureMonitorWorkspaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadBigqueryInput)(nil)).Elem(), SloObjectiveCountMetricBadBigqueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadBigqueryArrayInput)(nil)).Elem(), SloObjectiveCountMetricBadBigqueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadCloudwatchInput)(nil)).Elem(), SloObjectiveCountMetricBadCloudwatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadCloudwatchArrayInput)(nil)).Elem(), SloObjectiveCountMetricBadCloudwatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadCloudwatchDimensionInput)(nil)).Elem(), SloObjectiveCountMetricBadCloudwatchDimensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadCloudwatchDimensionArrayInput)(nil)).Elem(), SloObjectiveCountMetricBadCloudwatchDimensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadDatadogInput)(nil)).Elem(), SloObjectiveCountMetricBadDatadogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadDatadogArrayInput)(nil)).Elem(), SloObjectiveCountMetricBadDatadogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadDynatraceInput)(nil)).Elem(), SloObjectiveCountMetricBadDynatraceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadDynatraceArrayInput)(nil)).Elem(), SloObjectiveCountMetricBadDynatraceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadElasticsearchInput)(nil)).Elem(), SloObjectiveCountMetricBadElasticsearchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadElasticsearchArrayInput)(nil)).Elem(), SloObjectiveCountMetricBadElasticsearchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadGcmInput)(nil)).Elem(), SloObjectiveCountMetricBadGcmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadGcmArrayInput)(nil)).Elem(), SloObjectiveCountMetricBadGcmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadGrafanaLokiInput)(nil)).Elem(), SloObjectiveCountMetricBadGrafanaLokiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadGrafanaLokiArrayInput)(nil)).Elem(), SloObjectiveCountMetricBadGrafanaLokiArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadGraphiteInput)(nil)).Elem(), SloObjectiveCountMetricBadGraphiteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadGraphiteArrayInput)(nil)).Elem(), SloObjectiveCountMetricBadGraphiteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadHoneycombInput)(nil)).Elem(), SloObjectiveCountMetricBadHoneycombArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadHoneycombArrayInput)(nil)).Elem(), SloObjectiveCountMetricBadHoneycombArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadInfluxdbInput)(nil)).Elem(), SloObjectiveCountMetricBadInfluxdbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadInfluxdbArrayInput)(nil)).Elem(), SloObjectiveCountMetricBadInfluxdbArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadInstanaInput)(nil)).Elem(), SloObjectiveCountMetricBadInstanaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadInstanaArrayInput)(nil)).Elem(), SloObjectiveCountMetricBadInstanaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadInstanaApplicationInput)(nil)).Elem(), SloObjectiveCountMetricBadInstanaApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadInstanaApplicationArrayInput)(nil)).Elem(), SloObjectiveCountMetricBadInstanaApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadInstanaApplicationGroupByInput)(nil)).Elem(), SloObjectiveCountMetricBadInstanaApplicationGroupByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadInstanaApplicationGroupByArrayInput)(nil)).Elem(), SloObjectiveCountMetricBadInstanaApplicationGroupByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadInstanaInfrastructureInput)(nil)).Elem(), SloObjectiveCountMetricBadInstanaInfrastructureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadInstanaInfrastructureArrayInput)(nil)).Elem(), SloObjectiveCountMetricBadInstanaInfrastructureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadLightstepInput)(nil)).Elem(), SloObjectiveCountMetricBadLightstepArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadLightstepArrayInput)(nil)).Elem(), SloObjectiveCountMetricBadLightstepArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadNewrelicInput)(nil)).Elem(), SloObjectiveCountMetricBadNewrelicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadNewrelicArrayInput)(nil)).Elem(), SloObjectiveCountMetricBadNewrelicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadOpentsdbInput)(nil)).Elem(), SloObjectiveCountMetricBadOpentsdbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadOpentsdbArrayInput)(nil)).Elem(), SloObjectiveCountMetricBadOpentsdbArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadPingdomInput)(nil)).Elem(), SloObjectiveCountMetricBadPingdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadPingdomArrayInput)(nil)).Elem(), SloObjectiveCountMetricBadPingdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadPrometheusInput)(nil)).Elem(), SloObjectiveCountMetricBadPrometheusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadPrometheusArrayInput)(nil)).Elem(), SloObjectiveCountMetricBadPrometheusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadRedshiftInput)(nil)).Elem(), SloObjectiveCountMetricBadRedshiftArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadRedshiftArrayInput)(nil)).Elem(), SloObjectiveCountMetricBadRedshiftArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadSplunkInput)(nil)).Elem(), SloObjectiveCountMetricBadSplunkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadSplunkArrayInput)(nil)).Elem(), SloObjectiveCountMetricBadSplunkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadSplunkObservabilityInput)(nil)).Elem(), SloObjectiveCountMetricBadSplunkObservabilityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadSplunkObservabilityArrayInput)(nil)).Elem(), SloObjectiveCountMetricBadSplunkObservabilityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadSumologicInput)(nil)).Elem(), SloObjectiveCountMetricBadSumologicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadSumologicArrayInput)(nil)).Elem(), SloObjectiveCountMetricBadSumologicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadThousandeyeInput)(nil)).Elem(), SloObjectiveCountMetricBadThousandeyeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricBadThousandeyeArrayInput)(nil)).Elem(), SloObjectiveCountMetricBadThousandeyeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodInput)(nil)).Elem(), SloObjectiveCountMetricGoodArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodArrayInput)(nil)).Elem(), SloObjectiveCountMetricGoodArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodAmazonPrometheusInput)(nil)).Elem(), SloObjectiveCountMetricGoodAmazonPrometheusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodAmazonPrometheusArrayInput)(nil)).Elem(), SloObjectiveCountMetricGoodAmazonPrometheusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodAppdynamicInput)(nil)).Elem(), SloObjectiveCountMetricGoodAppdynamicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodAppdynamicArrayInput)(nil)).Elem(), SloObjectiveCountMetricGoodAppdynamicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodAzureMonitorInput)(nil)).Elem(), SloObjectiveCountMetricGoodAzureMonitorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodAzureMonitorArrayInput)(nil)).Elem(), SloObjectiveCountMetricGoodAzureMonitorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodAzureMonitorDimensionInput)(nil)).Elem(), SloObjectiveCountMetricGoodAzureMonitorDimensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodAzureMonitorDimensionArrayInput)(nil)).Elem(), SloObjectiveCountMetricGoodAzureMonitorDimensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodAzureMonitorWorkspaceInput)(nil)).Elem(), SloObjectiveCountMetricGoodAzureMonitorWorkspaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodAzureMonitorWorkspaceArrayInput)(nil)).Elem(), SloObjectiveCountMetricGoodAzureMonitorWorkspaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodBigqueryInput)(nil)).Elem(), SloObjectiveCountMetricGoodBigqueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodBigqueryArrayInput)(nil)).Elem(), SloObjectiveCountMetricGoodBigqueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodCloudwatchInput)(nil)).Elem(), SloObjectiveCountMetricGoodCloudwatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodCloudwatchArrayInput)(nil)).Elem(), SloObjectiveCountMetricGoodCloudwatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodCloudwatchDimensionInput)(nil)).Elem(), SloObjectiveCountMetricGoodCloudwatchDimensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodCloudwatchDimensionArrayInput)(nil)).Elem(), SloObjectiveCountMetricGoodCloudwatchDimensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodDatadogInput)(nil)).Elem(), SloObjectiveCountMetricGoodDatadogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodDatadogArrayInput)(nil)).Elem(), SloObjectiveCountMetricGoodDatadogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodDynatraceInput)(nil)).Elem(), SloObjectiveCountMetricGoodDynatraceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodDynatraceArrayInput)(nil)).Elem(), SloObjectiveCountMetricGoodDynatraceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodElasticsearchInput)(nil)).Elem(), SloObjectiveCountMetricGoodElasticsearchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodElasticsearchArrayInput)(nil)).Elem(), SloObjectiveCountMetricGoodElasticsearchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodGcmInput)(nil)).Elem(), SloObjectiveCountMetricGoodGcmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodGcmArrayInput)(nil)).Elem(), SloObjectiveCountMetricGoodGcmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodGrafanaLokiInput)(nil)).Elem(), SloObjectiveCountMetricGoodGrafanaLokiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodGrafanaLokiArrayInput)(nil)).Elem(), SloObjectiveCountMetricGoodGrafanaLokiArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodGraphiteInput)(nil)).Elem(), SloObjectiveCountMetricGoodGraphiteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodGraphiteArrayInput)(nil)).Elem(), SloObjectiveCountMetricGoodGraphiteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodHoneycombInput)(nil)).Elem(), SloObjectiveCountMetricGoodHoneycombArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodHoneycombArrayInput)(nil)).Elem(), SloObjectiveCountMetricGoodHoneycombArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodInfluxdbInput)(nil)).Elem(), SloObjectiveCountMetricGoodInfluxdbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodInfluxdbArrayInput)(nil)).Elem(), SloObjectiveCountMetricGoodInfluxdbArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodInstanaInput)(nil)).Elem(), SloObjectiveCountMetricGoodInstanaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodInstanaArrayInput)(nil)).Elem(), SloObjectiveCountMetricGoodInstanaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodInstanaApplicationInput)(nil)).Elem(), SloObjectiveCountMetricGoodInstanaApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodInstanaApplicationArrayInput)(nil)).Elem(), SloObjectiveCountMetricGoodInstanaApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodInstanaApplicationGroupByInput)(nil)).Elem(), SloObjectiveCountMetricGoodInstanaApplicationGroupByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodInstanaApplicationGroupByArrayInput)(nil)).Elem(), SloObjectiveCountMetricGoodInstanaApplicationGroupByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodInstanaInfrastructureInput)(nil)).Elem(), SloObjectiveCountMetricGoodInstanaInfrastructureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodInstanaInfrastructureArrayInput)(nil)).Elem(), SloObjectiveCountMetricGoodInstanaInfrastructureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodLightstepInput)(nil)).Elem(), SloObjectiveCountMetricGoodLightstepArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodLightstepArrayInput)(nil)).Elem(), SloObjectiveCountMetricGoodLightstepArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodNewrelicInput)(nil)).Elem(), SloObjectiveCountMetricGoodNewrelicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodNewrelicArrayInput)(nil)).Elem(), SloObjectiveCountMetricGoodNewrelicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodOpentsdbInput)(nil)).Elem(), SloObjectiveCountMetricGoodOpentsdbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodOpentsdbArrayInput)(nil)).Elem(), SloObjectiveCountMetricGoodOpentsdbArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodPingdomInput)(nil)).Elem(), SloObjectiveCountMetricGoodPingdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodPingdomArrayInput)(nil)).Elem(), SloObjectiveCountMetricGoodPingdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodPrometheusInput)(nil)).Elem(), SloObjectiveCountMetricGoodPrometheusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodPrometheusArrayInput)(nil)).Elem(), SloObjectiveCountMetricGoodPrometheusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodRedshiftInput)(nil)).Elem(), SloObjectiveCountMetricGoodRedshiftArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodRedshiftArrayInput)(nil)).Elem(), SloObjectiveCountMetricGoodRedshiftArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodSplunkInput)(nil)).Elem(), SloObjectiveCountMetricGoodSplunkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodSplunkArrayInput)(nil)).Elem(), SloObjectiveCountMetricGoodSplunkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodSplunkObservabilityInput)(nil)).Elem(), SloObjectiveCountMetricGoodSplunkObservabilityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodSplunkObservabilityArrayInput)(nil)).Elem(), SloObjectiveCountMetricGoodSplunkObservabilityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodSumologicInput)(nil)).Elem(), SloObjectiveCountMetricGoodSumologicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodSumologicArrayInput)(nil)).Elem(), SloObjectiveCountMetricGoodSumologicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodThousandeyeInput)(nil)).Elem(), SloObjectiveCountMetricGoodThousandeyeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricGoodThousandeyeArrayInput)(nil)).Elem(), SloObjectiveCountMetricGoodThousandeyeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalInput)(nil)).Elem(), SloObjectiveCountMetricTotalArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalArrayInput)(nil)).Elem(), SloObjectiveCountMetricTotalArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalAmazonPrometheusInput)(nil)).Elem(), SloObjectiveCountMetricTotalAmazonPrometheusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalAmazonPrometheusArrayInput)(nil)).Elem(), SloObjectiveCountMetricTotalAmazonPrometheusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalAppdynamicInput)(nil)).Elem(), SloObjectiveCountMetricTotalAppdynamicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalAppdynamicArrayInput)(nil)).Elem(), SloObjectiveCountMetricTotalAppdynamicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalAzureMonitorInput)(nil)).Elem(), SloObjectiveCountMetricTotalAzureMonitorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalAzureMonitorArrayInput)(nil)).Elem(), SloObjectiveCountMetricTotalAzureMonitorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalAzureMonitorDimensionInput)(nil)).Elem(), SloObjectiveCountMetricTotalAzureMonitorDimensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalAzureMonitorDimensionArrayInput)(nil)).Elem(), SloObjectiveCountMetricTotalAzureMonitorDimensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalAzureMonitorWorkspaceInput)(nil)).Elem(), SloObjectiveCountMetricTotalAzureMonitorWorkspaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalAzureMonitorWorkspaceArrayInput)(nil)).Elem(), SloObjectiveCountMetricTotalAzureMonitorWorkspaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalBigqueryInput)(nil)).Elem(), SloObjectiveCountMetricTotalBigqueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalBigqueryArrayInput)(nil)).Elem(), SloObjectiveCountMetricTotalBigqueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalCloudwatchInput)(nil)).Elem(), SloObjectiveCountMetricTotalCloudwatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalCloudwatchArrayInput)(nil)).Elem(), SloObjectiveCountMetricTotalCloudwatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalCloudwatchDimensionInput)(nil)).Elem(), SloObjectiveCountMetricTotalCloudwatchDimensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalCloudwatchDimensionArrayInput)(nil)).Elem(), SloObjectiveCountMetricTotalCloudwatchDimensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalDatadogInput)(nil)).Elem(), SloObjectiveCountMetricTotalDatadogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalDatadogArrayInput)(nil)).Elem(), SloObjectiveCountMetricTotalDatadogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalDynatraceInput)(nil)).Elem(), SloObjectiveCountMetricTotalDynatraceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalDynatraceArrayInput)(nil)).Elem(), SloObjectiveCountMetricTotalDynatraceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalElasticsearchInput)(nil)).Elem(), SloObjectiveCountMetricTotalElasticsearchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalElasticsearchArrayInput)(nil)).Elem(), SloObjectiveCountMetricTotalElasticsearchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalGcmInput)(nil)).Elem(), SloObjectiveCountMetricTotalGcmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalGcmArrayInput)(nil)).Elem(), SloObjectiveCountMetricTotalGcmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalGrafanaLokiInput)(nil)).Elem(), SloObjectiveCountMetricTotalGrafanaLokiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalGrafanaLokiArrayInput)(nil)).Elem(), SloObjectiveCountMetricTotalGrafanaLokiArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalGraphiteInput)(nil)).Elem(), SloObjectiveCountMetricTotalGraphiteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalGraphiteArrayInput)(nil)).Elem(), SloObjectiveCountMetricTotalGraphiteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalHoneycombInput)(nil)).Elem(), SloObjectiveCountMetricTotalHoneycombArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalHoneycombArrayInput)(nil)).Elem(), SloObjectiveCountMetricTotalHoneycombArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalInfluxdbInput)(nil)).Elem(), SloObjectiveCountMetricTotalInfluxdbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalInfluxdbArrayInput)(nil)).Elem(), SloObjectiveCountMetricTotalInfluxdbArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalInstanaInput)(nil)).Elem(), SloObjectiveCountMetricTotalInstanaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalInstanaArrayInput)(nil)).Elem(), SloObjectiveCountMetricTotalInstanaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalInstanaApplicationInput)(nil)).Elem(), SloObjectiveCountMetricTotalInstanaApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalInstanaApplicationArrayInput)(nil)).Elem(), SloObjectiveCountMetricTotalInstanaApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalInstanaApplicationGroupByInput)(nil)).Elem(), SloObjectiveCountMetricTotalInstanaApplicationGroupByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalInstanaApplicationGroupByArrayInput)(nil)).Elem(), SloObjectiveCountMetricTotalInstanaApplicationGroupByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalInstanaInfrastructureInput)(nil)).Elem(), SloObjectiveCountMetricTotalInstanaInfrastructureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalInstanaInfrastructureArrayInput)(nil)).Elem(), SloObjectiveCountMetricTotalInstanaInfrastructureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalLightstepInput)(nil)).Elem(), SloObjectiveCountMetricTotalLightstepArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalLightstepArrayInput)(nil)).Elem(), SloObjectiveCountMetricTotalLightstepArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalNewrelicInput)(nil)).Elem(), SloObjectiveCountMetricTotalNewrelicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalNewrelicArrayInput)(nil)).Elem(), SloObjectiveCountMetricTotalNewrelicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalOpentsdbInput)(nil)).Elem(), SloObjectiveCountMetricTotalOpentsdbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalOpentsdbArrayInput)(nil)).Elem(), SloObjectiveCountMetricTotalOpentsdbArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalPingdomInput)(nil)).Elem(), SloObjectiveCountMetricTotalPingdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalPingdomArrayInput)(nil)).Elem(), SloObjectiveCountMetricTotalPingdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalPrometheusInput)(nil)).Elem(), SloObjectiveCountMetricTotalPrometheusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalPrometheusArrayInput)(nil)).Elem(), SloObjectiveCountMetricTotalPrometheusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalRedshiftInput)(nil)).Elem(), SloObjectiveCountMetricTotalRedshiftArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalRedshiftArrayInput)(nil)).Elem(), SloObjectiveCountMetricTotalRedshiftArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalSplunkInput)(nil)).Elem(), SloObjectiveCountMetricTotalSplunkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalSplunkArrayInput)(nil)).Elem(), SloObjectiveCountMetricTotalSplunkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalSplunkObservabilityInput)(nil)).Elem(), SloObjectiveCountMetricTotalSplunkObservabilityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalSplunkObservabilityArrayInput)(nil)).Elem(), SloObjectiveCountMetricTotalSplunkObservabilityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalSumologicInput)(nil)).Elem(), SloObjectiveCountMetricTotalSumologicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalSumologicArrayInput)(nil)).Elem(), SloObjectiveCountMetricTotalSumologicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalThousandeyeInput)(nil)).Elem(), SloObjectiveCountMetricTotalThousandeyeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveCountMetricTotalThousandeyeArrayInput)(nil)).Elem(), SloObjectiveCountMetricTotalThousandeyeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricInput)(nil)).Elem(), SloObjectiveRawMetricArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricArrayInput)(nil)).Elem(), SloObjectiveRawMetricArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryInput)(nil)).Elem(), SloObjectiveRawMetricQueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryArrayInput)(nil)).Elem(), SloObjectiveRawMetricQueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryAmazonPrometheusInput)(nil)).Elem(), SloObjectiveRawMetricQueryAmazonPrometheusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryAmazonPrometheusArrayInput)(nil)).Elem(), SloObjectiveRawMetricQueryAmazonPrometheusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryAppdynamicInput)(nil)).Elem(), SloObjectiveRawMetricQueryAppdynamicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryAppdynamicArrayInput)(nil)).Elem(), SloObjectiveRawMetricQueryAppdynamicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryAzureMonitorInput)(nil)).Elem(), SloObjectiveRawMetricQueryAzureMonitorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryAzureMonitorArrayInput)(nil)).Elem(), SloObjectiveRawMetricQueryAzureMonitorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryAzureMonitorDimensionInput)(nil)).Elem(), SloObjectiveRawMetricQueryAzureMonitorDimensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryAzureMonitorDimensionArrayInput)(nil)).Elem(), SloObjectiveRawMetricQueryAzureMonitorDimensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryAzureMonitorWorkspaceInput)(nil)).Elem(), SloObjectiveRawMetricQueryAzureMonitorWorkspaceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryAzureMonitorWorkspaceArrayInput)(nil)).Elem(), SloObjectiveRawMetricQueryAzureMonitorWorkspaceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryBigqueryInput)(nil)).Elem(), SloObjectiveRawMetricQueryBigqueryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryBigqueryArrayInput)(nil)).Elem(), SloObjectiveRawMetricQueryBigqueryArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryCloudwatchInput)(nil)).Elem(), SloObjectiveRawMetricQueryCloudwatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryCloudwatchArrayInput)(nil)).Elem(), SloObjectiveRawMetricQueryCloudwatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryCloudwatchDimensionInput)(nil)).Elem(), SloObjectiveRawMetricQueryCloudwatchDimensionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryCloudwatchDimensionArrayInput)(nil)).Elem(), SloObjectiveRawMetricQueryCloudwatchDimensionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryDatadogInput)(nil)).Elem(), SloObjectiveRawMetricQueryDatadogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryDatadogArrayInput)(nil)).Elem(), SloObjectiveRawMetricQueryDatadogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryDynatraceInput)(nil)).Elem(), SloObjectiveRawMetricQueryDynatraceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryDynatraceArrayInput)(nil)).Elem(), SloObjectiveRawMetricQueryDynatraceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryElasticsearchInput)(nil)).Elem(), SloObjectiveRawMetricQueryElasticsearchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryElasticsearchArrayInput)(nil)).Elem(), SloObjectiveRawMetricQueryElasticsearchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryGcmInput)(nil)).Elem(), SloObjectiveRawMetricQueryGcmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryGcmArrayInput)(nil)).Elem(), SloObjectiveRawMetricQueryGcmArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryGrafanaLokiInput)(nil)).Elem(), SloObjectiveRawMetricQueryGrafanaLokiArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryGrafanaLokiArrayInput)(nil)).Elem(), SloObjectiveRawMetricQueryGrafanaLokiArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryGraphiteInput)(nil)).Elem(), SloObjectiveRawMetricQueryGraphiteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryGraphiteArrayInput)(nil)).Elem(), SloObjectiveRawMetricQueryGraphiteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryHoneycombInput)(nil)).Elem(), SloObjectiveRawMetricQueryHoneycombArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryHoneycombArrayInput)(nil)).Elem(), SloObjectiveRawMetricQueryHoneycombArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryInfluxdbInput)(nil)).Elem(), SloObjectiveRawMetricQueryInfluxdbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryInfluxdbArrayInput)(nil)).Elem(), SloObjectiveRawMetricQueryInfluxdbArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryInstanaInput)(nil)).Elem(), SloObjectiveRawMetricQueryInstanaArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryInstanaArrayInput)(nil)).Elem(), SloObjectiveRawMetricQueryInstanaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryInstanaApplicationInput)(nil)).Elem(), SloObjectiveRawMetricQueryInstanaApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryInstanaApplicationArrayInput)(nil)).Elem(), SloObjectiveRawMetricQueryInstanaApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryInstanaApplicationGroupByInput)(nil)).Elem(), SloObjectiveRawMetricQueryInstanaApplicationGroupByArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryInstanaApplicationGroupByArrayInput)(nil)).Elem(), SloObjectiveRawMetricQueryInstanaApplicationGroupByArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryInstanaInfrastructureInput)(nil)).Elem(), SloObjectiveRawMetricQueryInstanaInfrastructureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryInstanaInfrastructureArrayInput)(nil)).Elem(), SloObjectiveRawMetricQueryInstanaInfrastructureArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryLightstepInput)(nil)).Elem(), SloObjectiveRawMetricQueryLightstepArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryLightstepArrayInput)(nil)).Elem(), SloObjectiveRawMetricQueryLightstepArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryNewrelicInput)(nil)).Elem(), SloObjectiveRawMetricQueryNewrelicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryNewrelicArrayInput)(nil)).Elem(), SloObjectiveRawMetricQueryNewrelicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryOpentsdbInput)(nil)).Elem(), SloObjectiveRawMetricQueryOpentsdbArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryOpentsdbArrayInput)(nil)).Elem(), SloObjectiveRawMetricQueryOpentsdbArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryPingdomInput)(nil)).Elem(), SloObjectiveRawMetricQueryPingdomArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryPingdomArrayInput)(nil)).Elem(), SloObjectiveRawMetricQueryPingdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryPrometheusInput)(nil)).Elem(), SloObjectiveRawMetricQueryPrometheusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryPrometheusArrayInput)(nil)).Elem(), SloObjectiveRawMetricQueryPrometheusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryRedshiftInput)(nil)).Elem(), SloObjectiveRawMetricQueryRedshiftArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryRedshiftArrayInput)(nil)).Elem(), SloObjectiveRawMetricQueryRedshiftArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQuerySplunkInput)(nil)).Elem(), SloObjectiveRawMetricQuerySplunkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQuerySplunkArrayInput)(nil)).Elem(), SloObjectiveRawMetricQuerySplunkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQuerySplunkObservabilityInput)(nil)).Elem(), SloObjectiveRawMetricQuerySplunkObservabilityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQuerySplunkObservabilityArrayInput)(nil)).Elem(), SloObjectiveRawMetricQuerySplunkObservabilityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQuerySumologicInput)(nil)).Elem(), SloObjectiveRawMetricQuerySumologicArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQuerySumologicArrayInput)(nil)).Elem(), SloObjectiveRawMetricQuerySumologicArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryThousandeyeInput)(nil)).Elem(), SloObjectiveRawMetricQueryThousandeyeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloObjectiveRawMetricQueryThousandeyeArrayInput)(nil)).Elem(), SloObjectiveRawMetricQueryThousandeyeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloTimeWindowInput)(nil)).Elem(), SloTimeWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloTimeWindowPtrInput)(nil)).Elem(), SloTimeWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloTimeWindowCalendarInput)(nil)).Elem(), SloTimeWindowCalendarArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SloTimeWindowCalendarArrayInput)(nil)).Elem(), SloTimeWindowCalendarArray{})
	pulumi.RegisterOutputType(AgentAmazonPrometheusConfigOutput{})
	pulumi.RegisterOutputType(AgentAmazonPrometheusConfigPtrOutput{})
	pulumi.RegisterOutputType(AgentAppdynamicsConfigOutput{})
	pulumi.RegisterOutputType(AgentAppdynamicsConfigPtrOutput{})
	pulumi.RegisterOutputType(AgentAzureMonitorConfigOutput{})
	pulumi.RegisterOutputType(AgentAzureMonitorConfigPtrOutput{})
	pulumi.RegisterOutputType(AgentBigqueryConfigOutput{})
	pulumi.RegisterOutputType(AgentBigqueryConfigPtrOutput{})
	pulumi.RegisterOutputType(AgentCloudwatchConfigOutput{})
	pulumi.RegisterOutputType(AgentCloudwatchConfigPtrOutput{})
	pulumi.RegisterOutputType(AgentDatadogConfigOutput{})
	pulumi.RegisterOutputType(AgentDatadogConfigPtrOutput{})
	pulumi.RegisterOutputType(AgentDynatraceConfigOutput{})
	pulumi.RegisterOutputType(AgentDynatraceConfigPtrOutput{})
	pulumi.RegisterOutputType(AgentElasticsearchConfigOutput{})
	pulumi.RegisterOutputType(AgentElasticsearchConfigPtrOutput{})
	pulumi.RegisterOutputType(AgentGcmConfigOutput{})
	pulumi.RegisterOutputType(AgentGcmConfigPtrOutput{})
	pulumi.RegisterOutputType(AgentGrafanaLokiConfigOutput{})
	pulumi.RegisterOutputType(AgentGrafanaLokiConfigPtrOutput{})
	pulumi.RegisterOutputType(AgentGraphiteConfigOutput{})
	pulumi.RegisterOutputType(AgentGraphiteConfigPtrOutput{})
	pulumi.RegisterOutputType(AgentHistoricalDataRetrievalOutput{})
	pulumi.RegisterOutputType(AgentHistoricalDataRetrievalPtrOutput{})
	pulumi.RegisterOutputType(AgentHistoricalDataRetrievalDefaultDurationOutput{})
	pulumi.RegisterOutputType(AgentHistoricalDataRetrievalDefaultDurationArrayOutput{})
	pulumi.RegisterOutputType(AgentHistoricalDataRetrievalMaxDurationOutput{})
	pulumi.RegisterOutputType(AgentHistoricalDataRetrievalMaxDurationArrayOutput{})
	pulumi.RegisterOutputType(AgentHoneycombConfigOutput{})
	pulumi.RegisterOutputType(AgentHoneycombConfigPtrOutput{})
	pulumi.RegisterOutputType(AgentInfluxdbConfigOutput{})
	pulumi.RegisterOutputType(AgentInfluxdbConfigPtrOutput{})
	pulumi.RegisterOutputType(AgentInstanaConfigOutput{})
	pulumi.RegisterOutputType(AgentInstanaConfigPtrOutput{})
	pulumi.RegisterOutputType(AgentLightstepConfigOutput{})
	pulumi.RegisterOutputType(AgentLightstepConfigPtrOutput{})
	pulumi.RegisterOutputType(AgentNewrelicConfigOutput{})
	pulumi.RegisterOutputType(AgentNewrelicConfigPtrOutput{})
	pulumi.RegisterOutputType(AgentOpentsdbConfigOutput{})
	pulumi.RegisterOutputType(AgentOpentsdbConfigPtrOutput{})
	pulumi.RegisterOutputType(AgentPingdomConfigOutput{})
	pulumi.RegisterOutputType(AgentPingdomConfigPtrOutput{})
	pulumi.RegisterOutputType(AgentPrometheusConfigOutput{})
	pulumi.RegisterOutputType(AgentPrometheusConfigPtrOutput{})
	pulumi.RegisterOutputType(AgentQueryDelayOutput{})
	pulumi.RegisterOutputType(AgentQueryDelayPtrOutput{})
	pulumi.RegisterOutputType(AgentRedshiftConfigOutput{})
	pulumi.RegisterOutputType(AgentRedshiftConfigPtrOutput{})
	pulumi.RegisterOutputType(AgentSplunkConfigOutput{})
	pulumi.RegisterOutputType(AgentSplunkConfigPtrOutput{})
	pulumi.RegisterOutputType(AgentSplunkObservabilityConfigOutput{})
	pulumi.RegisterOutputType(AgentSplunkObservabilityConfigPtrOutput{})
	pulumi.RegisterOutputType(AgentSumologicConfigOutput{})
	pulumi.RegisterOutputType(AgentSumologicConfigPtrOutput{})
	pulumi.RegisterOutputType(AgentThousandeyesConfigOutput{})
	pulumi.RegisterOutputType(AgentThousandeyesConfigPtrOutput{})
	pulumi.RegisterOutputType(AlertMethodPagerdutySendResolutionOutput{})
	pulumi.RegisterOutputType(AlertMethodPagerdutySendResolutionPtrOutput{})
	pulumi.RegisterOutputType(AlertPolicyAlertMethodOutput{})
	pulumi.RegisterOutputType(AlertPolicyAlertMethodArrayOutput{})
	pulumi.RegisterOutputType(AlertPolicyConditionOutput{})
	pulumi.RegisterOutputType(AlertPolicyConditionArrayOutput{})
	pulumi.RegisterOutputType(DirectAppdynamicsHistoricalDataRetrievalOutput{})
	pulumi.RegisterOutputType(DirectAppdynamicsHistoricalDataRetrievalPtrOutput{})
	pulumi.RegisterOutputType(DirectAppdynamicsHistoricalDataRetrievalDefaultDurationOutput{})
	pulumi.RegisterOutputType(DirectAppdynamicsHistoricalDataRetrievalDefaultDurationArrayOutput{})
	pulumi.RegisterOutputType(DirectAppdynamicsHistoricalDataRetrievalMaxDurationOutput{})
	pulumi.RegisterOutputType(DirectAppdynamicsHistoricalDataRetrievalMaxDurationArrayOutput{})
	pulumi.RegisterOutputType(DirectAppdynamicsQueryDelayOutput{})
	pulumi.RegisterOutputType(DirectAppdynamicsQueryDelayPtrOutput{})
	pulumi.RegisterOutputType(DirectAzureMonitorHistoricalDataRetrievalOutput{})
	pulumi.RegisterOutputType(DirectAzureMonitorHistoricalDataRetrievalPtrOutput{})
	pulumi.RegisterOutputType(DirectAzureMonitorHistoricalDataRetrievalDefaultDurationOutput{})
	pulumi.RegisterOutputType(DirectAzureMonitorHistoricalDataRetrievalDefaultDurationArrayOutput{})
	pulumi.RegisterOutputType(DirectAzureMonitorHistoricalDataRetrievalMaxDurationOutput{})
	pulumi.RegisterOutputType(DirectAzureMonitorHistoricalDataRetrievalMaxDurationArrayOutput{})
	pulumi.RegisterOutputType(DirectAzureMonitorQueryDelayOutput{})
	pulumi.RegisterOutputType(DirectAzureMonitorQueryDelayPtrOutput{})
	pulumi.RegisterOutputType(DirectBigqueryQueryDelayOutput{})
	pulumi.RegisterOutputType(DirectBigqueryQueryDelayPtrOutput{})
	pulumi.RegisterOutputType(DirectCloudwatchHistoricalDataRetrievalOutput{})
	pulumi.RegisterOutputType(DirectCloudwatchHistoricalDataRetrievalPtrOutput{})
	pulumi.RegisterOutputType(DirectCloudwatchHistoricalDataRetrievalDefaultDurationOutput{})
	pulumi.RegisterOutputType(DirectCloudwatchHistoricalDataRetrievalDefaultDurationArrayOutput{})
	pulumi.RegisterOutputType(DirectCloudwatchHistoricalDataRetrievalMaxDurationOutput{})
	pulumi.RegisterOutputType(DirectCloudwatchHistoricalDataRetrievalMaxDurationArrayOutput{})
	pulumi.RegisterOutputType(DirectCloudwatchQueryDelayOutput{})
	pulumi.RegisterOutputType(DirectCloudwatchQueryDelayPtrOutput{})
	pulumi.RegisterOutputType(DirectDatadogHistoricalDataRetrievalOutput{})
	pulumi.RegisterOutputType(DirectDatadogHistoricalDataRetrievalPtrOutput{})
	pulumi.RegisterOutputType(DirectDatadogHistoricalDataRetrievalDefaultDurationOutput{})
	pulumi.RegisterOutputType(DirectDatadogHistoricalDataRetrievalDefaultDurationArrayOutput{})
	pulumi.RegisterOutputType(DirectDatadogHistoricalDataRetrievalMaxDurationOutput{})
	pulumi.RegisterOutputType(DirectDatadogHistoricalDataRetrievalMaxDurationArrayOutput{})
	pulumi.RegisterOutputType(DirectDatadogQueryDelayOutput{})
	pulumi.RegisterOutputType(DirectDatadogQueryDelayPtrOutput{})
	pulumi.RegisterOutputType(DirectDynatraceHistoricalDataRetrievalOutput{})
	pulumi.RegisterOutputType(DirectDynatraceHistoricalDataRetrievalPtrOutput{})
	pulumi.RegisterOutputType(DirectDynatraceHistoricalDataRetrievalDefaultDurationOutput{})
	pulumi.RegisterOutputType(DirectDynatraceHistoricalDataRetrievalDefaultDurationArrayOutput{})
	pulumi.RegisterOutputType(DirectDynatraceHistoricalDataRetrievalMaxDurationOutput{})
	pulumi.RegisterOutputType(DirectDynatraceHistoricalDataRetrievalMaxDurationArrayOutput{})
	pulumi.RegisterOutputType(DirectDynatraceQueryDelayOutput{})
	pulumi.RegisterOutputType(DirectDynatraceQueryDelayPtrOutput{})
	pulumi.RegisterOutputType(DirectGcmQueryDelayOutput{})
	pulumi.RegisterOutputType(DirectGcmQueryDelayPtrOutput{})
	pulumi.RegisterOutputType(DirectHoneycombHistoricalDataRetrievalOutput{})
	pulumi.RegisterOutputType(DirectHoneycombHistoricalDataRetrievalPtrOutput{})
	pulumi.RegisterOutputType(DirectHoneycombHistoricalDataRetrievalDefaultDurationOutput{})
	pulumi.RegisterOutputType(DirectHoneycombHistoricalDataRetrievalDefaultDurationArrayOutput{})
	pulumi.RegisterOutputType(DirectHoneycombHistoricalDataRetrievalMaxDurationOutput{})
	pulumi.RegisterOutputType(DirectHoneycombHistoricalDataRetrievalMaxDurationArrayOutput{})
	pulumi.RegisterOutputType(DirectHoneycombQueryDelayOutput{})
	pulumi.RegisterOutputType(DirectHoneycombQueryDelayPtrOutput{})
	pulumi.RegisterOutputType(DirectInfluxdbQueryDelayOutput{})
	pulumi.RegisterOutputType(DirectInfluxdbQueryDelayPtrOutput{})
	pulumi.RegisterOutputType(DirectInstanaQueryDelayOutput{})
	pulumi.RegisterOutputType(DirectInstanaQueryDelayPtrOutput{})
	pulumi.RegisterOutputType(DirectLightstepHistoricalDataRetrievalOutput{})
	pulumi.RegisterOutputType(DirectLightstepHistoricalDataRetrievalPtrOutput{})
	pulumi.RegisterOutputType(DirectLightstepHistoricalDataRetrievalDefaultDurationOutput{})
	pulumi.RegisterOutputType(DirectLightstepHistoricalDataRetrievalDefaultDurationArrayOutput{})
	pulumi.RegisterOutputType(DirectLightstepHistoricalDataRetrievalMaxDurationOutput{})
	pulumi.RegisterOutputType(DirectLightstepHistoricalDataRetrievalMaxDurationArrayOutput{})
	pulumi.RegisterOutputType(DirectLightstepQueryDelayOutput{})
	pulumi.RegisterOutputType(DirectLightstepQueryDelayPtrOutput{})
	pulumi.RegisterOutputType(DirectNewrelicHistoricalDataRetrievalOutput{})
	pulumi.RegisterOutputType(DirectNewrelicHistoricalDataRetrievalPtrOutput{})
	pulumi.RegisterOutputType(DirectNewrelicHistoricalDataRetrievalDefaultDurationOutput{})
	pulumi.RegisterOutputType(DirectNewrelicHistoricalDataRetrievalDefaultDurationArrayOutput{})
	pulumi.RegisterOutputType(DirectNewrelicHistoricalDataRetrievalMaxDurationOutput{})
	pulumi.RegisterOutputType(DirectNewrelicHistoricalDataRetrievalMaxDurationArrayOutput{})
	pulumi.RegisterOutputType(DirectNewrelicQueryDelayOutput{})
	pulumi.RegisterOutputType(DirectNewrelicQueryDelayPtrOutput{})
	pulumi.RegisterOutputType(DirectPingdomQueryDelayOutput{})
	pulumi.RegisterOutputType(DirectPingdomQueryDelayPtrOutput{})
	pulumi.RegisterOutputType(DirectRedshiftQueryDelayOutput{})
	pulumi.RegisterOutputType(DirectRedshiftQueryDelayPtrOutput{})
	pulumi.RegisterOutputType(DirectSplunkHistoricalDataRetrievalOutput{})
	pulumi.RegisterOutputType(DirectSplunkHistoricalDataRetrievalPtrOutput{})
	pulumi.RegisterOutputType(DirectSplunkHistoricalDataRetrievalDefaultDurationOutput{})
	pulumi.RegisterOutputType(DirectSplunkHistoricalDataRetrievalDefaultDurationArrayOutput{})
	pulumi.RegisterOutputType(DirectSplunkHistoricalDataRetrievalMaxDurationOutput{})
	pulumi.RegisterOutputType(DirectSplunkHistoricalDataRetrievalMaxDurationArrayOutput{})
	pulumi.RegisterOutputType(DirectSplunkObservabilityQueryDelayOutput{})
	pulumi.RegisterOutputType(DirectSplunkObservabilityQueryDelayPtrOutput{})
	pulumi.RegisterOutputType(DirectSplunkQueryDelayOutput{})
	pulumi.RegisterOutputType(DirectSplunkQueryDelayPtrOutput{})
	pulumi.RegisterOutputType(DirectSumologicQueryDelayOutput{})
	pulumi.RegisterOutputType(DirectSumologicQueryDelayPtrOutput{})
	pulumi.RegisterOutputType(DirectThousandeyesQueryDelayOutput{})
	pulumi.RegisterOutputType(DirectThousandeyesQueryDelayPtrOutput{})
	pulumi.RegisterOutputType(ProjectLabelOutput{})
	pulumi.RegisterOutputType(ProjectLabelArrayOutput{})
	pulumi.RegisterOutputType(ServiceLabelOutput{})
	pulumi.RegisterOutputType(ServiceLabelArrayOutput{})
	pulumi.RegisterOutputType(SloAnomalyConfigOutput{})
	pulumi.RegisterOutputType(SloAnomalyConfigPtrOutput{})
	pulumi.RegisterOutputType(SloAnomalyConfigNoDataOutput{})
	pulumi.RegisterOutputType(SloAnomalyConfigNoDataPtrOutput{})
	pulumi.RegisterOutputType(SloAnomalyConfigNoDataAlertMethodOutput{})
	pulumi.RegisterOutputType(SloAnomalyConfigNoDataAlertMethodArrayOutput{})
	pulumi.RegisterOutputType(SloAttachmentOutput{})
	pulumi.RegisterOutputType(SloAttachmentArrayOutput{})
	pulumi.RegisterOutputType(SloCompositeOutput{})
	pulumi.RegisterOutputType(SloCompositePtrOutput{})
	pulumi.RegisterOutputType(SloCompositeBurnRateConditionOutput{})
	pulumi.RegisterOutputType(SloCompositeBurnRateConditionArrayOutput{})
	pulumi.RegisterOutputType(SloIndicatorOutput{})
	pulumi.RegisterOutputType(SloIndicatorPtrOutput{})
	pulumi.RegisterOutputType(SloLabelOutput{})
	pulumi.RegisterOutputType(SloLabelArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveOutput{})
	pulumi.RegisterOutputType(SloObjectiveArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadAmazonPrometheusOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadAmazonPrometheusArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadAppdynamicOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadAppdynamicArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadAzureMonitorOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadAzureMonitorArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadAzureMonitorDimensionOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadAzureMonitorDimensionArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadAzureMonitorWorkspaceOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadAzureMonitorWorkspaceArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadBigqueryOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadBigqueryArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadCloudwatchOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadCloudwatchArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadCloudwatchDimensionOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadCloudwatchDimensionArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadDatadogOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadDatadogArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadDynatraceOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadDynatraceArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadElasticsearchOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadElasticsearchArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadGcmOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadGcmArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadGrafanaLokiOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadGrafanaLokiArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadGraphiteOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadGraphiteArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadHoneycombOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadHoneycombArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadInfluxdbOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadInfluxdbArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadInstanaOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadInstanaArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadInstanaApplicationOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadInstanaApplicationArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadInstanaApplicationGroupByOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadInstanaApplicationGroupByArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadInstanaInfrastructureOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadInstanaInfrastructureArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadLightstepOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadLightstepArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadNewrelicOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadNewrelicArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadOpentsdbOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadOpentsdbArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadPingdomOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadPingdomArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadPrometheusOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadPrometheusArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadRedshiftOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadRedshiftArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadSplunkOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadSplunkArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadSplunkObservabilityOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadSplunkObservabilityArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadSumologicOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadSumologicArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadThousandeyeOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricBadThousandeyeArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodAmazonPrometheusOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodAmazonPrometheusArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodAppdynamicOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodAppdynamicArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodAzureMonitorOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodAzureMonitorArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodAzureMonitorDimensionOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodAzureMonitorDimensionArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodAzureMonitorWorkspaceOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodAzureMonitorWorkspaceArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodBigqueryOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodBigqueryArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodCloudwatchOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodCloudwatchArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodCloudwatchDimensionOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodCloudwatchDimensionArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodDatadogOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodDatadogArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodDynatraceOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodDynatraceArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodElasticsearchOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodElasticsearchArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodGcmOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodGcmArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodGrafanaLokiOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodGrafanaLokiArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodGraphiteOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodGraphiteArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodHoneycombOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodHoneycombArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodInfluxdbOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodInfluxdbArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodInstanaOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodInstanaArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodInstanaApplicationOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodInstanaApplicationArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodInstanaApplicationGroupByOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodInstanaApplicationGroupByArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodInstanaInfrastructureOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodInstanaInfrastructureArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodLightstepOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodLightstepArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodNewrelicOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodNewrelicArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodOpentsdbOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodOpentsdbArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodPingdomOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodPingdomArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodPrometheusOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodPrometheusArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodRedshiftOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodRedshiftArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodSplunkOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodSplunkArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodSplunkObservabilityOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodSplunkObservabilityArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodSumologicOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodSumologicArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodThousandeyeOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricGoodThousandeyeArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalAmazonPrometheusOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalAmazonPrometheusArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalAppdynamicOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalAppdynamicArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalAzureMonitorOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalAzureMonitorArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalAzureMonitorDimensionOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalAzureMonitorDimensionArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalAzureMonitorWorkspaceOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalAzureMonitorWorkspaceArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalBigqueryOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalBigqueryArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalCloudwatchOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalCloudwatchArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalCloudwatchDimensionOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalCloudwatchDimensionArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalDatadogOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalDatadogArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalDynatraceOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalDynatraceArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalElasticsearchOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalElasticsearchArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalGcmOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalGcmArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalGrafanaLokiOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalGrafanaLokiArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalGraphiteOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalGraphiteArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalHoneycombOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalHoneycombArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalInfluxdbOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalInfluxdbArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalInstanaOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalInstanaArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalInstanaApplicationOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalInstanaApplicationArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalInstanaApplicationGroupByOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalInstanaApplicationGroupByArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalInstanaInfrastructureOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalInstanaInfrastructureArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalLightstepOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalLightstepArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalNewrelicOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalNewrelicArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalOpentsdbOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalOpentsdbArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalPingdomOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalPingdomArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalPrometheusOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalPrometheusArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalRedshiftOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalRedshiftArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalSplunkOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalSplunkArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalSplunkObservabilityOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalSplunkObservabilityArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalSumologicOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalSumologicArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalThousandeyeOutput{})
	pulumi.RegisterOutputType(SloObjectiveCountMetricTotalThousandeyeArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryAmazonPrometheusOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryAmazonPrometheusArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryAppdynamicOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryAppdynamicArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryAzureMonitorOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryAzureMonitorArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryAzureMonitorDimensionOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryAzureMonitorDimensionArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryAzureMonitorWorkspaceOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryAzureMonitorWorkspaceArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryBigqueryOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryBigqueryArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryCloudwatchOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryCloudwatchArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryCloudwatchDimensionOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryCloudwatchDimensionArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryDatadogOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryDatadogArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryDynatraceOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryDynatraceArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryElasticsearchOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryElasticsearchArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryGcmOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryGcmArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryGrafanaLokiOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryGrafanaLokiArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryGraphiteOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryGraphiteArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryHoneycombOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryHoneycombArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryInfluxdbOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryInfluxdbArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryInstanaOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryInstanaArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryInstanaApplicationOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryInstanaApplicationArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryInstanaApplicationGroupByOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryInstanaApplicationGroupByArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryInstanaInfrastructureOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryInstanaInfrastructureArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryLightstepOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryLightstepArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryNewrelicOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryNewrelicArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryOpentsdbOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryOpentsdbArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryPingdomOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryPingdomArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryPrometheusOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryPrometheusArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryRedshiftOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryRedshiftArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQuerySplunkOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQuerySplunkArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQuerySplunkObservabilityOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQuerySplunkObservabilityArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQuerySumologicOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQuerySumologicArrayOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryThousandeyeOutput{})
	pulumi.RegisterOutputType(SloObjectiveRawMetricQueryThousandeyeArrayOutput{})
	pulumi.RegisterOutputType(SloTimeWindowOutput{})
	pulumi.RegisterOutputType(SloTimeWindowPtrOutput{})
	pulumi.RegisterOutputType(SloTimeWindowCalendarOutput{})
	pulumi.RegisterOutputType(SloTimeWindowCalendarArrayOutput{})
}

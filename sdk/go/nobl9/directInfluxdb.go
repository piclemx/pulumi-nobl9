// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nobl9

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// InfluxDB is an open source time series database platform that enables users to collect, process, and analyze data to optimize their infrastructure. Nobl9 connects with InfluxDB to collect SLI measurements and compare them to SLO targets.
//
// For more information, refer to [InfluxDB Direct | Nobl9 Documentation](https://docs.nobl9.com/Sources/influxdb#influxdb-direct).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/piclemx/pulumi-nobl9/sdk/go/nobl9"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := nobl9.NewDirectInfluxdb(ctx, "test-influxdb", &nobl9.DirectInfluxdbArgs{
// 			ApiToken:       pulumi.String("secret"),
// 			Description:    pulumi.String("desc"),
// 			OrganizationId: pulumi.String("secret"),
// 			Project:        pulumi.String("terraform"),
// 			SourceOfs: pulumi.StringArray{
// 				pulumi.String("Metrics"),
// 				pulumi.String("Services"),
// 			},
// 			Url: pulumi.String("https://web.net"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
// ## Nobl9 Official Documentation
//
// https://docs.nobl9.com/
type DirectInfluxdb struct {
	pulumi.CustomResourceState

	// [required] | InfluxDB API Token.
	ApiToken pulumi.StringOutput `pulumi:"apiToken"`
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// User-friendly display name of the resource.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name pulumi.StringOutput `pulumi:"name"`
	// [required] | InfluxDB Organization ID.
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project pulumi.StringOutput `pulumi:"project"`
	// [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
	QueryDelay DirectInfluxdbQueryDelayPtrOutput `pulumi:"queryDelay"`
	// Source of Metrics and/or Services.
	SourceOfs pulumi.StringArrayOutput `pulumi:"sourceOfs"`
	// The status of the created direct.
	Status pulumi.StringOutput `pulumi:"status"`
	// API URL endpoint to the InfluxDB's instance.
	Url pulumi.StringOutput `pulumi:"url"`
}

// NewDirectInfluxdb registers a new resource with the given unique name, arguments, and options.
func NewDirectInfluxdb(ctx *pulumi.Context,
	name string, args *DirectInfluxdbArgs, opts ...pulumi.ResourceOption) (*DirectInfluxdb, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.SourceOfs == nil {
		return nil, errors.New("invalid value for required argument 'SourceOfs'")
	}
	if args.Url == nil {
		return nil, errors.New("invalid value for required argument 'Url'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource DirectInfluxdb
	err := ctx.RegisterResource("nobl9:index/directInfluxdb:DirectInfluxdb", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDirectInfluxdb gets an existing DirectInfluxdb resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDirectInfluxdb(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DirectInfluxdbState, opts ...pulumi.ResourceOption) (*DirectInfluxdb, error) {
	var resource DirectInfluxdb
	err := ctx.ReadResource("nobl9:index/directInfluxdb:DirectInfluxdb", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DirectInfluxdb resources.
type directInfluxdbState struct {
	// [required] | InfluxDB API Token.
	ApiToken *string `pulumi:"apiToken"`
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description *string `pulumi:"description"`
	// User-friendly display name of the resource.
	DisplayName *string `pulumi:"displayName"`
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name *string `pulumi:"name"`
	// [required] | InfluxDB Organization ID.
	OrganizationId *string `pulumi:"organizationId"`
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project *string `pulumi:"project"`
	// [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
	QueryDelay *DirectInfluxdbQueryDelay `pulumi:"queryDelay"`
	// Source of Metrics and/or Services.
	SourceOfs []string `pulumi:"sourceOfs"`
	// The status of the created direct.
	Status *string `pulumi:"status"`
	// API URL endpoint to the InfluxDB's instance.
	Url *string `pulumi:"url"`
}

type DirectInfluxdbState struct {
	// [required] | InfluxDB API Token.
	ApiToken pulumi.StringPtrInput
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description pulumi.StringPtrInput
	// User-friendly display name of the resource.
	DisplayName pulumi.StringPtrInput
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name pulumi.StringPtrInput
	// [required] | InfluxDB Organization ID.
	OrganizationId pulumi.StringPtrInput
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project pulumi.StringPtrInput
	// [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
	QueryDelay DirectInfluxdbQueryDelayPtrInput
	// Source of Metrics and/or Services.
	SourceOfs pulumi.StringArrayInput
	// The status of the created direct.
	Status pulumi.StringPtrInput
	// API URL endpoint to the InfluxDB's instance.
	Url pulumi.StringPtrInput
}

func (DirectInfluxdbState) ElementType() reflect.Type {
	return reflect.TypeOf((*directInfluxdbState)(nil)).Elem()
}

type directInfluxdbArgs struct {
	// [required] | InfluxDB API Token.
	ApiToken *string `pulumi:"apiToken"`
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description *string `pulumi:"description"`
	// User-friendly display name of the resource.
	DisplayName *string `pulumi:"displayName"`
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name *string `pulumi:"name"`
	// [required] | InfluxDB Organization ID.
	OrganizationId *string `pulumi:"organizationId"`
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project string `pulumi:"project"`
	// [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
	QueryDelay *DirectInfluxdbQueryDelay `pulumi:"queryDelay"`
	// Source of Metrics and/or Services.
	SourceOfs []string `pulumi:"sourceOfs"`
	// API URL endpoint to the InfluxDB's instance.
	Url string `pulumi:"url"`
}

// The set of arguments for constructing a DirectInfluxdb resource.
type DirectInfluxdbArgs struct {
	// [required] | InfluxDB API Token.
	ApiToken pulumi.StringPtrInput
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description pulumi.StringPtrInput
	// User-friendly display name of the resource.
	DisplayName pulumi.StringPtrInput
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name pulumi.StringPtrInput
	// [required] | InfluxDB Organization ID.
	OrganizationId pulumi.StringPtrInput
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project pulumi.StringInput
	// [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
	QueryDelay DirectInfluxdbQueryDelayPtrInput
	// Source of Metrics and/or Services.
	SourceOfs pulumi.StringArrayInput
	// API URL endpoint to the InfluxDB's instance.
	Url pulumi.StringInput
}

func (DirectInfluxdbArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*directInfluxdbArgs)(nil)).Elem()
}

type DirectInfluxdbInput interface {
	pulumi.Input

	ToDirectInfluxdbOutput() DirectInfluxdbOutput
	ToDirectInfluxdbOutputWithContext(ctx context.Context) DirectInfluxdbOutput
}

func (*DirectInfluxdb) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectInfluxdb)(nil)).Elem()
}

func (i *DirectInfluxdb) ToDirectInfluxdbOutput() DirectInfluxdbOutput {
	return i.ToDirectInfluxdbOutputWithContext(context.Background())
}

func (i *DirectInfluxdb) ToDirectInfluxdbOutputWithContext(ctx context.Context) DirectInfluxdbOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectInfluxdbOutput)
}

// DirectInfluxdbArrayInput is an input type that accepts DirectInfluxdbArray and DirectInfluxdbArrayOutput values.
// You can construct a concrete instance of `DirectInfluxdbArrayInput` via:
//
//          DirectInfluxdbArray{ DirectInfluxdbArgs{...} }
type DirectInfluxdbArrayInput interface {
	pulumi.Input

	ToDirectInfluxdbArrayOutput() DirectInfluxdbArrayOutput
	ToDirectInfluxdbArrayOutputWithContext(context.Context) DirectInfluxdbArrayOutput
}

type DirectInfluxdbArray []DirectInfluxdbInput

func (DirectInfluxdbArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DirectInfluxdb)(nil)).Elem()
}

func (i DirectInfluxdbArray) ToDirectInfluxdbArrayOutput() DirectInfluxdbArrayOutput {
	return i.ToDirectInfluxdbArrayOutputWithContext(context.Background())
}

func (i DirectInfluxdbArray) ToDirectInfluxdbArrayOutputWithContext(ctx context.Context) DirectInfluxdbArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectInfluxdbArrayOutput)
}

// DirectInfluxdbMapInput is an input type that accepts DirectInfluxdbMap and DirectInfluxdbMapOutput values.
// You can construct a concrete instance of `DirectInfluxdbMapInput` via:
//
//          DirectInfluxdbMap{ "key": DirectInfluxdbArgs{...} }
type DirectInfluxdbMapInput interface {
	pulumi.Input

	ToDirectInfluxdbMapOutput() DirectInfluxdbMapOutput
	ToDirectInfluxdbMapOutputWithContext(context.Context) DirectInfluxdbMapOutput
}

type DirectInfluxdbMap map[string]DirectInfluxdbInput

func (DirectInfluxdbMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DirectInfluxdb)(nil)).Elem()
}

func (i DirectInfluxdbMap) ToDirectInfluxdbMapOutput() DirectInfluxdbMapOutput {
	return i.ToDirectInfluxdbMapOutputWithContext(context.Background())
}

func (i DirectInfluxdbMap) ToDirectInfluxdbMapOutputWithContext(ctx context.Context) DirectInfluxdbMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectInfluxdbMapOutput)
}

type DirectInfluxdbOutput struct{ *pulumi.OutputState }

func (DirectInfluxdbOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectInfluxdb)(nil)).Elem()
}

func (o DirectInfluxdbOutput) ToDirectInfluxdbOutput() DirectInfluxdbOutput {
	return o
}

func (o DirectInfluxdbOutput) ToDirectInfluxdbOutputWithContext(ctx context.Context) DirectInfluxdbOutput {
	return o
}

// [required] | InfluxDB API Token.
func (o DirectInfluxdbOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectInfluxdb) pulumi.StringOutput { return v.ApiToken }).(pulumi.StringOutput)
}

// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
func (o DirectInfluxdbOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectInfluxdb) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// User-friendly display name of the resource.
func (o DirectInfluxdbOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectInfluxdb) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
func (o DirectInfluxdbOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectInfluxdb) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// [required] | InfluxDB Organization ID.
func (o DirectInfluxdbOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectInfluxdb) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
func (o DirectInfluxdbOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectInfluxdb) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
func (o DirectInfluxdbOutput) QueryDelay() DirectInfluxdbQueryDelayPtrOutput {
	return o.ApplyT(func(v *DirectInfluxdb) DirectInfluxdbQueryDelayPtrOutput { return v.QueryDelay }).(DirectInfluxdbQueryDelayPtrOutput)
}

// Source of Metrics and/or Services.
func (o DirectInfluxdbOutput) SourceOfs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DirectInfluxdb) pulumi.StringArrayOutput { return v.SourceOfs }).(pulumi.StringArrayOutput)
}

// The status of the created direct.
func (o DirectInfluxdbOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectInfluxdb) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// API URL endpoint to the InfluxDB's instance.
func (o DirectInfluxdbOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectInfluxdb) pulumi.StringOutput { return v.Url }).(pulumi.StringOutput)
}

type DirectInfluxdbArrayOutput struct{ *pulumi.OutputState }

func (DirectInfluxdbArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DirectInfluxdb)(nil)).Elem()
}

func (o DirectInfluxdbArrayOutput) ToDirectInfluxdbArrayOutput() DirectInfluxdbArrayOutput {
	return o
}

func (o DirectInfluxdbArrayOutput) ToDirectInfluxdbArrayOutputWithContext(ctx context.Context) DirectInfluxdbArrayOutput {
	return o
}

func (o DirectInfluxdbArrayOutput) Index(i pulumi.IntInput) DirectInfluxdbOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DirectInfluxdb {
		return vs[0].([]*DirectInfluxdb)[vs[1].(int)]
	}).(DirectInfluxdbOutput)
}

type DirectInfluxdbMapOutput struct{ *pulumi.OutputState }

func (DirectInfluxdbMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DirectInfluxdb)(nil)).Elem()
}

func (o DirectInfluxdbMapOutput) ToDirectInfluxdbMapOutput() DirectInfluxdbMapOutput {
	return o
}

func (o DirectInfluxdbMapOutput) ToDirectInfluxdbMapOutputWithContext(ctx context.Context) DirectInfluxdbMapOutput {
	return o
}

func (o DirectInfluxdbMapOutput) MapIndex(k pulumi.StringInput) DirectInfluxdbOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DirectInfluxdb {
		return vs[0].(map[string]*DirectInfluxdb)[vs[1].(string)]
	}).(DirectInfluxdbOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DirectInfluxdbInput)(nil)).Elem(), &DirectInfluxdb{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectInfluxdbArrayInput)(nil)).Elem(), DirectInfluxdbArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectInfluxdbMapInput)(nil)).Elem(), DirectInfluxdbMap{})
	pulumi.RegisterOutputType(DirectInfluxdbOutput{})
	pulumi.RegisterOutputType(DirectInfluxdbArrayOutput{})
	pulumi.RegisterOutputType(DirectInfluxdbMapOutput{})
}

// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nobl9

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Datadog is a cloud-scale application observability solution that monitors servers, databases, tools, and services. Nobl9 connects with Datadog to collect SLI measurements and compare them to SLO targets.
//
// For more information, refer to [Datadog Direct | Nobl9 Documentation](https://docs.nobl9.com/Sources/datadog#datadog-direct).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/piclemx/pulumi-nobl9/sdk/go/nobl9"
// 	"github.com/pulumi/pulumi-nobl9/sdk/go/nobl9"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := nobl9.NewDirectDatadog(ctx, "test-datadog", &nobl9.DirectDatadogArgs{
// 			ApiKey:         pulumi.String("secret"),
// 			ApplicationKey: pulumi.String("secret"),
// 			Description:    pulumi.String("desc"),
// 			HistoricalDataRetrieval: &DirectDatadogHistoricalDataRetrievalArgs{
// 				DefaultDurations: DirectDatadogHistoricalDataRetrievalDefaultDurationArray{
// 					&DirectDatadogHistoricalDataRetrievalDefaultDurationArgs{
// 						Unit:  pulumi.String("Day"),
// 						Value: pulumi.Int(0),
// 					},
// 				},
// 				MaxDurations: DirectDatadogHistoricalDataRetrievalMaxDurationArray{
// 					&DirectDatadogHistoricalDataRetrievalMaxDurationArgs{
// 						Unit:  pulumi.String("Day"),
// 						Value: pulumi.Int(30),
// 					},
// 				},
// 			},
// 			Project: pulumi.String("terraform"),
// 			Site:    pulumi.String("eu"),
// 			SourceOfs: pulumi.StringArray{
// 				pulumi.String("Metrics"),
// 				pulumi.String("Services"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
// ## Nobl9 Official Documentation
//
// https://docs.nobl9.com/
type DirectDatadog struct {
	pulumi.CustomResourceState

	// [required] | Datadog API Key.
	ApiKey pulumi.StringOutput `pulumi:"apiKey"`
	// [required] | Datadog Application Key.
	ApplicationKey pulumi.StringOutput `pulumi:"applicationKey"`
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// User-friendly display name of the resource.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// [Replay configuration documentation](https://docs.nobl9.com/replay)
	HistoricalDataRetrieval DirectDatadogHistoricalDataRetrievalPtrOutput `pulumi:"historicalDataRetrieval"`
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name pulumi.StringOutput `pulumi:"name"`
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project pulumi.StringOutput `pulumi:"project"`
	// [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
	QueryDelay DirectDatadogQueryDelayPtrOutput `pulumi:"queryDelay"`
	// `com` or `eu`, Datadog SaaS instance, which corresponds to one of Datadog's two locations (https://www.datadoghq.com/ in the U.S. or https://datadoghq.eu/ in the European Union).
	Site pulumi.StringOutput `pulumi:"site"`
	// Source of Metrics and/or Services.
	SourceOfs pulumi.StringArrayOutput `pulumi:"sourceOfs"`
	// The status of the created direct.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewDirectDatadog registers a new resource with the given unique name, arguments, and options.
func NewDirectDatadog(ctx *pulumi.Context,
	name string, args *DirectDatadogArgs, opts ...pulumi.ResourceOption) (*DirectDatadog, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.Site == nil {
		return nil, errors.New("invalid value for required argument 'Site'")
	}
	if args.SourceOfs == nil {
		return nil, errors.New("invalid value for required argument 'SourceOfs'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource DirectDatadog
	err := ctx.RegisterResource("nobl9:index/directDatadog:DirectDatadog", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDirectDatadog gets an existing DirectDatadog resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDirectDatadog(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DirectDatadogState, opts ...pulumi.ResourceOption) (*DirectDatadog, error) {
	var resource DirectDatadog
	err := ctx.ReadResource("nobl9:index/directDatadog:DirectDatadog", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DirectDatadog resources.
type directDatadogState struct {
	// [required] | Datadog API Key.
	ApiKey *string `pulumi:"apiKey"`
	// [required] | Datadog Application Key.
	ApplicationKey *string `pulumi:"applicationKey"`
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description *string `pulumi:"description"`
	// User-friendly display name of the resource.
	DisplayName *string `pulumi:"displayName"`
	// [Replay configuration documentation](https://docs.nobl9.com/replay)
	HistoricalDataRetrieval *DirectDatadogHistoricalDataRetrieval `pulumi:"historicalDataRetrieval"`
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name *string `pulumi:"name"`
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project *string `pulumi:"project"`
	// [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
	QueryDelay *DirectDatadogQueryDelay `pulumi:"queryDelay"`
	// `com` or `eu`, Datadog SaaS instance, which corresponds to one of Datadog's two locations (https://www.datadoghq.com/ in the U.S. or https://datadoghq.eu/ in the European Union).
	Site *string `pulumi:"site"`
	// Source of Metrics and/or Services.
	SourceOfs []string `pulumi:"sourceOfs"`
	// The status of the created direct.
	Status *string `pulumi:"status"`
}

type DirectDatadogState struct {
	// [required] | Datadog API Key.
	ApiKey pulumi.StringPtrInput
	// [required] | Datadog Application Key.
	ApplicationKey pulumi.StringPtrInput
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description pulumi.StringPtrInput
	// User-friendly display name of the resource.
	DisplayName pulumi.StringPtrInput
	// [Replay configuration documentation](https://docs.nobl9.com/replay)
	HistoricalDataRetrieval DirectDatadogHistoricalDataRetrievalPtrInput
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name pulumi.StringPtrInput
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project pulumi.StringPtrInput
	// [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
	QueryDelay DirectDatadogQueryDelayPtrInput
	// `com` or `eu`, Datadog SaaS instance, which corresponds to one of Datadog's two locations (https://www.datadoghq.com/ in the U.S. or https://datadoghq.eu/ in the European Union).
	Site pulumi.StringPtrInput
	// Source of Metrics and/or Services.
	SourceOfs pulumi.StringArrayInput
	// The status of the created direct.
	Status pulumi.StringPtrInput
}

func (DirectDatadogState) ElementType() reflect.Type {
	return reflect.TypeOf((*directDatadogState)(nil)).Elem()
}

type directDatadogArgs struct {
	// [required] | Datadog API Key.
	ApiKey *string `pulumi:"apiKey"`
	// [required] | Datadog Application Key.
	ApplicationKey *string `pulumi:"applicationKey"`
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description *string `pulumi:"description"`
	// User-friendly display name of the resource.
	DisplayName *string `pulumi:"displayName"`
	// [Replay configuration documentation](https://docs.nobl9.com/replay)
	HistoricalDataRetrieval *DirectDatadogHistoricalDataRetrieval `pulumi:"historicalDataRetrieval"`
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name *string `pulumi:"name"`
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project string `pulumi:"project"`
	// [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
	QueryDelay *DirectDatadogQueryDelay `pulumi:"queryDelay"`
	// `com` or `eu`, Datadog SaaS instance, which corresponds to one of Datadog's two locations (https://www.datadoghq.com/ in the U.S. or https://datadoghq.eu/ in the European Union).
	Site string `pulumi:"site"`
	// Source of Metrics and/or Services.
	SourceOfs []string `pulumi:"sourceOfs"`
}

// The set of arguments for constructing a DirectDatadog resource.
type DirectDatadogArgs struct {
	// [required] | Datadog API Key.
	ApiKey pulumi.StringPtrInput
	// [required] | Datadog Application Key.
	ApplicationKey pulumi.StringPtrInput
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description pulumi.StringPtrInput
	// User-friendly display name of the resource.
	DisplayName pulumi.StringPtrInput
	// [Replay configuration documentation](https://docs.nobl9.com/replay)
	HistoricalDataRetrieval DirectDatadogHistoricalDataRetrievalPtrInput
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name pulumi.StringPtrInput
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project pulumi.StringInput
	// [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
	QueryDelay DirectDatadogQueryDelayPtrInput
	// `com` or `eu`, Datadog SaaS instance, which corresponds to one of Datadog's two locations (https://www.datadoghq.com/ in the U.S. or https://datadoghq.eu/ in the European Union).
	Site pulumi.StringInput
	// Source of Metrics and/or Services.
	SourceOfs pulumi.StringArrayInput
}

func (DirectDatadogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*directDatadogArgs)(nil)).Elem()
}

type DirectDatadogInput interface {
	pulumi.Input

	ToDirectDatadogOutput() DirectDatadogOutput
	ToDirectDatadogOutputWithContext(ctx context.Context) DirectDatadogOutput
}

func (*DirectDatadog) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectDatadog)(nil)).Elem()
}

func (i *DirectDatadog) ToDirectDatadogOutput() DirectDatadogOutput {
	return i.ToDirectDatadogOutputWithContext(context.Background())
}

func (i *DirectDatadog) ToDirectDatadogOutputWithContext(ctx context.Context) DirectDatadogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectDatadogOutput)
}

// DirectDatadogArrayInput is an input type that accepts DirectDatadogArray and DirectDatadogArrayOutput values.
// You can construct a concrete instance of `DirectDatadogArrayInput` via:
//
//          DirectDatadogArray{ DirectDatadogArgs{...} }
type DirectDatadogArrayInput interface {
	pulumi.Input

	ToDirectDatadogArrayOutput() DirectDatadogArrayOutput
	ToDirectDatadogArrayOutputWithContext(context.Context) DirectDatadogArrayOutput
}

type DirectDatadogArray []DirectDatadogInput

func (DirectDatadogArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DirectDatadog)(nil)).Elem()
}

func (i DirectDatadogArray) ToDirectDatadogArrayOutput() DirectDatadogArrayOutput {
	return i.ToDirectDatadogArrayOutputWithContext(context.Background())
}

func (i DirectDatadogArray) ToDirectDatadogArrayOutputWithContext(ctx context.Context) DirectDatadogArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectDatadogArrayOutput)
}

// DirectDatadogMapInput is an input type that accepts DirectDatadogMap and DirectDatadogMapOutput values.
// You can construct a concrete instance of `DirectDatadogMapInput` via:
//
//          DirectDatadogMap{ "key": DirectDatadogArgs{...} }
type DirectDatadogMapInput interface {
	pulumi.Input

	ToDirectDatadogMapOutput() DirectDatadogMapOutput
	ToDirectDatadogMapOutputWithContext(context.Context) DirectDatadogMapOutput
}

type DirectDatadogMap map[string]DirectDatadogInput

func (DirectDatadogMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DirectDatadog)(nil)).Elem()
}

func (i DirectDatadogMap) ToDirectDatadogMapOutput() DirectDatadogMapOutput {
	return i.ToDirectDatadogMapOutputWithContext(context.Background())
}

func (i DirectDatadogMap) ToDirectDatadogMapOutputWithContext(ctx context.Context) DirectDatadogMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectDatadogMapOutput)
}

type DirectDatadogOutput struct{ *pulumi.OutputState }

func (DirectDatadogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectDatadog)(nil)).Elem()
}

func (o DirectDatadogOutput) ToDirectDatadogOutput() DirectDatadogOutput {
	return o
}

func (o DirectDatadogOutput) ToDirectDatadogOutputWithContext(ctx context.Context) DirectDatadogOutput {
	return o
}

// [required] | Datadog API Key.
func (o DirectDatadogOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectDatadog) pulumi.StringOutput { return v.ApiKey }).(pulumi.StringOutput)
}

// [required] | Datadog Application Key.
func (o DirectDatadogOutput) ApplicationKey() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectDatadog) pulumi.StringOutput { return v.ApplicationKey }).(pulumi.StringOutput)
}

// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
func (o DirectDatadogOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectDatadog) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// User-friendly display name of the resource.
func (o DirectDatadogOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectDatadog) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// [Replay configuration documentation](https://docs.nobl9.com/replay)
func (o DirectDatadogOutput) HistoricalDataRetrieval() DirectDatadogHistoricalDataRetrievalPtrOutput {
	return o.ApplyT(func(v *DirectDatadog) DirectDatadogHistoricalDataRetrievalPtrOutput { return v.HistoricalDataRetrieval }).(DirectDatadogHistoricalDataRetrievalPtrOutput)
}

// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
func (o DirectDatadogOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectDatadog) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
func (o DirectDatadogOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectDatadog) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
func (o DirectDatadogOutput) QueryDelay() DirectDatadogQueryDelayPtrOutput {
	return o.ApplyT(func(v *DirectDatadog) DirectDatadogQueryDelayPtrOutput { return v.QueryDelay }).(DirectDatadogQueryDelayPtrOutput)
}

// `com` or `eu`, Datadog SaaS instance, which corresponds to one of Datadog's two locations (https://www.datadoghq.com/ in the U.S. or https://datadoghq.eu/ in the European Union).
func (o DirectDatadogOutput) Site() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectDatadog) pulumi.StringOutput { return v.Site }).(pulumi.StringOutput)
}

// Source of Metrics and/or Services.
func (o DirectDatadogOutput) SourceOfs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DirectDatadog) pulumi.StringArrayOutput { return v.SourceOfs }).(pulumi.StringArrayOutput)
}

// The status of the created direct.
func (o DirectDatadogOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectDatadog) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type DirectDatadogArrayOutput struct{ *pulumi.OutputState }

func (DirectDatadogArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DirectDatadog)(nil)).Elem()
}

func (o DirectDatadogArrayOutput) ToDirectDatadogArrayOutput() DirectDatadogArrayOutput {
	return o
}

func (o DirectDatadogArrayOutput) ToDirectDatadogArrayOutputWithContext(ctx context.Context) DirectDatadogArrayOutput {
	return o
}

func (o DirectDatadogArrayOutput) Index(i pulumi.IntInput) DirectDatadogOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DirectDatadog {
		return vs[0].([]*DirectDatadog)[vs[1].(int)]
	}).(DirectDatadogOutput)
}

type DirectDatadogMapOutput struct{ *pulumi.OutputState }

func (DirectDatadogMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DirectDatadog)(nil)).Elem()
}

func (o DirectDatadogMapOutput) ToDirectDatadogMapOutput() DirectDatadogMapOutput {
	return o
}

func (o DirectDatadogMapOutput) ToDirectDatadogMapOutputWithContext(ctx context.Context) DirectDatadogMapOutput {
	return o
}

func (o DirectDatadogMapOutput) MapIndex(k pulumi.StringInput) DirectDatadogOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DirectDatadog {
		return vs[0].(map[string]*DirectDatadog)[vs[1].(string)]
	}).(DirectDatadogOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DirectDatadogInput)(nil)).Elem(), &DirectDatadog{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectDatadogArrayInput)(nil)).Elem(), DirectDatadogArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectDatadogMapInput)(nil)).Elem(), DirectDatadogMap{})
	pulumi.RegisterOutputType(DirectDatadogOutput{})
	pulumi.RegisterOutputType(DirectDatadogArrayOutput{})
	pulumi.RegisterOutputType(DirectDatadogMapOutput{})
}

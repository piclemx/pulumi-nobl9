// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nobl9

import (
	"context"
	"reflect"

	"errors"
	"github.com/piclemx/pulumi-nobl9/sdk/go/nobl9/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Honeycomb is an observability platform that integrates system metrics with high-cardinality application data for in-depth analysis and swift debugging of complex software systems. Nobl9 connects to Honeycomb for SLI measurement collection and comparison with SLO targets.
//
// For more information, refer to [Honeycomb Direct | Nobl9 Documentation](https://docs.nobl9.com/Sources/honeycomb#hc-direct).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/piclemx/pulumi-nobl9/sdk/go/nobl9"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nobl9.NewDirectHoneycomb(ctx, "test-honeycomb", &nobl9.DirectHoneycombArgs{
//				ApiKey:      pulumi.String("secret"),
//				Description: pulumi.String("desc"),
//				HistoricalDataRetrieval: &nobl9.DirectHoneycombHistoricalDataRetrievalArgs{
//					DefaultDurations: nobl9.DirectHoneycombHistoricalDataRetrievalDefaultDurationArray{
//						&nobl9.DirectHoneycombHistoricalDataRetrievalDefaultDurationArgs{
//							Unit:  pulumi.String("Day"),
//							Value: pulumi.Int(7),
//						},
//					},
//					MaxDurations: nobl9.DirectHoneycombHistoricalDataRetrievalMaxDurationArray{
//						&nobl9.DirectHoneycombHistoricalDataRetrievalMaxDurationArgs{
//							Unit:  pulumi.String("Day"),
//							Value: pulumi.Int(7),
//						},
//					},
//				},
//				LogCollectionEnabled: pulumi.Bool(true),
//				Project:              pulumi.String("terraform"),
//				QueryDelay: &nobl9.DirectHoneycombQueryDelayArgs{
//					Unit:  pulumi.String("Minute"),
//					Value: pulumi.Int(6),
//				},
//				ReleaseChannel: pulumi.String("beta"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## Nobl9 Official Documentation
//
// https://docs.nobl9.com/
type DirectHoneycomb struct {
	pulumi.CustomResourceState

	// [required] | Honeycomb API Key.
	ApiKey pulumi.StringOutput `pulumi:"apiKey"`
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// User-friendly display name of the resource.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// [Replay configuration documentation](https://docs.nobl9.com/replay)
	HistoricalDataRetrieval DirectHoneycombHistoricalDataRetrievalOutput `pulumi:"historicalDataRetrieval"`
	// [Logs documentation](https://docs.nobl9.com/Features/SLO_troubleshooting/event-logs)
	LogCollectionEnabled pulumi.BoolPtrOutput `pulumi:"logCollectionEnabled"`
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name pulumi.StringOutput `pulumi:"name"`
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project pulumi.StringOutput `pulumi:"project"`
	// [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
	QueryDelay DirectHoneycombQueryDelayOutput `pulumi:"queryDelay"`
	// Release channel of the created datasource [stable/beta]
	ReleaseChannel pulumi.StringOutput `pulumi:"releaseChannel"`
	// This value indicated whether the field was a source of metrics and/or services. 'source_of' is deprecated and not used anywhere; however, it's kept for backward compatibility.
	//
	// Deprecated: 'source_of' is deprecated and not used anywhere. You can safely remove it from your configuration file.
	SourceOfs pulumi.StringArrayOutput `pulumi:"sourceOfs"`
	// The status of the created direct.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewDirectHoneycomb registers a new resource with the given unique name, arguments, and options.
func NewDirectHoneycomb(ctx *pulumi.Context,
	name string, args *DirectHoneycombArgs, opts ...pulumi.ResourceOption) (*DirectHoneycomb, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.ApiKey != nil {
		args.ApiKey = pulumi.ToSecret(args.ApiKey).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"apiKey",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DirectHoneycomb
	err := ctx.RegisterResource("nobl9:index/directHoneycomb:DirectHoneycomb", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDirectHoneycomb gets an existing DirectHoneycomb resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDirectHoneycomb(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DirectHoneycombState, opts ...pulumi.ResourceOption) (*DirectHoneycomb, error) {
	var resource DirectHoneycomb
	err := ctx.ReadResource("nobl9:index/directHoneycomb:DirectHoneycomb", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DirectHoneycomb resources.
type directHoneycombState struct {
	// [required] | Honeycomb API Key.
	ApiKey *string `pulumi:"apiKey"`
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description *string `pulumi:"description"`
	// User-friendly display name of the resource.
	DisplayName *string `pulumi:"displayName"`
	// [Replay configuration documentation](https://docs.nobl9.com/replay)
	HistoricalDataRetrieval *DirectHoneycombHistoricalDataRetrieval `pulumi:"historicalDataRetrieval"`
	// [Logs documentation](https://docs.nobl9.com/Features/SLO_troubleshooting/event-logs)
	LogCollectionEnabled *bool `pulumi:"logCollectionEnabled"`
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name *string `pulumi:"name"`
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project *string `pulumi:"project"`
	// [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
	QueryDelay *DirectHoneycombQueryDelay `pulumi:"queryDelay"`
	// Release channel of the created datasource [stable/beta]
	ReleaseChannel *string `pulumi:"releaseChannel"`
	// This value indicated whether the field was a source of metrics and/or services. 'source_of' is deprecated and not used anywhere; however, it's kept for backward compatibility.
	//
	// Deprecated: 'source_of' is deprecated and not used anywhere. You can safely remove it from your configuration file.
	SourceOfs []string `pulumi:"sourceOfs"`
	// The status of the created direct.
	Status *string `pulumi:"status"`
}

type DirectHoneycombState struct {
	// [required] | Honeycomb API Key.
	ApiKey pulumi.StringPtrInput
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description pulumi.StringPtrInput
	// User-friendly display name of the resource.
	DisplayName pulumi.StringPtrInput
	// [Replay configuration documentation](https://docs.nobl9.com/replay)
	HistoricalDataRetrieval DirectHoneycombHistoricalDataRetrievalPtrInput
	// [Logs documentation](https://docs.nobl9.com/Features/SLO_troubleshooting/event-logs)
	LogCollectionEnabled pulumi.BoolPtrInput
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name pulumi.StringPtrInput
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project pulumi.StringPtrInput
	// [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
	QueryDelay DirectHoneycombQueryDelayPtrInput
	// Release channel of the created datasource [stable/beta]
	ReleaseChannel pulumi.StringPtrInput
	// This value indicated whether the field was a source of metrics and/or services. 'source_of' is deprecated and not used anywhere; however, it's kept for backward compatibility.
	//
	// Deprecated: 'source_of' is deprecated and not used anywhere. You can safely remove it from your configuration file.
	SourceOfs pulumi.StringArrayInput
	// The status of the created direct.
	Status pulumi.StringPtrInput
}

func (DirectHoneycombState) ElementType() reflect.Type {
	return reflect.TypeOf((*directHoneycombState)(nil)).Elem()
}

type directHoneycombArgs struct {
	// [required] | Honeycomb API Key.
	ApiKey *string `pulumi:"apiKey"`
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description *string `pulumi:"description"`
	// User-friendly display name of the resource.
	DisplayName *string `pulumi:"displayName"`
	// [Replay configuration documentation](https://docs.nobl9.com/replay)
	HistoricalDataRetrieval *DirectHoneycombHistoricalDataRetrieval `pulumi:"historicalDataRetrieval"`
	// [Logs documentation](https://docs.nobl9.com/Features/SLO_troubleshooting/event-logs)
	LogCollectionEnabled *bool `pulumi:"logCollectionEnabled"`
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name *string `pulumi:"name"`
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project string `pulumi:"project"`
	// [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
	QueryDelay *DirectHoneycombQueryDelay `pulumi:"queryDelay"`
	// Release channel of the created datasource [stable/beta]
	ReleaseChannel *string `pulumi:"releaseChannel"`
	// This value indicated whether the field was a source of metrics and/or services. 'source_of' is deprecated and not used anywhere; however, it's kept for backward compatibility.
	//
	// Deprecated: 'source_of' is deprecated and not used anywhere. You can safely remove it from your configuration file.
	SourceOfs []string `pulumi:"sourceOfs"`
}

// The set of arguments for constructing a DirectHoneycomb resource.
type DirectHoneycombArgs struct {
	// [required] | Honeycomb API Key.
	ApiKey pulumi.StringPtrInput
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description pulumi.StringPtrInput
	// User-friendly display name of the resource.
	DisplayName pulumi.StringPtrInput
	// [Replay configuration documentation](https://docs.nobl9.com/replay)
	HistoricalDataRetrieval DirectHoneycombHistoricalDataRetrievalPtrInput
	// [Logs documentation](https://docs.nobl9.com/Features/SLO_troubleshooting/event-logs)
	LogCollectionEnabled pulumi.BoolPtrInput
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name pulumi.StringPtrInput
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project pulumi.StringInput
	// [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
	QueryDelay DirectHoneycombQueryDelayPtrInput
	// Release channel of the created datasource [stable/beta]
	ReleaseChannel pulumi.StringPtrInput
	// This value indicated whether the field was a source of metrics and/or services. 'source_of' is deprecated and not used anywhere; however, it's kept for backward compatibility.
	//
	// Deprecated: 'source_of' is deprecated and not used anywhere. You can safely remove it from your configuration file.
	SourceOfs pulumi.StringArrayInput
}

func (DirectHoneycombArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*directHoneycombArgs)(nil)).Elem()
}

type DirectHoneycombInput interface {
	pulumi.Input

	ToDirectHoneycombOutput() DirectHoneycombOutput
	ToDirectHoneycombOutputWithContext(ctx context.Context) DirectHoneycombOutput
}

func (*DirectHoneycomb) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectHoneycomb)(nil)).Elem()
}

func (i *DirectHoneycomb) ToDirectHoneycombOutput() DirectHoneycombOutput {
	return i.ToDirectHoneycombOutputWithContext(context.Background())
}

func (i *DirectHoneycomb) ToDirectHoneycombOutputWithContext(ctx context.Context) DirectHoneycombOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectHoneycombOutput)
}

// DirectHoneycombArrayInput is an input type that accepts DirectHoneycombArray and DirectHoneycombArrayOutput values.
// You can construct a concrete instance of `DirectHoneycombArrayInput` via:
//
//	DirectHoneycombArray{ DirectHoneycombArgs{...} }
type DirectHoneycombArrayInput interface {
	pulumi.Input

	ToDirectHoneycombArrayOutput() DirectHoneycombArrayOutput
	ToDirectHoneycombArrayOutputWithContext(context.Context) DirectHoneycombArrayOutput
}

type DirectHoneycombArray []DirectHoneycombInput

func (DirectHoneycombArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DirectHoneycomb)(nil)).Elem()
}

func (i DirectHoneycombArray) ToDirectHoneycombArrayOutput() DirectHoneycombArrayOutput {
	return i.ToDirectHoneycombArrayOutputWithContext(context.Background())
}

func (i DirectHoneycombArray) ToDirectHoneycombArrayOutputWithContext(ctx context.Context) DirectHoneycombArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectHoneycombArrayOutput)
}

// DirectHoneycombMapInput is an input type that accepts DirectHoneycombMap and DirectHoneycombMapOutput values.
// You can construct a concrete instance of `DirectHoneycombMapInput` via:
//
//	DirectHoneycombMap{ "key": DirectHoneycombArgs{...} }
type DirectHoneycombMapInput interface {
	pulumi.Input

	ToDirectHoneycombMapOutput() DirectHoneycombMapOutput
	ToDirectHoneycombMapOutputWithContext(context.Context) DirectHoneycombMapOutput
}

type DirectHoneycombMap map[string]DirectHoneycombInput

func (DirectHoneycombMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DirectHoneycomb)(nil)).Elem()
}

func (i DirectHoneycombMap) ToDirectHoneycombMapOutput() DirectHoneycombMapOutput {
	return i.ToDirectHoneycombMapOutputWithContext(context.Background())
}

func (i DirectHoneycombMap) ToDirectHoneycombMapOutputWithContext(ctx context.Context) DirectHoneycombMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectHoneycombMapOutput)
}

type DirectHoneycombOutput struct{ *pulumi.OutputState }

func (DirectHoneycombOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectHoneycomb)(nil)).Elem()
}

func (o DirectHoneycombOutput) ToDirectHoneycombOutput() DirectHoneycombOutput {
	return o
}

func (o DirectHoneycombOutput) ToDirectHoneycombOutputWithContext(ctx context.Context) DirectHoneycombOutput {
	return o
}

// [required] | Honeycomb API Key.
func (o DirectHoneycombOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectHoneycomb) pulumi.StringOutput { return v.ApiKey }).(pulumi.StringOutput)
}

// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
func (o DirectHoneycombOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectHoneycomb) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// User-friendly display name of the resource.
func (o DirectHoneycombOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectHoneycomb) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// [Replay configuration documentation](https://docs.nobl9.com/replay)
func (o DirectHoneycombOutput) HistoricalDataRetrieval() DirectHoneycombHistoricalDataRetrievalOutput {
	return o.ApplyT(func(v *DirectHoneycomb) DirectHoneycombHistoricalDataRetrievalOutput {
		return v.HistoricalDataRetrieval
	}).(DirectHoneycombHistoricalDataRetrievalOutput)
}

// [Logs documentation](https://docs.nobl9.com/Features/SLO_troubleshooting/event-logs)
func (o DirectHoneycombOutput) LogCollectionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DirectHoneycomb) pulumi.BoolPtrOutput { return v.LogCollectionEnabled }).(pulumi.BoolPtrOutput)
}

// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
func (o DirectHoneycombOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectHoneycomb) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
func (o DirectHoneycombOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectHoneycomb) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
func (o DirectHoneycombOutput) QueryDelay() DirectHoneycombQueryDelayOutput {
	return o.ApplyT(func(v *DirectHoneycomb) DirectHoneycombQueryDelayOutput { return v.QueryDelay }).(DirectHoneycombQueryDelayOutput)
}

// Release channel of the created datasource [stable/beta]
func (o DirectHoneycombOutput) ReleaseChannel() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectHoneycomb) pulumi.StringOutput { return v.ReleaseChannel }).(pulumi.StringOutput)
}

// This value indicated whether the field was a source of metrics and/or services. 'source_of' is deprecated and not used anywhere; however, it's kept for backward compatibility.
//
// Deprecated: 'source_of' is deprecated and not used anywhere. You can safely remove it from your configuration file.
func (o DirectHoneycombOutput) SourceOfs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DirectHoneycomb) pulumi.StringArrayOutput { return v.SourceOfs }).(pulumi.StringArrayOutput)
}

// The status of the created direct.
func (o DirectHoneycombOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectHoneycomb) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type DirectHoneycombArrayOutput struct{ *pulumi.OutputState }

func (DirectHoneycombArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DirectHoneycomb)(nil)).Elem()
}

func (o DirectHoneycombArrayOutput) ToDirectHoneycombArrayOutput() DirectHoneycombArrayOutput {
	return o
}

func (o DirectHoneycombArrayOutput) ToDirectHoneycombArrayOutputWithContext(ctx context.Context) DirectHoneycombArrayOutput {
	return o
}

func (o DirectHoneycombArrayOutput) Index(i pulumi.IntInput) DirectHoneycombOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DirectHoneycomb {
		return vs[0].([]*DirectHoneycomb)[vs[1].(int)]
	}).(DirectHoneycombOutput)
}

type DirectHoneycombMapOutput struct{ *pulumi.OutputState }

func (DirectHoneycombMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DirectHoneycomb)(nil)).Elem()
}

func (o DirectHoneycombMapOutput) ToDirectHoneycombMapOutput() DirectHoneycombMapOutput {
	return o
}

func (o DirectHoneycombMapOutput) ToDirectHoneycombMapOutputWithContext(ctx context.Context) DirectHoneycombMapOutput {
	return o
}

func (o DirectHoneycombMapOutput) MapIndex(k pulumi.StringInput) DirectHoneycombOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DirectHoneycomb {
		return vs[0].(map[string]*DirectHoneycomb)[vs[1].(string)]
	}).(DirectHoneycombOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DirectHoneycombInput)(nil)).Elem(), &DirectHoneycomb{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectHoneycombArrayInput)(nil)).Elem(), DirectHoneycombArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectHoneycombMapInput)(nil)).Elem(), DirectHoneycombMap{})
	pulumi.RegisterOutputType(DirectHoneycombOutput{})
	pulumi.RegisterOutputType(DirectHoneycombArrayOutput{})
	pulumi.RegisterOutputType(DirectHoneycombMapOutput{})
}

// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nobl9

import (
	"context"
	"reflect"

	"errors"
	"github.com/piclemx/pulumi-nobl9/sdk/go/nobl9/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Pingdom is a website monitoring software solution that gives users real-time, quality insights into the uptime and performance of their websites. After adding Pingdom as a data source in Nobl9, users can configure SLOs to check the overall performance status of their sites. Nobl9 connects to Pingdom for SLI measurement collection and comparison with SLO targets.
//
// For more information, refer to [Pingdom Direct | Nobl9 Documentation](https://docs.nobl9.com/Sources/pingdom#pingdom-direct).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/piclemx/pulumi-nobl9/sdk/go/nobl9"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := nobl9.NewDirectPingdom(ctx, "test-pingdom", &nobl9.DirectPingdomArgs{
//				ApiToken:             pulumi.String("secret"),
//				Description:          pulumi.String("desc"),
//				LogCollectionEnabled: pulumi.Bool(true),
//				Project:              pulumi.String("terraform"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## Nobl9 Official Documentation
//
// https://docs.nobl9.com/
type DirectPingdom struct {
	pulumi.CustomResourceState

	// [required] | Pingdom API token.
	ApiToken pulumi.StringOutput `pulumi:"apiToken"`
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// User-friendly display name of the resource.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// [Logs documentation](https://docs.nobl9.com/Features/SLO_troubleshooting/event-logs)
	LogCollectionEnabled pulumi.BoolPtrOutput `pulumi:"logCollectionEnabled"`
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name pulumi.StringOutput `pulumi:"name"`
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project pulumi.StringOutput `pulumi:"project"`
	// [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
	QueryDelay DirectPingdomQueryDelayOutput `pulumi:"queryDelay"`
	// Release channel of the created datasource [stable/beta]
	ReleaseChannel pulumi.StringOutput `pulumi:"releaseChannel"`
	// This value indicated whether the field was a source of metrics and/or services. 'source_of' is deprecated and not used anywhere; however, it's kept for backward compatibility.
	//
	// Deprecated: 'source_of' is deprecated and not used anywhere. You can safely remove it from your configuration file.
	SourceOfs pulumi.StringArrayOutput `pulumi:"sourceOfs"`
	// The status of the created direct.
	Status pulumi.StringOutput `pulumi:"status"`
}

// NewDirectPingdom registers a new resource with the given unique name, arguments, and options.
func NewDirectPingdom(ctx *pulumi.Context,
	name string, args *DirectPingdomArgs, opts ...pulumi.ResourceOption) (*DirectPingdom, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.ApiToken != nil {
		args.ApiToken = pulumi.ToSecret(args.ApiToken).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"apiToken",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DirectPingdom
	err := ctx.RegisterResource("nobl9:index/directPingdom:DirectPingdom", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDirectPingdom gets an existing DirectPingdom resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDirectPingdom(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DirectPingdomState, opts ...pulumi.ResourceOption) (*DirectPingdom, error) {
	var resource DirectPingdom
	err := ctx.ReadResource("nobl9:index/directPingdom:DirectPingdom", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DirectPingdom resources.
type directPingdomState struct {
	// [required] | Pingdom API token.
	ApiToken *string `pulumi:"apiToken"`
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description *string `pulumi:"description"`
	// User-friendly display name of the resource.
	DisplayName *string `pulumi:"displayName"`
	// [Logs documentation](https://docs.nobl9.com/Features/SLO_troubleshooting/event-logs)
	LogCollectionEnabled *bool `pulumi:"logCollectionEnabled"`
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name *string `pulumi:"name"`
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project *string `pulumi:"project"`
	// [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
	QueryDelay *DirectPingdomQueryDelay `pulumi:"queryDelay"`
	// Release channel of the created datasource [stable/beta]
	ReleaseChannel *string `pulumi:"releaseChannel"`
	// This value indicated whether the field was a source of metrics and/or services. 'source_of' is deprecated and not used anywhere; however, it's kept for backward compatibility.
	//
	// Deprecated: 'source_of' is deprecated and not used anywhere. You can safely remove it from your configuration file.
	SourceOfs []string `pulumi:"sourceOfs"`
	// The status of the created direct.
	Status *string `pulumi:"status"`
}

type DirectPingdomState struct {
	// [required] | Pingdom API token.
	ApiToken pulumi.StringPtrInput
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description pulumi.StringPtrInput
	// User-friendly display name of the resource.
	DisplayName pulumi.StringPtrInput
	// [Logs documentation](https://docs.nobl9.com/Features/SLO_troubleshooting/event-logs)
	LogCollectionEnabled pulumi.BoolPtrInput
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name pulumi.StringPtrInput
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project pulumi.StringPtrInput
	// [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
	QueryDelay DirectPingdomQueryDelayPtrInput
	// Release channel of the created datasource [stable/beta]
	ReleaseChannel pulumi.StringPtrInput
	// This value indicated whether the field was a source of metrics and/or services. 'source_of' is deprecated and not used anywhere; however, it's kept for backward compatibility.
	//
	// Deprecated: 'source_of' is deprecated and not used anywhere. You can safely remove it from your configuration file.
	SourceOfs pulumi.StringArrayInput
	// The status of the created direct.
	Status pulumi.StringPtrInput
}

func (DirectPingdomState) ElementType() reflect.Type {
	return reflect.TypeOf((*directPingdomState)(nil)).Elem()
}

type directPingdomArgs struct {
	// [required] | Pingdom API token.
	ApiToken *string `pulumi:"apiToken"`
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description *string `pulumi:"description"`
	// User-friendly display name of the resource.
	DisplayName *string `pulumi:"displayName"`
	// [Logs documentation](https://docs.nobl9.com/Features/SLO_troubleshooting/event-logs)
	LogCollectionEnabled *bool `pulumi:"logCollectionEnabled"`
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name *string `pulumi:"name"`
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project string `pulumi:"project"`
	// [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
	QueryDelay *DirectPingdomQueryDelay `pulumi:"queryDelay"`
	// Release channel of the created datasource [stable/beta]
	ReleaseChannel *string `pulumi:"releaseChannel"`
	// This value indicated whether the field was a source of metrics and/or services. 'source_of' is deprecated and not used anywhere; however, it's kept for backward compatibility.
	//
	// Deprecated: 'source_of' is deprecated and not used anywhere. You can safely remove it from your configuration file.
	SourceOfs []string `pulumi:"sourceOfs"`
}

// The set of arguments for constructing a DirectPingdom resource.
type DirectPingdomArgs struct {
	// [required] | Pingdom API token.
	ApiToken pulumi.StringPtrInput
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description pulumi.StringPtrInput
	// User-friendly display name of the resource.
	DisplayName pulumi.StringPtrInput
	// [Logs documentation](https://docs.nobl9.com/Features/SLO_troubleshooting/event-logs)
	LogCollectionEnabled pulumi.BoolPtrInput
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name pulumi.StringPtrInput
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project pulumi.StringInput
	// [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
	QueryDelay DirectPingdomQueryDelayPtrInput
	// Release channel of the created datasource [stable/beta]
	ReleaseChannel pulumi.StringPtrInput
	// This value indicated whether the field was a source of metrics and/or services. 'source_of' is deprecated and not used anywhere; however, it's kept for backward compatibility.
	//
	// Deprecated: 'source_of' is deprecated and not used anywhere. You can safely remove it from your configuration file.
	SourceOfs pulumi.StringArrayInput
}

func (DirectPingdomArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*directPingdomArgs)(nil)).Elem()
}

type DirectPingdomInput interface {
	pulumi.Input

	ToDirectPingdomOutput() DirectPingdomOutput
	ToDirectPingdomOutputWithContext(ctx context.Context) DirectPingdomOutput
}

func (*DirectPingdom) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectPingdom)(nil)).Elem()
}

func (i *DirectPingdom) ToDirectPingdomOutput() DirectPingdomOutput {
	return i.ToDirectPingdomOutputWithContext(context.Background())
}

func (i *DirectPingdom) ToDirectPingdomOutputWithContext(ctx context.Context) DirectPingdomOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectPingdomOutput)
}

// DirectPingdomArrayInput is an input type that accepts DirectPingdomArray and DirectPingdomArrayOutput values.
// You can construct a concrete instance of `DirectPingdomArrayInput` via:
//
//	DirectPingdomArray{ DirectPingdomArgs{...} }
type DirectPingdomArrayInput interface {
	pulumi.Input

	ToDirectPingdomArrayOutput() DirectPingdomArrayOutput
	ToDirectPingdomArrayOutputWithContext(context.Context) DirectPingdomArrayOutput
}

type DirectPingdomArray []DirectPingdomInput

func (DirectPingdomArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DirectPingdom)(nil)).Elem()
}

func (i DirectPingdomArray) ToDirectPingdomArrayOutput() DirectPingdomArrayOutput {
	return i.ToDirectPingdomArrayOutputWithContext(context.Background())
}

func (i DirectPingdomArray) ToDirectPingdomArrayOutputWithContext(ctx context.Context) DirectPingdomArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectPingdomArrayOutput)
}

// DirectPingdomMapInput is an input type that accepts DirectPingdomMap and DirectPingdomMapOutput values.
// You can construct a concrete instance of `DirectPingdomMapInput` via:
//
//	DirectPingdomMap{ "key": DirectPingdomArgs{...} }
type DirectPingdomMapInput interface {
	pulumi.Input

	ToDirectPingdomMapOutput() DirectPingdomMapOutput
	ToDirectPingdomMapOutputWithContext(context.Context) DirectPingdomMapOutput
}

type DirectPingdomMap map[string]DirectPingdomInput

func (DirectPingdomMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DirectPingdom)(nil)).Elem()
}

func (i DirectPingdomMap) ToDirectPingdomMapOutput() DirectPingdomMapOutput {
	return i.ToDirectPingdomMapOutputWithContext(context.Background())
}

func (i DirectPingdomMap) ToDirectPingdomMapOutputWithContext(ctx context.Context) DirectPingdomMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectPingdomMapOutput)
}

type DirectPingdomOutput struct{ *pulumi.OutputState }

func (DirectPingdomOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectPingdom)(nil)).Elem()
}

func (o DirectPingdomOutput) ToDirectPingdomOutput() DirectPingdomOutput {
	return o
}

func (o DirectPingdomOutput) ToDirectPingdomOutputWithContext(ctx context.Context) DirectPingdomOutput {
	return o
}

// [required] | Pingdom API token.
func (o DirectPingdomOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectPingdom) pulumi.StringOutput { return v.ApiToken }).(pulumi.StringOutput)
}

// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
func (o DirectPingdomOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectPingdom) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// User-friendly display name of the resource.
func (o DirectPingdomOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectPingdom) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// [Logs documentation](https://docs.nobl9.com/Features/SLO_troubleshooting/event-logs)
func (o DirectPingdomOutput) LogCollectionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DirectPingdom) pulumi.BoolPtrOutput { return v.LogCollectionEnabled }).(pulumi.BoolPtrOutput)
}

// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
func (o DirectPingdomOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectPingdom) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
func (o DirectPingdomOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectPingdom) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
func (o DirectPingdomOutput) QueryDelay() DirectPingdomQueryDelayOutput {
	return o.ApplyT(func(v *DirectPingdom) DirectPingdomQueryDelayOutput { return v.QueryDelay }).(DirectPingdomQueryDelayOutput)
}

// Release channel of the created datasource [stable/beta]
func (o DirectPingdomOutput) ReleaseChannel() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectPingdom) pulumi.StringOutput { return v.ReleaseChannel }).(pulumi.StringOutput)
}

// This value indicated whether the field was a source of metrics and/or services. 'source_of' is deprecated and not used anywhere; however, it's kept for backward compatibility.
//
// Deprecated: 'source_of' is deprecated and not used anywhere. You can safely remove it from your configuration file.
func (o DirectPingdomOutput) SourceOfs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DirectPingdom) pulumi.StringArrayOutput { return v.SourceOfs }).(pulumi.StringArrayOutput)
}

// The status of the created direct.
func (o DirectPingdomOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectPingdom) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

type DirectPingdomArrayOutput struct{ *pulumi.OutputState }

func (DirectPingdomArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DirectPingdom)(nil)).Elem()
}

func (o DirectPingdomArrayOutput) ToDirectPingdomArrayOutput() DirectPingdomArrayOutput {
	return o
}

func (o DirectPingdomArrayOutput) ToDirectPingdomArrayOutputWithContext(ctx context.Context) DirectPingdomArrayOutput {
	return o
}

func (o DirectPingdomArrayOutput) Index(i pulumi.IntInput) DirectPingdomOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DirectPingdom {
		return vs[0].([]*DirectPingdom)[vs[1].(int)]
	}).(DirectPingdomOutput)
}

type DirectPingdomMapOutput struct{ *pulumi.OutputState }

func (DirectPingdomMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DirectPingdom)(nil)).Elem()
}

func (o DirectPingdomMapOutput) ToDirectPingdomMapOutput() DirectPingdomMapOutput {
	return o
}

func (o DirectPingdomMapOutput) ToDirectPingdomMapOutputWithContext(ctx context.Context) DirectPingdomMapOutput {
	return o
}

func (o DirectPingdomMapOutput) MapIndex(k pulumi.StringInput) DirectPingdomOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DirectPingdom {
		return vs[0].(map[string]*DirectPingdom)[vs[1].(string)]
	}).(DirectPingdomOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DirectPingdomInput)(nil)).Elem(), &DirectPingdom{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectPingdomArrayInput)(nil)).Elem(), DirectPingdomArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectPingdomMapInput)(nil)).Elem(), DirectPingdomMap{})
	pulumi.RegisterOutputType(DirectPingdomOutput{})
	pulumi.RegisterOutputType(DirectPingdomArrayOutput{})
	pulumi.RegisterOutputType(DirectPingdomMapOutput{})
}

// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nobl9

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AlertMethodMsteams struct {
	pulumi.CustomResourceState

	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// User-friendly display name of the resource.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name pulumi.StringOutput `pulumi:"name"`
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project pulumi.StringOutput `pulumi:"project"`
	// MS Teams [webhook endpoint URL](https://learn.microsoft.com/en-us/microsoftteams/platform/webhooks-and-connectors/how-to/add-incoming-webhook).
	Url pulumi.StringOutput `pulumi:"url"`
}

// NewAlertMethodMsteams registers a new resource with the given unique name, arguments, and options.
func NewAlertMethodMsteams(ctx *pulumi.Context,
	name string, args *AlertMethodMsteamsArgs, opts ...pulumi.ResourceOption) (*AlertMethodMsteams, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	var resource AlertMethodMsteams
	err := ctx.RegisterResource("nobl9:index/alertMethodMsteams:AlertMethodMsteams", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAlertMethodMsteams gets an existing AlertMethodMsteams resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAlertMethodMsteams(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AlertMethodMsteamsState, opts ...pulumi.ResourceOption) (*AlertMethodMsteams, error) {
	var resource AlertMethodMsteams
	err := ctx.ReadResource("nobl9:index/alertMethodMsteams:AlertMethodMsteams", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AlertMethodMsteams resources.
type alertMethodMsteamsState struct {
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description *string `pulumi:"description"`
	// User-friendly display name of the resource.
	DisplayName *string `pulumi:"displayName"`
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name *string `pulumi:"name"`
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project *string `pulumi:"project"`
	// MS Teams [webhook endpoint URL](https://learn.microsoft.com/en-us/microsoftteams/platform/webhooks-and-connectors/how-to/add-incoming-webhook).
	Url *string `pulumi:"url"`
}

type AlertMethodMsteamsState struct {
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description pulumi.StringPtrInput
	// User-friendly display name of the resource.
	DisplayName pulumi.StringPtrInput
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name pulumi.StringPtrInput
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project pulumi.StringPtrInput
	// MS Teams [webhook endpoint URL](https://learn.microsoft.com/en-us/microsoftteams/platform/webhooks-and-connectors/how-to/add-incoming-webhook).
	Url pulumi.StringPtrInput
}

func (AlertMethodMsteamsState) ElementType() reflect.Type {
	return reflect.TypeOf((*alertMethodMsteamsState)(nil)).Elem()
}

type alertMethodMsteamsArgs struct {
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description *string `pulumi:"description"`
	// User-friendly display name of the resource.
	DisplayName *string `pulumi:"displayName"`
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name *string `pulumi:"name"`
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project string `pulumi:"project"`
	// MS Teams [webhook endpoint URL](https://learn.microsoft.com/en-us/microsoftteams/platform/webhooks-and-connectors/how-to/add-incoming-webhook).
	Url *string `pulumi:"url"`
}

// The set of arguments for constructing a AlertMethodMsteams resource.
type AlertMethodMsteamsArgs struct {
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description pulumi.StringPtrInput
	// User-friendly display name of the resource.
	DisplayName pulumi.StringPtrInput
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name pulumi.StringPtrInput
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project pulumi.StringInput
	// MS Teams [webhook endpoint URL](https://learn.microsoft.com/en-us/microsoftteams/platform/webhooks-and-connectors/how-to/add-incoming-webhook).
	Url pulumi.StringPtrInput
}

func (AlertMethodMsteamsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*alertMethodMsteamsArgs)(nil)).Elem()
}

type AlertMethodMsteamsInput interface {
	pulumi.Input

	ToAlertMethodMsteamsOutput() AlertMethodMsteamsOutput
	ToAlertMethodMsteamsOutputWithContext(ctx context.Context) AlertMethodMsteamsOutput
}

func (*AlertMethodMsteams) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertMethodMsteams)(nil)).Elem()
}

func (i *AlertMethodMsteams) ToAlertMethodMsteamsOutput() AlertMethodMsteamsOutput {
	return i.ToAlertMethodMsteamsOutputWithContext(context.Background())
}

func (i *AlertMethodMsteams) ToAlertMethodMsteamsOutputWithContext(ctx context.Context) AlertMethodMsteamsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertMethodMsteamsOutput)
}

// AlertMethodMsteamsArrayInput is an input type that accepts AlertMethodMsteamsArray and AlertMethodMsteamsArrayOutput values.
// You can construct a concrete instance of `AlertMethodMsteamsArrayInput` via:
//
//	AlertMethodMsteamsArray{ AlertMethodMsteamsArgs{...} }
type AlertMethodMsteamsArrayInput interface {
	pulumi.Input

	ToAlertMethodMsteamsArrayOutput() AlertMethodMsteamsArrayOutput
	ToAlertMethodMsteamsArrayOutputWithContext(context.Context) AlertMethodMsteamsArrayOutput
}

type AlertMethodMsteamsArray []AlertMethodMsteamsInput

func (AlertMethodMsteamsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlertMethodMsteams)(nil)).Elem()
}

func (i AlertMethodMsteamsArray) ToAlertMethodMsteamsArrayOutput() AlertMethodMsteamsArrayOutput {
	return i.ToAlertMethodMsteamsArrayOutputWithContext(context.Background())
}

func (i AlertMethodMsteamsArray) ToAlertMethodMsteamsArrayOutputWithContext(ctx context.Context) AlertMethodMsteamsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertMethodMsteamsArrayOutput)
}

// AlertMethodMsteamsMapInput is an input type that accepts AlertMethodMsteamsMap and AlertMethodMsteamsMapOutput values.
// You can construct a concrete instance of `AlertMethodMsteamsMapInput` via:
//
//	AlertMethodMsteamsMap{ "key": AlertMethodMsteamsArgs{...} }
type AlertMethodMsteamsMapInput interface {
	pulumi.Input

	ToAlertMethodMsteamsMapOutput() AlertMethodMsteamsMapOutput
	ToAlertMethodMsteamsMapOutputWithContext(context.Context) AlertMethodMsteamsMapOutput
}

type AlertMethodMsteamsMap map[string]AlertMethodMsteamsInput

func (AlertMethodMsteamsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlertMethodMsteams)(nil)).Elem()
}

func (i AlertMethodMsteamsMap) ToAlertMethodMsteamsMapOutput() AlertMethodMsteamsMapOutput {
	return i.ToAlertMethodMsteamsMapOutputWithContext(context.Background())
}

func (i AlertMethodMsteamsMap) ToAlertMethodMsteamsMapOutputWithContext(ctx context.Context) AlertMethodMsteamsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertMethodMsteamsMapOutput)
}

type AlertMethodMsteamsOutput struct{ *pulumi.OutputState }

func (AlertMethodMsteamsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertMethodMsteams)(nil)).Elem()
}

func (o AlertMethodMsteamsOutput) ToAlertMethodMsteamsOutput() AlertMethodMsteamsOutput {
	return o
}

func (o AlertMethodMsteamsOutput) ToAlertMethodMsteamsOutputWithContext(ctx context.Context) AlertMethodMsteamsOutput {
	return o
}

// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
func (o AlertMethodMsteamsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertMethodMsteams) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// User-friendly display name of the resource.
func (o AlertMethodMsteamsOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertMethodMsteams) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
func (o AlertMethodMsteamsOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertMethodMsteams) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
func (o AlertMethodMsteamsOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertMethodMsteams) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// MS Teams [webhook endpoint URL](https://learn.microsoft.com/en-us/microsoftteams/platform/webhooks-and-connectors/how-to/add-incoming-webhook).
func (o AlertMethodMsteamsOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertMethodMsteams) pulumi.StringOutput { return v.Url }).(pulumi.StringOutput)
}

type AlertMethodMsteamsArrayOutput struct{ *pulumi.OutputState }

func (AlertMethodMsteamsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlertMethodMsteams)(nil)).Elem()
}

func (o AlertMethodMsteamsArrayOutput) ToAlertMethodMsteamsArrayOutput() AlertMethodMsteamsArrayOutput {
	return o
}

func (o AlertMethodMsteamsArrayOutput) ToAlertMethodMsteamsArrayOutputWithContext(ctx context.Context) AlertMethodMsteamsArrayOutput {
	return o
}

func (o AlertMethodMsteamsArrayOutput) Index(i pulumi.IntInput) AlertMethodMsteamsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AlertMethodMsteams {
		return vs[0].([]*AlertMethodMsteams)[vs[1].(int)]
	}).(AlertMethodMsteamsOutput)
}

type AlertMethodMsteamsMapOutput struct{ *pulumi.OutputState }

func (AlertMethodMsteamsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlertMethodMsteams)(nil)).Elem()
}

func (o AlertMethodMsteamsMapOutput) ToAlertMethodMsteamsMapOutput() AlertMethodMsteamsMapOutput {
	return o
}

func (o AlertMethodMsteamsMapOutput) ToAlertMethodMsteamsMapOutputWithContext(ctx context.Context) AlertMethodMsteamsMapOutput {
	return o
}

func (o AlertMethodMsteamsMapOutput) MapIndex(k pulumi.StringInput) AlertMethodMsteamsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AlertMethodMsteams {
		return vs[0].(map[string]*AlertMethodMsteams)[vs[1].(string)]
	}).(AlertMethodMsteamsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AlertMethodMsteamsInput)(nil)).Elem(), &AlertMethodMsteams{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertMethodMsteamsArrayInput)(nil)).Elem(), AlertMethodMsteamsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertMethodMsteamsMapInput)(nil)).Elem(), AlertMethodMsteamsMap{})
	pulumi.RegisterOutputType(AlertMethodMsteamsOutput{})
	pulumi.RegisterOutputType(AlertMethodMsteamsArrayOutput{})
	pulumi.RegisterOutputType(AlertMethodMsteamsMapOutput{})
}

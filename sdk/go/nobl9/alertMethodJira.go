// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nobl9

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AlertMethodJira struct {
	pulumi.CustomResourceState

	// [API Token](https://support.atlassian.com/atlassian-account/docs/manage-api-tokens-for-your-atlassian-account/) with access rights to the project.
	Apitoken pulumi.StringOutput `pulumi:"apitoken"`
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// User-friendly display name of the resource.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name pulumi.StringOutput `pulumi:"name"`
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project pulumi.StringOutput `pulumi:"project"`
	// The code of the Jira project.
	ProjectKey pulumi.StringOutput `pulumi:"projectKey"`
	// Jira instance URL. The `https://` prefix is required.
	Url pulumi.StringOutput `pulumi:"url"`
	// Jira username for the owner of the API Token.
	Username pulumi.StringOutput `pulumi:"username"`
}

// NewAlertMethodJira registers a new resource with the given unique name, arguments, and options.
func NewAlertMethodJira(ctx *pulumi.Context,
	name string, args *AlertMethodJiraArgs, opts ...pulumi.ResourceOption) (*AlertMethodJira, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.ProjectKey == nil {
		return nil, errors.New("invalid value for required argument 'ProjectKey'")
	}
	if args.Url == nil {
		return nil, errors.New("invalid value for required argument 'Url'")
	}
	if args.Username == nil {
		return nil, errors.New("invalid value for required argument 'Username'")
	}
	var resource AlertMethodJira
	err := ctx.RegisterResource("nobl9:index/alertMethodJira:AlertMethodJira", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAlertMethodJira gets an existing AlertMethodJira resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAlertMethodJira(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AlertMethodJiraState, opts ...pulumi.ResourceOption) (*AlertMethodJira, error) {
	var resource AlertMethodJira
	err := ctx.ReadResource("nobl9:index/alertMethodJira:AlertMethodJira", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AlertMethodJira resources.
type alertMethodJiraState struct {
	// [API Token](https://support.atlassian.com/atlassian-account/docs/manage-api-tokens-for-your-atlassian-account/) with access rights to the project.
	Apitoken *string `pulumi:"apitoken"`
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description *string `pulumi:"description"`
	// User-friendly display name of the resource.
	DisplayName *string `pulumi:"displayName"`
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name *string `pulumi:"name"`
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project *string `pulumi:"project"`
	// The code of the Jira project.
	ProjectKey *string `pulumi:"projectKey"`
	// Jira instance URL. The `https://` prefix is required.
	Url *string `pulumi:"url"`
	// Jira username for the owner of the API Token.
	Username *string `pulumi:"username"`
}

type AlertMethodJiraState struct {
	// [API Token](https://support.atlassian.com/atlassian-account/docs/manage-api-tokens-for-your-atlassian-account/) with access rights to the project.
	Apitoken pulumi.StringPtrInput
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description pulumi.StringPtrInput
	// User-friendly display name of the resource.
	DisplayName pulumi.StringPtrInput
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name pulumi.StringPtrInput
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project pulumi.StringPtrInput
	// The code of the Jira project.
	ProjectKey pulumi.StringPtrInput
	// Jira instance URL. The `https://` prefix is required.
	Url pulumi.StringPtrInput
	// Jira username for the owner of the API Token.
	Username pulumi.StringPtrInput
}

func (AlertMethodJiraState) ElementType() reflect.Type {
	return reflect.TypeOf((*alertMethodJiraState)(nil)).Elem()
}

type alertMethodJiraArgs struct {
	// [API Token](https://support.atlassian.com/atlassian-account/docs/manage-api-tokens-for-your-atlassian-account/) with access rights to the project.
	Apitoken *string `pulumi:"apitoken"`
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description *string `pulumi:"description"`
	// User-friendly display name of the resource.
	DisplayName *string `pulumi:"displayName"`
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name *string `pulumi:"name"`
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project string `pulumi:"project"`
	// The code of the Jira project.
	ProjectKey string `pulumi:"projectKey"`
	// Jira instance URL. The `https://` prefix is required.
	Url string `pulumi:"url"`
	// Jira username for the owner of the API Token.
	Username string `pulumi:"username"`
}

// The set of arguments for constructing a AlertMethodJira resource.
type AlertMethodJiraArgs struct {
	// [API Token](https://support.atlassian.com/atlassian-account/docs/manage-api-tokens-for-your-atlassian-account/) with access rights to the project.
	Apitoken pulumi.StringPtrInput
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description pulumi.StringPtrInput
	// User-friendly display name of the resource.
	DisplayName pulumi.StringPtrInput
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name pulumi.StringPtrInput
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project pulumi.StringInput
	// The code of the Jira project.
	ProjectKey pulumi.StringInput
	// Jira instance URL. The `https://` prefix is required.
	Url pulumi.StringInput
	// Jira username for the owner of the API Token.
	Username pulumi.StringInput
}

func (AlertMethodJiraArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*alertMethodJiraArgs)(nil)).Elem()
}

type AlertMethodJiraInput interface {
	pulumi.Input

	ToAlertMethodJiraOutput() AlertMethodJiraOutput
	ToAlertMethodJiraOutputWithContext(ctx context.Context) AlertMethodJiraOutput
}

func (*AlertMethodJira) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertMethodJira)(nil)).Elem()
}

func (i *AlertMethodJira) ToAlertMethodJiraOutput() AlertMethodJiraOutput {
	return i.ToAlertMethodJiraOutputWithContext(context.Background())
}

func (i *AlertMethodJira) ToAlertMethodJiraOutputWithContext(ctx context.Context) AlertMethodJiraOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertMethodJiraOutput)
}

// AlertMethodJiraArrayInput is an input type that accepts AlertMethodJiraArray and AlertMethodJiraArrayOutput values.
// You can construct a concrete instance of `AlertMethodJiraArrayInput` via:
//
//	AlertMethodJiraArray{ AlertMethodJiraArgs{...} }
type AlertMethodJiraArrayInput interface {
	pulumi.Input

	ToAlertMethodJiraArrayOutput() AlertMethodJiraArrayOutput
	ToAlertMethodJiraArrayOutputWithContext(context.Context) AlertMethodJiraArrayOutput
}

type AlertMethodJiraArray []AlertMethodJiraInput

func (AlertMethodJiraArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlertMethodJira)(nil)).Elem()
}

func (i AlertMethodJiraArray) ToAlertMethodJiraArrayOutput() AlertMethodJiraArrayOutput {
	return i.ToAlertMethodJiraArrayOutputWithContext(context.Background())
}

func (i AlertMethodJiraArray) ToAlertMethodJiraArrayOutputWithContext(ctx context.Context) AlertMethodJiraArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertMethodJiraArrayOutput)
}

// AlertMethodJiraMapInput is an input type that accepts AlertMethodJiraMap and AlertMethodJiraMapOutput values.
// You can construct a concrete instance of `AlertMethodJiraMapInput` via:
//
//	AlertMethodJiraMap{ "key": AlertMethodJiraArgs{...} }
type AlertMethodJiraMapInput interface {
	pulumi.Input

	ToAlertMethodJiraMapOutput() AlertMethodJiraMapOutput
	ToAlertMethodJiraMapOutputWithContext(context.Context) AlertMethodJiraMapOutput
}

type AlertMethodJiraMap map[string]AlertMethodJiraInput

func (AlertMethodJiraMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlertMethodJira)(nil)).Elem()
}

func (i AlertMethodJiraMap) ToAlertMethodJiraMapOutput() AlertMethodJiraMapOutput {
	return i.ToAlertMethodJiraMapOutputWithContext(context.Background())
}

func (i AlertMethodJiraMap) ToAlertMethodJiraMapOutputWithContext(ctx context.Context) AlertMethodJiraMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertMethodJiraMapOutput)
}

type AlertMethodJiraOutput struct{ *pulumi.OutputState }

func (AlertMethodJiraOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertMethodJira)(nil)).Elem()
}

func (o AlertMethodJiraOutput) ToAlertMethodJiraOutput() AlertMethodJiraOutput {
	return o
}

func (o AlertMethodJiraOutput) ToAlertMethodJiraOutputWithContext(ctx context.Context) AlertMethodJiraOutput {
	return o
}

// [API Token](https://support.atlassian.com/atlassian-account/docs/manage-api-tokens-for-your-atlassian-account/) with access rights to the project.
func (o AlertMethodJiraOutput) Apitoken() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertMethodJira) pulumi.StringOutput { return v.Apitoken }).(pulumi.StringOutput)
}

// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
func (o AlertMethodJiraOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertMethodJira) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// User-friendly display name of the resource.
func (o AlertMethodJiraOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertMethodJira) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
func (o AlertMethodJiraOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertMethodJira) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
func (o AlertMethodJiraOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertMethodJira) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// The code of the Jira project.
func (o AlertMethodJiraOutput) ProjectKey() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertMethodJira) pulumi.StringOutput { return v.ProjectKey }).(pulumi.StringOutput)
}

// Jira instance URL. The `https://` prefix is required.
func (o AlertMethodJiraOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertMethodJira) pulumi.StringOutput { return v.Url }).(pulumi.StringOutput)
}

// Jira username for the owner of the API Token.
func (o AlertMethodJiraOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertMethodJira) pulumi.StringOutput { return v.Username }).(pulumi.StringOutput)
}

type AlertMethodJiraArrayOutput struct{ *pulumi.OutputState }

func (AlertMethodJiraArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlertMethodJira)(nil)).Elem()
}

func (o AlertMethodJiraArrayOutput) ToAlertMethodJiraArrayOutput() AlertMethodJiraArrayOutput {
	return o
}

func (o AlertMethodJiraArrayOutput) ToAlertMethodJiraArrayOutputWithContext(ctx context.Context) AlertMethodJiraArrayOutput {
	return o
}

func (o AlertMethodJiraArrayOutput) Index(i pulumi.IntInput) AlertMethodJiraOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AlertMethodJira {
		return vs[0].([]*AlertMethodJira)[vs[1].(int)]
	}).(AlertMethodJiraOutput)
}

type AlertMethodJiraMapOutput struct{ *pulumi.OutputState }

func (AlertMethodJiraMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlertMethodJira)(nil)).Elem()
}

func (o AlertMethodJiraMapOutput) ToAlertMethodJiraMapOutput() AlertMethodJiraMapOutput {
	return o
}

func (o AlertMethodJiraMapOutput) ToAlertMethodJiraMapOutputWithContext(ctx context.Context) AlertMethodJiraMapOutput {
	return o
}

func (o AlertMethodJiraMapOutput) MapIndex(k pulumi.StringInput) AlertMethodJiraOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AlertMethodJira {
		return vs[0].(map[string]*AlertMethodJira)[vs[1].(string)]
	}).(AlertMethodJiraOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AlertMethodJiraInput)(nil)).Elem(), &AlertMethodJira{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertMethodJiraArrayInput)(nil)).Elem(), AlertMethodJiraArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertMethodJiraMapInput)(nil)).Elem(), AlertMethodJiraMap{})
	pulumi.RegisterOutputType(AlertMethodJiraOutput{})
	pulumi.RegisterOutputType(AlertMethodJiraArrayOutput{})
	pulumi.RegisterOutputType(AlertMethodJiraMapOutput{})
}

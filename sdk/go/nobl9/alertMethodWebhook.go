// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nobl9

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AlertMethodWebhook struct {
	pulumi.CustomResourceState

	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// User-friendly display name of the resource.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name pulumi.StringOutput `pulumi:"name"`
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project pulumi.StringOutput `pulumi:"project"`
	// Webhook message template. See documentation for template format and samples.
	Template pulumi.StringPtrOutput `pulumi:"template"`
	// Webhook message fields. The message contains JSON payload with specified fields. See documentation for allowed fields.
	TemplateFields pulumi.StringArrayOutput `pulumi:"templateFields"`
	// URL of the webhook endpoint.
	Url pulumi.StringOutput `pulumi:"url"`
}

// NewAlertMethodWebhook registers a new resource with the given unique name, arguments, and options.
func NewAlertMethodWebhook(ctx *pulumi.Context,
	name string, args *AlertMethodWebhookArgs, opts ...pulumi.ResourceOption) (*AlertMethodWebhook, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource AlertMethodWebhook
	err := ctx.RegisterResource("nobl9:index/alertMethodWebhook:AlertMethodWebhook", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAlertMethodWebhook gets an existing AlertMethodWebhook resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAlertMethodWebhook(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AlertMethodWebhookState, opts ...pulumi.ResourceOption) (*AlertMethodWebhook, error) {
	var resource AlertMethodWebhook
	err := ctx.ReadResource("nobl9:index/alertMethodWebhook:AlertMethodWebhook", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AlertMethodWebhook resources.
type alertMethodWebhookState struct {
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description *string `pulumi:"description"`
	// User-friendly display name of the resource.
	DisplayName *string `pulumi:"displayName"`
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name *string `pulumi:"name"`
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project *string `pulumi:"project"`
	// Webhook message template. See documentation for template format and samples.
	Template *string `pulumi:"template"`
	// Webhook message fields. The message contains JSON payload with specified fields. See documentation for allowed fields.
	TemplateFields []string `pulumi:"templateFields"`
	// URL of the webhook endpoint.
	Url *string `pulumi:"url"`
}

type AlertMethodWebhookState struct {
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description pulumi.StringPtrInput
	// User-friendly display name of the resource.
	DisplayName pulumi.StringPtrInput
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name pulumi.StringPtrInput
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project pulumi.StringPtrInput
	// Webhook message template. See documentation for template format and samples.
	Template pulumi.StringPtrInput
	// Webhook message fields. The message contains JSON payload with specified fields. See documentation for allowed fields.
	TemplateFields pulumi.StringArrayInput
	// URL of the webhook endpoint.
	Url pulumi.StringPtrInput
}

func (AlertMethodWebhookState) ElementType() reflect.Type {
	return reflect.TypeOf((*alertMethodWebhookState)(nil)).Elem()
}

type alertMethodWebhookArgs struct {
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description *string `pulumi:"description"`
	// User-friendly display name of the resource.
	DisplayName *string `pulumi:"displayName"`
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name *string `pulumi:"name"`
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project string `pulumi:"project"`
	// Webhook message template. See documentation for template format and samples.
	Template *string `pulumi:"template"`
	// Webhook message fields. The message contains JSON payload with specified fields. See documentation for allowed fields.
	TemplateFields []string `pulumi:"templateFields"`
	// URL of the webhook endpoint.
	Url *string `pulumi:"url"`
}

// The set of arguments for constructing a AlertMethodWebhook resource.
type AlertMethodWebhookArgs struct {
	// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
	Description pulumi.StringPtrInput
	// User-friendly display name of the resource.
	DisplayName pulumi.StringPtrInput
	// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name pulumi.StringPtrInput
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project pulumi.StringInput
	// Webhook message template. See documentation for template format and samples.
	Template pulumi.StringPtrInput
	// Webhook message fields. The message contains JSON payload with specified fields. See documentation for allowed fields.
	TemplateFields pulumi.StringArrayInput
	// URL of the webhook endpoint.
	Url pulumi.StringPtrInput
}

func (AlertMethodWebhookArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*alertMethodWebhookArgs)(nil)).Elem()
}

type AlertMethodWebhookInput interface {
	pulumi.Input

	ToAlertMethodWebhookOutput() AlertMethodWebhookOutput
	ToAlertMethodWebhookOutputWithContext(ctx context.Context) AlertMethodWebhookOutput
}

func (*AlertMethodWebhook) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertMethodWebhook)(nil)).Elem()
}

func (i *AlertMethodWebhook) ToAlertMethodWebhookOutput() AlertMethodWebhookOutput {
	return i.ToAlertMethodWebhookOutputWithContext(context.Background())
}

func (i *AlertMethodWebhook) ToAlertMethodWebhookOutputWithContext(ctx context.Context) AlertMethodWebhookOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertMethodWebhookOutput)
}

// AlertMethodWebhookArrayInput is an input type that accepts AlertMethodWebhookArray and AlertMethodWebhookArrayOutput values.
// You can construct a concrete instance of `AlertMethodWebhookArrayInput` via:
//
//          AlertMethodWebhookArray{ AlertMethodWebhookArgs{...} }
type AlertMethodWebhookArrayInput interface {
	pulumi.Input

	ToAlertMethodWebhookArrayOutput() AlertMethodWebhookArrayOutput
	ToAlertMethodWebhookArrayOutputWithContext(context.Context) AlertMethodWebhookArrayOutput
}

type AlertMethodWebhookArray []AlertMethodWebhookInput

func (AlertMethodWebhookArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlertMethodWebhook)(nil)).Elem()
}

func (i AlertMethodWebhookArray) ToAlertMethodWebhookArrayOutput() AlertMethodWebhookArrayOutput {
	return i.ToAlertMethodWebhookArrayOutputWithContext(context.Background())
}

func (i AlertMethodWebhookArray) ToAlertMethodWebhookArrayOutputWithContext(ctx context.Context) AlertMethodWebhookArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertMethodWebhookArrayOutput)
}

// AlertMethodWebhookMapInput is an input type that accepts AlertMethodWebhookMap and AlertMethodWebhookMapOutput values.
// You can construct a concrete instance of `AlertMethodWebhookMapInput` via:
//
//          AlertMethodWebhookMap{ "key": AlertMethodWebhookArgs{...} }
type AlertMethodWebhookMapInput interface {
	pulumi.Input

	ToAlertMethodWebhookMapOutput() AlertMethodWebhookMapOutput
	ToAlertMethodWebhookMapOutputWithContext(context.Context) AlertMethodWebhookMapOutput
}

type AlertMethodWebhookMap map[string]AlertMethodWebhookInput

func (AlertMethodWebhookMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlertMethodWebhook)(nil)).Elem()
}

func (i AlertMethodWebhookMap) ToAlertMethodWebhookMapOutput() AlertMethodWebhookMapOutput {
	return i.ToAlertMethodWebhookMapOutputWithContext(context.Background())
}

func (i AlertMethodWebhookMap) ToAlertMethodWebhookMapOutputWithContext(ctx context.Context) AlertMethodWebhookMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AlertMethodWebhookMapOutput)
}

type AlertMethodWebhookOutput struct{ *pulumi.OutputState }

func (AlertMethodWebhookOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AlertMethodWebhook)(nil)).Elem()
}

func (o AlertMethodWebhookOutput) ToAlertMethodWebhookOutput() AlertMethodWebhookOutput {
	return o
}

func (o AlertMethodWebhookOutput) ToAlertMethodWebhookOutputWithContext(ctx context.Context) AlertMethodWebhookOutput {
	return o
}

// Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
func (o AlertMethodWebhookOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertMethodWebhook) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// User-friendly display name of the resource.
func (o AlertMethodWebhookOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertMethodWebhook) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
func (o AlertMethodWebhookOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertMethodWebhook) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
func (o AlertMethodWebhookOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertMethodWebhook) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// Webhook message template. See documentation for template format and samples.
func (o AlertMethodWebhookOutput) Template() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AlertMethodWebhook) pulumi.StringPtrOutput { return v.Template }).(pulumi.StringPtrOutput)
}

// Webhook message fields. The message contains JSON payload with specified fields. See documentation for allowed fields.
func (o AlertMethodWebhookOutput) TemplateFields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AlertMethodWebhook) pulumi.StringArrayOutput { return v.TemplateFields }).(pulumi.StringArrayOutput)
}

// URL of the webhook endpoint.
func (o AlertMethodWebhookOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v *AlertMethodWebhook) pulumi.StringOutput { return v.Url }).(pulumi.StringOutput)
}

type AlertMethodWebhookArrayOutput struct{ *pulumi.OutputState }

func (AlertMethodWebhookArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AlertMethodWebhook)(nil)).Elem()
}

func (o AlertMethodWebhookArrayOutput) ToAlertMethodWebhookArrayOutput() AlertMethodWebhookArrayOutput {
	return o
}

func (o AlertMethodWebhookArrayOutput) ToAlertMethodWebhookArrayOutputWithContext(ctx context.Context) AlertMethodWebhookArrayOutput {
	return o
}

func (o AlertMethodWebhookArrayOutput) Index(i pulumi.IntInput) AlertMethodWebhookOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AlertMethodWebhook {
		return vs[0].([]*AlertMethodWebhook)[vs[1].(int)]
	}).(AlertMethodWebhookOutput)
}

type AlertMethodWebhookMapOutput struct{ *pulumi.OutputState }

func (AlertMethodWebhookMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AlertMethodWebhook)(nil)).Elem()
}

func (o AlertMethodWebhookMapOutput) ToAlertMethodWebhookMapOutput() AlertMethodWebhookMapOutput {
	return o
}

func (o AlertMethodWebhookMapOutput) ToAlertMethodWebhookMapOutputWithContext(ctx context.Context) AlertMethodWebhookMapOutput {
	return o
}

func (o AlertMethodWebhookMapOutput) MapIndex(k pulumi.StringInput) AlertMethodWebhookOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AlertMethodWebhook {
		return vs[0].(map[string]*AlertMethodWebhook)[vs[1].(string)]
	}).(AlertMethodWebhookOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AlertMethodWebhookInput)(nil)).Elem(), &AlertMethodWebhook{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertMethodWebhookArrayInput)(nil)).Elem(), AlertMethodWebhookArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AlertMethodWebhookMapInput)(nil)).Elem(), AlertMethodWebhookMap{})
	pulumi.RegisterOutputType(AlertMethodWebhookOutput{})
	pulumi.RegisterOutputType(AlertMethodWebhookArrayOutput{})
	pulumi.RegisterOutputType(AlertMethodWebhookMapOutput{})
}

// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package nobl9

import (
	"context"
	"reflect"

	"errors"
	"github.com/piclemx/pulumi-nobl9/sdk/go/nobl9/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DirectAzureMonitor struct {
	pulumi.CustomResourceState

	// [required] | Azure Application (client) ID.
	ClientId pulumi.StringOutput `pulumi:"clientId"`
	// [required] | Azure Application (client) Secret.
	ClientSecret pulumi.StringOutput `pulumi:"clientSecret"`
	// Optional description of the resource. Here, you can add details about who is responsible for the integration
	// (team/owner) or the purpose of creating it.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// User-friendly display name of the resource.
	DisplayName pulumi.StringPtrOutput `pulumi:"displayName"`
	// [Replay configuration documentation](https://docs.nobl9.com/replay)
	HistoricalDataRetrieval DirectAzureMonitorHistoricalDataRetrievalOutput `pulumi:"historicalDataRetrieval"`
	// [Logs documentation](https://docs.nobl9.com/Features/SLO_troubleshooting/event-logs)
	LogCollectionEnabled pulumi.BoolPtrOutput `pulumi:"logCollectionEnabled"`
	// Unique name of the resource, must conform to the naming convention from [DNS
	// RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name pulumi.StringOutput `pulumi:"name"`
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS
	// RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project pulumi.StringOutput `pulumi:"project"`
	// [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
	QueryDelay DirectAzureMonitorQueryDelayOutput `pulumi:"queryDelay"`
	// Release channel of the created datasource [stable/beta]
	ReleaseChannel pulumi.StringOutput `pulumi:"releaseChannel"`
	// This value indicated whether the field was a source of metrics and/or services. 'source_of' is deprecated and not used
	// anywhere; however, it's kept for backward compatibility.
	//
	// Deprecated: 'source_of' is deprecated and not used anywhere. You can safely remove it from your configuration file.
	SourceOfs pulumi.StringArrayOutput `pulumi:"sourceOfs"`
	// The status of the created direct.
	Status pulumi.StringOutput `pulumi:"status"`
	// [required] | Azure Tenant ID.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
}

// NewDirectAzureMonitor registers a new resource with the given unique name, arguments, and options.
func NewDirectAzureMonitor(ctx *pulumi.Context,
	name string, args *DirectAzureMonitorArgs, opts ...pulumi.ResourceOption) (*DirectAzureMonitor, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Project == nil {
		return nil, errors.New("invalid value for required argument 'Project'")
	}
	if args.TenantId == nil {
		return nil, errors.New("invalid value for required argument 'TenantId'")
	}
	if args.ClientId != nil {
		args.ClientId = pulumi.ToSecret(args.ClientId).(pulumi.StringPtrInput)
	}
	if args.ClientSecret != nil {
		args.ClientSecret = pulumi.ToSecret(args.ClientSecret).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"clientId",
		"clientSecret",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DirectAzureMonitor
	err := ctx.RegisterResource("nobl9:index/directAzureMonitor:DirectAzureMonitor", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDirectAzureMonitor gets an existing DirectAzureMonitor resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDirectAzureMonitor(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DirectAzureMonitorState, opts ...pulumi.ResourceOption) (*DirectAzureMonitor, error) {
	var resource DirectAzureMonitor
	err := ctx.ReadResource("nobl9:index/directAzureMonitor:DirectAzureMonitor", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DirectAzureMonitor resources.
type directAzureMonitorState struct {
	// [required] | Azure Application (client) ID.
	ClientId *string `pulumi:"clientId"`
	// [required] | Azure Application (client) Secret.
	ClientSecret *string `pulumi:"clientSecret"`
	// Optional description of the resource. Here, you can add details about who is responsible for the integration
	// (team/owner) or the purpose of creating it.
	Description *string `pulumi:"description"`
	// User-friendly display name of the resource.
	DisplayName *string `pulumi:"displayName"`
	// [Replay configuration documentation](https://docs.nobl9.com/replay)
	HistoricalDataRetrieval *DirectAzureMonitorHistoricalDataRetrieval `pulumi:"historicalDataRetrieval"`
	// [Logs documentation](https://docs.nobl9.com/Features/SLO_troubleshooting/event-logs)
	LogCollectionEnabled *bool `pulumi:"logCollectionEnabled"`
	// Unique name of the resource, must conform to the naming convention from [DNS
	// RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name *string `pulumi:"name"`
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS
	// RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project *string `pulumi:"project"`
	// [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
	QueryDelay *DirectAzureMonitorQueryDelay `pulumi:"queryDelay"`
	// Release channel of the created datasource [stable/beta]
	ReleaseChannel *string `pulumi:"releaseChannel"`
	// This value indicated whether the field was a source of metrics and/or services. 'source_of' is deprecated and not used
	// anywhere; however, it's kept for backward compatibility.
	//
	// Deprecated: 'source_of' is deprecated and not used anywhere. You can safely remove it from your configuration file.
	SourceOfs []string `pulumi:"sourceOfs"`
	// The status of the created direct.
	Status *string `pulumi:"status"`
	// [required] | Azure Tenant ID.
	TenantId *string `pulumi:"tenantId"`
}

type DirectAzureMonitorState struct {
	// [required] | Azure Application (client) ID.
	ClientId pulumi.StringPtrInput
	// [required] | Azure Application (client) Secret.
	ClientSecret pulumi.StringPtrInput
	// Optional description of the resource. Here, you can add details about who is responsible for the integration
	// (team/owner) or the purpose of creating it.
	Description pulumi.StringPtrInput
	// User-friendly display name of the resource.
	DisplayName pulumi.StringPtrInput
	// [Replay configuration documentation](https://docs.nobl9.com/replay)
	HistoricalDataRetrieval DirectAzureMonitorHistoricalDataRetrievalPtrInput
	// [Logs documentation](https://docs.nobl9.com/Features/SLO_troubleshooting/event-logs)
	LogCollectionEnabled pulumi.BoolPtrInput
	// Unique name of the resource, must conform to the naming convention from [DNS
	// RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name pulumi.StringPtrInput
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS
	// RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project pulumi.StringPtrInput
	// [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
	QueryDelay DirectAzureMonitorQueryDelayPtrInput
	// Release channel of the created datasource [stable/beta]
	ReleaseChannel pulumi.StringPtrInput
	// This value indicated whether the field was a source of metrics and/or services. 'source_of' is deprecated and not used
	// anywhere; however, it's kept for backward compatibility.
	//
	// Deprecated: 'source_of' is deprecated and not used anywhere. You can safely remove it from your configuration file.
	SourceOfs pulumi.StringArrayInput
	// The status of the created direct.
	Status pulumi.StringPtrInput
	// [required] | Azure Tenant ID.
	TenantId pulumi.StringPtrInput
}

func (DirectAzureMonitorState) ElementType() reflect.Type {
	return reflect.TypeOf((*directAzureMonitorState)(nil)).Elem()
}

type directAzureMonitorArgs struct {
	// [required] | Azure Application (client) ID.
	ClientId *string `pulumi:"clientId"`
	// [required] | Azure Application (client) Secret.
	ClientSecret *string `pulumi:"clientSecret"`
	// Optional description of the resource. Here, you can add details about who is responsible for the integration
	// (team/owner) or the purpose of creating it.
	Description *string `pulumi:"description"`
	// User-friendly display name of the resource.
	DisplayName *string `pulumi:"displayName"`
	// [Replay configuration documentation](https://docs.nobl9.com/replay)
	HistoricalDataRetrieval *DirectAzureMonitorHistoricalDataRetrieval `pulumi:"historicalDataRetrieval"`
	// [Logs documentation](https://docs.nobl9.com/Features/SLO_troubleshooting/event-logs)
	LogCollectionEnabled *bool `pulumi:"logCollectionEnabled"`
	// Unique name of the resource, must conform to the naming convention from [DNS
	// RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name *string `pulumi:"name"`
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS
	// RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project string `pulumi:"project"`
	// [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
	QueryDelay *DirectAzureMonitorQueryDelay `pulumi:"queryDelay"`
	// Release channel of the created datasource [stable/beta]
	ReleaseChannel *string `pulumi:"releaseChannel"`
	// This value indicated whether the field was a source of metrics and/or services. 'source_of' is deprecated and not used
	// anywhere; however, it's kept for backward compatibility.
	//
	// Deprecated: 'source_of' is deprecated and not used anywhere. You can safely remove it from your configuration file.
	SourceOfs []string `pulumi:"sourceOfs"`
	// [required] | Azure Tenant ID.
	TenantId string `pulumi:"tenantId"`
}

// The set of arguments for constructing a DirectAzureMonitor resource.
type DirectAzureMonitorArgs struct {
	// [required] | Azure Application (client) ID.
	ClientId pulumi.StringPtrInput
	// [required] | Azure Application (client) Secret.
	ClientSecret pulumi.StringPtrInput
	// Optional description of the resource. Here, you can add details about who is responsible for the integration
	// (team/owner) or the purpose of creating it.
	Description pulumi.StringPtrInput
	// User-friendly display name of the resource.
	DisplayName pulumi.StringPtrInput
	// [Replay configuration documentation](https://docs.nobl9.com/replay)
	HistoricalDataRetrieval DirectAzureMonitorHistoricalDataRetrievalPtrInput
	// [Logs documentation](https://docs.nobl9.com/Features/SLO_troubleshooting/event-logs)
	LogCollectionEnabled pulumi.BoolPtrInput
	// Unique name of the resource, must conform to the naming convention from [DNS
	// RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Name pulumi.StringPtrInput
	// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS
	// RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
	Project pulumi.StringInput
	// [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
	QueryDelay DirectAzureMonitorQueryDelayPtrInput
	// Release channel of the created datasource [stable/beta]
	ReleaseChannel pulumi.StringPtrInput
	// This value indicated whether the field was a source of metrics and/or services. 'source_of' is deprecated and not used
	// anywhere; however, it's kept for backward compatibility.
	//
	// Deprecated: 'source_of' is deprecated and not used anywhere. You can safely remove it from your configuration file.
	SourceOfs pulumi.StringArrayInput
	// [required] | Azure Tenant ID.
	TenantId pulumi.StringInput
}

func (DirectAzureMonitorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*directAzureMonitorArgs)(nil)).Elem()
}

type DirectAzureMonitorInput interface {
	pulumi.Input

	ToDirectAzureMonitorOutput() DirectAzureMonitorOutput
	ToDirectAzureMonitorOutputWithContext(ctx context.Context) DirectAzureMonitorOutput
}

func (*DirectAzureMonitor) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectAzureMonitor)(nil)).Elem()
}

func (i *DirectAzureMonitor) ToDirectAzureMonitorOutput() DirectAzureMonitorOutput {
	return i.ToDirectAzureMonitorOutputWithContext(context.Background())
}

func (i *DirectAzureMonitor) ToDirectAzureMonitorOutputWithContext(ctx context.Context) DirectAzureMonitorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectAzureMonitorOutput)
}

// DirectAzureMonitorArrayInput is an input type that accepts DirectAzureMonitorArray and DirectAzureMonitorArrayOutput values.
// You can construct a concrete instance of `DirectAzureMonitorArrayInput` via:
//
//	DirectAzureMonitorArray{ DirectAzureMonitorArgs{...} }
type DirectAzureMonitorArrayInput interface {
	pulumi.Input

	ToDirectAzureMonitorArrayOutput() DirectAzureMonitorArrayOutput
	ToDirectAzureMonitorArrayOutputWithContext(context.Context) DirectAzureMonitorArrayOutput
}

type DirectAzureMonitorArray []DirectAzureMonitorInput

func (DirectAzureMonitorArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DirectAzureMonitor)(nil)).Elem()
}

func (i DirectAzureMonitorArray) ToDirectAzureMonitorArrayOutput() DirectAzureMonitorArrayOutput {
	return i.ToDirectAzureMonitorArrayOutputWithContext(context.Background())
}

func (i DirectAzureMonitorArray) ToDirectAzureMonitorArrayOutputWithContext(ctx context.Context) DirectAzureMonitorArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectAzureMonitorArrayOutput)
}

// DirectAzureMonitorMapInput is an input type that accepts DirectAzureMonitorMap and DirectAzureMonitorMapOutput values.
// You can construct a concrete instance of `DirectAzureMonitorMapInput` via:
//
//	DirectAzureMonitorMap{ "key": DirectAzureMonitorArgs{...} }
type DirectAzureMonitorMapInput interface {
	pulumi.Input

	ToDirectAzureMonitorMapOutput() DirectAzureMonitorMapOutput
	ToDirectAzureMonitorMapOutputWithContext(context.Context) DirectAzureMonitorMapOutput
}

type DirectAzureMonitorMap map[string]DirectAzureMonitorInput

func (DirectAzureMonitorMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DirectAzureMonitor)(nil)).Elem()
}

func (i DirectAzureMonitorMap) ToDirectAzureMonitorMapOutput() DirectAzureMonitorMapOutput {
	return i.ToDirectAzureMonitorMapOutputWithContext(context.Background())
}

func (i DirectAzureMonitorMap) ToDirectAzureMonitorMapOutputWithContext(ctx context.Context) DirectAzureMonitorMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DirectAzureMonitorMapOutput)
}

type DirectAzureMonitorOutput struct{ *pulumi.OutputState }

func (DirectAzureMonitorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DirectAzureMonitor)(nil)).Elem()
}

func (o DirectAzureMonitorOutput) ToDirectAzureMonitorOutput() DirectAzureMonitorOutput {
	return o
}

func (o DirectAzureMonitorOutput) ToDirectAzureMonitorOutputWithContext(ctx context.Context) DirectAzureMonitorOutput {
	return o
}

// [required] | Azure Application (client) ID.
func (o DirectAzureMonitorOutput) ClientId() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectAzureMonitor) pulumi.StringOutput { return v.ClientId }).(pulumi.StringOutput)
}

// [required] | Azure Application (client) Secret.
func (o DirectAzureMonitorOutput) ClientSecret() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectAzureMonitor) pulumi.StringOutput { return v.ClientSecret }).(pulumi.StringOutput)
}

// Optional description of the resource. Here, you can add details about who is responsible for the integration
// (team/owner) or the purpose of creating it.
func (o DirectAzureMonitorOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectAzureMonitor) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// User-friendly display name of the resource.
func (o DirectAzureMonitorOutput) DisplayName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DirectAzureMonitor) pulumi.StringPtrOutput { return v.DisplayName }).(pulumi.StringPtrOutput)
}

// [Replay configuration documentation](https://docs.nobl9.com/replay)
func (o DirectAzureMonitorOutput) HistoricalDataRetrieval() DirectAzureMonitorHistoricalDataRetrievalOutput {
	return o.ApplyT(func(v *DirectAzureMonitor) DirectAzureMonitorHistoricalDataRetrievalOutput {
		return v.HistoricalDataRetrieval
	}).(DirectAzureMonitorHistoricalDataRetrievalOutput)
}

// [Logs documentation](https://docs.nobl9.com/Features/SLO_troubleshooting/event-logs)
func (o DirectAzureMonitorOutput) LogCollectionEnabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DirectAzureMonitor) pulumi.BoolPtrOutput { return v.LogCollectionEnabled }).(pulumi.BoolPtrOutput)
}

// Unique name of the resource, must conform to the naming convention from [DNS
// RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
func (o DirectAzureMonitorOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectAzureMonitor) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS
// RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
func (o DirectAzureMonitorOutput) Project() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectAzureMonitor) pulumi.StringOutput { return v.Project }).(pulumi.StringOutput)
}

// [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
func (o DirectAzureMonitorOutput) QueryDelay() DirectAzureMonitorQueryDelayOutput {
	return o.ApplyT(func(v *DirectAzureMonitor) DirectAzureMonitorQueryDelayOutput { return v.QueryDelay }).(DirectAzureMonitorQueryDelayOutput)
}

// Release channel of the created datasource [stable/beta]
func (o DirectAzureMonitorOutput) ReleaseChannel() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectAzureMonitor) pulumi.StringOutput { return v.ReleaseChannel }).(pulumi.StringOutput)
}

// This value indicated whether the field was a source of metrics and/or services. 'source_of' is deprecated and not used
// anywhere; however, it's kept for backward compatibility.
//
// Deprecated: 'source_of' is deprecated and not used anywhere. You can safely remove it from your configuration file.
func (o DirectAzureMonitorOutput) SourceOfs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DirectAzureMonitor) pulumi.StringArrayOutput { return v.SourceOfs }).(pulumi.StringArrayOutput)
}

// The status of the created direct.
func (o DirectAzureMonitorOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectAzureMonitor) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// [required] | Azure Tenant ID.
func (o DirectAzureMonitorOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *DirectAzureMonitor) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

type DirectAzureMonitorArrayOutput struct{ *pulumi.OutputState }

func (DirectAzureMonitorArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DirectAzureMonitor)(nil)).Elem()
}

func (o DirectAzureMonitorArrayOutput) ToDirectAzureMonitorArrayOutput() DirectAzureMonitorArrayOutput {
	return o
}

func (o DirectAzureMonitorArrayOutput) ToDirectAzureMonitorArrayOutputWithContext(ctx context.Context) DirectAzureMonitorArrayOutput {
	return o
}

func (o DirectAzureMonitorArrayOutput) Index(i pulumi.IntInput) DirectAzureMonitorOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DirectAzureMonitor {
		return vs[0].([]*DirectAzureMonitor)[vs[1].(int)]
	}).(DirectAzureMonitorOutput)
}

type DirectAzureMonitorMapOutput struct{ *pulumi.OutputState }

func (DirectAzureMonitorMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DirectAzureMonitor)(nil)).Elem()
}

func (o DirectAzureMonitorMapOutput) ToDirectAzureMonitorMapOutput() DirectAzureMonitorMapOutput {
	return o
}

func (o DirectAzureMonitorMapOutput) ToDirectAzureMonitorMapOutputWithContext(ctx context.Context) DirectAzureMonitorMapOutput {
	return o
}

func (o DirectAzureMonitorMapOutput) MapIndex(k pulumi.StringInput) DirectAzureMonitorOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DirectAzureMonitor {
		return vs[0].(map[string]*DirectAzureMonitor)[vs[1].(string)]
	}).(DirectAzureMonitorOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DirectAzureMonitorInput)(nil)).Elem(), &DirectAzureMonitor{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectAzureMonitorArrayInput)(nil)).Elem(), DirectAzureMonitorArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DirectAzureMonitorMapInput)(nil)).Elem(), DirectAzureMonitorMap{})
	pulumi.RegisterOutputType(DirectAzureMonitorOutput{})
	pulumi.RegisterOutputType(DirectAzureMonitorArrayOutput{})
	pulumi.RegisterOutputType(DirectAzureMonitorMapOutput{})
}

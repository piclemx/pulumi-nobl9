// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Lightstep is an observability platform that enables distributed tracing, that can be used to rapidly pinpoint the causes of failures and poor performance across the deeply complex dependencies among services, teams, and workloads in modern production systems. Nobl9 integration with Lightstep enables organizations to establish service level objectives from performance data captured through distributed traces in the Lightstep platform. Nobl9 connects with Lightstep to collect SLI measurements and compare them to SLO targets.
 *
 * For more information, refer to [Lightstep Direct | Nobl9 Documentation](https://docs.nobl9.com/Sources/lightstep#lightstep-direct).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nobl9 from "@pulumi/nobl9";
 *
 * const test_lightstep = new nobl9.DirectLightstep("test-lightstep", {
 *     appToken: "secret",
 *     description: "desc",
 *     historicalDataRetrieval: {
 *         defaultDurations: [{
 *             unit: "Day",
 *             value: 0,
 *         }],
 *         maxDurations: [{
 *             unit: "Day",
 *             value: 30,
 *         }],
 *     },
 *     lightstepOrganization: "acme",
 *     lightstepProject: "project1",
 *     project: "terraform",
 *     sourceOfs: [
 *         "Metrics",
 *         "Services",
 *     ],
 * });
 * ```
 * ## Nobl9 Official Documentation
 *
 * https://docs.nobl9.com/
 */
export class DirectLightstep extends pulumi.CustomResource {
    /**
     * Get an existing DirectLightstep resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DirectLightstepState, opts?: pulumi.CustomResourceOptions): DirectLightstep {
        return new DirectLightstep(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nobl9:index/directLightstep:DirectLightstep';

    /**
     * Returns true if the given object is an instance of DirectLightstep.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DirectLightstep {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DirectLightstep.__pulumiType;
    }

    /**
     * [required] | Lightstep App Token.
     */
    public readonly appToken!: pulumi.Output<string>;
    /**
     * Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * User-friendly display name of the resource.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * [Replay configuration documentation](https://docs.nobl9.com/replay)
     */
    public readonly historicalDataRetrieval!: pulumi.Output<outputs.DirectLightstepHistoricalDataRetrieval | undefined>;
    /**
     * Organization name registered in Lightstep.
     */
    public readonly lightstepOrganization!: pulumi.Output<string>;
    /**
     * Name of the Lightstep project.
     */
    public readonly lightstepProject!: pulumi.Output<string>;
    /**
     * Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
     */
    public readonly queryDelay!: pulumi.Output<outputs.DirectLightstepQueryDelay | undefined>;
    /**
     * Source of Metrics and/or Services.
     */
    public readonly sourceOfs!: pulumi.Output<string[]>;
    /**
     * The status of the created direct.
     */
    public /*out*/ readonly status!: pulumi.Output<string>;

    /**
     * Create a DirectLightstep resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DirectLightstepArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DirectLightstepArgs | DirectLightstepState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DirectLightstepState | undefined;
            resourceInputs["appToken"] = state ? state.appToken : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["historicalDataRetrieval"] = state ? state.historicalDataRetrieval : undefined;
            resourceInputs["lightstepOrganization"] = state ? state.lightstepOrganization : undefined;
            resourceInputs["lightstepProject"] = state ? state.lightstepProject : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["queryDelay"] = state ? state.queryDelay : undefined;
            resourceInputs["sourceOfs"] = state ? state.sourceOfs : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
        } else {
            const args = argsOrState as DirectLightstepArgs | undefined;
            if ((!args || args.lightstepOrganization === undefined) && !opts.urn) {
                throw new Error("Missing required property 'lightstepOrganization'");
            }
            if ((!args || args.lightstepProject === undefined) && !opts.urn) {
                throw new Error("Missing required property 'lightstepProject'");
            }
            if ((!args || args.project === undefined) && !opts.urn) {
                throw new Error("Missing required property 'project'");
            }
            if ((!args || args.sourceOfs === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sourceOfs'");
            }
            resourceInputs["appToken"] = args ? args.appToken : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["historicalDataRetrieval"] = args ? args.historicalDataRetrieval : undefined;
            resourceInputs["lightstepOrganization"] = args ? args.lightstepOrganization : undefined;
            resourceInputs["lightstepProject"] = args ? args.lightstepProject : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["queryDelay"] = args ? args.queryDelay : undefined;
            resourceInputs["sourceOfs"] = args ? args.sourceOfs : undefined;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DirectLightstep.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DirectLightstep resources.
 */
export interface DirectLightstepState {
    /**
     * [required] | Lightstep App Token.
     */
    appToken?: pulumi.Input<string>;
    /**
     * Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
     */
    description?: pulumi.Input<string>;
    /**
     * User-friendly display name of the resource.
     */
    displayName?: pulumi.Input<string>;
    /**
     * [Replay configuration documentation](https://docs.nobl9.com/replay)
     */
    historicalDataRetrieval?: pulumi.Input<inputs.DirectLightstepHistoricalDataRetrieval>;
    /**
     * Organization name registered in Lightstep.
     */
    lightstepOrganization?: pulumi.Input<string>;
    /**
     * Name of the Lightstep project.
     */
    lightstepProject?: pulumi.Input<string>;
    /**
     * Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
     */
    name?: pulumi.Input<string>;
    /**
     * Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
     */
    project?: pulumi.Input<string>;
    /**
     * [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
     */
    queryDelay?: pulumi.Input<inputs.DirectLightstepQueryDelay>;
    /**
     * Source of Metrics and/or Services.
     */
    sourceOfs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The status of the created direct.
     */
    status?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DirectLightstep resource.
 */
export interface DirectLightstepArgs {
    /**
     * [required] | Lightstep App Token.
     */
    appToken?: pulumi.Input<string>;
    /**
     * Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
     */
    description?: pulumi.Input<string>;
    /**
     * User-friendly display name of the resource.
     */
    displayName?: pulumi.Input<string>;
    /**
     * [Replay configuration documentation](https://docs.nobl9.com/replay)
     */
    historicalDataRetrieval?: pulumi.Input<inputs.DirectLightstepHistoricalDataRetrieval>;
    /**
     * Organization name registered in Lightstep.
     */
    lightstepOrganization: pulumi.Input<string>;
    /**
     * Name of the Lightstep project.
     */
    lightstepProject: pulumi.Input<string>;
    /**
     * Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
     */
    name?: pulumi.Input<string>;
    /**
     * Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
     */
    project: pulumi.Input<string>;
    /**
     * [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
     */
    queryDelay?: pulumi.Input<inputs.DirectLightstepQueryDelay>;
    /**
     * Source of Metrics and/or Services.
     */
    sourceOfs: pulumi.Input<pulumi.Input<string>[]>;
}

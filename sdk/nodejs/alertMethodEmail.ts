// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class AlertMethodEmail extends pulumi.CustomResource {
    /**
     * Get an existing AlertMethodEmail resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AlertMethodEmailState, opts?: pulumi.CustomResourceOptions): AlertMethodEmail {
        return new AlertMethodEmail(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nobl9:index/alertMethodEmail:AlertMethodEmail';

    /**
     * Returns true if the given object is an instance of AlertMethodEmail.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AlertMethodEmail {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AlertMethodEmail.__pulumiType;
    }

    /**
     * Blind carbon copy recipients. The maximum number of recipients is 10.
     */
    public readonly bccs!: pulumi.Output<string[] | undefined>;
    /**
     * The Body of the email alert. For the format of the body and the list of variables that you can define, refer to the [Nobl9 documentation](https://docs.nobl9.com/Alerting/Alert_methods/email-alert#yaml-configuration).
     */
    public readonly body!: pulumi.Output<string>;
    /**
     * Carbon copy recipients. The maximum number of recipients is 10.
     */
    public readonly ccs!: pulumi.Output<string[] | undefined>;
    /**
     * Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * User-friendly display name of the resource.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * The Subject of the email alert.
     */
    public readonly subject!: pulumi.Output<string>;
    /**
     * Recipients. The maximum number of recipients is 10.
     */
    public readonly tos!: pulumi.Output<string[]>;

    /**
     * Create a AlertMethodEmail resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AlertMethodEmailArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AlertMethodEmailArgs | AlertMethodEmailState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AlertMethodEmailState | undefined;
            resourceInputs["bccs"] = state ? state.bccs : undefined;
            resourceInputs["body"] = state ? state.body : undefined;
            resourceInputs["ccs"] = state ? state.ccs : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["subject"] = state ? state.subject : undefined;
            resourceInputs["tos"] = state ? state.tos : undefined;
        } else {
            const args = argsOrState as AlertMethodEmailArgs | undefined;
            if ((!args || args.body === undefined) && !opts.urn) {
                throw new Error("Missing required property 'body'");
            }
            if ((!args || args.project === undefined) && !opts.urn) {
                throw new Error("Missing required property 'project'");
            }
            if ((!args || args.subject === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subject'");
            }
            if ((!args || args.tos === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tos'");
            }
            resourceInputs["bccs"] = args ? args.bccs : undefined;
            resourceInputs["body"] = args ? args.body : undefined;
            resourceInputs["ccs"] = args ? args.ccs : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["subject"] = args ? args.subject : undefined;
            resourceInputs["tos"] = args ? args.tos : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AlertMethodEmail.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AlertMethodEmail resources.
 */
export interface AlertMethodEmailState {
    /**
     * Blind carbon copy recipients. The maximum number of recipients is 10.
     */
    bccs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Body of the email alert. For the format of the body and the list of variables that you can define, refer to the [Nobl9 documentation](https://docs.nobl9.com/Alerting/Alert_methods/email-alert#yaml-configuration).
     */
    body?: pulumi.Input<string>;
    /**
     * Carbon copy recipients. The maximum number of recipients is 10.
     */
    ccs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
     */
    description?: pulumi.Input<string>;
    /**
     * User-friendly display name of the resource.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
     */
    name?: pulumi.Input<string>;
    /**
     * Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
     */
    project?: pulumi.Input<string>;
    /**
     * The Subject of the email alert.
     */
    subject?: pulumi.Input<string>;
    /**
     * Recipients. The maximum number of recipients is 10.
     */
    tos?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a AlertMethodEmail resource.
 */
export interface AlertMethodEmailArgs {
    /**
     * Blind carbon copy recipients. The maximum number of recipients is 10.
     */
    bccs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Body of the email alert. For the format of the body and the list of variables that you can define, refer to the [Nobl9 documentation](https://docs.nobl9.com/Alerting/Alert_methods/email-alert#yaml-configuration).
     */
    body: pulumi.Input<string>;
    /**
     * Carbon copy recipients. The maximum number of recipients is 10.
     */
    ccs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
     */
    description?: pulumi.Input<string>;
    /**
     * User-friendly display name of the resource.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
     */
    name?: pulumi.Input<string>;
    /**
     * Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
     */
    project: pulumi.Input<string>;
    /**
     * The Subject of the email alert.
     */
    subject: pulumi.Input<string>;
    /**
     * Recipients. The maximum number of recipients is 10.
     */
    tos: pulumi.Input<pulumi.Input<string>[]>;
}

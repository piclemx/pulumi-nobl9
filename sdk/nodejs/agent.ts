// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * The Agent is a lightweight application that executes the queries defined for your Nobl9 SLOs. Queries are written in the language supported by the data source in question and executed via native APIs.
 *
 * The Agent then sends your SLI metrics back to Nobl9 for processing and error budget calculation.
 *
 * For more information, refer to [Agent configuration | Nobl9 Documentation](https://docs.nobl9.com/nobl9_agent)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as nobl9 from "@pulumi/nobl9";
 *
 * const thisProject = new nobl9.Project("thisProject", {
 *     displayName: "Test N9 Terraform",
 *     description: "An example N9 Terraform project",
 * });
 * const thisAgent = new nobl9.Agent("thisAgent", {
 *     project: thisProject.name,
 *     sourceOfs: [
 *         "Metrics",
 *         "Services",
 *     ],
 *     agentType: "prometheus",
 *     prometheusConfig: {
 *         url: "http://web.net",
 *     },
 * });
 * ```
 * ## Nobl9 Official Documentation
 *
 * https://docs.nobl9.com/
 */
export class Agent extends pulumi.CustomResource {
    /**
     * Get an existing Agent resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AgentState, opts?: pulumi.CustomResourceOptions): Agent {
        return new Agent(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'nobl9:index/agent:Agent';

    /**
     * Returns true if the given object is an instance of Agent.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Agent {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Agent.__pulumiType;
    }

    /**
     * The type of the Agent. Check [Supported Agent types | Nobl9 Documentation](https://docs.nobl9.com/Sources/)
     */
    public readonly agentType!: pulumi.Output<string>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Prometheus/#ams-prometheus-agent)
     */
    public readonly amazonPrometheusConfig!: pulumi.Output<outputs.AgentAmazonPrometheusConfig | undefined>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/appdynamics#appdynamics-agent)
     */
    public readonly appdynamicsConfig!: pulumi.Output<outputs.AgentAppdynamicsConfig | undefined>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/bigquery#bigquery-agent)
     */
    public readonly bigqueryConfig!: pulumi.Output<outputs.AgentBigqueryConfig | undefined>;
    /**
     * client_id of created agent.
     */
    public /*out*/ readonly clientId!: pulumi.Output<string>;
    /**
     * client_secret of created agent.
     */
    public /*out*/ readonly clientSecret!: pulumi.Output<string>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_CloudWatch/#cloudwatch-agent)
     */
    public readonly cloudwatchConfig!: pulumi.Output<outputs.AgentCloudwatchConfig | undefined>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/datadog#datadog-agent)
     */
    public readonly datadogConfig!: pulumi.Output<outputs.AgentDatadogConfig | undefined>;
    /**
     * Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * User-friendly display name of the resource.
     */
    public readonly displayName!: pulumi.Output<string | undefined>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/dynatrace#dynatrace-agent)
     */
    public readonly dynatraceConfig!: pulumi.Output<outputs.AgentDynatraceConfig | undefined>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/elasticsearch#elasticsearch-agent)
     */
    public readonly elasticsearchConfig!: pulumi.Output<outputs.AgentElasticsearchConfig | undefined>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/google-cloud-monitoring#google-cloud-monitoring-agent)
     */
    public readonly gcmConfig!: pulumi.Output<outputs.AgentGcmConfig | undefined>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/grafana-loki#grafana-loki-agent)
     */
    public readonly grafanaLokiConfig!: pulumi.Output<outputs.AgentGrafanaLokiConfig | undefined>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/graphite#graphite-agent)
     */
    public readonly graphiteConfig!: pulumi.Output<outputs.AgentGraphiteConfig | undefined>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/influxdb#influxdb-agent)
     */
    public readonly influxdbConfig!: pulumi.Output<outputs.AgentInfluxdbConfig | undefined>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/instana#instana-agent)
     */
    public readonly instanaConfig!: pulumi.Output<outputs.AgentInstanaConfig | undefined>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/lightstep#lightstep-agent)
     */
    public readonly lightstepConfig!: pulumi.Output<outputs.AgentLightstepConfig | undefined>;
    /**
     * Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/new-relic#new-relic-agent)
     */
    public readonly newrelicConfig!: pulumi.Output<outputs.AgentNewrelicConfig | undefined>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/opentsdb#opentsdb-agent)
     */
    public readonly opentsdbConfig!: pulumi.Output<outputs.AgentOpentsdbConfig | undefined>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/pingdom#pingdom-agent)
     */
    public readonly pingdomConfig!: pulumi.Output<outputs.AgentPingdomConfig | undefined>;
    /**
     * Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
     */
    public readonly project!: pulumi.Output<string>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/prometheus#prometheus-agent)
     */
    public readonly prometheusConfig!: pulumi.Output<outputs.AgentPrometheusConfig | undefined>;
    /**
     * [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
     */
    public readonly queryDelay!: pulumi.Output<outputs.AgentQueryDelay | undefined>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Redshift/?_highlight=redshift#amazon-redshift-agent)
     */
    public readonly redshiftConfig!: pulumi.Output<outputs.AgentRedshiftConfig | undefined>;
    /**
     * Source of Metrics and/or Services.
     */
    public readonly sourceOfs!: pulumi.Output<string[]>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/splunk#splunk-agent)
     */
    public readonly splunkConfig!: pulumi.Output<outputs.AgentSplunkConfig | undefined>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/splunk-observability/#splunk-observability-agent)
     */
    public readonly splunkObservabilityConfig!: pulumi.Output<outputs.AgentSplunkObservabilityConfig | undefined>;
    /**
     * Status of the created agent.
     */
    public /*out*/ readonly status!: pulumi.Output<{[key: string]: any}>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/sumo-logic#sumo-logic-agent)
     */
    public readonly sumologicConfig!: pulumi.Output<outputs.AgentSumologicConfig | undefined>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/thousandeyes#thousandeyes-agent)
     */
    public readonly thousandeyesConfig!: pulumi.Output<outputs.AgentThousandeyesConfig | undefined>;

    /**
     * Create a Agent resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AgentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AgentArgs | AgentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AgentState | undefined;
            resourceInputs["agentType"] = state ? state.agentType : undefined;
            resourceInputs["amazonPrometheusConfig"] = state ? state.amazonPrometheusConfig : undefined;
            resourceInputs["appdynamicsConfig"] = state ? state.appdynamicsConfig : undefined;
            resourceInputs["bigqueryConfig"] = state ? state.bigqueryConfig : undefined;
            resourceInputs["clientId"] = state ? state.clientId : undefined;
            resourceInputs["clientSecret"] = state ? state.clientSecret : undefined;
            resourceInputs["cloudwatchConfig"] = state ? state.cloudwatchConfig : undefined;
            resourceInputs["datadogConfig"] = state ? state.datadogConfig : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["dynatraceConfig"] = state ? state.dynatraceConfig : undefined;
            resourceInputs["elasticsearchConfig"] = state ? state.elasticsearchConfig : undefined;
            resourceInputs["gcmConfig"] = state ? state.gcmConfig : undefined;
            resourceInputs["grafanaLokiConfig"] = state ? state.grafanaLokiConfig : undefined;
            resourceInputs["graphiteConfig"] = state ? state.graphiteConfig : undefined;
            resourceInputs["influxdbConfig"] = state ? state.influxdbConfig : undefined;
            resourceInputs["instanaConfig"] = state ? state.instanaConfig : undefined;
            resourceInputs["lightstepConfig"] = state ? state.lightstepConfig : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["newrelicConfig"] = state ? state.newrelicConfig : undefined;
            resourceInputs["opentsdbConfig"] = state ? state.opentsdbConfig : undefined;
            resourceInputs["pingdomConfig"] = state ? state.pingdomConfig : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["prometheusConfig"] = state ? state.prometheusConfig : undefined;
            resourceInputs["queryDelay"] = state ? state.queryDelay : undefined;
            resourceInputs["redshiftConfig"] = state ? state.redshiftConfig : undefined;
            resourceInputs["sourceOfs"] = state ? state.sourceOfs : undefined;
            resourceInputs["splunkConfig"] = state ? state.splunkConfig : undefined;
            resourceInputs["splunkObservabilityConfig"] = state ? state.splunkObservabilityConfig : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["sumologicConfig"] = state ? state.sumologicConfig : undefined;
            resourceInputs["thousandeyesConfig"] = state ? state.thousandeyesConfig : undefined;
        } else {
            const args = argsOrState as AgentArgs | undefined;
            if ((!args || args.agentType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'agentType'");
            }
            if ((!args || args.project === undefined) && !opts.urn) {
                throw new Error("Missing required property 'project'");
            }
            if ((!args || args.sourceOfs === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sourceOfs'");
            }
            resourceInputs["agentType"] = args ? args.agentType : undefined;
            resourceInputs["amazonPrometheusConfig"] = args ? args.amazonPrometheusConfig : undefined;
            resourceInputs["appdynamicsConfig"] = args ? args.appdynamicsConfig : undefined;
            resourceInputs["bigqueryConfig"] = args ? args.bigqueryConfig : undefined;
            resourceInputs["cloudwatchConfig"] = args ? args.cloudwatchConfig : undefined;
            resourceInputs["datadogConfig"] = args ? args.datadogConfig : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["dynatraceConfig"] = args ? args.dynatraceConfig : undefined;
            resourceInputs["elasticsearchConfig"] = args ? args.elasticsearchConfig : undefined;
            resourceInputs["gcmConfig"] = args ? args.gcmConfig : undefined;
            resourceInputs["grafanaLokiConfig"] = args ? args.grafanaLokiConfig : undefined;
            resourceInputs["graphiteConfig"] = args ? args.graphiteConfig : undefined;
            resourceInputs["influxdbConfig"] = args ? args.influxdbConfig : undefined;
            resourceInputs["instanaConfig"] = args ? args.instanaConfig : undefined;
            resourceInputs["lightstepConfig"] = args ? args.lightstepConfig : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["newrelicConfig"] = args ? args.newrelicConfig : undefined;
            resourceInputs["opentsdbConfig"] = args ? args.opentsdbConfig : undefined;
            resourceInputs["pingdomConfig"] = args ? args.pingdomConfig : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["prometheusConfig"] = args ? args.prometheusConfig : undefined;
            resourceInputs["queryDelay"] = args ? args.queryDelay : undefined;
            resourceInputs["redshiftConfig"] = args ? args.redshiftConfig : undefined;
            resourceInputs["sourceOfs"] = args ? args.sourceOfs : undefined;
            resourceInputs["splunkConfig"] = args ? args.splunkConfig : undefined;
            resourceInputs["splunkObservabilityConfig"] = args ? args.splunkObservabilityConfig : undefined;
            resourceInputs["sumologicConfig"] = args ? args.sumologicConfig : undefined;
            resourceInputs["thousandeyesConfig"] = args ? args.thousandeyesConfig : undefined;
            resourceInputs["clientId"] = undefined /*out*/;
            resourceInputs["clientSecret"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Agent.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Agent resources.
 */
export interface AgentState {
    /**
     * The type of the Agent. Check [Supported Agent types | Nobl9 Documentation](https://docs.nobl9.com/Sources/)
     */
    agentType?: pulumi.Input<string>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Prometheus/#ams-prometheus-agent)
     */
    amazonPrometheusConfig?: pulumi.Input<inputs.AgentAmazonPrometheusConfig>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/appdynamics#appdynamics-agent)
     */
    appdynamicsConfig?: pulumi.Input<inputs.AgentAppdynamicsConfig>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/bigquery#bigquery-agent)
     */
    bigqueryConfig?: pulumi.Input<inputs.AgentBigqueryConfig>;
    /**
     * client_id of created agent.
     */
    clientId?: pulumi.Input<string>;
    /**
     * client_secret of created agent.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_CloudWatch/#cloudwatch-agent)
     */
    cloudwatchConfig?: pulumi.Input<inputs.AgentCloudwatchConfig>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/datadog#datadog-agent)
     */
    datadogConfig?: pulumi.Input<inputs.AgentDatadogConfig>;
    /**
     * Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
     */
    description?: pulumi.Input<string>;
    /**
     * User-friendly display name of the resource.
     */
    displayName?: pulumi.Input<string>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/dynatrace#dynatrace-agent)
     */
    dynatraceConfig?: pulumi.Input<inputs.AgentDynatraceConfig>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/elasticsearch#elasticsearch-agent)
     */
    elasticsearchConfig?: pulumi.Input<inputs.AgentElasticsearchConfig>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/google-cloud-monitoring#google-cloud-monitoring-agent)
     */
    gcmConfig?: pulumi.Input<inputs.AgentGcmConfig>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/grafana-loki#grafana-loki-agent)
     */
    grafanaLokiConfig?: pulumi.Input<inputs.AgentGrafanaLokiConfig>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/graphite#graphite-agent)
     */
    graphiteConfig?: pulumi.Input<inputs.AgentGraphiteConfig>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/influxdb#influxdb-agent)
     */
    influxdbConfig?: pulumi.Input<inputs.AgentInfluxdbConfig>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/instana#instana-agent)
     */
    instanaConfig?: pulumi.Input<inputs.AgentInstanaConfig>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/lightstep#lightstep-agent)
     */
    lightstepConfig?: pulumi.Input<inputs.AgentLightstepConfig>;
    /**
     * Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
     */
    name?: pulumi.Input<string>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/new-relic#new-relic-agent)
     */
    newrelicConfig?: pulumi.Input<inputs.AgentNewrelicConfig>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/opentsdb#opentsdb-agent)
     */
    opentsdbConfig?: pulumi.Input<inputs.AgentOpentsdbConfig>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/pingdom#pingdom-agent)
     */
    pingdomConfig?: pulumi.Input<inputs.AgentPingdomConfig>;
    /**
     * Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
     */
    project?: pulumi.Input<string>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/prometheus#prometheus-agent)
     */
    prometheusConfig?: pulumi.Input<inputs.AgentPrometheusConfig>;
    /**
     * [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
     */
    queryDelay?: pulumi.Input<inputs.AgentQueryDelay>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Redshift/?_highlight=redshift#amazon-redshift-agent)
     */
    redshiftConfig?: pulumi.Input<inputs.AgentRedshiftConfig>;
    /**
     * Source of Metrics and/or Services.
     */
    sourceOfs?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/splunk#splunk-agent)
     */
    splunkConfig?: pulumi.Input<inputs.AgentSplunkConfig>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/splunk-observability/#splunk-observability-agent)
     */
    splunkObservabilityConfig?: pulumi.Input<inputs.AgentSplunkObservabilityConfig>;
    /**
     * Status of the created agent.
     */
    status?: pulumi.Input<{[key: string]: any}>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/sumo-logic#sumo-logic-agent)
     */
    sumologicConfig?: pulumi.Input<inputs.AgentSumologicConfig>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/thousandeyes#thousandeyes-agent)
     */
    thousandeyesConfig?: pulumi.Input<inputs.AgentThousandeyesConfig>;
}

/**
 * The set of arguments for constructing a Agent resource.
 */
export interface AgentArgs {
    /**
     * The type of the Agent. Check [Supported Agent types | Nobl9 Documentation](https://docs.nobl9.com/Sources/)
     */
    agentType: pulumi.Input<string>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Prometheus/#ams-prometheus-agent)
     */
    amazonPrometheusConfig?: pulumi.Input<inputs.AgentAmazonPrometheusConfig>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/appdynamics#appdynamics-agent)
     */
    appdynamicsConfig?: pulumi.Input<inputs.AgentAppdynamicsConfig>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/bigquery#bigquery-agent)
     */
    bigqueryConfig?: pulumi.Input<inputs.AgentBigqueryConfig>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_CloudWatch/#cloudwatch-agent)
     */
    cloudwatchConfig?: pulumi.Input<inputs.AgentCloudwatchConfig>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/datadog#datadog-agent)
     */
    datadogConfig?: pulumi.Input<inputs.AgentDatadogConfig>;
    /**
     * Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.
     */
    description?: pulumi.Input<string>;
    /**
     * User-friendly display name of the resource.
     */
    displayName?: pulumi.Input<string>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/dynatrace#dynatrace-agent)
     */
    dynatraceConfig?: pulumi.Input<inputs.AgentDynatraceConfig>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/elasticsearch#elasticsearch-agent)
     */
    elasticsearchConfig?: pulumi.Input<inputs.AgentElasticsearchConfig>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/google-cloud-monitoring#google-cloud-monitoring-agent)
     */
    gcmConfig?: pulumi.Input<inputs.AgentGcmConfig>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/grafana-loki#grafana-loki-agent)
     */
    grafanaLokiConfig?: pulumi.Input<inputs.AgentGrafanaLokiConfig>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/graphite#graphite-agent)
     */
    graphiteConfig?: pulumi.Input<inputs.AgentGraphiteConfig>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/influxdb#influxdb-agent)
     */
    influxdbConfig?: pulumi.Input<inputs.AgentInfluxdbConfig>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/instana#instana-agent)
     */
    instanaConfig?: pulumi.Input<inputs.AgentInstanaConfig>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/lightstep#lightstep-agent)
     */
    lightstepConfig?: pulumi.Input<inputs.AgentLightstepConfig>;
    /**
     * Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
     */
    name?: pulumi.Input<string>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/new-relic#new-relic-agent)
     */
    newrelicConfig?: pulumi.Input<inputs.AgentNewrelicConfig>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/opentsdb#opentsdb-agent)
     */
    opentsdbConfig?: pulumi.Input<inputs.AgentOpentsdbConfig>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/pingdom#pingdom-agent)
     */
    pingdomConfig?: pulumi.Input<inputs.AgentPingdomConfig>;
    /**
     * Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
     */
    project: pulumi.Input<string>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/prometheus#prometheus-agent)
     */
    prometheusConfig?: pulumi.Input<inputs.AgentPrometheusConfig>;
    /**
     * [Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.
     */
    queryDelay?: pulumi.Input<inputs.AgentQueryDelay>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Redshift/?_highlight=redshift#amazon-redshift-agent)
     */
    redshiftConfig?: pulumi.Input<inputs.AgentRedshiftConfig>;
    /**
     * Source of Metrics and/or Services.
     */
    sourceOfs: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/splunk#splunk-agent)
     */
    splunkConfig?: pulumi.Input<inputs.AgentSplunkConfig>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/splunk-observability/#splunk-observability-agent)
     */
    splunkObservabilityConfig?: pulumi.Input<inputs.AgentSplunkObservabilityConfig>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/sumo-logic#sumo-logic-agent)
     */
    sumologicConfig?: pulumi.Input<inputs.AgentSumologicConfig>;
    /**
     * [Configuration documentation](https://docs.nobl9.com/Sources/thousandeyes#thousandeyes-agent)
     */
    thousandeyesConfig?: pulumi.Input<inputs.AgentThousandeyesConfig>;
}

{
    "name": "nobl9",
    "description": "A Pulumi package for creating and managing Nobl9 cloud resources.",
    "keywords": [
        "pulumi",
        "nobl9",
        "n9",
        "category/cloud"
    ],
    "homepage": "https://www.pulumi.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`nobl9` Terraform Provider](https://github.com/nobl9/terraform-provider-nobl9).",
    "repository": "https://github.com/piclemx/pulumi-nobl9",
    "publisher": "Nobl9",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": null,
            "packageReferences": {
                "Pulumi": "3.*"
            }
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-nobl9/sdk/go/nobl9"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing Nobl9 cloud resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/nobl9/terraform-provider-nobl9)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-nobl9` repo](https://github.com/piclemx/pulumi-nobl9/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-nobl9` repo](https://github.com/nobl9/terraform-provider-nobl9/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/nobl9/terraform-provider-nobl9)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-nobl9` repo](https://github.com/piclemx/pulumi-nobl9/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-nobl9` repo](https://github.com/nobl9/terraform-provider-nobl9/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    },
    "config": {
        "variables": {
            "clientId": {
                "type": "string",
                "description": "the [Client ID](https://docs.nobl9.com/sloctl-user-guide/#configuration) of your Nobl9 account required to connect to\nNobl9.\n"
            },
            "clientSecret": {
                "type": "string",
                "description": "the [Client Secret](https://docs.nobl9.com/sloctl-user-guide/#configuration) of your Nobl9 account required to connect\nto Nobl9.\n"
            },
            "ingestUrl": {
                "type": "string",
                "description": "Nobl9 API URL.\n"
            },
            "oktaAuthServer": {
                "type": "string",
                "description": "Authorization service configuration.\n"
            },
            "oktaOrgUrl": {
                "type": "string",
                "description": "Authorization service URL.\n"
            },
            "organization": {
                "type": "string",
                "description": "Nobl9 [Organization ID](https://docs.nobl9.com/API_Documentation/api-endpoints-for-slo-annotations/#common-headers) that\ncontains resources managed by the Nobl9 Terraform provider.\n"
            },
            "project": {
                "type": "string",
                "description": "Nobl9 project used when importing resources.\n"
            }
        },
        "defaults": [
            "clientId",
            "clientSecret",
            "organization",
            "project"
        ]
    },
    "types": {
        "nobl9:index/AgentAmazonPrometheusConfig:AgentAmazonPrometheusConfig": {
            "properties": {
                "region": {
                    "type": "string",
                    "description": "AWS region e.g., eu-central-1\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "Base URL to Amazon Prometheus server.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "region",
                "url"
            ]
        },
        "nobl9:index/AgentAppdynamicsConfig:AgentAppdynamicsConfig": {
            "properties": {
                "url": {
                    "type": "string",
                    "description": "Base URL to the AppDynamics Controller.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "nobl9:index/AgentBigqueryConfig:AgentBigqueryConfig": {
            "type": "object"
        },
        "nobl9:index/AgentCloudwatchConfig:AgentCloudwatchConfig": {
            "type": "object"
        },
        "nobl9:index/AgentDatadogConfig:AgentDatadogConfig": {
            "properties": {
                "site": {
                    "type": "string",
                    "description": "`com` or `eu`, Datadog SaaS instance, which corresponds to one of Datadog's two locations (https://www.datadoghq.com/ in the U.S. or https://datadoghq.eu/ in the European Union)\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "site"
            ]
        },
        "nobl9:index/AgentDynatraceConfig:AgentDynatraceConfig": {
            "properties": {
                "url": {
                    "type": "string",
                    "description": "Dynatrace API URL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "nobl9:index/AgentElasticsearchConfig:AgentElasticsearchConfig": {
            "properties": {
                "url": {
                    "type": "string",
                    "description": "API URL endpoint to the Elasticsearch's instance.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "nobl9:index/AgentGcmConfig:AgentGcmConfig": {
            "type": "object"
        },
        "nobl9:index/AgentGrafanaLokiConfig:AgentGrafanaLokiConfig": {
            "properties": {
                "url": {
                    "type": "string",
                    "description": "API URL endpoint to the Grafana Loki instance.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "nobl9:index/AgentGraphiteConfig:AgentGraphiteConfig": {
            "properties": {
                "url": {
                    "type": "string",
                    "description": "API URL endpoint to the Graphite's instance.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "nobl9:index/AgentInfluxdbConfig:AgentInfluxdbConfig": {
            "properties": {
                "url": {
                    "type": "string",
                    "description": "API URL endpoint to the InfluxDB's instance.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "nobl9:index/AgentInstanaConfig:AgentInstanaConfig": {
            "properties": {
                "url": {
                    "type": "string",
                    "description": "API URL endpoint to the InfluxDB's instance.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "nobl9:index/AgentLightstepConfig:AgentLightstepConfig": {
            "properties": {
                "organization": {
                    "type": "string",
                    "description": "Organization name registered in Lightstep.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Lightstep project.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "organization",
                "project"
            ]
        },
        "nobl9:index/AgentNewrelicConfig:AgentNewrelicConfig": {
            "properties": {
                "accountId": {
                    "type": "string",
                    "description": "ID number assigned to the New Relic user account.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "accountId"
            ]
        },
        "nobl9:index/AgentOpentsdbConfig:AgentOpentsdbConfig": {
            "properties": {
                "url": {
                    "type": "string",
                    "description": "OpenTSDB cluster URL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "nobl9:index/AgentPingdomConfig:AgentPingdomConfig": {
            "type": "object"
        },
        "nobl9:index/AgentPrometheusConfig:AgentPrometheusConfig": {
            "properties": {
                "url": {
                    "type": "string",
                    "description": "Base URL to Prometheus server.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "nobl9:index/AgentQueryDelay:AgentQueryDelay": {
            "properties": {
                "unit": {
                    "type": "string",
                    "description": "Must be one of Minute or Second.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "integer",
                    "description": "Must be an integer greater than or equal to 0.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ]
        },
        "nobl9:index/AgentRedshiftConfig:AgentRedshiftConfig": {
            "type": "object"
        },
        "nobl9:index/AgentSplunkConfig:AgentSplunkConfig": {
            "properties": {
                "url": {
                    "type": "string",
                    "description": "Base API URL to the Splunk Search app.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "nobl9:index/AgentSplunkObservabilityConfig:AgentSplunkObservabilityConfig": {
            "properties": {
                "realm": {
                    "type": "string",
                    "description": "SplunkObservability Realm.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "realm"
            ]
        },
        "nobl9:index/AgentSumologicConfig:AgentSumologicConfig": {
            "properties": {
                "url": {
                    "type": "string",
                    "description": "Sumo Logic API URL.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "nobl9:index/AgentThousandeyesConfig:AgentThousandeyesConfig": {
            "type": "object"
        },
        "nobl9:index/AlertPolicyAlertMethod:AlertPolicyAlertMethod": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The name of the previously defined alert method.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "project": {
                    "type": "string",
                    "description": "Project name the Alert Method is in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names). If not defined, Nobl9 returns a default value for this field.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "nobl9:index/AlertPolicyCondition:AlertPolicyCondition": {
            "properties": {
                "lastsFor": {
                    "type": "string",
                    "description": "Indicates how long a given condition needs to be valid to mark the condition as true.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "measurement": {
                    "type": "string",
                    "description": "One of `timeToBurnBudget` | `burnRate` | `burnedBudget`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "description": "For `averageBurnRate`, it indicates how fast the error budget is burning. For `burnedBudget`, it tells how much error budget is already burned.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "valueString": {
                    "type": "string",
                    "description": "Used with `timeToBurnBudget`, indicates when the budget would be exhausted. The expected value is a string in time duration string format.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "measurement"
            ]
        },
        "nobl9:index/DirectAppdynamicsQueryDelay:DirectAppdynamicsQueryDelay": {
            "properties": {
                "unit": {
                    "type": "string",
                    "description": "Must be one of Minute or Second.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "integer",
                    "description": "Must be an integer greater than or equal to 0.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ]
        },
        "nobl9:index/DirectBigqueryQueryDelay:DirectBigqueryQueryDelay": {
            "properties": {
                "unit": {
                    "type": "string",
                    "description": "Must be one of Minute or Second.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "integer",
                    "description": "Must be an integer greater than or equal to 0.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ]
        },
        "nobl9:index/DirectCloudwatchHistoricalDataRetrieval:DirectCloudwatchHistoricalDataRetrieval": {
            "properties": {
                "defaultDurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/DirectCloudwatchHistoricalDataRetrievalDefaultDuration:DirectCloudwatchHistoricalDataRetrievalDefaultDuration"
                    },
                    "description": "Used by default for any SLOs connected to this data source.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxDurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/DirectCloudwatchHistoricalDataRetrievalMaxDuration:DirectCloudwatchHistoricalDataRetrievalMaxDuration"
                    },
                    "description": "Defines the maximum period for which data can be retrieved.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "defaultDurations",
                "maxDurations"
            ]
        },
        "nobl9:index/DirectCloudwatchHistoricalDataRetrievalDefaultDuration:DirectCloudwatchHistoricalDataRetrievalDefaultDuration": {
            "properties": {
                "unit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ]
        },
        "nobl9:index/DirectCloudwatchHistoricalDataRetrievalMaxDuration:DirectCloudwatchHistoricalDataRetrievalMaxDuration": {
            "properties": {
                "unit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ]
        },
        "nobl9:index/DirectCloudwatchQueryDelay:DirectCloudwatchQueryDelay": {
            "properties": {
                "unit": {
                    "type": "string",
                    "description": "Must be one of Minute or Second.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "integer",
                    "description": "Must be an integer greater than or equal to 0.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ]
        },
        "nobl9:index/DirectDatadogHistoricalDataRetrieval:DirectDatadogHistoricalDataRetrieval": {
            "properties": {
                "defaultDurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/DirectDatadogHistoricalDataRetrievalDefaultDuration:DirectDatadogHistoricalDataRetrievalDefaultDuration"
                    },
                    "description": "Used by default for any SLOs connected to this data source.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxDurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/DirectDatadogHistoricalDataRetrievalMaxDuration:DirectDatadogHistoricalDataRetrievalMaxDuration"
                    },
                    "description": "Defines the maximum period for which data can be retrieved.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "defaultDurations",
                "maxDurations"
            ]
        },
        "nobl9:index/DirectDatadogHistoricalDataRetrievalDefaultDuration:DirectDatadogHistoricalDataRetrievalDefaultDuration": {
            "properties": {
                "unit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ]
        },
        "nobl9:index/DirectDatadogHistoricalDataRetrievalMaxDuration:DirectDatadogHistoricalDataRetrievalMaxDuration": {
            "properties": {
                "unit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ]
        },
        "nobl9:index/DirectDatadogQueryDelay:DirectDatadogQueryDelay": {
            "properties": {
                "unit": {
                    "type": "string",
                    "description": "Must be one of Minute or Second.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "integer",
                    "description": "Must be an integer greater than or equal to 0.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ]
        },
        "nobl9:index/DirectDynatraceHistoricalDataRetrieval:DirectDynatraceHistoricalDataRetrieval": {
            "properties": {
                "defaultDurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/DirectDynatraceHistoricalDataRetrievalDefaultDuration:DirectDynatraceHistoricalDataRetrievalDefaultDuration"
                    },
                    "description": "Used by default for any SLOs connected to this data source.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxDurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/DirectDynatraceHistoricalDataRetrievalMaxDuration:DirectDynatraceHistoricalDataRetrievalMaxDuration"
                    },
                    "description": "Defines the maximum period for which data can be retrieved.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "defaultDurations",
                "maxDurations"
            ]
        },
        "nobl9:index/DirectDynatraceHistoricalDataRetrievalDefaultDuration:DirectDynatraceHistoricalDataRetrievalDefaultDuration": {
            "properties": {
                "unit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ]
        },
        "nobl9:index/DirectDynatraceHistoricalDataRetrievalMaxDuration:DirectDynatraceHistoricalDataRetrievalMaxDuration": {
            "properties": {
                "unit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ]
        },
        "nobl9:index/DirectDynatraceQueryDelay:DirectDynatraceQueryDelay": {
            "properties": {
                "unit": {
                    "type": "string",
                    "description": "Must be one of Minute or Second.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "integer",
                    "description": "Must be an integer greater than or equal to 0.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ]
        },
        "nobl9:index/DirectGcmQueryDelay:DirectGcmQueryDelay": {
            "properties": {
                "unit": {
                    "type": "string",
                    "description": "Must be one of Minute or Second.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "integer",
                    "description": "Must be an integer greater than or equal to 0.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ]
        },
        "nobl9:index/DirectInfluxdbQueryDelay:DirectInfluxdbQueryDelay": {
            "properties": {
                "unit": {
                    "type": "string",
                    "description": "Must be one of Minute or Second.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "integer",
                    "description": "Must be an integer greater than or equal to 0.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ]
        },
        "nobl9:index/DirectInstanaQueryDelay:DirectInstanaQueryDelay": {
            "properties": {
                "unit": {
                    "type": "string",
                    "description": "Must be one of Minute or Second.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "integer",
                    "description": "Must be an integer greater than or equal to 0.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ]
        },
        "nobl9:index/DirectLightstepHistoricalDataRetrieval:DirectLightstepHistoricalDataRetrieval": {
            "properties": {
                "defaultDurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/DirectLightstepHistoricalDataRetrievalDefaultDuration:DirectLightstepHistoricalDataRetrievalDefaultDuration"
                    },
                    "description": "Used by default for any SLOs connected to this data source.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxDurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/DirectLightstepHistoricalDataRetrievalMaxDuration:DirectLightstepHistoricalDataRetrievalMaxDuration"
                    },
                    "description": "Defines the maximum period for which data can be retrieved.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "defaultDurations",
                "maxDurations"
            ]
        },
        "nobl9:index/DirectLightstepHistoricalDataRetrievalDefaultDuration:DirectLightstepHistoricalDataRetrievalDefaultDuration": {
            "properties": {
                "unit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ]
        },
        "nobl9:index/DirectLightstepHistoricalDataRetrievalMaxDuration:DirectLightstepHistoricalDataRetrievalMaxDuration": {
            "properties": {
                "unit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ]
        },
        "nobl9:index/DirectLightstepQueryDelay:DirectLightstepQueryDelay": {
            "properties": {
                "unit": {
                    "type": "string",
                    "description": "Must be one of Minute or Second.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "integer",
                    "description": "Must be an integer greater than or equal to 0.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ]
        },
        "nobl9:index/DirectNewrelicHistoricalDataRetrieval:DirectNewrelicHistoricalDataRetrieval": {
            "properties": {
                "defaultDurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/DirectNewrelicHistoricalDataRetrievalDefaultDuration:DirectNewrelicHistoricalDataRetrievalDefaultDuration"
                    },
                    "description": "Used by default for any SLOs connected to this data source.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxDurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/DirectNewrelicHistoricalDataRetrievalMaxDuration:DirectNewrelicHistoricalDataRetrievalMaxDuration"
                    },
                    "description": "Defines the maximum period for which data can be retrieved.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "defaultDurations",
                "maxDurations"
            ]
        },
        "nobl9:index/DirectNewrelicHistoricalDataRetrievalDefaultDuration:DirectNewrelicHistoricalDataRetrievalDefaultDuration": {
            "properties": {
                "unit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ]
        },
        "nobl9:index/DirectNewrelicHistoricalDataRetrievalMaxDuration:DirectNewrelicHistoricalDataRetrievalMaxDuration": {
            "properties": {
                "unit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ]
        },
        "nobl9:index/DirectNewrelicQueryDelay:DirectNewrelicQueryDelay": {
            "properties": {
                "unit": {
                    "type": "string",
                    "description": "Must be one of Minute or Second.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "integer",
                    "description": "Must be an integer greater than or equal to 0.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ]
        },
        "nobl9:index/DirectPingdomQueryDelay:DirectPingdomQueryDelay": {
            "properties": {
                "unit": {
                    "type": "string",
                    "description": "Must be one of Minute or Second.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "integer",
                    "description": "Must be an integer greater than or equal to 0.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ]
        },
        "nobl9:index/DirectRedshiftQueryDelay:DirectRedshiftQueryDelay": {
            "properties": {
                "unit": {
                    "type": "string",
                    "description": "Must be one of Minute or Second.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "integer",
                    "description": "Must be an integer greater than or equal to 0.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ]
        },
        "nobl9:index/DirectSplunkHistoricalDataRetrieval:DirectSplunkHistoricalDataRetrieval": {
            "properties": {
                "defaultDurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/DirectSplunkHistoricalDataRetrievalDefaultDuration:DirectSplunkHistoricalDataRetrievalDefaultDuration"
                    },
                    "description": "Used by default for any SLOs connected to this data source.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "maxDurations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/DirectSplunkHistoricalDataRetrievalMaxDuration:DirectSplunkHistoricalDataRetrievalMaxDuration"
                    },
                    "description": "Defines the maximum period for which data can be retrieved.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "defaultDurations",
                "maxDurations"
            ]
        },
        "nobl9:index/DirectSplunkHistoricalDataRetrievalDefaultDuration:DirectSplunkHistoricalDataRetrievalDefaultDuration": {
            "properties": {
                "unit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ]
        },
        "nobl9:index/DirectSplunkHistoricalDataRetrievalMaxDuration:DirectSplunkHistoricalDataRetrievalMaxDuration": {
            "properties": {
                "unit": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ]
        },
        "nobl9:index/DirectSplunkObservabilityQueryDelay:DirectSplunkObservabilityQueryDelay": {
            "properties": {
                "unit": {
                    "type": "string",
                    "description": "Must be one of Minute or Second.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "integer",
                    "description": "Must be an integer greater than or equal to 0.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ]
        },
        "nobl9:index/DirectSplunkQueryDelay:DirectSplunkQueryDelay": {
            "properties": {
                "unit": {
                    "type": "string",
                    "description": "Must be one of Minute or Second.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "integer",
                    "description": "Must be an integer greater than or equal to 0.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ]
        },
        "nobl9:index/DirectSumologicQueryDelay:DirectSumologicQueryDelay": {
            "properties": {
                "unit": {
                    "type": "string",
                    "description": "Must be one of Minute or Second.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "integer",
                    "description": "Must be an integer greater than or equal to 0.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ]
        },
        "nobl9:index/DirectThousandeyesQueryDelay:DirectThousandeyesQueryDelay": {
            "properties": {
                "unit": {
                    "type": "string",
                    "description": "Must be one of Minute or Second.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "integer",
                    "description": "Must be an integer greater than or equal to 0.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ]
        },
        "nobl9:index/ProjectLabel:ProjectLabel": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "A key for the label, unique within the associated resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of unique values for a single key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "values"
            ]
        },
        "nobl9:index/ServiceLabel:ServiceLabel": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "A key for the label, unique within the associated resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of unique values for a single key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "values"
            ]
        },
        "nobl9:index/SloAttachment:SloAttachment": {
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "Name displayed for the attachment. Max. length: 63 characters.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "url": {
                    "type": "string",
                    "description": "URL to the attachment\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "url"
            ]
        },
        "nobl9:index/SloComposite:SloComposite": {
            "properties": {
                "burnRateConditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloCompositeBurnRateCondition:SloCompositeBurnRateCondition"
                    },
                    "description": "Condition when the Composite SLO’s error budget is burning.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "number",
                    "description": "Designated value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "target"
            ]
        },
        "nobl9:index/SloCompositeBurnRateCondition:SloCompositeBurnRateCondition": {
            "properties": {
                "op": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "op",
                "value"
            ]
        },
        "nobl9:index/SloIndicator:SloIndicator": {
            "properties": {
                "kind": {
                    "type": "string",
                    "description": "Kind of the metric source. One of {Agent, Direct}.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the metric source (agent).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "project": {
                    "type": "string",
                    "description": "Name of the metric source project.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "nobl9:index/SloLabel:SloLabel": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "A key for the label, unique within the associated resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of unique values for a single key.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "key",
                "values"
            ]
        },
        "nobl9:index/SloObjective:SloObjective": {
            "properties": {
                "countMetrics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetric:SloObjectiveCountMetric"
                    },
                    "description": "Compares two time series, indicating the ratio of the count of good values to total values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "displayName": {
                    "type": "string",
                    "description": "Name to be displayed\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Objective's name. This field is computed if not provided.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "op": {
                    "type": "string",
                    "description": "Type of logical operation\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rawMetrics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveRawMetric:SloObjectiveRawMetric"
                    },
                    "description": "Raw data is used to compare objective values.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "target": {
                    "type": "number",
                    "description": "Designated value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeSliceTarget": {
                    "type": "number",
                    "description": "Designated value for slice\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "number",
                    "description": "Value\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "displayName",
                "target",
                "value"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "displayName",
                        "name",
                        "target",
                        "value"
                    ]
                }
            }
        },
        "nobl9:index/SloObjectiveCountMetric:SloObjectiveCountMetric": {
            "properties": {
                "goods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricGood:SloObjectiveCountMetricGood"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "incremental": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "totals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricTotal:SloObjectiveCountMetricTotal"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "incremental"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricGood:SloObjectiveCountMetricGood": {
            "properties": {
                "amazonPrometheuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricGoodAmazonPrometheus:SloObjectiveCountMetricGoodAmazonPrometheus"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "appdynamics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricGoodAppdynamic:SloObjectiveCountMetricGoodAppdynamic"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bigqueries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricGoodBigquery:SloObjectiveCountMetricGoodBigquery"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cloudwatches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricGoodCloudwatch:SloObjectiveCountMetricGoodCloudwatch"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "datadogs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricGoodDatadog:SloObjectiveCountMetricGoodDatadog"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynatraces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricGoodDynatrace:SloObjectiveCountMetricGoodDynatrace"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "elasticsearches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricGoodElasticsearch:SloObjectiveCountMetricGoodElasticsearch"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gcms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricGoodGcm:SloObjectiveCountMetricGoodGcm"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "grafanaLokis": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricGoodGrafanaLoki:SloObjectiveCountMetricGoodGrafanaLoki"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "graphites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricGoodGraphite:SloObjectiveCountMetricGoodGraphite"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "influxdbs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricGoodInfluxdb:SloObjectiveCountMetricGoodInfluxdb"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instanas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricGoodInstana:SloObjectiveCountMetricGoodInstana"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lightsteps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricGoodLightstep:SloObjectiveCountMetricGoodLightstep"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "newrelics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricGoodNewrelic:SloObjectiveCountMetricGoodNewrelic"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opentsdbs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricGoodOpentsdb:SloObjectiveCountMetricGoodOpentsdb"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pingdoms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricGoodPingdom:SloObjectiveCountMetricGoodPingdom"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricGoodPrometheus:SloObjectiveCountMetricGoodPrometheus"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redshifts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricGoodRedshift:SloObjectiveCountMetricGoodRedshift"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "splunkObservabilities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricGoodSplunkObservability:SloObjectiveCountMetricGoodSplunkObservability"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "splunks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricGoodSplunk:SloObjectiveCountMetricGoodSplunk"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sumologics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricGoodSumologic:SloObjectiveCountMetricGoodSumologic"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "thousandeyes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricGoodThousandeye:SloObjectiveCountMetricGoodThousandeye"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nobl9:index/SloObjectiveCountMetricGoodAmazonPrometheus:SloObjectiveCountMetricGoodAmazonPrometheus": {
            "properties": {
                "promql": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "promql"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricGoodAppdynamic:SloObjectiveCountMetricGoodAppdynamic": {
            "properties": {
                "applicationName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "applicationName",
                "metricPath"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricGoodBigquery:SloObjectiveCountMetricGoodBigquery": {
            "properties": {
                "location": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "location",
                "projectId",
                "query"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricGoodCloudwatch:SloObjectiveCountMetricGoodCloudwatch": {
            "properties": {
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricGoodCloudwatchDimension:SloObjectiveCountMetricGoodCloudwatchDimension"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "json": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespace": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sql": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "region"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricGoodCloudwatchDimension:SloObjectiveCountMetricGoodCloudwatchDimension": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricGoodDatadog:SloObjectiveCountMetricGoodDatadog": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricGoodDynatrace:SloObjectiveCountMetricGoodDynatrace": {
            "properties": {
                "metricSelector": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metricSelector"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricGoodElasticsearch:SloObjectiveCountMetricGoodElasticsearch": {
            "properties": {
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index",
                "query"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricGoodGcm:SloObjectiveCountMetricGoodGcm": {
            "properties": {
                "projectId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "projectId",
                "query"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricGoodGrafanaLoki:SloObjectiveCountMetricGoodGrafanaLoki": {
            "properties": {
                "logql": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "logql"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricGoodGraphite:SloObjectiveCountMetricGoodGraphite": {
            "properties": {
                "metricPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metricPath"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricGoodInfluxdb:SloObjectiveCountMetricGoodInfluxdb": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricGoodInstana:SloObjectiveCountMetricGoodInstana": {
            "properties": {
                "applications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricGoodInstanaApplication:SloObjectiveCountMetricGoodInstanaApplication"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "infrastructures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricGoodInstanaInfrastructure:SloObjectiveCountMetricGoodInstanaInfrastructure"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metricType"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricGoodInstanaApplication:SloObjectiveCountMetricGoodInstanaApplication": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apiQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricGoodInstanaApplicationGroupBy:SloObjectiveCountMetricGoodInstanaApplicationGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includeInternal": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includeSynthetic": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "apiQuery",
                "groupBies",
                "metricId"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricGoodInstanaApplicationGroupBy:SloObjectiveCountMetricGoodInstanaApplicationGroupBy": {
            "properties": {
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagEntity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagSecondLevelKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "tag",
                "tagEntity"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricGoodInstanaInfrastructure:SloObjectiveCountMetricGoodInstanaInfrastructure": {
            "properties": {
                "metricId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricRetrievalMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pluginId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "snapshotId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metricId",
                "metricRetrievalMethod",
                "pluginId"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricGoodLightstep:SloObjectiveCountMetricGoodLightstep": {
            "properties": {
                "percentile": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "streamId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "typeOfData": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uql": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "typeOfData"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricGoodNewrelic:SloObjectiveCountMetricGoodNewrelic": {
            "properties": {
                "nrql": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "nrql"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricGoodOpentsdb:SloObjectiveCountMetricGoodOpentsdb": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricGoodPingdom:SloObjectiveCountMetricGoodPingdom": {
            "properties": {
                "checkId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "checkType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "checkId"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricGoodPrometheus:SloObjectiveCountMetricGoodPrometheus": {
            "properties": {
                "promql": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "promql"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricGoodRedshift:SloObjectiveCountMetricGoodRedshift": {
            "properties": {
                "clusterId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "databaseName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "clusterId",
                "databaseName",
                "query",
                "region"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricGoodSplunk:SloObjectiveCountMetricGoodSplunk": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricGoodSplunkObservability:SloObjectiveCountMetricGoodSplunkObservability": {
            "properties": {
                "program": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "program"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricGoodSumologic:SloObjectiveCountMetricGoodSumologic": {
            "properties": {
                "quantization": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rollup": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query",
                "type"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricGoodThousandeye:SloObjectiveCountMetricGoodThousandeye": {
            "properties": {
                "testId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "testId"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricTotal:SloObjectiveCountMetricTotal": {
            "properties": {
                "amazonPrometheuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricTotalAmazonPrometheus:SloObjectiveCountMetricTotalAmazonPrometheus"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "appdynamics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricTotalAppdynamic:SloObjectiveCountMetricTotalAppdynamic"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bigqueries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricTotalBigquery:SloObjectiveCountMetricTotalBigquery"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cloudwatches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricTotalCloudwatch:SloObjectiveCountMetricTotalCloudwatch"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "datadogs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricTotalDatadog:SloObjectiveCountMetricTotalDatadog"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynatraces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricTotalDynatrace:SloObjectiveCountMetricTotalDynatrace"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "elasticsearches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricTotalElasticsearch:SloObjectiveCountMetricTotalElasticsearch"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gcms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricTotalGcm:SloObjectiveCountMetricTotalGcm"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "grafanaLokis": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricTotalGrafanaLoki:SloObjectiveCountMetricTotalGrafanaLoki"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "graphites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricTotalGraphite:SloObjectiveCountMetricTotalGraphite"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "influxdbs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricTotalInfluxdb:SloObjectiveCountMetricTotalInfluxdb"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instanas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricTotalInstana:SloObjectiveCountMetricTotalInstana"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lightsteps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricTotalLightstep:SloObjectiveCountMetricTotalLightstep"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "newrelics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricTotalNewrelic:SloObjectiveCountMetricTotalNewrelic"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opentsdbs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricTotalOpentsdb:SloObjectiveCountMetricTotalOpentsdb"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pingdoms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricTotalPingdom:SloObjectiveCountMetricTotalPingdom"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricTotalPrometheus:SloObjectiveCountMetricTotalPrometheus"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redshifts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricTotalRedshift:SloObjectiveCountMetricTotalRedshift"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "splunkObservabilities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricTotalSplunkObservability:SloObjectiveCountMetricTotalSplunkObservability"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "splunks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricTotalSplunk:SloObjectiveCountMetricTotalSplunk"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sumologics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricTotalSumologic:SloObjectiveCountMetricTotalSumologic"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "thousandeyes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricTotalThousandeye:SloObjectiveCountMetricTotalThousandeye"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nobl9:index/SloObjectiveCountMetricTotalAmazonPrometheus:SloObjectiveCountMetricTotalAmazonPrometheus": {
            "properties": {
                "promql": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "promql"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricTotalAppdynamic:SloObjectiveCountMetricTotalAppdynamic": {
            "properties": {
                "applicationName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "applicationName",
                "metricPath"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricTotalBigquery:SloObjectiveCountMetricTotalBigquery": {
            "properties": {
                "location": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "location",
                "projectId",
                "query"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricTotalCloudwatch:SloObjectiveCountMetricTotalCloudwatch": {
            "properties": {
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricTotalCloudwatchDimension:SloObjectiveCountMetricTotalCloudwatchDimension"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "json": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespace": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sql": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "region"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricTotalCloudwatchDimension:SloObjectiveCountMetricTotalCloudwatchDimension": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricTotalDatadog:SloObjectiveCountMetricTotalDatadog": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricTotalDynatrace:SloObjectiveCountMetricTotalDynatrace": {
            "properties": {
                "metricSelector": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metricSelector"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricTotalElasticsearch:SloObjectiveCountMetricTotalElasticsearch": {
            "properties": {
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index",
                "query"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricTotalGcm:SloObjectiveCountMetricTotalGcm": {
            "properties": {
                "projectId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "projectId",
                "query"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricTotalGrafanaLoki:SloObjectiveCountMetricTotalGrafanaLoki": {
            "properties": {
                "logql": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "logql"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricTotalGraphite:SloObjectiveCountMetricTotalGraphite": {
            "properties": {
                "metricPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metricPath"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricTotalInfluxdb:SloObjectiveCountMetricTotalInfluxdb": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricTotalInstana:SloObjectiveCountMetricTotalInstana": {
            "properties": {
                "applications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricTotalInstanaApplication:SloObjectiveCountMetricTotalInstanaApplication"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "infrastructures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricTotalInstanaInfrastructure:SloObjectiveCountMetricTotalInstanaInfrastructure"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metricType"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricTotalInstanaApplication:SloObjectiveCountMetricTotalInstanaApplication": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apiQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveCountMetricTotalInstanaApplicationGroupBy:SloObjectiveCountMetricTotalInstanaApplicationGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includeInternal": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includeSynthetic": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "apiQuery",
                "groupBies",
                "metricId"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricTotalInstanaApplicationGroupBy:SloObjectiveCountMetricTotalInstanaApplicationGroupBy": {
            "properties": {
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagEntity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagSecondLevelKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "tag",
                "tagEntity"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricTotalInstanaInfrastructure:SloObjectiveCountMetricTotalInstanaInfrastructure": {
            "properties": {
                "metricId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricRetrievalMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pluginId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "snapshotId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metricId",
                "metricRetrievalMethod",
                "pluginId"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricTotalLightstep:SloObjectiveCountMetricTotalLightstep": {
            "properties": {
                "percentile": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "streamId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "typeOfData": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uql": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "typeOfData"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricTotalNewrelic:SloObjectiveCountMetricTotalNewrelic": {
            "properties": {
                "nrql": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "nrql"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricTotalOpentsdb:SloObjectiveCountMetricTotalOpentsdb": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricTotalPingdom:SloObjectiveCountMetricTotalPingdom": {
            "properties": {
                "checkId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "checkType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "checkId"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricTotalPrometheus:SloObjectiveCountMetricTotalPrometheus": {
            "properties": {
                "promql": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "promql"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricTotalRedshift:SloObjectiveCountMetricTotalRedshift": {
            "properties": {
                "clusterId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "databaseName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "clusterId",
                "databaseName",
                "query",
                "region"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricTotalSplunk:SloObjectiveCountMetricTotalSplunk": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricTotalSplunkObservability:SloObjectiveCountMetricTotalSplunkObservability": {
            "properties": {
                "program": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "program"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricTotalSumologic:SloObjectiveCountMetricTotalSumologic": {
            "properties": {
                "quantization": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rollup": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query",
                "type"
            ]
        },
        "nobl9:index/SloObjectiveCountMetricTotalThousandeye:SloObjectiveCountMetricTotalThousandeye": {
            "properties": {
                "testId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "testId"
            ]
        },
        "nobl9:index/SloObjectiveRawMetric:SloObjectiveRawMetric": {
            "properties": {
                "queries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveRawMetricQuery:SloObjectiveRawMetricQuery"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nobl9:index/SloObjectiveRawMetricQuery:SloObjectiveRawMetricQuery": {
            "properties": {
                "amazonPrometheuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveRawMetricQueryAmazonPrometheus:SloObjectiveRawMetricQueryAmazonPrometheus"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "appdynamics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveRawMetricQueryAppdynamic:SloObjectiveRawMetricQueryAppdynamic"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "bigqueries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveRawMetricQueryBigquery:SloObjectiveRawMetricQueryBigquery"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cloudwatches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveRawMetricQueryCloudwatch:SloObjectiveRawMetricQueryCloudwatch"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "datadogs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveRawMetricQueryDatadog:SloObjectiveRawMetricQueryDatadog"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "dynatraces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveRawMetricQueryDynatrace:SloObjectiveRawMetricQueryDynatrace"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "elasticsearches": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveRawMetricQueryElasticsearch:SloObjectiveRawMetricQueryElasticsearch"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "gcms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveRawMetricQueryGcm:SloObjectiveRawMetricQueryGcm"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "grafanaLokis": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveRawMetricQueryGrafanaLoki:SloObjectiveRawMetricQueryGrafanaLoki"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "graphites": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveRawMetricQueryGraphite:SloObjectiveRawMetricQueryGraphite"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "influxdbs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveRawMetricQueryInfluxdb:SloObjectiveRawMetricQueryInfluxdb"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "instanas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveRawMetricQueryInstana:SloObjectiveRawMetricQueryInstana"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lightsteps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveRawMetricQueryLightstep:SloObjectiveRawMetricQueryLightstep"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "newrelics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveRawMetricQueryNewrelic:SloObjectiveRawMetricQueryNewrelic"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "opentsdbs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveRawMetricQueryOpentsdb:SloObjectiveRawMetricQueryOpentsdb"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pingdoms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveRawMetricQueryPingdom:SloObjectiveRawMetricQueryPingdom"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "prometheuses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveRawMetricQueryPrometheus:SloObjectiveRawMetricQueryPrometheus"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redshifts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveRawMetricQueryRedshift:SloObjectiveRawMetricQueryRedshift"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "splunkObservabilities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveRawMetricQuerySplunkObservability:SloObjectiveRawMetricQuerySplunkObservability"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "splunks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveRawMetricQuerySplunk:SloObjectiveRawMetricQuerySplunk"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sumologics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveRawMetricQuerySumologic:SloObjectiveRawMetricQuerySumologic"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "thousandeyes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveRawMetricQueryThousandeye:SloObjectiveRawMetricQueryThousandeye"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "nobl9:index/SloObjectiveRawMetricQueryAmazonPrometheus:SloObjectiveRawMetricQueryAmazonPrometheus": {
            "properties": {
                "promql": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "promql"
            ]
        },
        "nobl9:index/SloObjectiveRawMetricQueryAppdynamic:SloObjectiveRawMetricQueryAppdynamic": {
            "properties": {
                "applicationName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "applicationName",
                "metricPath"
            ]
        },
        "nobl9:index/SloObjectiveRawMetricQueryBigquery:SloObjectiveRawMetricQueryBigquery": {
            "properties": {
                "location": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "projectId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "location",
                "projectId",
                "query"
            ]
        },
        "nobl9:index/SloObjectiveRawMetricQueryCloudwatch:SloObjectiveRawMetricQueryCloudwatch": {
            "properties": {
                "dimensions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveRawMetricQueryCloudwatchDimension:SloObjectiveRawMetricQueryCloudwatchDimension"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "json": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "namespace": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sql": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "stat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "region"
            ]
        },
        "nobl9:index/SloObjectiveRawMetricQueryCloudwatchDimension:SloObjectiveRawMetricQueryCloudwatchDimension": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name",
                "value"
            ]
        },
        "nobl9:index/SloObjectiveRawMetricQueryDatadog:SloObjectiveRawMetricQueryDatadog": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "nobl9:index/SloObjectiveRawMetricQueryDynatrace:SloObjectiveRawMetricQueryDynatrace": {
            "properties": {
                "metricSelector": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metricSelector"
            ]
        },
        "nobl9:index/SloObjectiveRawMetricQueryElasticsearch:SloObjectiveRawMetricQueryElasticsearch": {
            "properties": {
                "index": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "index",
                "query"
            ]
        },
        "nobl9:index/SloObjectiveRawMetricQueryGcm:SloObjectiveRawMetricQueryGcm": {
            "properties": {
                "projectId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "projectId",
                "query"
            ]
        },
        "nobl9:index/SloObjectiveRawMetricQueryGrafanaLoki:SloObjectiveRawMetricQueryGrafanaLoki": {
            "properties": {
                "logql": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "logql"
            ]
        },
        "nobl9:index/SloObjectiveRawMetricQueryGraphite:SloObjectiveRawMetricQueryGraphite": {
            "properties": {
                "metricPath": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metricPath"
            ]
        },
        "nobl9:index/SloObjectiveRawMetricQueryInfluxdb:SloObjectiveRawMetricQueryInfluxdb": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "nobl9:index/SloObjectiveRawMetricQueryInstana:SloObjectiveRawMetricQueryInstana": {
            "properties": {
                "applications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveRawMetricQueryInstanaApplication:SloObjectiveRawMetricQueryInstanaApplication"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "infrastructures": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveRawMetricQueryInstanaInfrastructure:SloObjectiveRawMetricQueryInstanaInfrastructure"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metricType"
            ]
        },
        "nobl9:index/SloObjectiveRawMetricQueryInstanaApplication:SloObjectiveRawMetricQueryInstanaApplication": {
            "properties": {
                "aggregation": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "apiQuery": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "groupBies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjectiveRawMetricQueryInstanaApplicationGroupBy:SloObjectiveRawMetricQueryInstanaApplicationGroupBy"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includeInternal": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "includeSynthetic": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "aggregation",
                "apiQuery",
                "groupBies",
                "metricId"
            ]
        },
        "nobl9:index/SloObjectiveRawMetricQueryInstanaApplicationGroupBy:SloObjectiveRawMetricQueryInstanaApplicationGroupBy": {
            "properties": {
                "tag": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagEntity": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tagSecondLevelKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "tag",
                "tagEntity"
            ]
        },
        "nobl9:index/SloObjectiveRawMetricQueryInstanaInfrastructure:SloObjectiveRawMetricQueryInstanaInfrastructure": {
            "properties": {
                "metricId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "metricRetrievalMethod": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pluginId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "snapshotId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "metricId",
                "metricRetrievalMethod",
                "pluginId"
            ]
        },
        "nobl9:index/SloObjectiveRawMetricQueryLightstep:SloObjectiveRawMetricQueryLightstep": {
            "properties": {
                "percentile": {
                    "type": "number",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "streamId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "typeOfData": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uql": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "typeOfData"
            ]
        },
        "nobl9:index/SloObjectiveRawMetricQueryNewrelic:SloObjectiveRawMetricQueryNewrelic": {
            "properties": {
                "nrql": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "nrql"
            ]
        },
        "nobl9:index/SloObjectiveRawMetricQueryOpentsdb:SloObjectiveRawMetricQueryOpentsdb": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "nobl9:index/SloObjectiveRawMetricQueryPingdom:SloObjectiveRawMetricQueryPingdom": {
            "properties": {
                "checkId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "checkType": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "checkId"
            ]
        },
        "nobl9:index/SloObjectiveRawMetricQueryPrometheus:SloObjectiveRawMetricQueryPrometheus": {
            "properties": {
                "promql": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "promql"
            ]
        },
        "nobl9:index/SloObjectiveRawMetricQueryRedshift:SloObjectiveRawMetricQueryRedshift": {
            "properties": {
                "clusterId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "databaseName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "clusterId",
                "databaseName",
                "query",
                "region"
            ]
        },
        "nobl9:index/SloObjectiveRawMetricQuerySplunk:SloObjectiveRawMetricQuerySplunk": {
            "properties": {
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query"
            ]
        },
        "nobl9:index/SloObjectiveRawMetricQuerySplunkObservability:SloObjectiveRawMetricQuerySplunkObservability": {
            "properties": {
                "program": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "program"
            ]
        },
        "nobl9:index/SloObjectiveRawMetricQuerySumologic:SloObjectiveRawMetricQuerySumologic": {
            "properties": {
                "quantization": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "query": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rollup": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "query",
                "type"
            ]
        },
        "nobl9:index/SloObjectiveRawMetricQueryThousandeye:SloObjectiveRawMetricQueryThousandeye": {
            "properties": {
                "testId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "testId"
            ]
        },
        "nobl9:index/SloTimeWindow:SloTimeWindow": {
            "properties": {
                "calendars": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloTimeWindowCalendar:SloTimeWindowCalendar"
                    },
                    "description": "Alert Policies attached to SLO\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "count": {
                    "type": "integer",
                    "description": "Count of the time unit\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isRolling": {
                    "type": "boolean",
                    "description": "Is the window moving or not\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "period": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Period between start time and added count\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unit": {
                    "type": "string",
                    "description": "Unit of time\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "count",
                "unit"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "count",
                        "period",
                        "unit"
                    ]
                }
            }
        },
        "nobl9:index/SloTimeWindowCalendar:SloTimeWindowCalendar": {
            "properties": {
                "startTime": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeZone": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "startTime",
                "timeZone"
            ]
        }
    },
    "provider": {
        "description": "The provider type for the nobl9 package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "clientId": {
                "type": "string",
                "description": "the [Client ID](https://docs.nobl9.com/sloctl-user-guide/#configuration) of your Nobl9 account required to connect to\nNobl9.\n"
            },
            "clientSecret": {
                "type": "string",
                "description": "the [Client Secret](https://docs.nobl9.com/sloctl-user-guide/#configuration) of your Nobl9 account required to connect\nto Nobl9.\n"
            },
            "ingestUrl": {
                "type": "string",
                "description": "Nobl9 API URL.\n"
            },
            "oktaAuthServer": {
                "type": "string",
                "description": "Authorization service configuration.\n"
            },
            "oktaOrgUrl": {
                "type": "string",
                "description": "Authorization service URL.\n"
            },
            "organization": {
                "type": "string",
                "description": "Nobl9 [Organization ID](https://docs.nobl9.com/API_Documentation/api-endpoints-for-slo-annotations/#common-headers) that\ncontains resources managed by the Nobl9 Terraform provider.\n"
            },
            "project": {
                "type": "string",
                "description": "Nobl9 project used when importing resources.\n"
            }
        },
        "required": [
            "clientId",
            "clientSecret",
            "organization",
            "project"
        ],
        "inputProperties": {
            "clientId": {
                "type": "string",
                "description": "the [Client ID](https://docs.nobl9.com/sloctl-user-guide/#configuration) of your Nobl9 account required to connect to\nNobl9.\n"
            },
            "clientSecret": {
                "type": "string",
                "description": "the [Client Secret](https://docs.nobl9.com/sloctl-user-guide/#configuration) of your Nobl9 account required to connect\nto Nobl9.\n"
            },
            "ingestUrl": {
                "type": "string",
                "description": "Nobl9 API URL.\n"
            },
            "oktaAuthServer": {
                "type": "string",
                "description": "Authorization service configuration.\n"
            },
            "oktaOrgUrl": {
                "type": "string",
                "description": "Authorization service URL.\n"
            },
            "organization": {
                "type": "string",
                "description": "Nobl9 [Organization ID](https://docs.nobl9.com/API_Documentation/api-endpoints-for-slo-annotations/#common-headers) that\ncontains resources managed by the Nobl9 Terraform provider.\n"
            },
            "project": {
                "type": "string",
                "description": "Nobl9 project used when importing resources.\n"
            }
        },
        "requiredInputs": [
            "clientId",
            "clientSecret",
            "organization",
            "project"
        ]
    },
    "resources": {
        "nobl9:index/agent:Agent": {
            "description": "The Agent is a lightweight application that executes the queries defined for your Nobl9 SLOs. Queries are written in the language supported by the data source in question and executed via native APIs.\n\nThe Agent then sends your SLI metrics back to Nobl9 for processing and error budget calculation.\n\nFor more information, refer to [Agent configuration | Nobl9 Documentation](https://docs.nobl9.com/nobl9_agent)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nobl9 from \"@pulumi/nobl9\";\n\nconst thisProject = new nobl9.Project(\"thisProject\", {\n    displayName: \"Test N9 Terraform\",\n    description: \"An example N9 Terraform project\",\n});\nconst thisAgent = new nobl9.Agent(\"thisAgent\", {\n    project: thisProject.name,\n    sourceOfs: [\n        \"Metrics\",\n        \"Services\",\n    ],\n    agentType: \"prometheus\",\n    prometheusConfig: {\n        url: \"http://web.net\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_nobl9 as nobl9\n\nthis_project = nobl9.Project(\"thisProject\",\n    display_name=\"Test N9 Terraform\",\n    description=\"An example N9 Terraform project\")\nthis_agent = nobl9.Agent(\"thisAgent\",\n    project=this_project.name,\n    source_ofs=[\n        \"Metrics\",\n        \"Services\",\n    ],\n    agent_type=\"prometheus\",\n    prometheus_config=nobl9.AgentPrometheusConfigArgs(\n        url=\"http://web.net\",\n    ))\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Nobl9 = Pulumi.Nobl9;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var thisProject = new Nobl9.Project(\"thisProject\", new()\n    {\n        DisplayName = \"Test N9 Terraform\",\n        Description = \"An example N9 Terraform project\",\n    });\n\n    var thisAgent = new Nobl9.Agent(\"thisAgent\", new()\n    {\n        Project = thisProject.Name,\n        SourceOfs = new[]\n        {\n            \"Metrics\",\n            \"Services\",\n        },\n        AgentType = \"prometheus\",\n        PrometheusConfig = new Nobl9.Inputs.AgentPrometheusConfigArgs\n        {\n            Url = \"http://web.net\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-nobl9/sdk/go/nobl9\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tthisProject, err := nobl9.NewProject(ctx, \"thisProject\", \u0026nobl9.ProjectArgs{\n\t\t\tDisplayName: pulumi.String(\"Test N9 Terraform\"),\n\t\t\tDescription: pulumi.String(\"An example N9 Terraform project\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = nobl9.NewAgent(ctx, \"thisAgent\", \u0026nobl9.AgentArgs{\n\t\t\tProject: thisProject.Name,\n\t\t\tSourceOfs: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Metrics\"),\n\t\t\t\tpulumi.String(\"Services\"),\n\t\t\t},\n\t\t\tAgentType: pulumi.String(\"prometheus\"),\n\t\t\tPrometheusConfig: \u0026AgentPrometheusConfigArgs{\n\t\t\t\tUrl: pulumi.String(\"http://web.net\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nobl9.Project;\nimport com.pulumi.nobl9.ProjectArgs;\nimport com.pulumi.nobl9.Agent;\nimport com.pulumi.nobl9.AgentArgs;\nimport com.pulumi.nobl9.inputs.AgentPrometheusConfigArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var thisProject = new Project(\"thisProject\", ProjectArgs.builder()        \n            .displayName(\"Test N9 Terraform\")\n            .description(\"An example N9 Terraform project\")\n            .build());\n\n        var thisAgent = new Agent(\"thisAgent\", AgentArgs.builder()        \n            .project(thisProject.name())\n            .sourceOfs(            \n                \"Metrics\",\n                \"Services\")\n            .agentType(\"prometheus\")\n            .prometheusConfig(AgentPrometheusConfigArgs.builder()\n                .url(\"http://web.net\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  thisProject:\n    type: nobl9:Project\n    properties:\n      displayName: Test N9 Terraform\n      description: An example N9 Terraform project\n  thisAgent:\n    type: nobl9:Agent\n    properties:\n      project: ${thisProject.name}\n      sourceOfs:\n        - Metrics\n        - Services\n      agentType: prometheus\n      prometheusConfig:\n        url: http://web.net\n```\n\n{{% /example %}}\n{{% /examples %}}\n## Nobl9 Official Documentation\n\nhttps://docs.nobl9.com/\n",
            "properties": {
                "agentType": {
                    "type": "string",
                    "description": "The type of the Agent. Check [Supported Agent types | Nobl9 Documentation](https://docs.nobl9.com/Sources/)\n"
                },
                "amazonPrometheusConfig": {
                    "$ref": "#/types/nobl9:index/AgentAmazonPrometheusConfig:AgentAmazonPrometheusConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Prometheus/#ams-prometheus-agent)\n"
                },
                "appdynamicsConfig": {
                    "$ref": "#/types/nobl9:index/AgentAppdynamicsConfig:AgentAppdynamicsConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/appdynamics#appdynamics-agent)\n"
                },
                "bigqueryConfig": {
                    "$ref": "#/types/nobl9:index/AgentBigqueryConfig:AgentBigqueryConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/bigquery#bigquery-agent)\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "client_id of created agent.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "client_secret of created agent.\n"
                },
                "cloudwatchConfig": {
                    "$ref": "#/types/nobl9:index/AgentCloudwatchConfig:AgentCloudwatchConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/Amazon_CloudWatch/#cloudwatch-agent)\n"
                },
                "datadogConfig": {
                    "$ref": "#/types/nobl9:index/AgentDatadogConfig:AgentDatadogConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/datadog#datadog-agent)\n"
                },
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "dynatraceConfig": {
                    "$ref": "#/types/nobl9:index/AgentDynatraceConfig:AgentDynatraceConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/dynatrace#dynatrace-agent)\n"
                },
                "elasticsearchConfig": {
                    "$ref": "#/types/nobl9:index/AgentElasticsearchConfig:AgentElasticsearchConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/elasticsearch#elasticsearch-agent)\n"
                },
                "gcmConfig": {
                    "$ref": "#/types/nobl9:index/AgentGcmConfig:AgentGcmConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/google-cloud-monitoring#google-cloud-monitoring-agent)\n"
                },
                "grafanaLokiConfig": {
                    "$ref": "#/types/nobl9:index/AgentGrafanaLokiConfig:AgentGrafanaLokiConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/grafana-loki#grafana-loki-agent)\n"
                },
                "graphiteConfig": {
                    "$ref": "#/types/nobl9:index/AgentGraphiteConfig:AgentGraphiteConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/graphite#graphite-agent)\n"
                },
                "influxdbConfig": {
                    "$ref": "#/types/nobl9:index/AgentInfluxdbConfig:AgentInfluxdbConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/influxdb#influxdb-agent)\n"
                },
                "instanaConfig": {
                    "$ref": "#/types/nobl9:index/AgentInstanaConfig:AgentInstanaConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/instana#instana-agent)\n"
                },
                "lightstepConfig": {
                    "$ref": "#/types/nobl9:index/AgentLightstepConfig:AgentLightstepConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/lightstep#lightstep-agent)\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "newrelicConfig": {
                    "$ref": "#/types/nobl9:index/AgentNewrelicConfig:AgentNewrelicConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/new-relic#new-relic-agent)\n"
                },
                "opentsdbConfig": {
                    "$ref": "#/types/nobl9:index/AgentOpentsdbConfig:AgentOpentsdbConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/opentsdb#opentsdb-agent)\n"
                },
                "pingdomConfig": {
                    "$ref": "#/types/nobl9:index/AgentPingdomConfig:AgentPingdomConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/pingdom#pingdom-agent)\n"
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "prometheusConfig": {
                    "$ref": "#/types/nobl9:index/AgentPrometheusConfig:AgentPrometheusConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/prometheus#prometheus-agent)\n"
                },
                "queryDelay": {
                    "$ref": "#/types/nobl9:index/AgentQueryDelay:AgentQueryDelay",
                    "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                },
                "redshiftConfig": {
                    "$ref": "#/types/nobl9:index/AgentRedshiftConfig:AgentRedshiftConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Redshift/?_highlight=redshift#amazon-redshift-agent)\n"
                },
                "sourceOfs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Source of Metrics and/or Services.\n"
                },
                "splunkConfig": {
                    "$ref": "#/types/nobl9:index/AgentSplunkConfig:AgentSplunkConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/splunk#splunk-agent)\n"
                },
                "splunkObservabilityConfig": {
                    "$ref": "#/types/nobl9:index/AgentSplunkObservabilityConfig:AgentSplunkObservabilityConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/splunk-observability/#splunk-observability-agent)\n"
                },
                "status": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "pulumi.json#/Any"
                    },
                    "description": "Status of the created agent.\n"
                },
                "sumologicConfig": {
                    "$ref": "#/types/nobl9:index/AgentSumologicConfig:AgentSumologicConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/sumo-logic#sumo-logic-agent)\n"
                },
                "thousandeyesConfig": {
                    "$ref": "#/types/nobl9:index/AgentThousandeyesConfig:AgentThousandeyesConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/thousandeyes#thousandeyes-agent)\n"
                }
            },
            "required": [
                "agentType",
                "clientId",
                "clientSecret",
                "name",
                "project",
                "sourceOfs",
                "status"
            ],
            "inputProperties": {
                "agentType": {
                    "type": "string",
                    "description": "The type of the Agent. Check [Supported Agent types | Nobl9 Documentation](https://docs.nobl9.com/Sources/)\n"
                },
                "amazonPrometheusConfig": {
                    "$ref": "#/types/nobl9:index/AgentAmazonPrometheusConfig:AgentAmazonPrometheusConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Prometheus/#ams-prometheus-agent)\n"
                },
                "appdynamicsConfig": {
                    "$ref": "#/types/nobl9:index/AgentAppdynamicsConfig:AgentAppdynamicsConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/appdynamics#appdynamics-agent)\n"
                },
                "bigqueryConfig": {
                    "$ref": "#/types/nobl9:index/AgentBigqueryConfig:AgentBigqueryConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/bigquery#bigquery-agent)\n"
                },
                "cloudwatchConfig": {
                    "$ref": "#/types/nobl9:index/AgentCloudwatchConfig:AgentCloudwatchConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/Amazon_CloudWatch/#cloudwatch-agent)\n"
                },
                "datadogConfig": {
                    "$ref": "#/types/nobl9:index/AgentDatadogConfig:AgentDatadogConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/datadog#datadog-agent)\n"
                },
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "dynatraceConfig": {
                    "$ref": "#/types/nobl9:index/AgentDynatraceConfig:AgentDynatraceConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/dynatrace#dynatrace-agent)\n"
                },
                "elasticsearchConfig": {
                    "$ref": "#/types/nobl9:index/AgentElasticsearchConfig:AgentElasticsearchConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/elasticsearch#elasticsearch-agent)\n"
                },
                "gcmConfig": {
                    "$ref": "#/types/nobl9:index/AgentGcmConfig:AgentGcmConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/google-cloud-monitoring#google-cloud-monitoring-agent)\n"
                },
                "grafanaLokiConfig": {
                    "$ref": "#/types/nobl9:index/AgentGrafanaLokiConfig:AgentGrafanaLokiConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/grafana-loki#grafana-loki-agent)\n"
                },
                "graphiteConfig": {
                    "$ref": "#/types/nobl9:index/AgentGraphiteConfig:AgentGraphiteConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/graphite#graphite-agent)\n"
                },
                "influxdbConfig": {
                    "$ref": "#/types/nobl9:index/AgentInfluxdbConfig:AgentInfluxdbConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/influxdb#influxdb-agent)\n"
                },
                "instanaConfig": {
                    "$ref": "#/types/nobl9:index/AgentInstanaConfig:AgentInstanaConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/instana#instana-agent)\n"
                },
                "lightstepConfig": {
                    "$ref": "#/types/nobl9:index/AgentLightstepConfig:AgentLightstepConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/lightstep#lightstep-agent)\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "newrelicConfig": {
                    "$ref": "#/types/nobl9:index/AgentNewrelicConfig:AgentNewrelicConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/new-relic#new-relic-agent)\n"
                },
                "opentsdbConfig": {
                    "$ref": "#/types/nobl9:index/AgentOpentsdbConfig:AgentOpentsdbConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/opentsdb#opentsdb-agent)\n"
                },
                "pingdomConfig": {
                    "$ref": "#/types/nobl9:index/AgentPingdomConfig:AgentPingdomConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/pingdom#pingdom-agent)\n"
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "prometheusConfig": {
                    "$ref": "#/types/nobl9:index/AgentPrometheusConfig:AgentPrometheusConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/prometheus#prometheus-agent)\n"
                },
                "queryDelay": {
                    "$ref": "#/types/nobl9:index/AgentQueryDelay:AgentQueryDelay",
                    "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                },
                "redshiftConfig": {
                    "$ref": "#/types/nobl9:index/AgentRedshiftConfig:AgentRedshiftConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Redshift/?_highlight=redshift#amazon-redshift-agent)\n"
                },
                "sourceOfs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Source of Metrics and/or Services.\n"
                },
                "splunkConfig": {
                    "$ref": "#/types/nobl9:index/AgentSplunkConfig:AgentSplunkConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/splunk#splunk-agent)\n"
                },
                "splunkObservabilityConfig": {
                    "$ref": "#/types/nobl9:index/AgentSplunkObservabilityConfig:AgentSplunkObservabilityConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/splunk-observability/#splunk-observability-agent)\n"
                },
                "sumologicConfig": {
                    "$ref": "#/types/nobl9:index/AgentSumologicConfig:AgentSumologicConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/sumo-logic#sumo-logic-agent)\n"
                },
                "thousandeyesConfig": {
                    "$ref": "#/types/nobl9:index/AgentThousandeyesConfig:AgentThousandeyesConfig",
                    "description": "[Configuration documentation](https://docs.nobl9.com/Sources/thousandeyes#thousandeyes-agent)\n"
                }
            },
            "requiredInputs": [
                "agentType",
                "project",
                "sourceOfs"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Agent resources.\n",
                "properties": {
                    "agentType": {
                        "type": "string",
                        "description": "The type of the Agent. Check [Supported Agent types | Nobl9 Documentation](https://docs.nobl9.com/Sources/)\n"
                    },
                    "amazonPrometheusConfig": {
                        "$ref": "#/types/nobl9:index/AgentAmazonPrometheusConfig:AgentAmazonPrometheusConfig",
                        "description": "[Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Prometheus/#ams-prometheus-agent)\n"
                    },
                    "appdynamicsConfig": {
                        "$ref": "#/types/nobl9:index/AgentAppdynamicsConfig:AgentAppdynamicsConfig",
                        "description": "[Configuration documentation](https://docs.nobl9.com/Sources/appdynamics#appdynamics-agent)\n"
                    },
                    "bigqueryConfig": {
                        "$ref": "#/types/nobl9:index/AgentBigqueryConfig:AgentBigqueryConfig",
                        "description": "[Configuration documentation](https://docs.nobl9.com/Sources/bigquery#bigquery-agent)\n"
                    },
                    "clientId": {
                        "type": "string",
                        "description": "client_id of created agent.\n"
                    },
                    "clientSecret": {
                        "type": "string",
                        "description": "client_secret of created agent.\n"
                    },
                    "cloudwatchConfig": {
                        "$ref": "#/types/nobl9:index/AgentCloudwatchConfig:AgentCloudwatchConfig",
                        "description": "[Configuration documentation](https://docs.nobl9.com/Sources/Amazon_CloudWatch/#cloudwatch-agent)\n"
                    },
                    "datadogConfig": {
                        "$ref": "#/types/nobl9:index/AgentDatadogConfig:AgentDatadogConfig",
                        "description": "[Configuration documentation](https://docs.nobl9.com/Sources/datadog#datadog-agent)\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "User-friendly display name of the resource.\n"
                    },
                    "dynatraceConfig": {
                        "$ref": "#/types/nobl9:index/AgentDynatraceConfig:AgentDynatraceConfig",
                        "description": "[Configuration documentation](https://docs.nobl9.com/Sources/dynatrace#dynatrace-agent)\n"
                    },
                    "elasticsearchConfig": {
                        "$ref": "#/types/nobl9:index/AgentElasticsearchConfig:AgentElasticsearchConfig",
                        "description": "[Configuration documentation](https://docs.nobl9.com/Sources/elasticsearch#elasticsearch-agent)\n"
                    },
                    "gcmConfig": {
                        "$ref": "#/types/nobl9:index/AgentGcmConfig:AgentGcmConfig",
                        "description": "[Configuration documentation](https://docs.nobl9.com/Sources/google-cloud-monitoring#google-cloud-monitoring-agent)\n"
                    },
                    "grafanaLokiConfig": {
                        "$ref": "#/types/nobl9:index/AgentGrafanaLokiConfig:AgentGrafanaLokiConfig",
                        "description": "[Configuration documentation](https://docs.nobl9.com/Sources/grafana-loki#grafana-loki-agent)\n"
                    },
                    "graphiteConfig": {
                        "$ref": "#/types/nobl9:index/AgentGraphiteConfig:AgentGraphiteConfig",
                        "description": "[Configuration documentation](https://docs.nobl9.com/Sources/graphite#graphite-agent)\n"
                    },
                    "influxdbConfig": {
                        "$ref": "#/types/nobl9:index/AgentInfluxdbConfig:AgentInfluxdbConfig",
                        "description": "[Configuration documentation](https://docs.nobl9.com/Sources/influxdb#influxdb-agent)\n"
                    },
                    "instanaConfig": {
                        "$ref": "#/types/nobl9:index/AgentInstanaConfig:AgentInstanaConfig",
                        "description": "[Configuration documentation](https://docs.nobl9.com/Sources/instana#instana-agent)\n"
                    },
                    "lightstepConfig": {
                        "$ref": "#/types/nobl9:index/AgentLightstepConfig:AgentLightstepConfig",
                        "description": "[Configuration documentation](https://docs.nobl9.com/Sources/lightstep#lightstep-agent)\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "newrelicConfig": {
                        "$ref": "#/types/nobl9:index/AgentNewrelicConfig:AgentNewrelicConfig",
                        "description": "[Configuration documentation](https://docs.nobl9.com/Sources/new-relic#new-relic-agent)\n"
                    },
                    "opentsdbConfig": {
                        "$ref": "#/types/nobl9:index/AgentOpentsdbConfig:AgentOpentsdbConfig",
                        "description": "[Configuration documentation](https://docs.nobl9.com/Sources/opentsdb#opentsdb-agent)\n"
                    },
                    "pingdomConfig": {
                        "$ref": "#/types/nobl9:index/AgentPingdomConfig:AgentPingdomConfig",
                        "description": "[Configuration documentation](https://docs.nobl9.com/Sources/pingdom#pingdom-agent)\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "prometheusConfig": {
                        "$ref": "#/types/nobl9:index/AgentPrometheusConfig:AgentPrometheusConfig",
                        "description": "[Configuration documentation](https://docs.nobl9.com/Sources/prometheus#prometheus-agent)\n"
                    },
                    "queryDelay": {
                        "$ref": "#/types/nobl9:index/AgentQueryDelay:AgentQueryDelay",
                        "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                    },
                    "redshiftConfig": {
                        "$ref": "#/types/nobl9:index/AgentRedshiftConfig:AgentRedshiftConfig",
                        "description": "[Configuration documentation](https://docs.nobl9.com/Sources/Amazon_Redshift/?_highlight=redshift#amazon-redshift-agent)\n"
                    },
                    "sourceOfs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Source of Metrics and/or Services.\n"
                    },
                    "splunkConfig": {
                        "$ref": "#/types/nobl9:index/AgentSplunkConfig:AgentSplunkConfig",
                        "description": "[Configuration documentation](https://docs.nobl9.com/Sources/splunk#splunk-agent)\n"
                    },
                    "splunkObservabilityConfig": {
                        "$ref": "#/types/nobl9:index/AgentSplunkObservabilityConfig:AgentSplunkObservabilityConfig",
                        "description": "[Configuration documentation](https://docs.nobl9.com/Sources/splunk-observability/#splunk-observability-agent)\n"
                    },
                    "status": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "description": "Status of the created agent.\n"
                    },
                    "sumologicConfig": {
                        "$ref": "#/types/nobl9:index/AgentSumologicConfig:AgentSumologicConfig",
                        "description": "[Configuration documentation](https://docs.nobl9.com/Sources/sumo-logic#sumo-logic-agent)\n"
                    },
                    "thousandeyesConfig": {
                        "$ref": "#/types/nobl9:index/AgentThousandeyesConfig:AgentThousandeyesConfig",
                        "description": "[Configuration documentation](https://docs.nobl9.com/Sources/thousandeyes#thousandeyes-agent)\n"
                    }
                },
                "type": "object"
            }
        },
        "nobl9:index/alertMethodDiscord:AlertMethodDiscord": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "url": {
                    "type": "string",
                    "description": "Discord webhook endpoint URL. Refer to [Intro to webhooks | Discord documentation](https://support.discord.com/hc/en-us/articles/228383668-Intro-to-Webhooks) for more details.\n"
                }
            },
            "required": [
                "name",
                "project",
                "url"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "url": {
                    "type": "string",
                    "description": "Discord webhook endpoint URL. Refer to [Intro to webhooks | Discord documentation](https://support.discord.com/hc/en-us/articles/228383668-Intro-to-Webhooks) for more details.\n"
                }
            },
            "requiredInputs": [
                "project"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AlertMethodDiscord resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "User-friendly display name of the resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "url": {
                        "type": "string",
                        "description": "Discord webhook endpoint URL. Refer to [Intro to webhooks | Discord documentation](https://support.discord.com/hc/en-us/articles/228383668-Intro-to-Webhooks) for more details.\n"
                    }
                },
                "type": "object"
            }
        },
        "nobl9:index/alertMethodEmail:AlertMethodEmail": {
            "properties": {
                "bccs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Blind carbon copy recipients. The maximum number of recipients is 10.\n"
                },
                "body": {
                    "type": "string",
                    "description": "The Body of the email alert. For the format of the body and the list of variables that you can define, refer to the [Nobl9 documentation](https://docs.nobl9.com/Alerting/Alert_methods/email-alert#yaml-configuration).\n"
                },
                "ccs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Carbon copy recipients. The maximum number of recipients is 10.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The Subject of the email alert.\n"
                },
                "tos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Recipients. The maximum number of recipients is 10.\n"
                }
            },
            "required": [
                "body",
                "name",
                "project",
                "subject",
                "tos"
            ],
            "inputProperties": {
                "bccs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Blind carbon copy recipients. The maximum number of recipients is 10.\n"
                },
                "body": {
                    "type": "string",
                    "description": "The Body of the email alert. For the format of the body and the list of variables that you can define, refer to the [Nobl9 documentation](https://docs.nobl9.com/Alerting/Alert_methods/email-alert#yaml-configuration).\n"
                },
                "ccs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Carbon copy recipients. The maximum number of recipients is 10.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "subject": {
                    "type": "string",
                    "description": "The Subject of the email alert.\n"
                },
                "tos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Recipients. The maximum number of recipients is 10.\n"
                }
            },
            "requiredInputs": [
                "body",
                "project",
                "subject",
                "tos"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AlertMethodEmail resources.\n",
                "properties": {
                    "bccs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Blind carbon copy recipients. The maximum number of recipients is 10.\n"
                    },
                    "body": {
                        "type": "string",
                        "description": "The Body of the email alert. For the format of the body and the list of variables that you can define, refer to the [Nobl9 documentation](https://docs.nobl9.com/Alerting/Alert_methods/email-alert#yaml-configuration).\n"
                    },
                    "ccs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Carbon copy recipients. The maximum number of recipients is 10.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "User-friendly display name of the resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "subject": {
                        "type": "string",
                        "description": "The Subject of the email alert.\n"
                    },
                    "tos": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Recipients. The maximum number of recipients is 10.\n"
                    }
                },
                "type": "object"
            }
        },
        "nobl9:index/alertMethodJira:AlertMethodJira": {
            "properties": {
                "apitoken": {
                    "type": "string",
                    "description": "[API Token](https://support.atlassian.com/atlassian-account/docs/manage-api-tokens-for-your-atlassian-account/) with access rights to the project.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "projectKey": {
                    "type": "string",
                    "description": "The code of the Jira project.\n"
                },
                "url": {
                    "type": "string",
                    "description": "Jira instance URL. The `https://` prefix is required.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Jira username for the owner of the API Token.\n"
                }
            },
            "required": [
                "apitoken",
                "name",
                "project",
                "projectKey",
                "url",
                "username"
            ],
            "inputProperties": {
                "apitoken": {
                    "type": "string",
                    "description": "[API Token](https://support.atlassian.com/atlassian-account/docs/manage-api-tokens-for-your-atlassian-account/) with access rights to the project.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "projectKey": {
                    "type": "string",
                    "description": "The code of the Jira project.\n"
                },
                "url": {
                    "type": "string",
                    "description": "Jira instance URL. The `https://` prefix is required.\n"
                },
                "username": {
                    "type": "string",
                    "description": "Jira username for the owner of the API Token.\n"
                }
            },
            "requiredInputs": [
                "project",
                "projectKey",
                "url",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AlertMethodJira resources.\n",
                "properties": {
                    "apitoken": {
                        "type": "string",
                        "description": "[API Token](https://support.atlassian.com/atlassian-account/docs/manage-api-tokens-for-your-atlassian-account/) with access rights to the project.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "User-friendly display name of the resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "projectKey": {
                        "type": "string",
                        "description": "The code of the Jira project.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "Jira instance URL. The `https://` prefix is required.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Jira username for the owner of the API Token.\n"
                    }
                },
                "type": "object"
            }
        },
        "nobl9:index/alertMethodMsteams:AlertMethodMsteams": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "url": {
                    "type": "string",
                    "description": "MS Teams [webhook endpoint URL](https://learn.microsoft.com/en-us/microsoftteams/platform/webhooks-and-connectors/how-to/add-incoming-webhook).\n"
                }
            },
            "required": [
                "name",
                "project",
                "url"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "url": {
                    "type": "string",
                    "description": "MS Teams [webhook endpoint URL](https://learn.microsoft.com/en-us/microsoftteams/platform/webhooks-and-connectors/how-to/add-incoming-webhook).\n"
                }
            },
            "requiredInputs": [
                "project"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AlertMethodMsteams resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "User-friendly display name of the resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "url": {
                        "type": "string",
                        "description": "MS Teams [webhook endpoint URL](https://learn.microsoft.com/en-us/microsoftteams/platform/webhooks-and-connectors/how-to/add-incoming-webhook).\n"
                    }
                },
                "type": "object"
            }
        },
        "nobl9:index/alertMethodOpsgenie:AlertMethodOpsgenie": {
            "properties": {
                "auth": {
                    "type": "string",
                    "description": "Opsgenie authentication credentials. See [Nobl9 documentation](https://docs.nobl9.com/Alerting/Alert_methods/opsgenie#authentication) for supported formats.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "url": {
                    "type": "string",
                    "description": "Opsgenie API URL. See [Nobl9 documentation](https://docs.nobl9.com/Alerting/Alert_methods/opsgenie#creating-opsgenie-api-key) for more details.\n"
                }
            },
            "required": [
                "auth",
                "name",
                "project",
                "url"
            ],
            "inputProperties": {
                "auth": {
                    "type": "string",
                    "description": "Opsgenie authentication credentials. See [Nobl9 documentation](https://docs.nobl9.com/Alerting/Alert_methods/opsgenie#authentication) for supported formats.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "url": {
                    "type": "string",
                    "description": "Opsgenie API URL. See [Nobl9 documentation](https://docs.nobl9.com/Alerting/Alert_methods/opsgenie#creating-opsgenie-api-key) for more details.\n"
                }
            },
            "requiredInputs": [
                "project",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AlertMethodOpsgenie resources.\n",
                "properties": {
                    "auth": {
                        "type": "string",
                        "description": "Opsgenie authentication credentials. See [Nobl9 documentation](https://docs.nobl9.com/Alerting/Alert_methods/opsgenie#authentication) for supported formats.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "User-friendly display name of the resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "url": {
                        "type": "string",
                        "description": "Opsgenie API URL. See [Nobl9 documentation](https://docs.nobl9.com/Alerting/Alert_methods/opsgenie#creating-opsgenie-api-key) for more details.\n"
                    }
                },
                "type": "object"
            }
        },
        "nobl9:index/alertMethodPagerduty:AlertMethodPagerduty": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "integrationKey": {
                    "type": "string",
                    "description": "PagerDuty Integration Key. For more details, check [Services and integrations](https://support.pagerduty.com/docs/services-and-integrations).\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                }
            },
            "required": [
                "integrationKey",
                "name",
                "project"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "integrationKey": {
                    "type": "string",
                    "description": "PagerDuty Integration Key. For more details, check [Services and integrations](https://support.pagerduty.com/docs/services-and-integrations).\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "project"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AlertMethodPagerduty resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "User-friendly display name of the resource.\n"
                    },
                    "integrationKey": {
                        "type": "string",
                        "description": "PagerDuty Integration Key. For more details, check [Services and integrations](https://support.pagerduty.com/docs/services-and-integrations).\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "nobl9:index/alertMethodServicenow:AlertMethodServicenow": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "instanceName": {
                    "type": "string",
                    "description": "ServiceNow InstanceName. For details see [Nobl9 documentation](https://docs.nobl9.com/Alerting/Alert_methods/servicenow#servicenow-credentials).\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "password": {
                    "type": "string",
                    "description": "ServiceNow password.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "username": {
                    "type": "string",
                    "description": "ServiceNow username.\n"
                }
            },
            "required": [
                "instanceName",
                "name",
                "password",
                "project",
                "username"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "instanceName": {
                    "type": "string",
                    "description": "ServiceNow InstanceName. For details see [Nobl9 documentation](https://docs.nobl9.com/Alerting/Alert_methods/servicenow#servicenow-credentials).\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "password": {
                    "type": "string",
                    "description": "ServiceNow password.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "username": {
                    "type": "string",
                    "description": "ServiceNow username.\n"
                }
            },
            "requiredInputs": [
                "instanceName",
                "project",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AlertMethodServicenow resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "User-friendly display name of the resource.\n"
                    },
                    "instanceName": {
                        "type": "string",
                        "description": "ServiceNow InstanceName. For details see [Nobl9 documentation](https://docs.nobl9.com/Alerting/Alert_methods/servicenow#servicenow-credentials).\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "password": {
                        "type": "string",
                        "description": "ServiceNow password.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "username": {
                        "type": "string",
                        "description": "ServiceNow username.\n"
                    }
                },
                "type": "object"
            }
        },
        "nobl9:index/alertMethodSlack:AlertMethodSlack": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "url": {
                    "type": "string",
                    "description": "Slack [webhook endpoint URL](https://slack.com/help/articles/115005265063-Incoming-webhooks-for-Slack%22).\n"
                }
            },
            "required": [
                "name",
                "project",
                "url"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "url": {
                    "type": "string",
                    "description": "Slack [webhook endpoint URL](https://slack.com/help/articles/115005265063-Incoming-webhooks-for-Slack%22).\n"
                }
            },
            "requiredInputs": [
                "project"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AlertMethodSlack resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "User-friendly display name of the resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "url": {
                        "type": "string",
                        "description": "Slack [webhook endpoint URL](https://slack.com/help/articles/115005265063-Incoming-webhooks-for-Slack%22).\n"
                    }
                },
                "type": "object"
            }
        },
        "nobl9:index/alertMethodWebhook:AlertMethodWebhook": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "template": {
                    "type": "string",
                    "description": "Webhook message template. See documentation for template format and samples.\n"
                },
                "templateFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Webhook message fields. The message contains JSON payload with specified fields. See documentation for allowed fields.\n"
                },
                "url": {
                    "type": "string",
                    "description": "URL of the webhook endpoint.\n"
                }
            },
            "required": [
                "name",
                "project",
                "url"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "template": {
                    "type": "string",
                    "description": "Webhook message template. See documentation for template format and samples.\n"
                },
                "templateFields": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Webhook message fields. The message contains JSON payload with specified fields. See documentation for allowed fields.\n"
                },
                "url": {
                    "type": "string",
                    "description": "URL of the webhook endpoint.\n"
                }
            },
            "requiredInputs": [
                "project"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AlertMethodWebhook resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "User-friendly display name of the resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "template": {
                        "type": "string",
                        "description": "Webhook message template. See documentation for template format and samples.\n"
                    },
                    "templateFields": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Webhook message fields. The message contains JSON payload with specified fields. See documentation for allowed fields.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "URL of the webhook endpoint.\n"
                    }
                },
                "type": "object"
            }
        },
        "nobl9:index/alertPolicy:AlertPolicy": {
            "description": "An **Alert Policy** expresses a set of conditions you want to track or monitor. The conditions for an Alert Policy define what is monitored and when to activate an alert: when the performance of your service is declining, Nobl9 will send a notification to a predefined channel.\n\nA Nobl9 AlertPolicy accepts up to 7 conditions. All the specified conditions must be satisfied to trigger an alert.\n\nFor more details, refer to the [Alert Policy configuration | Nobl9 Documentation](https://docs.nobl9.com/yaml-guide#alertpolicy).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nHere's an example of Alert Policy resource configuration:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nobl9 from \"@pulumi/nobl9\";\n\nconst thisProject = new nobl9.Project(\"thisProject\", {\n    displayName: \"My Project\",\n    description: \"An example N9 Terraform project\",\n});\nconst thisService = new nobl9.Service(\"thisService\", {\n    project: thisProject.name,\n    displayName: thisProject.displayName.apply(displayName =\u003e `${displayName} Front Page`),\n    description: \"Front page service\",\n});\nconst thisAlertPolicy = new nobl9.AlertPolicy(\"thisAlertPolicy\", {\n    project: thisProject.name,\n    displayName: thisProject.displayName.apply(displayName =\u003e `${displayName} Front Page Latency`),\n    severity: \"High\",\n    description: \"Alert when page latency is \u003e 2000 and error budget would be exhausted\",\n    conditions: [{\n        measurement: \"timeToBurnBudget\",\n        valueString: \"72h\",\n        lastsFor: \"30m\",\n    }],\n    alertMethods: [{\n        name: \"my-alert-method\",\n    }],\n});\n```\n```python\nimport pulumi\nimport pulumi_nobl9 as nobl9\n\nthis_project = nobl9.Project(\"thisProject\",\n    display_name=\"My Project\",\n    description=\"An example N9 Terraform project\")\nthis_service = nobl9.Service(\"thisService\",\n    project=this_project.name,\n    display_name=this_project.display_name.apply(lambda display_name: f\"{display_name} Front Page\"),\n    description=\"Front page service\")\nthis_alert_policy = nobl9.AlertPolicy(\"thisAlertPolicy\",\n    project=this_project.name,\n    display_name=this_project.display_name.apply(lambda display_name: f\"{display_name} Front Page Latency\"),\n    severity=\"High\",\n    description=\"Alert when page latency is \u003e 2000 and error budget would be exhausted\",\n    conditions=[nobl9.AlertPolicyConditionArgs(\n        measurement=\"timeToBurnBudget\",\n        value_string=\"72h\",\n        lasts_for=\"30m\",\n    )],\n    alert_methods=[nobl9.AlertPolicyAlertMethodArgs(\n        name=\"my-alert-method\",\n    )])\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Nobl9 = Pulumi.Nobl9;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var thisProject = new Nobl9.Project(\"thisProject\", new()\n    {\n        DisplayName = \"My Project\",\n        Description = \"An example N9 Terraform project\",\n    });\n\n    var thisService = new Nobl9.Service(\"thisService\", new()\n    {\n        Project = thisProject.Name,\n        DisplayName = thisProject.DisplayName.Apply(displayName =\u003e $\"{displayName} Front Page\"),\n        Description = \"Front page service\",\n    });\n\n    var thisAlertPolicy = new Nobl9.AlertPolicy(\"thisAlertPolicy\", new()\n    {\n        Project = thisProject.Name,\n        DisplayName = thisProject.DisplayName.Apply(displayName =\u003e $\"{displayName} Front Page Latency\"),\n        Severity = \"High\",\n        Description = \"Alert when page latency is \u003e 2000 and error budget would be exhausted\",\n        Conditions = new[]\n        {\n            new Nobl9.Inputs.AlertPolicyConditionArgs\n            {\n                Measurement = \"timeToBurnBudget\",\n                ValueString = \"72h\",\n                LastsFor = \"30m\",\n            },\n        },\n        AlertMethods = new[]\n        {\n            new Nobl9.Inputs.AlertPolicyAlertMethodArgs\n            {\n                Name = \"my-alert-method\",\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-nobl9/sdk/go/nobl9\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tthisProject, err := nobl9.NewProject(ctx, \"thisProject\", \u0026nobl9.ProjectArgs{\n\t\t\tDisplayName: pulumi.String(\"My Project\"),\n\t\t\tDescription: pulumi.String(\"An example N9 Terraform project\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = nobl9.NewService(ctx, \"thisService\", \u0026nobl9.ServiceArgs{\n\t\t\tProject: thisProject.Name,\n\t\t\tDisplayName: thisProject.DisplayName.ApplyT(func(displayName string) (string, error) {\n\t\t\t\treturn fmt.Sprintf(\"%v Front Page\", displayName), nil\n\t\t\t}).(pulumi.StringOutput),\n\t\t\tDescription: pulumi.String(\"Front page service\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = nobl9.NewAlertPolicy(ctx, \"thisAlertPolicy\", \u0026nobl9.AlertPolicyArgs{\n\t\t\tProject: thisProject.Name,\n\t\t\tDisplayName: thisProject.DisplayName.ApplyT(func(displayName string) (string, error) {\n\t\t\t\treturn fmt.Sprintf(\"%v Front Page Latency\", displayName), nil\n\t\t\t}).(pulumi.StringOutput),\n\t\t\tSeverity:    pulumi.String(\"High\"),\n\t\t\tDescription: pulumi.String(\"Alert when page latency is \u003e 2000 and error budget would be exhausted\"),\n\t\t\tConditions: AlertPolicyConditionArray{\n\t\t\t\t\u0026AlertPolicyConditionArgs{\n\t\t\t\t\tMeasurement: pulumi.String(\"timeToBurnBudget\"),\n\t\t\t\t\tValueString: pulumi.String(\"72h\"),\n\t\t\t\t\tLastsFor:    pulumi.String(\"30m\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tAlertMethods: AlertPolicyAlertMethodArray{\n\t\t\t\t\u0026AlertPolicyAlertMethodArgs{\n\t\t\t\t\tName: pulumi.String(\"my-alert-method\"),\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nobl9.Project;\nimport com.pulumi.nobl9.ProjectArgs;\nimport com.pulumi.nobl9.Service;\nimport com.pulumi.nobl9.ServiceArgs;\nimport com.pulumi.nobl9.AlertPolicy;\nimport com.pulumi.nobl9.AlertPolicyArgs;\nimport com.pulumi.nobl9.inputs.AlertPolicyConditionArgs;\nimport com.pulumi.nobl9.inputs.AlertPolicyAlertMethodArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var thisProject = new Project(\"thisProject\", ProjectArgs.builder()        \n            .displayName(\"My Project\")\n            .description(\"An example N9 Terraform project\")\n            .build());\n\n        var thisService = new Service(\"thisService\", ServiceArgs.builder()        \n            .project(thisProject.name())\n            .displayName(thisProject.displayName().applyValue(displayName -\u003e String.format(\"%s Front Page\", displayName)))\n            .description(\"Front page service\")\n            .build());\n\n        var thisAlertPolicy = new AlertPolicy(\"thisAlertPolicy\", AlertPolicyArgs.builder()        \n            .project(thisProject.name())\n            .displayName(thisProject.displayName().applyValue(displayName -\u003e String.format(\"%s Front Page Latency\", displayName)))\n            .severity(\"High\")\n            .description(\"Alert when page latency is \u003e 2000 and error budget would be exhausted\")\n            .conditions(AlertPolicyConditionArgs.builder()\n                .measurement(\"timeToBurnBudget\")\n                .valueString(\"72h\")\n                .lastsFor(\"30m\")\n                .build())\n            .alertMethods(AlertPolicyAlertMethodArgs.builder()\n                .name(\"my-alert-method\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  thisProject:\n    type: nobl9:Project\n    properties:\n      displayName: My Project\n      description: An example N9 Terraform project\n  thisService:\n    type: nobl9:Service\n    properties:\n      project: ${thisProject.name}\n      displayName: ${thisProject.displayName} Front Page\n      description: Front page service\n  thisAlertPolicy:\n    type: nobl9:AlertPolicy\n    properties:\n      project: ${thisProject.name}\n      displayName: ${thisProject.displayName} Front Page Latency\n      severity: High\n      description: Alert when page latency is \u003e 2000 and error budget would be exhausted\n      conditions:\n        - measurement: timeToBurnBudget\n          valueString: 72h\n          lastsFor: 30m\n      alertMethods:\n        - name: my-alert-method\n```\n\n{{% /example %}}\n{{% /examples %}}\n## Useful Links\n\n[Alert Policy configuration | Nobl9 Documentation](https://docs.nobl9.com/yaml-guide#alertpolicy)\n",
            "properties": {
                "alertMethods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/AlertPolicyAlertMethod:AlertPolicyAlertMethod"
                    }
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/AlertPolicyCondition:AlertPolicyCondition"
                    },
                    "description": "Configuration of an [alert condition](https://docs.nobl9.com/yaml-guide/#alertpolicy).\n"
                },
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "severity": {
                    "type": "string",
                    "description": "Alert severity. One of `Low` | `Medium` | `High`.\n"
                }
            },
            "required": [
                "conditions",
                "name",
                "project",
                "severity"
            ],
            "inputProperties": {
                "alertMethods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/AlertPolicyAlertMethod:AlertPolicyAlertMethod"
                    }
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/AlertPolicyCondition:AlertPolicyCondition"
                    },
                    "description": "Configuration of an [alert condition](https://docs.nobl9.com/yaml-guide/#alertpolicy).\n"
                },
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "severity": {
                    "type": "string",
                    "description": "Alert severity. One of `Low` | `Medium` | `High`.\n"
                }
            },
            "requiredInputs": [
                "conditions",
                "project",
                "severity"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AlertPolicy resources.\n",
                "properties": {
                    "alertMethods": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nobl9:index/AlertPolicyAlertMethod:AlertPolicyAlertMethod"
                        }
                    },
                    "conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nobl9:index/AlertPolicyCondition:AlertPolicyCondition"
                        },
                        "description": "Configuration of an [alert condition](https://docs.nobl9.com/yaml-guide/#alertpolicy).\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "User-friendly display name of the resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "severity": {
                        "type": "string",
                        "description": "Alert severity. One of `Low` | `Medium` | `High`.\n"
                    }
                },
                "type": "object"
            }
        },
        "nobl9:index/directAppdynamics:DirectAppdynamics": {
            "description": "AppDynamics is a performance management program for applications. It helps users to gain a comprehensive understanding of the impact of technical difficulties on business goals, allowing IT teams to prioritize their efforts in a way that improves ROI. Nobl9 connects with AppDynamics to collect SLI measurements and compare them to SLO targets.\n\nFor more information, refer to [AppDynamics Direct | Nobl9 Documentation](https://docs.nobl9.com/Sources/appdynamics#appdynamics-direct)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nobl9 from \"@pulumi/nobl9\";\n\nconst test_appdynamics = new nobl9.DirectAppdynamics(\"test-appdynamics\", {\n    accountName: \"account name\",\n    clientName: \"client name\",\n    clientSecret: \"secret\",\n    description: \"desc\",\n    project: \"terraform\",\n    sourceOfs: [\n        \"Metrics\",\n        \"Services\",\n    ],\n    url: \"https://web.net\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nobl9 as nobl9\n\ntest_appdynamics = nobl9.DirectAppdynamics(\"test-appdynamics\",\n    account_name=\"account name\",\n    client_name=\"client name\",\n    client_secret=\"secret\",\n    description=\"desc\",\n    project=\"terraform\",\n    source_ofs=[\n        \"Metrics\",\n        \"Services\",\n    ],\n    url=\"https://web.net\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Nobl9 = Pulumi.Nobl9;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test_appdynamics = new Nobl9.DirectAppdynamics(\"test-appdynamics\", new()\n    {\n        AccountName = \"account name\",\n        ClientName = \"client name\",\n        ClientSecret = \"secret\",\n        Description = \"desc\",\n        Project = \"terraform\",\n        SourceOfs = new[]\n        {\n            \"Metrics\",\n            \"Services\",\n        },\n        Url = \"https://web.net\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-nobl9/sdk/go/nobl9\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nobl9.NewDirectAppdynamics(ctx, \"test-appdynamics\", \u0026nobl9.DirectAppdynamicsArgs{\n\t\t\tAccountName:  pulumi.String(\"account name\"),\n\t\t\tClientName:   pulumi.String(\"client name\"),\n\t\t\tClientSecret: pulumi.String(\"secret\"),\n\t\t\tDescription:  pulumi.String(\"desc\"),\n\t\t\tProject:      pulumi.String(\"terraform\"),\n\t\t\tSourceOfs: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Metrics\"),\n\t\t\t\tpulumi.String(\"Services\"),\n\t\t\t},\n\t\t\tUrl: pulumi.String(\"https://web.net\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nobl9.DirectAppdynamics;\nimport com.pulumi.nobl9.DirectAppdynamicsArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test_appdynamics = new DirectAppdynamics(\"test-appdynamics\", DirectAppdynamicsArgs.builder()        \n            .accountName(\"account name\")\n            .clientName(\"client name\")\n            .clientSecret(\"secret\")\n            .description(\"desc\")\n            .project(\"terraform\")\n            .sourceOfs(            \n                \"Metrics\",\n                \"Services\")\n            .url(\"https://web.net\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test-appdynamics:\n    type: nobl9:DirectAppdynamics\n    properties:\n      accountName: account name\n      clientName: client name\n      clientSecret: secret\n      description: desc\n      project: terraform\n      sourceOfs:\n        - Metrics\n        - Services\n      url: https://web.net\n```\n\n{{% /example %}}\n{{% /examples %}}\n## Nobl9 Official Documentation\n\nhttps://docs.nobl9.com/\n",
            "properties": {
                "accountName": {
                    "type": "string",
                    "description": "AppDynamics Account Name.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "AppDynamics Client ID.\n"
                },
                "clientName": {
                    "type": "string",
                    "description": "AppDynamics Client Name.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "[required] | AppDynamics Client Secret.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "queryDelay": {
                    "$ref": "#/types/nobl9:index/DirectAppdynamicsQueryDelay:DirectAppdynamicsQueryDelay",
                    "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                },
                "sourceOfs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Source of Metrics and/or Services.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the created direct.\n"
                },
                "url": {
                    "type": "string",
                    "description": "Base URL to the AppDynamics Controller.\n"
                }
            },
            "required": [
                "accountName",
                "clientId",
                "clientName",
                "clientSecret",
                "name",
                "project",
                "sourceOfs",
                "status",
                "url"
            ],
            "inputProperties": {
                "accountName": {
                    "type": "string",
                    "description": "AppDynamics Account Name.\n"
                },
                "clientName": {
                    "type": "string",
                    "description": "AppDynamics Client Name.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "[required] | AppDynamics Client Secret.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "queryDelay": {
                    "$ref": "#/types/nobl9:index/DirectAppdynamicsQueryDelay:DirectAppdynamicsQueryDelay",
                    "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                },
                "sourceOfs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Source of Metrics and/or Services.\n"
                },
                "url": {
                    "type": "string",
                    "description": "Base URL to the AppDynamics Controller.\n"
                }
            },
            "requiredInputs": [
                "accountName",
                "clientName",
                "project",
                "sourceOfs",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DirectAppdynamics resources.\n",
                "properties": {
                    "accountName": {
                        "type": "string",
                        "description": "AppDynamics Account Name.\n"
                    },
                    "clientId": {
                        "type": "string",
                        "description": "AppDynamics Client ID.\n"
                    },
                    "clientName": {
                        "type": "string",
                        "description": "AppDynamics Client Name.\n"
                    },
                    "clientSecret": {
                        "type": "string",
                        "description": "[required] | AppDynamics Client Secret.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "User-friendly display name of the resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "queryDelay": {
                        "$ref": "#/types/nobl9:index/DirectAppdynamicsQueryDelay:DirectAppdynamicsQueryDelay",
                        "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                    },
                    "sourceOfs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Source of Metrics and/or Services.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the created direct.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "Base URL to the AppDynamics Controller.\n"
                    }
                },
                "type": "object"
            }
        },
        "nobl9:index/directBigquery:DirectBigquery": {
            "description": "Google BigQuery is a serverless data warehouse that enables scalable analysis over petabytes of data. It is a Platform as a Service that supports querying using ANSI SQL. BigQuery integration with Nobl9 enables users to turn their big data into valuable business insights. Nobl9 connects with BigQuery to collect SLI measurements and compare them to SLO targets.\n\nFor more information, refer to [BigQuery Direct | Nobl9 Documentation](https://docs.nobl9.com/Sources/bigquery#bigquery-direct)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nobl9 from \"@pulumi/nobl9\";\n\nconst test_bigquery = new nobl9.DirectBigquery(\"test-bigquery\", {\n    description: \"desc\",\n    project: \"terraform\",\n    serviceAccountKey: \"secret\",\n    sourceOfs: [\n        \"Metrics\",\n        \"Services\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_nobl9 as nobl9\n\ntest_bigquery = nobl9.DirectBigquery(\"test-bigquery\",\n    description=\"desc\",\n    project=\"terraform\",\n    service_account_key=\"secret\",\n    source_ofs=[\n        \"Metrics\",\n        \"Services\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Nobl9 = Pulumi.Nobl9;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test_bigquery = new Nobl9.DirectBigquery(\"test-bigquery\", new()\n    {\n        Description = \"desc\",\n        Project = \"terraform\",\n        ServiceAccountKey = \"secret\",\n        SourceOfs = new[]\n        {\n            \"Metrics\",\n            \"Services\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-nobl9/sdk/go/nobl9\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nobl9.NewDirectBigquery(ctx, \"test-bigquery\", \u0026nobl9.DirectBigqueryArgs{\n\t\t\tDescription:       pulumi.String(\"desc\"),\n\t\t\tProject:           pulumi.String(\"terraform\"),\n\t\t\tServiceAccountKey: pulumi.String(\"secret\"),\n\t\t\tSourceOfs: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Metrics\"),\n\t\t\t\tpulumi.String(\"Services\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nobl9.DirectBigquery;\nimport com.pulumi.nobl9.DirectBigqueryArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test_bigquery = new DirectBigquery(\"test-bigquery\", DirectBigqueryArgs.builder()        \n            .description(\"desc\")\n            .project(\"terraform\")\n            .serviceAccountKey(\"secret\")\n            .sourceOfs(            \n                \"Metrics\",\n                \"Services\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test-bigquery:\n    type: nobl9:DirectBigquery\n    properties:\n      description: desc\n      project: terraform\n      serviceAccountKey: secret\n      sourceOfs:\n        - Metrics\n        - Services\n```\n\n{{% /example %}}\n{{% /examples %}}\n## Nobl9 Official Documentation\n\nhttps://docs.nobl9.com/\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "queryDelay": {
                    "$ref": "#/types/nobl9:index/DirectBigqueryQueryDelay:DirectBigqueryQueryDelay",
                    "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                },
                "serviceAccountKey": {
                    "type": "string",
                    "description": "[required] | Service Account Key.\n"
                },
                "sourceOfs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Source of Metrics and/or Services.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the created direct.\n"
                }
            },
            "required": [
                "name",
                "project",
                "serviceAccountKey",
                "sourceOfs",
                "status"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "queryDelay": {
                    "$ref": "#/types/nobl9:index/DirectBigqueryQueryDelay:DirectBigqueryQueryDelay",
                    "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                },
                "serviceAccountKey": {
                    "type": "string",
                    "description": "[required] | Service Account Key.\n"
                },
                "sourceOfs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Source of Metrics and/or Services.\n"
                }
            },
            "requiredInputs": [
                "project",
                "sourceOfs"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DirectBigquery resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "User-friendly display name of the resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "queryDelay": {
                        "$ref": "#/types/nobl9:index/DirectBigqueryQueryDelay:DirectBigqueryQueryDelay",
                        "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                    },
                    "serviceAccountKey": {
                        "type": "string",
                        "description": "[required] | Service Account Key.\n"
                    },
                    "sourceOfs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Source of Metrics and/or Services.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the created direct.\n"
                    }
                },
                "type": "object"
            }
        },
        "nobl9:index/directCloudwatch:DirectCloudwatch": {
            "description": "Amazon CloudWatch is a monitoring and observability service and a repository that aggregates data from more than 70 AWS data sources. CloudWatch also allows users to publish custom metrics from their services. Creating SLOs using this data is a powerful tool to monitor large portfolios of products. Nobl9 connects with Amazon CloudWatch to collect SLI measurements and compare them to SLO targets.\n\nFor more information, refer to [Amazon CloudWatch Direct | Nobl9 Documentation](https://docs.nobl9.com/Sources/Amazon_CloudWatch/#cloudwatch-direct)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nobl9 from \"@pulumi/nobl9\";\n\nconst test_cloudwatch = new nobl9.DirectCloudwatch(\"test-cloudwatch\", {\n    accessKeyId: \"secret\",\n    description: \"desc\",\n    historicalDataRetrieval: {\n        defaultDurations: [{\n            unit: \"Day\",\n            value: 0,\n        }],\n        maxDurations: [{\n            unit: \"Day\",\n            value: 15,\n        }],\n    },\n    project: \"terraform\",\n    secretAccessKey: \"secret\",\n    sourceOfs: [\n        \"Metrics\",\n        \"Services\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_nobl9 as nobl9\n\ntest_cloudwatch = nobl9.DirectCloudwatch(\"test-cloudwatch\",\n    access_key_id=\"secret\",\n    description=\"desc\",\n    historical_data_retrieval=nobl9.DirectCloudwatchHistoricalDataRetrievalArgs(\n        default_durations=[nobl9.DirectCloudwatchHistoricalDataRetrievalDefaultDurationArgs(\n            unit=\"Day\",\n            value=0,\n        )],\n        max_durations=[nobl9.DirectCloudwatchHistoricalDataRetrievalMaxDurationArgs(\n            unit=\"Day\",\n            value=15,\n        )],\n    ),\n    project=\"terraform\",\n    secret_access_key=\"secret\",\n    source_ofs=[\n        \"Metrics\",\n        \"Services\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Nobl9 = Pulumi.Nobl9;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test_cloudwatch = new Nobl9.DirectCloudwatch(\"test-cloudwatch\", new()\n    {\n        AccessKeyId = \"secret\",\n        Description = \"desc\",\n        HistoricalDataRetrieval = new Nobl9.Inputs.DirectCloudwatchHistoricalDataRetrievalArgs\n        {\n            DefaultDurations = new[]\n            {\n                new Nobl9.Inputs.DirectCloudwatchHistoricalDataRetrievalDefaultDurationArgs\n                {\n                    Unit = \"Day\",\n                    Value = 0,\n                },\n            },\n            MaxDurations = new[]\n            {\n                new Nobl9.Inputs.DirectCloudwatchHistoricalDataRetrievalMaxDurationArgs\n                {\n                    Unit = \"Day\",\n                    Value = 15,\n                },\n            },\n        },\n        Project = \"terraform\",\n        SecretAccessKey = \"secret\",\n        SourceOfs = new[]\n        {\n            \"Metrics\",\n            \"Services\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-nobl9/sdk/go/nobl9\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nobl9.NewDirectCloudwatch(ctx, \"test-cloudwatch\", \u0026nobl9.DirectCloudwatchArgs{\n\t\t\tAccessKeyId: pulumi.String(\"secret\"),\n\t\t\tDescription: pulumi.String(\"desc\"),\n\t\t\tHistoricalDataRetrieval: \u0026DirectCloudwatchHistoricalDataRetrievalArgs{\n\t\t\t\tDefaultDurations: DirectCloudwatchHistoricalDataRetrievalDefaultDurationArray{\n\t\t\t\t\t\u0026DirectCloudwatchHistoricalDataRetrievalDefaultDurationArgs{\n\t\t\t\t\t\tUnit:  pulumi.String(\"Day\"),\n\t\t\t\t\t\tValue: pulumi.Int(0),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tMaxDurations: DirectCloudwatchHistoricalDataRetrievalMaxDurationArray{\n\t\t\t\t\t\u0026DirectCloudwatchHistoricalDataRetrievalMaxDurationArgs{\n\t\t\t\t\t\tUnit:  pulumi.String(\"Day\"),\n\t\t\t\t\t\tValue: pulumi.Int(15),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tProject:         pulumi.String(\"terraform\"),\n\t\t\tSecretAccessKey: pulumi.String(\"secret\"),\n\t\t\tSourceOfs: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Metrics\"),\n\t\t\t\tpulumi.String(\"Services\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nobl9.DirectCloudwatch;\nimport com.pulumi.nobl9.DirectCloudwatchArgs;\nimport com.pulumi.nobl9.inputs.DirectCloudwatchHistoricalDataRetrievalArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test_cloudwatch = new DirectCloudwatch(\"test-cloudwatch\", DirectCloudwatchArgs.builder()        \n            .accessKeyId(\"secret\")\n            .description(\"desc\")\n            .historicalDataRetrieval(DirectCloudwatchHistoricalDataRetrievalArgs.builder()\n                .defaultDurations(DirectCloudwatchHistoricalDataRetrievalDefaultDurationArgs.builder()\n                    .unit(\"Day\")\n                    .value(0)\n                    .build())\n                .maxDurations(DirectCloudwatchHistoricalDataRetrievalMaxDurationArgs.builder()\n                    .unit(\"Day\")\n                    .value(15)\n                    .build())\n                .build())\n            .project(\"terraform\")\n            .secretAccessKey(\"secret\")\n            .sourceOfs(            \n                \"Metrics\",\n                \"Services\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test-cloudwatch:\n    type: nobl9:DirectCloudwatch\n    properties:\n      accessKeyId: secret\n      description: desc\n      historicalDataRetrieval:\n        defaultDurations:\n          - unit: Day\n            value: 0\n        maxDurations:\n          - unit: Day\n            value: 15\n      project: terraform\n      secretAccessKey: secret\n      sourceOfs:\n        - Metrics\n        - Services\n```\n\n{{% /example %}}\n{{% /examples %}}\n## Nobl9 Official Documentation\n\nhttps://docs.nobl9.com/\n",
            "properties": {
                "accessKeyId": {
                    "type": "string",
                    "description": "[required] | AWS Access Key ID.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "historicalDataRetrieval": {
                    "$ref": "#/types/nobl9:index/DirectCloudwatchHistoricalDataRetrieval:DirectCloudwatchHistoricalDataRetrieval",
                    "description": "[Replay configuration documentation](https://docs.nobl9.com/replay)\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "queryDelay": {
                    "$ref": "#/types/nobl9:index/DirectCloudwatchQueryDelay:DirectCloudwatchQueryDelay",
                    "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                },
                "secretAccessKey": {
                    "type": "string",
                    "description": "[required] | AWS Secret Access Key.\n"
                },
                "sourceOfs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Source of Metrics and/or Services.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the created direct.\n"
                }
            },
            "required": [
                "accessKeyId",
                "name",
                "project",
                "secretAccessKey",
                "sourceOfs",
                "status"
            ],
            "inputProperties": {
                "accessKeyId": {
                    "type": "string",
                    "description": "[required] | AWS Access Key ID.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "historicalDataRetrieval": {
                    "$ref": "#/types/nobl9:index/DirectCloudwatchHistoricalDataRetrieval:DirectCloudwatchHistoricalDataRetrieval",
                    "description": "[Replay configuration documentation](https://docs.nobl9.com/replay)\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "queryDelay": {
                    "$ref": "#/types/nobl9:index/DirectCloudwatchQueryDelay:DirectCloudwatchQueryDelay",
                    "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                },
                "secretAccessKey": {
                    "type": "string",
                    "description": "[required] | AWS Secret Access Key.\n"
                },
                "sourceOfs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Source of Metrics and/or Services.\n"
                }
            },
            "requiredInputs": [
                "project",
                "sourceOfs"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DirectCloudwatch resources.\n",
                "properties": {
                    "accessKeyId": {
                        "type": "string",
                        "description": "[required] | AWS Access Key ID.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "User-friendly display name of the resource.\n"
                    },
                    "historicalDataRetrieval": {
                        "$ref": "#/types/nobl9:index/DirectCloudwatchHistoricalDataRetrieval:DirectCloudwatchHistoricalDataRetrieval",
                        "description": "[Replay configuration documentation](https://docs.nobl9.com/replay)\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "queryDelay": {
                        "$ref": "#/types/nobl9:index/DirectCloudwatchQueryDelay:DirectCloudwatchQueryDelay",
                        "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                    },
                    "secretAccessKey": {
                        "type": "string",
                        "description": "[required] | AWS Secret Access Key.\n"
                    },
                    "sourceOfs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Source of Metrics and/or Services.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the created direct.\n"
                    }
                },
                "type": "object"
            }
        },
        "nobl9:index/directDatadog:DirectDatadog": {
            "description": "Datadog is a cloud-scale application observability solution that monitors servers, databases, tools, and services. Nobl9 connects with Datadog to collect SLI measurements and compare them to SLO targets.\n\nFor more information, refer to [Datadog Direct | Nobl9 Documentation](https://docs.nobl9.com/Sources/datadog#datadog-direct).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nobl9 from \"@pulumi/nobl9\";\n\nconst test_datadog = new nobl9.DirectDatadog(\"test-datadog\", {\n    apiKey: \"secret\",\n    applicationKey: \"secret\",\n    description: \"desc\",\n    historicalDataRetrieval: {\n        defaultDurations: [{\n            unit: \"Day\",\n            value: 0,\n        }],\n        maxDurations: [{\n            unit: \"Day\",\n            value: 30,\n        }],\n    },\n    project: \"terraform\",\n    site: \"eu\",\n    sourceOfs: [\n        \"Metrics\",\n        \"Services\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_nobl9 as nobl9\n\ntest_datadog = nobl9.DirectDatadog(\"test-datadog\",\n    api_key=\"secret\",\n    application_key=\"secret\",\n    description=\"desc\",\n    historical_data_retrieval=nobl9.DirectDatadogHistoricalDataRetrievalArgs(\n        default_durations=[nobl9.DirectDatadogHistoricalDataRetrievalDefaultDurationArgs(\n            unit=\"Day\",\n            value=0,\n        )],\n        max_durations=[nobl9.DirectDatadogHistoricalDataRetrievalMaxDurationArgs(\n            unit=\"Day\",\n            value=30,\n        )],\n    ),\n    project=\"terraform\",\n    site=\"eu\",\n    source_ofs=[\n        \"Metrics\",\n        \"Services\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Nobl9 = Pulumi.Nobl9;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test_datadog = new Nobl9.DirectDatadog(\"test-datadog\", new()\n    {\n        ApiKey = \"secret\",\n        ApplicationKey = \"secret\",\n        Description = \"desc\",\n        HistoricalDataRetrieval = new Nobl9.Inputs.DirectDatadogHistoricalDataRetrievalArgs\n        {\n            DefaultDurations = new[]\n            {\n                new Nobl9.Inputs.DirectDatadogHistoricalDataRetrievalDefaultDurationArgs\n                {\n                    Unit = \"Day\",\n                    Value = 0,\n                },\n            },\n            MaxDurations = new[]\n            {\n                new Nobl9.Inputs.DirectDatadogHistoricalDataRetrievalMaxDurationArgs\n                {\n                    Unit = \"Day\",\n                    Value = 30,\n                },\n            },\n        },\n        Project = \"terraform\",\n        Site = \"eu\",\n        SourceOfs = new[]\n        {\n            \"Metrics\",\n            \"Services\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-nobl9/sdk/go/nobl9\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nobl9.NewDirectDatadog(ctx, \"test-datadog\", \u0026nobl9.DirectDatadogArgs{\n\t\t\tApiKey:         pulumi.String(\"secret\"),\n\t\t\tApplicationKey: pulumi.String(\"secret\"),\n\t\t\tDescription:    pulumi.String(\"desc\"),\n\t\t\tHistoricalDataRetrieval: \u0026DirectDatadogHistoricalDataRetrievalArgs{\n\t\t\t\tDefaultDurations: DirectDatadogHistoricalDataRetrievalDefaultDurationArray{\n\t\t\t\t\t\u0026DirectDatadogHistoricalDataRetrievalDefaultDurationArgs{\n\t\t\t\t\t\tUnit:  pulumi.String(\"Day\"),\n\t\t\t\t\t\tValue: pulumi.Int(0),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tMaxDurations: DirectDatadogHistoricalDataRetrievalMaxDurationArray{\n\t\t\t\t\t\u0026DirectDatadogHistoricalDataRetrievalMaxDurationArgs{\n\t\t\t\t\t\tUnit:  pulumi.String(\"Day\"),\n\t\t\t\t\t\tValue: pulumi.Int(30),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tProject: pulumi.String(\"terraform\"),\n\t\t\tSite:    pulumi.String(\"eu\"),\n\t\t\tSourceOfs: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Metrics\"),\n\t\t\t\tpulumi.String(\"Services\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nobl9.DirectDatadog;\nimport com.pulumi.nobl9.DirectDatadogArgs;\nimport com.pulumi.nobl9.inputs.DirectDatadogHistoricalDataRetrievalArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test_datadog = new DirectDatadog(\"test-datadog\", DirectDatadogArgs.builder()        \n            .apiKey(\"secret\")\n            .applicationKey(\"secret\")\n            .description(\"desc\")\n            .historicalDataRetrieval(DirectDatadogHistoricalDataRetrievalArgs.builder()\n                .defaultDurations(DirectDatadogHistoricalDataRetrievalDefaultDurationArgs.builder()\n                    .unit(\"Day\")\n                    .value(0)\n                    .build())\n                .maxDurations(DirectDatadogHistoricalDataRetrievalMaxDurationArgs.builder()\n                    .unit(\"Day\")\n                    .value(30)\n                    .build())\n                .build())\n            .project(\"terraform\")\n            .site(\"eu\")\n            .sourceOfs(            \n                \"Metrics\",\n                \"Services\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test-datadog:\n    type: nobl9:DirectDatadog\n    properties:\n      apiKey: secret\n      applicationKey: secret\n      description: desc\n      historicalDataRetrieval:\n        defaultDurations:\n          - unit: Day\n            value: 0\n        maxDurations:\n          - unit: Day\n            value: 30\n      project: terraform\n      site: eu\n      sourceOfs:\n        - Metrics\n        - Services\n```\n\n{{% /example %}}\n{{% /examples %}}\n## Nobl9 Official Documentation\n\nhttps://docs.nobl9.com/\n",
            "properties": {
                "apiKey": {
                    "type": "string",
                    "description": "[required] | Datadog API Key.\n"
                },
                "applicationKey": {
                    "type": "string",
                    "description": "[required] | Datadog Application Key.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "historicalDataRetrieval": {
                    "$ref": "#/types/nobl9:index/DirectDatadogHistoricalDataRetrieval:DirectDatadogHistoricalDataRetrieval",
                    "description": "[Replay configuration documentation](https://docs.nobl9.com/replay)\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "queryDelay": {
                    "$ref": "#/types/nobl9:index/DirectDatadogQueryDelay:DirectDatadogQueryDelay",
                    "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                },
                "site": {
                    "type": "string",
                    "description": "`com` or `eu`, Datadog SaaS instance, which corresponds to one of Datadog's two locations (https://www.datadoghq.com/ in the U.S. or https://datadoghq.eu/ in the European Union).\n"
                },
                "sourceOfs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Source of Metrics and/or Services.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the created direct.\n"
                }
            },
            "required": [
                "apiKey",
                "applicationKey",
                "name",
                "project",
                "site",
                "sourceOfs",
                "status"
            ],
            "inputProperties": {
                "apiKey": {
                    "type": "string",
                    "description": "[required] | Datadog API Key.\n"
                },
                "applicationKey": {
                    "type": "string",
                    "description": "[required] | Datadog Application Key.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "historicalDataRetrieval": {
                    "$ref": "#/types/nobl9:index/DirectDatadogHistoricalDataRetrieval:DirectDatadogHistoricalDataRetrieval",
                    "description": "[Replay configuration documentation](https://docs.nobl9.com/replay)\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "queryDelay": {
                    "$ref": "#/types/nobl9:index/DirectDatadogQueryDelay:DirectDatadogQueryDelay",
                    "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                },
                "site": {
                    "type": "string",
                    "description": "`com` or `eu`, Datadog SaaS instance, which corresponds to one of Datadog's two locations (https://www.datadoghq.com/ in the U.S. or https://datadoghq.eu/ in the European Union).\n"
                },
                "sourceOfs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Source of Metrics and/or Services.\n"
                }
            },
            "requiredInputs": [
                "project",
                "site",
                "sourceOfs"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DirectDatadog resources.\n",
                "properties": {
                    "apiKey": {
                        "type": "string",
                        "description": "[required] | Datadog API Key.\n"
                    },
                    "applicationKey": {
                        "type": "string",
                        "description": "[required] | Datadog Application Key.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "User-friendly display name of the resource.\n"
                    },
                    "historicalDataRetrieval": {
                        "$ref": "#/types/nobl9:index/DirectDatadogHistoricalDataRetrieval:DirectDatadogHistoricalDataRetrieval",
                        "description": "[Replay configuration documentation](https://docs.nobl9.com/replay)\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "queryDelay": {
                        "$ref": "#/types/nobl9:index/DirectDatadogQueryDelay:DirectDatadogQueryDelay",
                        "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                    },
                    "site": {
                        "type": "string",
                        "description": "`com` or `eu`, Datadog SaaS instance, which corresponds to one of Datadog's two locations (https://www.datadoghq.com/ in the U.S. or https://datadoghq.eu/ in the European Union).\n"
                    },
                    "sourceOfs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Source of Metrics and/or Services.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the created direct.\n"
                    }
                },
                "type": "object"
            }
        },
        "nobl9:index/directDynatrace:DirectDynatrace": {
            "description": "Dynatrace is a software intelligence platform that monitors and optimizes application performance, development and security, IT infrastructure, and user experience. The Dynatrace Software Intelligence Platform maps, and monitors applications, microservices, container orchestration platforms such as Kubernetes, and IT infrastructure running in multi-cloud and hybrid-cloud environments, and provides automated problem remediation. Nobl9 connects with Dynatrace to collect SLI measurements and compare them to SLO targets.\n\nFor more information, refer to [Dynatrace Direct | Nobl9 Documentation](https://docs.nobl9.com/Sources/dynatrace#dynatrace-direct).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nobl9 from \"@pulumi/nobl9\";\n\nconst test_dynatrace = new nobl9.DirectDynatrace(\"test-dynatrace\", {\n    description: \"desc\",\n    dynatraceToken: \"secret\",\n    historicalDataRetrieval: {\n        defaultDurations: [{\n            unit: \"Day\",\n            value: 1,\n        }],\n        maxDurations: [{\n            unit: \"Day\",\n            value: 10,\n        }],\n    },\n    project: \"terraform\",\n    sourceOfs: [\n        \"Metrics\",\n        \"Services\",\n    ],\n    url: \"https://web.net\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nobl9 as nobl9\n\ntest_dynatrace = nobl9.DirectDynatrace(\"test-dynatrace\",\n    description=\"desc\",\n    dynatrace_token=\"secret\",\n    historical_data_retrieval=nobl9.DirectDynatraceHistoricalDataRetrievalArgs(\n        default_durations=[nobl9.DirectDynatraceHistoricalDataRetrievalDefaultDurationArgs(\n            unit=\"Day\",\n            value=1,\n        )],\n        max_durations=[nobl9.DirectDynatraceHistoricalDataRetrievalMaxDurationArgs(\n            unit=\"Day\",\n            value=10,\n        )],\n    ),\n    project=\"terraform\",\n    source_ofs=[\n        \"Metrics\",\n        \"Services\",\n    ],\n    url=\"https://web.net\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Nobl9 = Pulumi.Nobl9;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test_dynatrace = new Nobl9.DirectDynatrace(\"test-dynatrace\", new()\n    {\n        Description = \"desc\",\n        DynatraceToken = \"secret\",\n        HistoricalDataRetrieval = new Nobl9.Inputs.DirectDynatraceHistoricalDataRetrievalArgs\n        {\n            DefaultDurations = new[]\n            {\n                new Nobl9.Inputs.DirectDynatraceHistoricalDataRetrievalDefaultDurationArgs\n                {\n                    Unit = \"Day\",\n                    Value = 1,\n                },\n            },\n            MaxDurations = new[]\n            {\n                new Nobl9.Inputs.DirectDynatraceHistoricalDataRetrievalMaxDurationArgs\n                {\n                    Unit = \"Day\",\n                    Value = 10,\n                },\n            },\n        },\n        Project = \"terraform\",\n        SourceOfs = new[]\n        {\n            \"Metrics\",\n            \"Services\",\n        },\n        Url = \"https://web.net\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-nobl9/sdk/go/nobl9\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nobl9.NewDirectDynatrace(ctx, \"test-dynatrace\", \u0026nobl9.DirectDynatraceArgs{\n\t\t\tDescription:    pulumi.String(\"desc\"),\n\t\t\tDynatraceToken: pulumi.String(\"secret\"),\n\t\t\tHistoricalDataRetrieval: \u0026DirectDynatraceHistoricalDataRetrievalArgs{\n\t\t\t\tDefaultDurations: DirectDynatraceHistoricalDataRetrievalDefaultDurationArray{\n\t\t\t\t\t\u0026DirectDynatraceHistoricalDataRetrievalDefaultDurationArgs{\n\t\t\t\t\t\tUnit:  pulumi.String(\"Day\"),\n\t\t\t\t\t\tValue: pulumi.Int(1),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tMaxDurations: DirectDynatraceHistoricalDataRetrievalMaxDurationArray{\n\t\t\t\t\t\u0026DirectDynatraceHistoricalDataRetrievalMaxDurationArgs{\n\t\t\t\t\t\tUnit:  pulumi.String(\"Day\"),\n\t\t\t\t\t\tValue: pulumi.Int(10),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tProject: pulumi.String(\"terraform\"),\n\t\t\tSourceOfs: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Metrics\"),\n\t\t\t\tpulumi.String(\"Services\"),\n\t\t\t},\n\t\t\tUrl: pulumi.String(\"https://web.net\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nobl9.DirectDynatrace;\nimport com.pulumi.nobl9.DirectDynatraceArgs;\nimport com.pulumi.nobl9.inputs.DirectDynatraceHistoricalDataRetrievalArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test_dynatrace = new DirectDynatrace(\"test-dynatrace\", DirectDynatraceArgs.builder()        \n            .description(\"desc\")\n            .dynatraceToken(\"secret\")\n            .historicalDataRetrieval(DirectDynatraceHistoricalDataRetrievalArgs.builder()\n                .defaultDurations(DirectDynatraceHistoricalDataRetrievalDefaultDurationArgs.builder()\n                    .unit(\"Day\")\n                    .value(1)\n                    .build())\n                .maxDurations(DirectDynatraceHistoricalDataRetrievalMaxDurationArgs.builder()\n                    .unit(\"Day\")\n                    .value(10)\n                    .build())\n                .build())\n            .project(\"terraform\")\n            .sourceOfs(            \n                \"Metrics\",\n                \"Services\")\n            .url(\"https://web.net\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test-dynatrace:\n    type: nobl9:DirectDynatrace\n    properties:\n      description: desc\n      dynatraceToken: secret\n      historicalDataRetrieval:\n        defaultDurations:\n          - unit: Day\n            value: 1\n        maxDurations:\n          - unit: Day\n            value: 10\n      project: terraform\n      sourceOfs:\n        - Metrics\n        - Services\n      url: https://web.net\n```\n\n{{% /example %}}\n{{% /examples %}}\n## Nobl9 Official Documentation\n\nhttps://docs.nobl9.com/\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "dynatraceToken": {
                    "type": "string",
                    "description": "[required] | Dynatrace Token.\n"
                },
                "historicalDataRetrieval": {
                    "$ref": "#/types/nobl9:index/DirectDynatraceHistoricalDataRetrieval:DirectDynatraceHistoricalDataRetrieval",
                    "description": "[Replay configuration documentation](https://docs.nobl9.com/replay)\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "queryDelay": {
                    "$ref": "#/types/nobl9:index/DirectDynatraceQueryDelay:DirectDynatraceQueryDelay",
                    "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                },
                "sourceOfs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Source of Metrics and/or Services.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the created direct.\n"
                },
                "url": {
                    "type": "string",
                    "description": "Dynatrace API URL.\n"
                }
            },
            "required": [
                "dynatraceToken",
                "name",
                "project",
                "sourceOfs",
                "status",
                "url"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "dynatraceToken": {
                    "type": "string",
                    "description": "[required] | Dynatrace Token.\n"
                },
                "historicalDataRetrieval": {
                    "$ref": "#/types/nobl9:index/DirectDynatraceHistoricalDataRetrieval:DirectDynatraceHistoricalDataRetrieval",
                    "description": "[Replay configuration documentation](https://docs.nobl9.com/replay)\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "queryDelay": {
                    "$ref": "#/types/nobl9:index/DirectDynatraceQueryDelay:DirectDynatraceQueryDelay",
                    "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                },
                "sourceOfs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Source of Metrics and/or Services.\n"
                },
                "url": {
                    "type": "string",
                    "description": "Dynatrace API URL.\n"
                }
            },
            "requiredInputs": [
                "project",
                "sourceOfs",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DirectDynatrace resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "User-friendly display name of the resource.\n"
                    },
                    "dynatraceToken": {
                        "type": "string",
                        "description": "[required] | Dynatrace Token.\n"
                    },
                    "historicalDataRetrieval": {
                        "$ref": "#/types/nobl9:index/DirectDynatraceHistoricalDataRetrieval:DirectDynatraceHistoricalDataRetrieval",
                        "description": "[Replay configuration documentation](https://docs.nobl9.com/replay)\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "queryDelay": {
                        "$ref": "#/types/nobl9:index/DirectDynatraceQueryDelay:DirectDynatraceQueryDelay",
                        "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                    },
                    "sourceOfs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Source of Metrics and/or Services.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the created direct.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "Dynatrace API URL.\n"
                    }
                },
                "type": "object"
            }
        },
        "nobl9:index/directGcm:DirectGcm": {
            "description": "Google Cloud Monitoring (GCM) provides visibility into the performance, uptime, and overall health of cloud-powered applications. It collects metrics, events, and metadata from Google Cloud, hosted uptime probes, and application instrumentation. Nobl9 connects with GCM to collect SLI measurements and compare them to SLO targets.\n\nFor more information, refer to [Google Cloud Monitoring Direct | Nobl9 Documentation](https://docs.nobl9.com/Sources/google-cloud-monitoring#google-cloud-monitoring-direct).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nobl9 from \"@pulumi/nobl9\";\n\nconst test_gcm = new nobl9.DirectGcm(\"test-gcm\", {\n    description: \"desc\",\n    project: \"terraform\",\n    serviceAccountKey: \"secret\",\n    sourceOfs: [\n        \"Metrics\",\n        \"Services\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_nobl9 as nobl9\n\ntest_gcm = nobl9.DirectGcm(\"test-gcm\",\n    description=\"desc\",\n    project=\"terraform\",\n    service_account_key=\"secret\",\n    source_ofs=[\n        \"Metrics\",\n        \"Services\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Nobl9 = Pulumi.Nobl9;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test_gcm = new Nobl9.DirectGcm(\"test-gcm\", new()\n    {\n        Description = \"desc\",\n        Project = \"terraform\",\n        ServiceAccountKey = \"secret\",\n        SourceOfs = new[]\n        {\n            \"Metrics\",\n            \"Services\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-nobl9/sdk/go/nobl9\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nobl9.NewDirectGcm(ctx, \"test-gcm\", \u0026nobl9.DirectGcmArgs{\n\t\t\tDescription:       pulumi.String(\"desc\"),\n\t\t\tProject:           pulumi.String(\"terraform\"),\n\t\t\tServiceAccountKey: pulumi.String(\"secret\"),\n\t\t\tSourceOfs: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Metrics\"),\n\t\t\t\tpulumi.String(\"Services\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nobl9.DirectGcm;\nimport com.pulumi.nobl9.DirectGcmArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test_gcm = new DirectGcm(\"test-gcm\", DirectGcmArgs.builder()        \n            .description(\"desc\")\n            .project(\"terraform\")\n            .serviceAccountKey(\"secret\")\n            .sourceOfs(            \n                \"Metrics\",\n                \"Services\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test-gcm:\n    type: nobl9:DirectGcm\n    properties:\n      description: desc\n      project: terraform\n      serviceAccountKey: secret\n      sourceOfs:\n        - Metrics\n        - Services\n```\n\n{{% /example %}}\n{{% /examples %}}\n## Nobl9 Official Documentation\n\nhttps://docs.nobl9.com/\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "queryDelay": {
                    "$ref": "#/types/nobl9:index/DirectGcmQueryDelay:DirectGcmQueryDelay",
                    "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                },
                "serviceAccountKey": {
                    "type": "string",
                    "description": "[required] | Service Account Key.\n"
                },
                "sourceOfs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Source of Metrics and/or Services.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the created direct.\n"
                }
            },
            "required": [
                "name",
                "project",
                "serviceAccountKey",
                "sourceOfs",
                "status"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "queryDelay": {
                    "$ref": "#/types/nobl9:index/DirectGcmQueryDelay:DirectGcmQueryDelay",
                    "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                },
                "serviceAccountKey": {
                    "type": "string",
                    "description": "[required] | Service Account Key.\n"
                },
                "sourceOfs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Source of Metrics and/or Services.\n"
                }
            },
            "requiredInputs": [
                "project",
                "sourceOfs"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DirectGcm resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "User-friendly display name of the resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "queryDelay": {
                        "$ref": "#/types/nobl9:index/DirectGcmQueryDelay:DirectGcmQueryDelay",
                        "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                    },
                    "serviceAccountKey": {
                        "type": "string",
                        "description": "[required] | Service Account Key.\n"
                    },
                    "sourceOfs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Source of Metrics and/or Services.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the created direct.\n"
                    }
                },
                "type": "object"
            }
        },
        "nobl9:index/directInfluxdb:DirectInfluxdb": {
            "description": "InfluxDB is an open source time series database platform that enables users to collect, process, and analyze data to optimize their infrastructure. Nobl9 connects with InfluxDB to collect SLI measurements and compare them to SLO targets.\n\nFor more information, refer to [InfluxDB Direct | Nobl9 Documentation](https://docs.nobl9.com/Sources/influxdb#influxdb-direct).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nobl9 from \"@pulumi/nobl9\";\n\nconst test_influxdb = new nobl9.DirectInfluxdb(\"test-influxdb\", {\n    apiToken: \"secret\",\n    description: \"desc\",\n    organizationId: \"secret\",\n    project: \"terraform\",\n    sourceOfs: [\n        \"Metrics\",\n        \"Services\",\n    ],\n    url: \"https://web.net\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nobl9 as nobl9\n\ntest_influxdb = nobl9.DirectInfluxdb(\"test-influxdb\",\n    api_token=\"secret\",\n    description=\"desc\",\n    organization_id=\"secret\",\n    project=\"terraform\",\n    source_ofs=[\n        \"Metrics\",\n        \"Services\",\n    ],\n    url=\"https://web.net\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Nobl9 = Pulumi.Nobl9;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test_influxdb = new Nobl9.DirectInfluxdb(\"test-influxdb\", new()\n    {\n        ApiToken = \"secret\",\n        Description = \"desc\",\n        OrganizationId = \"secret\",\n        Project = \"terraform\",\n        SourceOfs = new[]\n        {\n            \"Metrics\",\n            \"Services\",\n        },\n        Url = \"https://web.net\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-nobl9/sdk/go/nobl9\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nobl9.NewDirectInfluxdb(ctx, \"test-influxdb\", \u0026nobl9.DirectInfluxdbArgs{\n\t\t\tApiToken:       pulumi.String(\"secret\"),\n\t\t\tDescription:    pulumi.String(\"desc\"),\n\t\t\tOrganizationId: pulumi.String(\"secret\"),\n\t\t\tProject:        pulumi.String(\"terraform\"),\n\t\t\tSourceOfs: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Metrics\"),\n\t\t\t\tpulumi.String(\"Services\"),\n\t\t\t},\n\t\t\tUrl: pulumi.String(\"https://web.net\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nobl9.DirectInfluxdb;\nimport com.pulumi.nobl9.DirectInfluxdbArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test_influxdb = new DirectInfluxdb(\"test-influxdb\", DirectInfluxdbArgs.builder()        \n            .apiToken(\"secret\")\n            .description(\"desc\")\n            .organizationId(\"secret\")\n            .project(\"terraform\")\n            .sourceOfs(            \n                \"Metrics\",\n                \"Services\")\n            .url(\"https://web.net\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test-influxdb:\n    type: nobl9:DirectInfluxdb\n    properties:\n      apiToken: secret\n      description: desc\n      organizationId: secret\n      project: terraform\n      sourceOfs:\n        - Metrics\n        - Services\n      url: https://web.net\n```\n\n{{% /example %}}\n{{% /examples %}}\n## Nobl9 Official Documentation\n\nhttps://docs.nobl9.com/\n",
            "properties": {
                "apiToken": {
                    "type": "string",
                    "description": "[required] | InfluxDB API Token.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "[required] | InfluxDB Organization ID.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "queryDelay": {
                    "$ref": "#/types/nobl9:index/DirectInfluxdbQueryDelay:DirectInfluxdbQueryDelay",
                    "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                },
                "sourceOfs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Source of Metrics and/or Services.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the created direct.\n"
                },
                "url": {
                    "type": "string",
                    "description": "API URL endpoint to the InfluxDB's instance.\n"
                }
            },
            "required": [
                "apiToken",
                "name",
                "organizationId",
                "project",
                "sourceOfs",
                "status",
                "url"
            ],
            "inputProperties": {
                "apiToken": {
                    "type": "string",
                    "description": "[required] | InfluxDB API Token.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "organizationId": {
                    "type": "string",
                    "description": "[required] | InfluxDB Organization ID.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "queryDelay": {
                    "$ref": "#/types/nobl9:index/DirectInfluxdbQueryDelay:DirectInfluxdbQueryDelay",
                    "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                },
                "sourceOfs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Source of Metrics and/or Services.\n"
                },
                "url": {
                    "type": "string",
                    "description": "API URL endpoint to the InfluxDB's instance.\n"
                }
            },
            "requiredInputs": [
                "project",
                "sourceOfs",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DirectInfluxdb resources.\n",
                "properties": {
                    "apiToken": {
                        "type": "string",
                        "description": "[required] | InfluxDB API Token.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "User-friendly display name of the resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "[required] | InfluxDB Organization ID.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "queryDelay": {
                        "$ref": "#/types/nobl9:index/DirectInfluxdbQueryDelay:DirectInfluxdbQueryDelay",
                        "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                    },
                    "sourceOfs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Source of Metrics and/or Services.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the created direct.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "API URL endpoint to the InfluxDB's instance.\n"
                    }
                },
                "type": "object"
            }
        },
        "nobl9:index/directInstana:DirectInstana": {
            "description": "Instana is an observability platform that delivers automated Application Performance Monitoring (APM), used for website, infrastructure, and application monitoring. Nobl9 connects with Instana to collect SLI measurements and compare them to SLO targets.\n\nFor more information, refer to [Instana Direct | Nobl9 Documentation](https://docs.nobl9.com/Sources/instana#instana-direct).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nobl9 from \"@pulumi/nobl9\";\n\nconst test_instana = new nobl9.DirectInstana(\"test-instana\", {\n    apiToken: \"secret\",\n    description: \"desc\",\n    project: \"terraform\",\n    sourceOfs: [\n        \"Metrics\",\n        \"Services\",\n    ],\n    url: \"https://web.net\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nobl9 as nobl9\n\ntest_instana = nobl9.DirectInstana(\"test-instana\",\n    api_token=\"secret\",\n    description=\"desc\",\n    project=\"terraform\",\n    source_ofs=[\n        \"Metrics\",\n        \"Services\",\n    ],\n    url=\"https://web.net\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Nobl9 = Pulumi.Nobl9;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test_instana = new Nobl9.DirectInstana(\"test-instana\", new()\n    {\n        ApiToken = \"secret\",\n        Description = \"desc\",\n        Project = \"terraform\",\n        SourceOfs = new[]\n        {\n            \"Metrics\",\n            \"Services\",\n        },\n        Url = \"https://web.net\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-nobl9/sdk/go/nobl9\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nobl9.NewDirectInstana(ctx, \"test-instana\", \u0026nobl9.DirectInstanaArgs{\n\t\t\tApiToken:    pulumi.String(\"secret\"),\n\t\t\tDescription: pulumi.String(\"desc\"),\n\t\t\tProject:     pulumi.String(\"terraform\"),\n\t\t\tSourceOfs: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Metrics\"),\n\t\t\t\tpulumi.String(\"Services\"),\n\t\t\t},\n\t\t\tUrl: pulumi.String(\"https://web.net\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nobl9.DirectInstana;\nimport com.pulumi.nobl9.DirectInstanaArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test_instana = new DirectInstana(\"test-instana\", DirectInstanaArgs.builder()        \n            .apiToken(\"secret\")\n            .description(\"desc\")\n            .project(\"terraform\")\n            .sourceOfs(            \n                \"Metrics\",\n                \"Services\")\n            .url(\"https://web.net\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test-instana:\n    type: nobl9:DirectInstana\n    properties:\n      apiToken: secret\n      description: desc\n      project: terraform\n      sourceOfs:\n        - Metrics\n        - Services\n      url: https://web.net\n```\n\n{{% /example %}}\n{{% /examples %}}\n## Nobl9 Official Documentation\n\nhttps://docs.nobl9.com/\n",
            "properties": {
                "apiToken": {
                    "type": "string",
                    "description": "[required] | Instana API Token.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "queryDelay": {
                    "$ref": "#/types/nobl9:index/DirectInstanaQueryDelay:DirectInstanaQueryDelay",
                    "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                },
                "sourceOfs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Source of Metrics and/or Services.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the created direct.\n"
                },
                "url": {
                    "type": "string",
                    "description": "Instana API URL.\n"
                }
            },
            "required": [
                "apiToken",
                "name",
                "project",
                "sourceOfs",
                "status",
                "url"
            ],
            "inputProperties": {
                "apiToken": {
                    "type": "string",
                    "description": "[required] | Instana API Token.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "queryDelay": {
                    "$ref": "#/types/nobl9:index/DirectInstanaQueryDelay:DirectInstanaQueryDelay",
                    "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                },
                "sourceOfs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Source of Metrics and/or Services.\n"
                },
                "url": {
                    "type": "string",
                    "description": "Instana API URL.\n"
                }
            },
            "requiredInputs": [
                "project",
                "sourceOfs",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DirectInstana resources.\n",
                "properties": {
                    "apiToken": {
                        "type": "string",
                        "description": "[required] | Instana API Token.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "User-friendly display name of the resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "queryDelay": {
                        "$ref": "#/types/nobl9:index/DirectInstanaQueryDelay:DirectInstanaQueryDelay",
                        "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                    },
                    "sourceOfs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Source of Metrics and/or Services.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the created direct.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "Instana API URL.\n"
                    }
                },
                "type": "object"
            }
        },
        "nobl9:index/directLightstep:DirectLightstep": {
            "description": "Lightstep is an observability platform that enables distributed tracing, that can be used to rapidly pinpoint the causes of failures and poor performance across the deeply complex dependencies among services, teams, and workloads in modern production systems. Nobl9 integration with Lightstep enables organizations to establish service level objectives from performance data captured through distributed traces in the Lightstep platform. Nobl9 connects with Lightstep to collect SLI measurements and compare them to SLO targets.\n\nFor more information, refer to [Lightstep Direct | Nobl9 Documentation](https://docs.nobl9.com/Sources/lightstep#lightstep-direct).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nobl9 from \"@pulumi/nobl9\";\n\nconst test_lightstep = new nobl9.DirectLightstep(\"test-lightstep\", {\n    appToken: \"secret\",\n    description: \"desc\",\n    historicalDataRetrieval: {\n        defaultDurations: [{\n            unit: \"Day\",\n            value: 0,\n        }],\n        maxDurations: [{\n            unit: \"Day\",\n            value: 30,\n        }],\n    },\n    lightstepOrganization: \"acme\",\n    lightstepProject: \"project1\",\n    project: \"terraform\",\n    sourceOfs: [\n        \"Metrics\",\n        \"Services\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_nobl9 as nobl9\n\ntest_lightstep = nobl9.DirectLightstep(\"test-lightstep\",\n    app_token=\"secret\",\n    description=\"desc\",\n    historical_data_retrieval=nobl9.DirectLightstepHistoricalDataRetrievalArgs(\n        default_durations=[nobl9.DirectLightstepHistoricalDataRetrievalDefaultDurationArgs(\n            unit=\"Day\",\n            value=0,\n        )],\n        max_durations=[nobl9.DirectLightstepHistoricalDataRetrievalMaxDurationArgs(\n            unit=\"Day\",\n            value=30,\n        )],\n    ),\n    lightstep_organization=\"acme\",\n    lightstep_project=\"project1\",\n    project=\"terraform\",\n    source_ofs=[\n        \"Metrics\",\n        \"Services\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Nobl9 = Pulumi.Nobl9;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test_lightstep = new Nobl9.DirectLightstep(\"test-lightstep\", new()\n    {\n        AppToken = \"secret\",\n        Description = \"desc\",\n        HistoricalDataRetrieval = new Nobl9.Inputs.DirectLightstepHistoricalDataRetrievalArgs\n        {\n            DefaultDurations = new[]\n            {\n                new Nobl9.Inputs.DirectLightstepHistoricalDataRetrievalDefaultDurationArgs\n                {\n                    Unit = \"Day\",\n                    Value = 0,\n                },\n            },\n            MaxDurations = new[]\n            {\n                new Nobl9.Inputs.DirectLightstepHistoricalDataRetrievalMaxDurationArgs\n                {\n                    Unit = \"Day\",\n                    Value = 30,\n                },\n            },\n        },\n        LightstepOrganization = \"acme\",\n        LightstepProject = \"project1\",\n        Project = \"terraform\",\n        SourceOfs = new[]\n        {\n            \"Metrics\",\n            \"Services\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-nobl9/sdk/go/nobl9\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nobl9.NewDirectLightstep(ctx, \"test-lightstep\", \u0026nobl9.DirectLightstepArgs{\n\t\t\tAppToken:    pulumi.String(\"secret\"),\n\t\t\tDescription: pulumi.String(\"desc\"),\n\t\t\tHistoricalDataRetrieval: \u0026DirectLightstepHistoricalDataRetrievalArgs{\n\t\t\t\tDefaultDurations: DirectLightstepHistoricalDataRetrievalDefaultDurationArray{\n\t\t\t\t\t\u0026DirectLightstepHistoricalDataRetrievalDefaultDurationArgs{\n\t\t\t\t\t\tUnit:  pulumi.String(\"Day\"),\n\t\t\t\t\t\tValue: pulumi.Int(0),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tMaxDurations: DirectLightstepHistoricalDataRetrievalMaxDurationArray{\n\t\t\t\t\t\u0026DirectLightstepHistoricalDataRetrievalMaxDurationArgs{\n\t\t\t\t\t\tUnit:  pulumi.String(\"Day\"),\n\t\t\t\t\t\tValue: pulumi.Int(30),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tLightstepOrganization: pulumi.String(\"acme\"),\n\t\t\tLightstepProject:      pulumi.String(\"project1\"),\n\t\t\tProject:               pulumi.String(\"terraform\"),\n\t\t\tSourceOfs: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Metrics\"),\n\t\t\t\tpulumi.String(\"Services\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nobl9.DirectLightstep;\nimport com.pulumi.nobl9.DirectLightstepArgs;\nimport com.pulumi.nobl9.inputs.DirectLightstepHistoricalDataRetrievalArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test_lightstep = new DirectLightstep(\"test-lightstep\", DirectLightstepArgs.builder()        \n            .appToken(\"secret\")\n            .description(\"desc\")\n            .historicalDataRetrieval(DirectLightstepHistoricalDataRetrievalArgs.builder()\n                .defaultDurations(DirectLightstepHistoricalDataRetrievalDefaultDurationArgs.builder()\n                    .unit(\"Day\")\n                    .value(0)\n                    .build())\n                .maxDurations(DirectLightstepHistoricalDataRetrievalMaxDurationArgs.builder()\n                    .unit(\"Day\")\n                    .value(30)\n                    .build())\n                .build())\n            .lightstepOrganization(\"acme\")\n            .lightstepProject(\"project1\")\n            .project(\"terraform\")\n            .sourceOfs(            \n                \"Metrics\",\n                \"Services\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test-lightstep:\n    type: nobl9:DirectLightstep\n    properties:\n      appToken: secret\n      description: desc\n      historicalDataRetrieval:\n        defaultDurations:\n          - unit: Day\n            value: 0\n        maxDurations:\n          - unit: Day\n            value: 30\n      lightstepOrganization: acme\n      lightstepProject: project1\n      project: terraform\n      sourceOfs:\n        - Metrics\n        - Services\n```\n\n{{% /example %}}\n{{% /examples %}}\n## Nobl9 Official Documentation\n\nhttps://docs.nobl9.com/\n",
            "properties": {
                "appToken": {
                    "type": "string",
                    "description": "[required] | Lightstep App Token.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "historicalDataRetrieval": {
                    "$ref": "#/types/nobl9:index/DirectLightstepHistoricalDataRetrieval:DirectLightstepHistoricalDataRetrieval",
                    "description": "[Replay configuration documentation](https://docs.nobl9.com/replay)\n"
                },
                "lightstepOrganization": {
                    "type": "string",
                    "description": "Organization name registered in Lightstep.\n"
                },
                "lightstepProject": {
                    "type": "string",
                    "description": "Name of the Lightstep project.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "queryDelay": {
                    "$ref": "#/types/nobl9:index/DirectLightstepQueryDelay:DirectLightstepQueryDelay",
                    "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                },
                "sourceOfs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Source of Metrics and/or Services.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the created direct.\n"
                }
            },
            "required": [
                "appToken",
                "lightstepOrganization",
                "lightstepProject",
                "name",
                "project",
                "sourceOfs",
                "status"
            ],
            "inputProperties": {
                "appToken": {
                    "type": "string",
                    "description": "[required] | Lightstep App Token.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "historicalDataRetrieval": {
                    "$ref": "#/types/nobl9:index/DirectLightstepHistoricalDataRetrieval:DirectLightstepHistoricalDataRetrieval",
                    "description": "[Replay configuration documentation](https://docs.nobl9.com/replay)\n"
                },
                "lightstepOrganization": {
                    "type": "string",
                    "description": "Organization name registered in Lightstep.\n"
                },
                "lightstepProject": {
                    "type": "string",
                    "description": "Name of the Lightstep project.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "queryDelay": {
                    "$ref": "#/types/nobl9:index/DirectLightstepQueryDelay:DirectLightstepQueryDelay",
                    "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                },
                "sourceOfs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Source of Metrics and/or Services.\n"
                }
            },
            "requiredInputs": [
                "lightstepOrganization",
                "lightstepProject",
                "project",
                "sourceOfs"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DirectLightstep resources.\n",
                "properties": {
                    "appToken": {
                        "type": "string",
                        "description": "[required] | Lightstep App Token.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "User-friendly display name of the resource.\n"
                    },
                    "historicalDataRetrieval": {
                        "$ref": "#/types/nobl9:index/DirectLightstepHistoricalDataRetrieval:DirectLightstepHistoricalDataRetrieval",
                        "description": "[Replay configuration documentation](https://docs.nobl9.com/replay)\n"
                    },
                    "lightstepOrganization": {
                        "type": "string",
                        "description": "Organization name registered in Lightstep.\n"
                    },
                    "lightstepProject": {
                        "type": "string",
                        "description": "Name of the Lightstep project.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "queryDelay": {
                        "$ref": "#/types/nobl9:index/DirectLightstepQueryDelay:DirectLightstepQueryDelay",
                        "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                    },
                    "sourceOfs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Source of Metrics and/or Services.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the created direct.\n"
                    }
                },
                "type": "object"
            }
        },
        "nobl9:index/directNewrelic:DirectNewrelic": {
            "description": "New Relic is a software solution that monitors performance and availability. It sets and rates application performance across the environment using a standardized Apdex (application performance index) score. Nobl9 connects with New Relic to collect SLI measurements and compare them to SLO targets.\n\nFor more information, refer to [New Relic Direct | Nobl9 Documentation](https://docs.nobl9.com/Sources/new-relic#new-relic-direct).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nobl9 from \"@pulumi/nobl9\";\n\nconst test_newrelic = new nobl9.DirectNewrelic(\"test-newrelic\", {\n    accountId: 1234,\n    description: \"desc\",\n    historicalDataRetrieval: {\n        defaultDurations: [{\n            unit: \"Day\",\n            value: 0,\n        }],\n        maxDurations: [{\n            unit: \"Day\",\n            value: 30,\n        }],\n    },\n    insightsQueryKey: \"secret\",\n    project: \"terraform\",\n    sourceOfs: [\n        \"Metrics\",\n        \"Services\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_nobl9 as nobl9\n\ntest_newrelic = nobl9.DirectNewrelic(\"test-newrelic\",\n    account_id=1234,\n    description=\"desc\",\n    historical_data_retrieval=nobl9.DirectNewrelicHistoricalDataRetrievalArgs(\n        default_durations=[nobl9.DirectNewrelicHistoricalDataRetrievalDefaultDurationArgs(\n            unit=\"Day\",\n            value=0,\n        )],\n        max_durations=[nobl9.DirectNewrelicHistoricalDataRetrievalMaxDurationArgs(\n            unit=\"Day\",\n            value=30,\n        )],\n    ),\n    insights_query_key=\"secret\",\n    project=\"terraform\",\n    source_ofs=[\n        \"Metrics\",\n        \"Services\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Nobl9 = Pulumi.Nobl9;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test_newrelic = new Nobl9.DirectNewrelic(\"test-newrelic\", new()\n    {\n        AccountId = 1234,\n        Description = \"desc\",\n        HistoricalDataRetrieval = new Nobl9.Inputs.DirectNewrelicHistoricalDataRetrievalArgs\n        {\n            DefaultDurations = new[]\n            {\n                new Nobl9.Inputs.DirectNewrelicHistoricalDataRetrievalDefaultDurationArgs\n                {\n                    Unit = \"Day\",\n                    Value = 0,\n                },\n            },\n            MaxDurations = new[]\n            {\n                new Nobl9.Inputs.DirectNewrelicHistoricalDataRetrievalMaxDurationArgs\n                {\n                    Unit = \"Day\",\n                    Value = 30,\n                },\n            },\n        },\n        InsightsQueryKey = \"secret\",\n        Project = \"terraform\",\n        SourceOfs = new[]\n        {\n            \"Metrics\",\n            \"Services\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-nobl9/sdk/go/nobl9\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nobl9.NewDirectNewrelic(ctx, \"test-newrelic\", \u0026nobl9.DirectNewrelicArgs{\n\t\t\tAccountId:   pulumi.Int(1234),\n\t\t\tDescription: pulumi.String(\"desc\"),\n\t\t\tHistoricalDataRetrieval: \u0026DirectNewrelicHistoricalDataRetrievalArgs{\n\t\t\t\tDefaultDurations: DirectNewrelicHistoricalDataRetrievalDefaultDurationArray{\n\t\t\t\t\t\u0026DirectNewrelicHistoricalDataRetrievalDefaultDurationArgs{\n\t\t\t\t\t\tUnit:  pulumi.String(\"Day\"),\n\t\t\t\t\t\tValue: pulumi.Int(0),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tMaxDurations: DirectNewrelicHistoricalDataRetrievalMaxDurationArray{\n\t\t\t\t\t\u0026DirectNewrelicHistoricalDataRetrievalMaxDurationArgs{\n\t\t\t\t\t\tUnit:  pulumi.String(\"Day\"),\n\t\t\t\t\t\tValue: pulumi.Int(30),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tInsightsQueryKey: pulumi.String(\"secret\"),\n\t\t\tProject:          pulumi.String(\"terraform\"),\n\t\t\tSourceOfs: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Metrics\"),\n\t\t\t\tpulumi.String(\"Services\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nobl9.DirectNewrelic;\nimport com.pulumi.nobl9.DirectNewrelicArgs;\nimport com.pulumi.nobl9.inputs.DirectNewrelicHistoricalDataRetrievalArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test_newrelic = new DirectNewrelic(\"test-newrelic\", DirectNewrelicArgs.builder()        \n            .accountId(\"1234\")\n            .description(\"desc\")\n            .historicalDataRetrieval(DirectNewrelicHistoricalDataRetrievalArgs.builder()\n                .defaultDurations(DirectNewrelicHistoricalDataRetrievalDefaultDurationArgs.builder()\n                    .unit(\"Day\")\n                    .value(0)\n                    .build())\n                .maxDurations(DirectNewrelicHistoricalDataRetrievalMaxDurationArgs.builder()\n                    .unit(\"Day\")\n                    .value(30)\n                    .build())\n                .build())\n            .insightsQueryKey(\"secret\")\n            .project(\"terraform\")\n            .sourceOfs(            \n                \"Metrics\",\n                \"Services\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test-newrelic:\n    type: nobl9:DirectNewrelic\n    properties:\n      accountId: 1234\n      description: desc\n      historicalDataRetrieval:\n        defaultDurations:\n          - unit: Day\n            value: 0\n        maxDurations:\n          - unit: Day\n            value: 30\n      insightsQueryKey: secret\n      project: terraform\n      sourceOfs:\n        - Metrics\n        - Services\n```\n\n{{% /example %}}\n{{% /examples %}}\n## Nobl9 Official Documentation\n\nhttps://docs.nobl9.com/\n",
            "properties": {
                "accountId": {
                    "type": "integer",
                    "description": "ID number assigned to the New Relic user account.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "historicalDataRetrieval": {
                    "$ref": "#/types/nobl9:index/DirectNewrelicHistoricalDataRetrieval:DirectNewrelicHistoricalDataRetrieval",
                    "description": "[Replay configuration documentation](https://docs.nobl9.com/replay)\n"
                },
                "insightsQueryKey": {
                    "type": "string",
                    "description": "[required] | New Relic Insights Query Key.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "queryDelay": {
                    "$ref": "#/types/nobl9:index/DirectNewrelicQueryDelay:DirectNewrelicQueryDelay",
                    "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                },
                "sourceOfs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Source of Metrics and/or Services.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the created direct.\n"
                }
            },
            "required": [
                "accountId",
                "insightsQueryKey",
                "name",
                "project",
                "sourceOfs",
                "status"
            ],
            "inputProperties": {
                "accountId": {
                    "type": "integer",
                    "description": "ID number assigned to the New Relic user account.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "historicalDataRetrieval": {
                    "$ref": "#/types/nobl9:index/DirectNewrelicHistoricalDataRetrieval:DirectNewrelicHistoricalDataRetrieval",
                    "description": "[Replay configuration documentation](https://docs.nobl9.com/replay)\n"
                },
                "insightsQueryKey": {
                    "type": "string",
                    "description": "[required] | New Relic Insights Query Key.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "queryDelay": {
                    "$ref": "#/types/nobl9:index/DirectNewrelicQueryDelay:DirectNewrelicQueryDelay",
                    "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                },
                "sourceOfs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Source of Metrics and/or Services.\n"
                }
            },
            "requiredInputs": [
                "accountId",
                "project",
                "sourceOfs"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DirectNewrelic resources.\n",
                "properties": {
                    "accountId": {
                        "type": "integer",
                        "description": "ID number assigned to the New Relic user account.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "User-friendly display name of the resource.\n"
                    },
                    "historicalDataRetrieval": {
                        "$ref": "#/types/nobl9:index/DirectNewrelicHistoricalDataRetrieval:DirectNewrelicHistoricalDataRetrieval",
                        "description": "[Replay configuration documentation](https://docs.nobl9.com/replay)\n"
                    },
                    "insightsQueryKey": {
                        "type": "string",
                        "description": "[required] | New Relic Insights Query Key.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "queryDelay": {
                        "$ref": "#/types/nobl9:index/DirectNewrelicQueryDelay:DirectNewrelicQueryDelay",
                        "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                    },
                    "sourceOfs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Source of Metrics and/or Services.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the created direct.\n"
                    }
                },
                "type": "object"
            }
        },
        "nobl9:index/directPingdom:DirectPingdom": {
            "description": "Pingdom is a website monitoring software solution that gives users real-time, quality insights into the uptime and performance of their websites. After adding Pingdom as a data source in Nobl9, users can configure SLOs to check the overall performance status of their sites. Nobl9 connects with Pingdom to collect SLI measurements and compare them to SLO targets.\n\nFor more information, refer to [Pingdom Direct | Nobl9 Documentation](https://docs.nobl9.com/Sources/pingdom#pingdom-direct).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nobl9 from \"@pulumi/nobl9\";\n\nconst test_pingdom = new nobl9.DirectPingdom(\"test-pingdom\", {\n    apiToken: \"secret\",\n    description: \"desc\",\n    project: \"terraform\",\n    sourceOfs: [\n        \"Metrics\",\n        \"Services\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_nobl9 as nobl9\n\ntest_pingdom = nobl9.DirectPingdom(\"test-pingdom\",\n    api_token=\"secret\",\n    description=\"desc\",\n    project=\"terraform\",\n    source_ofs=[\n        \"Metrics\",\n        \"Services\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Nobl9 = Pulumi.Nobl9;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test_pingdom = new Nobl9.DirectPingdom(\"test-pingdom\", new()\n    {\n        ApiToken = \"secret\",\n        Description = \"desc\",\n        Project = \"terraform\",\n        SourceOfs = new[]\n        {\n            \"Metrics\",\n            \"Services\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-nobl9/sdk/go/nobl9\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nobl9.NewDirectPingdom(ctx, \"test-pingdom\", \u0026nobl9.DirectPingdomArgs{\n\t\t\tApiToken:    pulumi.String(\"secret\"),\n\t\t\tDescription: pulumi.String(\"desc\"),\n\t\t\tProject:     pulumi.String(\"terraform\"),\n\t\t\tSourceOfs: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Metrics\"),\n\t\t\t\tpulumi.String(\"Services\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nobl9.DirectPingdom;\nimport com.pulumi.nobl9.DirectPingdomArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test_pingdom = new DirectPingdom(\"test-pingdom\", DirectPingdomArgs.builder()        \n            .apiToken(\"secret\")\n            .description(\"desc\")\n            .project(\"terraform\")\n            .sourceOfs(            \n                \"Metrics\",\n                \"Services\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test-pingdom:\n    type: nobl9:DirectPingdom\n    properties:\n      apiToken: secret\n      description: desc\n      project: terraform\n      sourceOfs:\n        - Metrics\n        - Services\n```\n\n{{% /example %}}\n{{% /examples %}}\n## Nobl9 Official Documentation\n\nhttps://docs.nobl9.com/\n",
            "properties": {
                "apiToken": {
                    "type": "string",
                    "description": "[required] | Pingdom API token.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "queryDelay": {
                    "$ref": "#/types/nobl9:index/DirectPingdomQueryDelay:DirectPingdomQueryDelay",
                    "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                },
                "sourceOfs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Source of Metrics and/or Services.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the created direct.\n"
                }
            },
            "required": [
                "apiToken",
                "name",
                "project",
                "sourceOfs",
                "status"
            ],
            "inputProperties": {
                "apiToken": {
                    "type": "string",
                    "description": "[required] | Pingdom API token.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "queryDelay": {
                    "$ref": "#/types/nobl9:index/DirectPingdomQueryDelay:DirectPingdomQueryDelay",
                    "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                },
                "sourceOfs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Source of Metrics and/or Services.\n"
                }
            },
            "requiredInputs": [
                "project",
                "sourceOfs"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DirectPingdom resources.\n",
                "properties": {
                    "apiToken": {
                        "type": "string",
                        "description": "[required] | Pingdom API token.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "User-friendly display name of the resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "queryDelay": {
                        "$ref": "#/types/nobl9:index/DirectPingdomQueryDelay:DirectPingdomQueryDelay",
                        "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                    },
                    "sourceOfs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Source of Metrics and/or Services.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the created direct.\n"
                    }
                },
                "type": "object"
            }
        },
        "nobl9:index/directRedshift:DirectRedshift": {
            "description": "Amazon Redshift is a managed scalable database warehouse where Nobl9 users can store their metrics information. Nobl9 connects with Amazon Redshift to collect SLI measurements and compare them to SLO targets.\n\nFor more information, refer to [Amazon Redshift Direct | Nobl9 Documentation](https://docs.nobl9.com/Sources/Amazon_Redshift/?_highlight=redshift#amazon-redshift-direct).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nobl9 from \"@pulumi/nobl9\";\n\nconst test_redshift = new nobl9.DirectRedshift(\"test-redshift\", {\n    accessKeyId: \"secret\",\n    description: \"desc\",\n    project: \"terraform\",\n    secretAccessKey: \"secret\",\n    secretArn: \"aws:arn\",\n    sourceOfs: [\n        \"Metrics\",\n        \"Services\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_nobl9 as nobl9\n\ntest_redshift = nobl9.DirectRedshift(\"test-redshift\",\n    access_key_id=\"secret\",\n    description=\"desc\",\n    project=\"terraform\",\n    secret_access_key=\"secret\",\n    secret_arn=\"aws:arn\",\n    source_ofs=[\n        \"Metrics\",\n        \"Services\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Nobl9 = Pulumi.Nobl9;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test_redshift = new Nobl9.DirectRedshift(\"test-redshift\", new()\n    {\n        AccessKeyId = \"secret\",\n        Description = \"desc\",\n        Project = \"terraform\",\n        SecretAccessKey = \"secret\",\n        SecretArn = \"aws:arn\",\n        SourceOfs = new[]\n        {\n            \"Metrics\",\n            \"Services\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-nobl9/sdk/go/nobl9\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nobl9.NewDirectRedshift(ctx, \"test-redshift\", \u0026nobl9.DirectRedshiftArgs{\n\t\t\tAccessKeyId:     pulumi.String(\"secret\"),\n\t\t\tDescription:     pulumi.String(\"desc\"),\n\t\t\tProject:         pulumi.String(\"terraform\"),\n\t\t\tSecretAccessKey: pulumi.String(\"secret\"),\n\t\t\tSecretArn:       pulumi.String(\"aws:arn\"),\n\t\t\tSourceOfs: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Metrics\"),\n\t\t\t\tpulumi.String(\"Services\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nobl9.DirectRedshift;\nimport com.pulumi.nobl9.DirectRedshiftArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test_redshift = new DirectRedshift(\"test-redshift\", DirectRedshiftArgs.builder()        \n            .accessKeyId(\"secret\")\n            .description(\"desc\")\n            .project(\"terraform\")\n            .secretAccessKey(\"secret\")\n            .secretArn(\"aws:arn\")\n            .sourceOfs(            \n                \"Metrics\",\n                \"Services\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test-redshift:\n    type: nobl9:DirectRedshift\n    properties:\n      accessKeyId: secret\n      description: desc\n      project: terraform\n      secretAccessKey: secret\n      secretArn: aws:arn\n      sourceOfs:\n        - Metrics\n        - Services\n```\n\n{{% /example %}}\n{{% /examples %}}\n## Nobl9 Official Documentation\n\nhttps://docs.nobl9.com/\n",
            "properties": {
                "accessKeyId": {
                    "type": "string",
                    "description": "[required] | AWS Access Key ID.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "queryDelay": {
                    "$ref": "#/types/nobl9:index/DirectRedshiftQueryDelay:DirectRedshiftQueryDelay",
                    "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                },
                "secretAccessKey": {
                    "type": "string",
                    "description": "[required] | AWS Secret Access Key.\n"
                },
                "secretArn": {
                    "type": "string",
                    "description": "AWS Secret ARN.\n"
                },
                "sourceOfs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Source of Metrics and/or Services.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the created direct.\n"
                }
            },
            "required": [
                "accessKeyId",
                "name",
                "project",
                "secretAccessKey",
                "secretArn",
                "sourceOfs",
                "status"
            ],
            "inputProperties": {
                "accessKeyId": {
                    "type": "string",
                    "description": "[required] | AWS Access Key ID.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "queryDelay": {
                    "$ref": "#/types/nobl9:index/DirectRedshiftQueryDelay:DirectRedshiftQueryDelay",
                    "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                },
                "secretAccessKey": {
                    "type": "string",
                    "description": "[required] | AWS Secret Access Key.\n"
                },
                "secretArn": {
                    "type": "string",
                    "description": "AWS Secret ARN.\n"
                },
                "sourceOfs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Source of Metrics and/or Services.\n"
                }
            },
            "requiredInputs": [
                "project",
                "sourceOfs"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DirectRedshift resources.\n",
                "properties": {
                    "accessKeyId": {
                        "type": "string",
                        "description": "[required] | AWS Access Key ID.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "User-friendly display name of the resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "queryDelay": {
                        "$ref": "#/types/nobl9:index/DirectRedshiftQueryDelay:DirectRedshiftQueryDelay",
                        "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                    },
                    "secretAccessKey": {
                        "type": "string",
                        "description": "[required] | AWS Secret Access Key.\n"
                    },
                    "secretArn": {
                        "type": "string",
                        "description": "AWS Secret ARN.\n"
                    },
                    "sourceOfs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Source of Metrics and/or Services.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the created direct.\n"
                    }
                },
                "type": "object"
            }
        },
        "nobl9:index/directSplunk:DirectSplunk": {
            "description": "Splunk provides software for searching, monitoring, and analyzing machine-generated data via a Web-style interface. Nobl9 connects with Splunk to collect SLI measurements and compare them to SLO targets.\n\nFor more information, refer to [Splunk Direct | Nobl9 Documentation](https://docs.nobl9.com/Sources/splunk#splunk-direct).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nobl9 from \"@pulumi/nobl9\";\n\nconst test_splunk = new nobl9.DirectSplunk(\"test-splunk\", {\n    accessToken: \"secret\",\n    description: \"desc\",\n    historicalDataRetrieval: {\n        defaultDurations: [{\n            unit: \"Day\",\n            value: 0,\n        }],\n        maxDurations: [{\n            unit: \"Day\",\n            value: 30,\n        }],\n    },\n    project: \"terraform\",\n    sourceOfs: [\n        \"Metrics\",\n        \"Services\",\n    ],\n    url: \"https://web.net\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nobl9 as nobl9\n\ntest_splunk = nobl9.DirectSplunk(\"test-splunk\",\n    access_token=\"secret\",\n    description=\"desc\",\n    historical_data_retrieval=nobl9.DirectSplunkHistoricalDataRetrievalArgs(\n        default_durations=[nobl9.DirectSplunkHistoricalDataRetrievalDefaultDurationArgs(\n            unit=\"Day\",\n            value=0,\n        )],\n        max_durations=[nobl9.DirectSplunkHistoricalDataRetrievalMaxDurationArgs(\n            unit=\"Day\",\n            value=30,\n        )],\n    ),\n    project=\"terraform\",\n    source_ofs=[\n        \"Metrics\",\n        \"Services\",\n    ],\n    url=\"https://web.net\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Nobl9 = Pulumi.Nobl9;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test_splunk = new Nobl9.DirectSplunk(\"test-splunk\", new()\n    {\n        AccessToken = \"secret\",\n        Description = \"desc\",\n        HistoricalDataRetrieval = new Nobl9.Inputs.DirectSplunkHistoricalDataRetrievalArgs\n        {\n            DefaultDurations = new[]\n            {\n                new Nobl9.Inputs.DirectSplunkHistoricalDataRetrievalDefaultDurationArgs\n                {\n                    Unit = \"Day\",\n                    Value = 0,\n                },\n            },\n            MaxDurations = new[]\n            {\n                new Nobl9.Inputs.DirectSplunkHistoricalDataRetrievalMaxDurationArgs\n                {\n                    Unit = \"Day\",\n                    Value = 30,\n                },\n            },\n        },\n        Project = \"terraform\",\n        SourceOfs = new[]\n        {\n            \"Metrics\",\n            \"Services\",\n        },\n        Url = \"https://web.net\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-nobl9/sdk/go/nobl9\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nobl9.NewDirectSplunk(ctx, \"test-splunk\", \u0026nobl9.DirectSplunkArgs{\n\t\t\tAccessToken: pulumi.String(\"secret\"),\n\t\t\tDescription: pulumi.String(\"desc\"),\n\t\t\tHistoricalDataRetrieval: \u0026DirectSplunkHistoricalDataRetrievalArgs{\n\t\t\t\tDefaultDurations: DirectSplunkHistoricalDataRetrievalDefaultDurationArray{\n\t\t\t\t\t\u0026DirectSplunkHistoricalDataRetrievalDefaultDurationArgs{\n\t\t\t\t\t\tUnit:  pulumi.String(\"Day\"),\n\t\t\t\t\t\tValue: pulumi.Int(0),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tMaxDurations: DirectSplunkHistoricalDataRetrievalMaxDurationArray{\n\t\t\t\t\t\u0026DirectSplunkHistoricalDataRetrievalMaxDurationArgs{\n\t\t\t\t\t\tUnit:  pulumi.String(\"Day\"),\n\t\t\t\t\t\tValue: pulumi.Int(30),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tProject: pulumi.String(\"terraform\"),\n\t\t\tSourceOfs: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Metrics\"),\n\t\t\t\tpulumi.String(\"Services\"),\n\t\t\t},\n\t\t\tUrl: pulumi.String(\"https://web.net\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nobl9.DirectSplunk;\nimport com.pulumi.nobl9.DirectSplunkArgs;\nimport com.pulumi.nobl9.inputs.DirectSplunkHistoricalDataRetrievalArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test_splunk = new DirectSplunk(\"test-splunk\", DirectSplunkArgs.builder()        \n            .accessToken(\"secret\")\n            .description(\"desc\")\n            .historicalDataRetrieval(DirectSplunkHistoricalDataRetrievalArgs.builder()\n                .defaultDurations(DirectSplunkHistoricalDataRetrievalDefaultDurationArgs.builder()\n                    .unit(\"Day\")\n                    .value(0)\n                    .build())\n                .maxDurations(DirectSplunkHistoricalDataRetrievalMaxDurationArgs.builder()\n                    .unit(\"Day\")\n                    .value(30)\n                    .build())\n                .build())\n            .project(\"terraform\")\n            .sourceOfs(            \n                \"Metrics\",\n                \"Services\")\n            .url(\"https://web.net\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test-splunk:\n    type: nobl9:DirectSplunk\n    properties:\n      accessToken: secret\n      description: desc\n      historicalDataRetrieval:\n        defaultDurations:\n          - unit: Day\n            value: 0\n        maxDurations:\n          - unit: Day\n            value: 30\n      project: terraform\n      sourceOfs:\n        - Metrics\n        - Services\n      url: https://web.net\n```\n\n{{% /example %}}\n{{% /examples %}}\n## Nobl9 Official Documentation\n\nhttps://docs.nobl9.com/\n",
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "[required] | Splunk API Access Token.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "historicalDataRetrieval": {
                    "$ref": "#/types/nobl9:index/DirectSplunkHistoricalDataRetrieval:DirectSplunkHistoricalDataRetrieval",
                    "description": "[Replay configuration documentation](https://docs.nobl9.com/replay)\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "queryDelay": {
                    "$ref": "#/types/nobl9:index/DirectSplunkQueryDelay:DirectSplunkQueryDelay",
                    "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                },
                "sourceOfs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Source of Metrics and/or Services.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the created direct.\n"
                },
                "url": {
                    "type": "string",
                    "description": "Base API URL to the Splunk Search app.\n"
                }
            },
            "required": [
                "accessToken",
                "name",
                "project",
                "sourceOfs",
                "status",
                "url"
            ],
            "inputProperties": {
                "accessToken": {
                    "type": "string",
                    "description": "[required] | Splunk API Access Token.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "historicalDataRetrieval": {
                    "$ref": "#/types/nobl9:index/DirectSplunkHistoricalDataRetrieval:DirectSplunkHistoricalDataRetrieval",
                    "description": "[Replay configuration documentation](https://docs.nobl9.com/replay)\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "queryDelay": {
                    "$ref": "#/types/nobl9:index/DirectSplunkQueryDelay:DirectSplunkQueryDelay",
                    "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                },
                "sourceOfs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Source of Metrics and/or Services.\n"
                },
                "url": {
                    "type": "string",
                    "description": "Base API URL to the Splunk Search app.\n"
                }
            },
            "requiredInputs": [
                "project",
                "sourceOfs",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DirectSplunk resources.\n",
                "properties": {
                    "accessToken": {
                        "type": "string",
                        "description": "[required] | Splunk API Access Token.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "User-friendly display name of the resource.\n"
                    },
                    "historicalDataRetrieval": {
                        "$ref": "#/types/nobl9:index/DirectSplunkHistoricalDataRetrieval:DirectSplunkHistoricalDataRetrieval",
                        "description": "[Replay configuration documentation](https://docs.nobl9.com/replay)\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "queryDelay": {
                        "$ref": "#/types/nobl9:index/DirectSplunkQueryDelay:DirectSplunkQueryDelay",
                        "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                    },
                    "sourceOfs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Source of Metrics and/or Services.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the created direct.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "Base API URL to the Splunk Search app.\n"
                    }
                },
                "type": "object"
            }
        },
        "nobl9:index/directSplunkObservability:DirectSplunkObservability": {
            "description": "Splunk Observability allows users to search, monitor, and analyze machine-generated big data. Splunk Observability enables collecting and monitoring metrics, logs, and traces from common data sources. Data collection and monitoring in one place enables full-stack, end-to-end observability of the entire infrastructure. Nobl9 connects with Splunk Observability to collect SLI measurements and compare them to SLO targets.\n\nFor more information, refer to [Splunk Observability Direct | Nobl9 Documentation](https://docs.nobl9.com/Sources/splunk-observability/#splunk-observability-direct).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nobl9 from \"@pulumi/nobl9\";\n\nconst test_splunkobservability = new nobl9.DirectSplunkObservability(\"test-splunkobservability\", {\n    accessToken: \"secret\",\n    description: \"desc\",\n    project: \"terraform\",\n    realm: \"eu\",\n    sourceOfs: [\n        \"Metrics\",\n        \"Services\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_nobl9 as nobl9\n\ntest_splunkobservability = nobl9.DirectSplunkObservability(\"test-splunkobservability\",\n    access_token=\"secret\",\n    description=\"desc\",\n    project=\"terraform\",\n    realm=\"eu\",\n    source_ofs=[\n        \"Metrics\",\n        \"Services\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Nobl9 = Pulumi.Nobl9;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test_splunkobservability = new Nobl9.DirectSplunkObservability(\"test-splunkobservability\", new()\n    {\n        AccessToken = \"secret\",\n        Description = \"desc\",\n        Project = \"terraform\",\n        Realm = \"eu\",\n        SourceOfs = new[]\n        {\n            \"Metrics\",\n            \"Services\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-nobl9/sdk/go/nobl9\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nobl9.NewDirectSplunkObservability(ctx, \"test-splunkobservability\", \u0026nobl9.DirectSplunkObservabilityArgs{\n\t\t\tAccessToken: pulumi.String(\"secret\"),\n\t\t\tDescription: pulumi.String(\"desc\"),\n\t\t\tProject:     pulumi.String(\"terraform\"),\n\t\t\tRealm:       pulumi.String(\"eu\"),\n\t\t\tSourceOfs: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Metrics\"),\n\t\t\t\tpulumi.String(\"Services\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nobl9.DirectSplunkObservability;\nimport com.pulumi.nobl9.DirectSplunkObservabilityArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test_splunkobservability = new DirectSplunkObservability(\"test-splunkobservability\", DirectSplunkObservabilityArgs.builder()        \n            .accessToken(\"secret\")\n            .description(\"desc\")\n            .project(\"terraform\")\n            .realm(\"eu\")\n            .sourceOfs(            \n                \"Metrics\",\n                \"Services\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test-splunkobservability:\n    type: nobl9:DirectSplunkObservability\n    properties:\n      accessToken: secret\n      description: desc\n      project: terraform\n      realm: eu\n      sourceOfs:\n        - Metrics\n        - Services\n```\n\n{{% /example %}}\n{{% /examples %}}\n## Nobl9 Official Documentation\n\nhttps://docs.nobl9.com/\n",
            "properties": {
                "accessToken": {
                    "type": "string",
                    "description": "[required] | Splunk API Access Token.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "queryDelay": {
                    "$ref": "#/types/nobl9:index/DirectSplunkObservabilityQueryDelay:DirectSplunkObservabilityQueryDelay",
                    "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                },
                "realm": {
                    "type": "string",
                    "description": "SplunkObservability Realm.\n"
                },
                "sourceOfs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Source of Metrics and/or Services.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the created direct.\n"
                }
            },
            "required": [
                "accessToken",
                "name",
                "project",
                "realm",
                "sourceOfs",
                "status"
            ],
            "inputProperties": {
                "accessToken": {
                    "type": "string",
                    "description": "[required] | Splunk API Access Token.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "queryDelay": {
                    "$ref": "#/types/nobl9:index/DirectSplunkObservabilityQueryDelay:DirectSplunkObservabilityQueryDelay",
                    "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                },
                "realm": {
                    "type": "string",
                    "description": "SplunkObservability Realm.\n"
                },
                "sourceOfs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Source of Metrics and/or Services.\n"
                }
            },
            "requiredInputs": [
                "project",
                "realm",
                "sourceOfs"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DirectSplunkObservability resources.\n",
                "properties": {
                    "accessToken": {
                        "type": "string",
                        "description": "[required] | Splunk API Access Token.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "User-friendly display name of the resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "queryDelay": {
                        "$ref": "#/types/nobl9:index/DirectSplunkObservabilityQueryDelay:DirectSplunkObservabilityQueryDelay",
                        "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                    },
                    "realm": {
                        "type": "string",
                        "description": "SplunkObservability Realm.\n"
                    },
                    "sourceOfs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Source of Metrics and/or Services.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the created direct.\n"
                    }
                },
                "type": "object"
            }
        },
        "nobl9:index/directSumologic:DirectSumologic": {
            "description": "Sumo Logic is an observability platform that provides visibility into AWS, Azure, and GCP cloud applications and infrastructure. Nobl9 connects with Sumo Logic to collect SLI measurements and compare them to SLO targets.\n\nFor more information, refer to [Sumo Logic Direct | Nobl9 Documentation](https://docs.nobl9.com/Sources/sumo-logic#sumo-logic-direct).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nobl9 from \"@pulumi/nobl9\";\n\nconst test_sumologic = new nobl9.DirectSumologic(\"test-sumologic\", {\n    accessId: \"secret\",\n    accessKey: \"secret\",\n    description: \"desc\",\n    project: \"terraform\",\n    sourceOfs: [\"Metrics\"],\n    url: \"http://web.net\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nobl9 as nobl9\n\ntest_sumologic = nobl9.DirectSumologic(\"test-sumologic\",\n    access_id=\"secret\",\n    access_key=\"secret\",\n    description=\"desc\",\n    project=\"terraform\",\n    source_ofs=[\"Metrics\"],\n    url=\"http://web.net\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Nobl9 = Pulumi.Nobl9;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test_sumologic = new Nobl9.DirectSumologic(\"test-sumologic\", new()\n    {\n        AccessId = \"secret\",\n        AccessKey = \"secret\",\n        Description = \"desc\",\n        Project = \"terraform\",\n        SourceOfs = new[]\n        {\n            \"Metrics\",\n        },\n        Url = \"http://web.net\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-nobl9/sdk/go/nobl9\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nobl9.NewDirectSumologic(ctx, \"test-sumologic\", \u0026nobl9.DirectSumologicArgs{\n\t\t\tAccessId:    pulumi.String(\"secret\"),\n\t\t\tAccessKey:   pulumi.String(\"secret\"),\n\t\t\tDescription: pulumi.String(\"desc\"),\n\t\t\tProject:     pulumi.String(\"terraform\"),\n\t\t\tSourceOfs: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Metrics\"),\n\t\t\t},\n\t\t\tUrl: pulumi.String(\"http://web.net\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nobl9.DirectSumologic;\nimport com.pulumi.nobl9.DirectSumologicArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test_sumologic = new DirectSumologic(\"test-sumologic\", DirectSumologicArgs.builder()        \n            .accessId(\"secret\")\n            .accessKey(\"secret\")\n            .description(\"desc\")\n            .project(\"terraform\")\n            .sourceOfs(\"Metrics\")\n            .url(\"http://web.net\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test-sumologic:\n    type: nobl9:DirectSumologic\n    properties:\n      accessId: secret\n      accessKey: secret\n      description: desc\n      project: terraform\n      sourceOfs:\n        - Metrics\n      url: http://web.net\n```\n\n{{% /example %}}\n{{% /examples %}}\n## Nobl9 Official Documentation\n\nhttps://docs.nobl9.com/\n",
            "properties": {
                "accessId": {
                    "type": "string",
                    "description": "[required] | Sumo Logic API Access ID.\n"
                },
                "accessKey": {
                    "type": "string",
                    "description": "[required] | Sumo Logic API Access Key.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "queryDelay": {
                    "$ref": "#/types/nobl9:index/DirectSumologicQueryDelay:DirectSumologicQueryDelay",
                    "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                },
                "sourceOfs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Source of Metrics and/or Services.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the created direct.\n"
                },
                "url": {
                    "type": "string",
                    "description": "Sumo Logic API URL.\n"
                }
            },
            "required": [
                "accessId",
                "accessKey",
                "name",
                "project",
                "sourceOfs",
                "status",
                "url"
            ],
            "inputProperties": {
                "accessId": {
                    "type": "string",
                    "description": "[required] | Sumo Logic API Access ID.\n"
                },
                "accessKey": {
                    "type": "string",
                    "description": "[required] | Sumo Logic API Access Key.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "queryDelay": {
                    "$ref": "#/types/nobl9:index/DirectSumologicQueryDelay:DirectSumologicQueryDelay",
                    "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                },
                "sourceOfs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Source of Metrics and/or Services.\n"
                },
                "url": {
                    "type": "string",
                    "description": "Sumo Logic API URL.\n"
                }
            },
            "requiredInputs": [
                "project",
                "sourceOfs",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DirectSumologic resources.\n",
                "properties": {
                    "accessId": {
                        "type": "string",
                        "description": "[required] | Sumo Logic API Access ID.\n"
                    },
                    "accessKey": {
                        "type": "string",
                        "description": "[required] | Sumo Logic API Access Key.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "User-friendly display name of the resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "queryDelay": {
                        "$ref": "#/types/nobl9:index/DirectSumologicQueryDelay:DirectSumologicQueryDelay",
                        "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                    },
                    "sourceOfs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Source of Metrics and/or Services.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the created direct.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "Sumo Logic API URL.\n"
                    }
                },
                "type": "object"
            }
        },
        "nobl9:index/directThousandeyes:DirectThousandeyes": {
            "description": "ThousandEyes monitors the performance of both local and wide-area networks. ThousandEyes combines Internet and WAN visibility, browser synthetics, end-user monitoring, and Internet Insights to deliver a holistic view of your hybrid digital ecosystem – across cloud, SaaS, and the Internet. It's a SaaS-based tool that helps troubleshoot application delivery and maps Internet performance. Nobl9 connects with ThousandEyes to collect SLI measurements and compare them to SLO targets.\n\nFor more information, refer to [ThousandEyes Direct | Nobl9 Documentation](https://docs.nobl9.com/Sources/thousandeyes#thousandeyes-direct).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nobl9 from \"@pulumi/nobl9\";\n\nconst test_thousandeyes = new nobl9.DirectThousandeyes(\"test-thousandeyes\", {\n    description: \"desc\",\n    oauthBearerToken: \"secret\",\n    project: \"terraform\",\n    sourceOfs: [\n        \"Metrics\",\n        \"Services\",\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_nobl9 as nobl9\n\ntest_thousandeyes = nobl9.DirectThousandeyes(\"test-thousandeyes\",\n    description=\"desc\",\n    oauth_bearer_token=\"secret\",\n    project=\"terraform\",\n    source_ofs=[\n        \"Metrics\",\n        \"Services\",\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Nobl9 = Pulumi.Nobl9;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var test_thousandeyes = new Nobl9.DirectThousandeyes(\"test-thousandeyes\", new()\n    {\n        Description = \"desc\",\n        OauthBearerToken = \"secret\",\n        Project = \"terraform\",\n        SourceOfs = new[]\n        {\n            \"Metrics\",\n            \"Services\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-nobl9/sdk/go/nobl9\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nobl9.NewDirectThousandeyes(ctx, \"test-thousandeyes\", \u0026nobl9.DirectThousandeyesArgs{\n\t\t\tDescription:      pulumi.String(\"desc\"),\n\t\t\tOauthBearerToken: pulumi.String(\"secret\"),\n\t\t\tProject:          pulumi.String(\"terraform\"),\n\t\t\tSourceOfs: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Metrics\"),\n\t\t\t\tpulumi.String(\"Services\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nobl9.DirectThousandeyes;\nimport com.pulumi.nobl9.DirectThousandeyesArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var test_thousandeyes = new DirectThousandeyes(\"test-thousandeyes\", DirectThousandeyesArgs.builder()        \n            .description(\"desc\")\n            .oauthBearerToken(\"secret\")\n            .project(\"terraform\")\n            .sourceOfs(            \n                \"Metrics\",\n                \"Services\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  test-thousandeyes:\n    type: nobl9:DirectThousandeyes\n    properties:\n      description: desc\n      oauthBearerToken: secret\n      project: terraform\n      sourceOfs:\n        - Metrics\n        - Services\n```\n\n{{% /example %}}\n{{% /examples %}}\n## Nobl9 Official Documentation\n\nhttps://docs.nobl9.com/\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "oauthBearerToken": {
                    "type": "string",
                    "description": "[required] | ThousandEyes OAuth Bearer Token.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "queryDelay": {
                    "$ref": "#/types/nobl9:index/DirectThousandeyesQueryDelay:DirectThousandeyesQueryDelay",
                    "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                },
                "sourceOfs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Source of Metrics and/or Services.\n"
                },
                "status": {
                    "type": "string",
                    "description": "The status of the created direct.\n"
                }
            },
            "required": [
                "name",
                "oauthBearerToken",
                "project",
                "sourceOfs",
                "status"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "oauthBearerToken": {
                    "type": "string",
                    "description": "[required] | ThousandEyes OAuth Bearer Token.\n"
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "queryDelay": {
                    "$ref": "#/types/nobl9:index/DirectThousandeyesQueryDelay:DirectThousandeyesQueryDelay",
                    "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                },
                "sourceOfs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Source of Metrics and/or Services.\n"
                }
            },
            "requiredInputs": [
                "project",
                "sourceOfs"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DirectThousandeyes resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "User-friendly display name of the resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "oauthBearerToken": {
                        "type": "string",
                        "description": "[required] | ThousandEyes OAuth Bearer Token.\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "queryDelay": {
                        "$ref": "#/types/nobl9:index/DirectThousandeyesQueryDelay:DirectThousandeyesQueryDelay",
                        "description": "[Query delay configuration documentation](https://docs.nobl9.com/Features/query-delay). Computed if not provided.\n"
                    },
                    "sourceOfs": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Source of Metrics and/or Services.\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the created direct.\n"
                    }
                },
                "type": "object"
            }
        },
        "nobl9:index/project:Project": {
            "description": "**Projects** are the primary logical grouping of resources in the Nobl9 platform. All Nobl9 resources, such as data sources, SLOs, and alerts, are created within a project.\n\nAccess controls at the project level enable users to control who can see and change these resources. For example, you can allow all of your users to view the SLOs in a given project, but only a few users to make changes.\n\nFor more details, refer to [Project configuration | Nobl9 Documentation](https://docs.nobl9.com/yaml-guide#project).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nHere's an example of Project resource configuration:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nobl9 from \"@pulumi/nobl9\";\n\nconst thisProject = new nobl9.Project(\"this\", {\n    description: \"An example N9 Terraform project\",\n    displayName: \"My Project\",\n    labels: [\n        {\n            key: \"env\",\n            values: [\n                \"dev\",\n                \"prod\",\n            ],\n        },\n        {\n            key: \"team\",\n            values: [\"red\"],\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_nobl9 as nobl9\n\nthis = nobl9.Project(\"this\",\n    description=\"An example N9 Terraform project\",\n    display_name=\"My Project\",\n    labels=[\n        nobl9.ProjectLabelArgs(\n            key=\"env\",\n            values=[\n                \"dev\",\n                \"prod\",\n            ],\n        ),\n        nobl9.ProjectLabelArgs(\n            key=\"team\",\n            values=[\"red\"],\n        ),\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Nobl9 = Pulumi.Nobl9;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var @this = new Nobl9.Project(\"this\", new()\n    {\n        Description = \"An example N9 Terraform project\",\n        DisplayName = \"My Project\",\n        Labels = new[]\n        {\n            new Nobl9.Inputs.ProjectLabelArgs\n            {\n                Key = \"env\",\n                Values = new[]\n                {\n                    \"dev\",\n                    \"prod\",\n                },\n            },\n            new Nobl9.Inputs.ProjectLabelArgs\n            {\n                Key = \"team\",\n                Values = new[]\n                {\n                    \"red\",\n                },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-nobl9/sdk/go/nobl9\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nobl9.NewProject(ctx, \"this\", \u0026nobl9.ProjectArgs{\n\t\t\tDescription: pulumi.String(\"An example N9 Terraform project\"),\n\t\t\tDisplayName: pulumi.String(\"My Project\"),\n\t\t\tLabels: ProjectLabelArray{\n\t\t\t\t\u0026ProjectLabelArgs{\n\t\t\t\t\tKey: pulumi.String(\"env\"),\n\t\t\t\t\tValues: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"dev\"),\n\t\t\t\t\t\tpulumi.String(\"prod\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026ProjectLabelArgs{\n\t\t\t\t\tKey: pulumi.String(\"team\"),\n\t\t\t\t\tValues: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"red\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nobl9.Project;\nimport com.pulumi.nobl9.ProjectArgs;\nimport com.pulumi.nobl9.inputs.ProjectLabelArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var this_ = new Project(\"this\", ProjectArgs.builder()        \n            .description(\"An example N9 Terraform project\")\n            .displayName(\"My Project\")\n            .labels(            \n                ProjectLabelArgs.builder()\n                    .key(\"env\")\n                    .values(                    \n                        \"dev\",\n                        \"prod\")\n                    .build(),\n                ProjectLabelArgs.builder()\n                    .key(\"team\")\n                    .values(\"red\")\n                    .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  this:\n    type: nobl9:Project\n    properties:\n      description: An example N9 Terraform project\n      displayName: My Project\n      labels:\n        - key: env\n          values:\n            - dev\n            - prod\n        - key: team\n          values:\n            - red\n```\n\n{{% /example %}}\n{{% /examples %}}\n## Useful Links\n\n[Projects in Nobl9 | Nobl9 Documentation](https://docs.nobl9.com/#projects)\n\n[Projects YAML Configuration | Nobl9 Documentation](https://docs.nobl9.com/yaml-guide#project)\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/ProjectLabel:ProjectLabel"
                    },
                    "description": "[Labels](https://docs.nobl9.com/Features/labels/) containing a single key and a list of values.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/ProjectLabel:ProjectLabel"
                    },
                    "description": "[Labels](https://docs.nobl9.com/Features/labels/) containing a single key and a list of values.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Project resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "User-friendly display name of the resource.\n"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nobl9:index/ProjectLabel:ProjectLabel"
                        },
                        "description": "[Labels](https://docs.nobl9.com/Features/labels/) containing a single key and a list of values.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "nobl9:index/roleBinding:RoleBinding": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\nHere's an example of RBAC resource configuration:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nobl9 from \"@pulumi/nobl9\";\n\nconst thisRoleBinding = new nobl9.RoleBinding(\"this\", {\n    projectRef: \"1234567890asdfghjkl\",\n    roleRef: \"project-owner\",\n    user: \"1234567890asdfghjkl\",\n});\n```\n```python\nimport pulumi\nimport pulumi_nobl9 as nobl9\n\nthis = nobl9.RoleBinding(\"this\",\n    project_ref=\"1234567890asdfghjkl\",\n    role_ref=\"project-owner\",\n    user=\"1234567890asdfghjkl\")\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Nobl9 = Pulumi.Nobl9;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var @this = new Nobl9.RoleBinding(\"this\", new()\n    {\n        ProjectRef = \"1234567890asdfghjkl\",\n        RoleRef = \"project-owner\",\n        User = \"1234567890asdfghjkl\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-nobl9/sdk/go/nobl9\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := nobl9.NewRoleBinding(ctx, \"this\", \u0026nobl9.RoleBindingArgs{\n\t\t\tProjectRef: pulumi.String(\"1234567890asdfghjkl\"),\n\t\t\tRoleRef:    pulumi.String(\"project-owner\"),\n\t\t\tUser:       pulumi.String(\"1234567890asdfghjkl\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nobl9.RoleBinding;\nimport com.pulumi.nobl9.RoleBindingArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var this_ = new RoleBinding(\"this\", RoleBindingArgs.builder()        \n            .projectRef(\"1234567890asdfghjkl\")\n            .roleRef(\"project-owner\")\n            .user(\"1234567890asdfghjkl\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  this:\n    type: nobl9:RoleBinding\n    properties:\n      projectRef: 1234567890asdfghjkl\n      roleRef: project-owner\n      user: 1234567890asdfghjkl\n```\n\n{{% /example %}}\n{{% /examples %}}\n## Useful Links\n\n[Role Based Access Control in Nobl9 | Nobl9 Documentation](https://docs.nobl9.com/Getting_Started/RBAC/)\n\n[Role Binding YAML Configuration | Nobl9 Documentation](https://docs.nobl9.com/Getting_Started/RBAC/role-binding-yaml)\n",
            "properties": {
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Automatically generated, unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "projectRef": {
                    "type": "string",
                    "description": "Project name, the project in which we want the user to assume the specified role. When `project_ref` is empty, `role_ref` must contain an Organization Role.\n"
                },
                "roleRef": {
                    "type": "string",
                    "description": "Role name; the role that you want the user to assume.\n"
                },
                "user": {
                    "type": "string",
                    "description": "Okta User ID that can be retrieved from the Nobl9 UI (**Settings** \u003e **Users**).\n"
                }
            },
            "required": [
                "name",
                "roleRef",
                "user"
            ],
            "inputProperties": {
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Automatically generated, unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "projectRef": {
                    "type": "string",
                    "description": "Project name, the project in which we want the user to assume the specified role. When `project_ref` is empty, `role_ref` must contain an Organization Role.\n"
                },
                "roleRef": {
                    "type": "string",
                    "description": "Role name; the role that you want the user to assume.\n"
                },
                "user": {
                    "type": "string",
                    "description": "Okta User ID that can be retrieved from the Nobl9 UI (**Settings** \u003e **Users**).\n"
                }
            },
            "requiredInputs": [
                "roleRef",
                "user"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering RoleBinding resources.\n",
                "properties": {
                    "displayName": {
                        "type": "string",
                        "description": "User-friendly display name of the resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Automatically generated, unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "projectRef": {
                        "type": "string",
                        "description": "Project name, the project in which we want the user to assume the specified role. When `project_ref` is empty, `role_ref` must contain an Organization Role.\n"
                    },
                    "roleRef": {
                        "type": "string",
                        "description": "Role name; the role that you want the user to assume.\n"
                    },
                    "user": {
                        "type": "string",
                        "description": "Okta User ID that can be retrieved from the Nobl9 UI (**Settings** \u003e **Users**).\n"
                    }
                },
                "type": "object"
            }
        },
        "nobl9:index/service:Service": {
            "description": "A **service** in Nobl9 is a high-level grouping of Service Level Objectives (SLOs). A service can represent a logical service endpoint like an API, a database, an application, or anything else you care about setting an SLO for. Every SLO in Nobl9 is tied to a service, and the service can have one or more SLOs.\n\nFor more details, refer to the [Service configuration | Nobl9 Documentation](https://docs.nobl9.com/yaml-guide#service).\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nHere's an example of Service resource configuration:\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as nobl9 from \"@pulumi/nobl9\";\n\nconst thisProject = new nobl9.Project(\"thisProject\", {\n    displayName: \"My Project\",\n    description: \"An example N9 Terraform project\",\n});\nconst thisService = new nobl9.Service(\"thisService\", {\n    project: thisProject.name,\n    displayName: thisProject.displayName.apply(displayName =\u003e `${displayName} Front Page`),\n    description: \"Front page service\",\n    labels: [\n        {\n            key: \"env\",\n            values: [\n                \"dev\",\n                \"prod\",\n            ],\n        },\n        {\n            key: \"team\",\n            values: [\"red\"],\n        },\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_nobl9 as nobl9\n\nthis_project = nobl9.Project(\"thisProject\",\n    display_name=\"My Project\",\n    description=\"An example N9 Terraform project\")\nthis_service = nobl9.Service(\"thisService\",\n    project=this_project.name,\n    display_name=this_project.display_name.apply(lambda display_name: f\"{display_name} Front Page\"),\n    description=\"Front page service\",\n    labels=[\n        nobl9.ServiceLabelArgs(\n            key=\"env\",\n            values=[\n                \"dev\",\n                \"prod\",\n            ],\n        ),\n        nobl9.ServiceLabelArgs(\n            key=\"team\",\n            values=[\"red\"],\n        ),\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing Pulumi;\nusing Nobl9 = Pulumi.Nobl9;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var thisProject = new Nobl9.Project(\"thisProject\", new()\n    {\n        DisplayName = \"My Project\",\n        Description = \"An example N9 Terraform project\",\n    });\n\n    var thisService = new Nobl9.Service(\"thisService\", new()\n    {\n        Project = thisProject.Name,\n        DisplayName = thisProject.DisplayName.Apply(displayName =\u003e $\"{displayName} Front Page\"),\n        Description = \"Front page service\",\n        Labels = new[]\n        {\n            new Nobl9.Inputs.ServiceLabelArgs\n            {\n                Key = \"env\",\n                Values = new[]\n                {\n                    \"dev\",\n                    \"prod\",\n                },\n            },\n            new Nobl9.Inputs.ServiceLabelArgs\n            {\n                Key = \"team\",\n                Values = new[]\n                {\n                    \"red\",\n                },\n            },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-nobl9/sdk/go/nobl9\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tthisProject, err := nobl9.NewProject(ctx, \"thisProject\", \u0026nobl9.ProjectArgs{\n\t\t\tDisplayName: pulumi.String(\"My Project\"),\n\t\t\tDescription: pulumi.String(\"An example N9 Terraform project\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = nobl9.NewService(ctx, \"thisService\", \u0026nobl9.ServiceArgs{\n\t\t\tProject: thisProject.Name,\n\t\t\tDisplayName: thisProject.DisplayName.ApplyT(func(displayName string) (string, error) {\n\t\t\t\treturn fmt.Sprintf(\"%v Front Page\", displayName), nil\n\t\t\t}).(pulumi.StringOutput),\n\t\t\tDescription: pulumi.String(\"Front page service\"),\n\t\t\tLabels: ServiceLabelArray{\n\t\t\t\t\u0026ServiceLabelArgs{\n\t\t\t\t\tKey: pulumi.String(\"env\"),\n\t\t\t\t\tValues: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"dev\"),\n\t\t\t\t\t\tpulumi.String(\"prod\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t\u0026ServiceLabelArgs{\n\t\t\t\t\tKey: pulumi.String(\"team\"),\n\t\t\t\t\tValues: pulumi.StringArray{\n\t\t\t\t\t\tpulumi.String(\"red\"),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nobl9.Project;\nimport com.pulumi.nobl9.ProjectArgs;\nimport com.pulumi.nobl9.Service;\nimport com.pulumi.nobl9.ServiceArgs;\nimport com.pulumi.nobl9.inputs.ServiceLabelArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var thisProject = new Project(\"thisProject\", ProjectArgs.builder()        \n            .displayName(\"My Project\")\n            .description(\"An example N9 Terraform project\")\n            .build());\n\n        var thisService = new Service(\"thisService\", ServiceArgs.builder()        \n            .project(thisProject.name())\n            .displayName(thisProject.displayName().applyValue(displayName -\u003e String.format(\"%s Front Page\", displayName)))\n            .description(\"Front page service\")\n            .labels(            \n                ServiceLabelArgs.builder()\n                    .key(\"env\")\n                    .values(                    \n                        \"dev\",\n                        \"prod\")\n                    .build(),\n                ServiceLabelArgs.builder()\n                    .key(\"team\")\n                    .values(\"red\")\n                    .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  thisProject:\n    type: nobl9:Project\n    properties:\n      displayName: My Project\n      description: An example N9 Terraform project\n  thisService:\n    type: nobl9:Service\n    properties:\n      project: ${thisProject.name}\n      displayName: ${thisProject.displayName} Front Page\n      description: Front page service\n      labels:\n        - key: env\n          values:\n            - dev\n            - prod\n        - key: team\n          values:\n            - red\n```\n\n{{% /example %}}\n{{% /examples %}}\n## Useful Links\n\n[Services in Nobl9 | Nobl9 Documentation](https://docs.nobl9.com/#services)\n\n[Service YAML Configuration | Nobl9 Documentation](https://docs.nobl9.com/yaml-guide/#service)\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/ServiceLabel:ServiceLabel"
                    },
                    "description": "[Labels](https://docs.nobl9.com/Features/labels/) containing a single key and a list of values.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "status": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    },
                    "description": "Status of created service.\n"
                }
            },
            "required": [
                "name",
                "project",
                "status"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/ServiceLabel:ServiceLabel"
                    },
                    "description": "[Labels](https://docs.nobl9.com/Features/labels/) containing a single key and a list of values.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "project"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Service resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "User-friendly display name of the resource.\n"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nobl9:index/ServiceLabel:ServiceLabel"
                        },
                        "description": "[Labels](https://docs.nobl9.com/Features/labels/) containing a single key and a list of values.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "project": {
                        "type": "string",
                        "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "status": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "number"
                        },
                        "description": "Status of created service.\n"
                    }
                },
                "type": "object"
            }
        },
        "nobl9:index/slo:Slo": {
            "description": "An SLO is a target value or range of values for a service that is measured by a service level indicator (SLI). SLOs allows you to define the reliability of your products and services in terms of customer expectations. You can create SLOs for user journeys, internal services, or even infrastructure.\n\nFor more information, refer to [SLO configuration documentation](https://docs.nobl9.com/yaml-guide#slo)\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.nobl9.Project;\nimport com.pulumi.nobl9.ProjectArgs;\nimport com.pulumi.nobl9.Service;\nimport com.pulumi.nobl9.ServiceArgs;\nimport com.pulumi.nobl9.Slo;\nimport com.pulumi.nobl9.SloArgs;\nimport com.pulumi.nobl9.inputs.SloLabelArgs;\nimport com.pulumi.nobl9.inputs.SloAttachmentArgs;\nimport com.pulumi.nobl9.inputs.SloTimeWindowArgs;\nimport com.pulumi.nobl9.inputs.SloObjectiveArgs;\nimport com.pulumi.nobl9.inputs.SloIndicatorArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var thisProject = new Project(\"thisProject\", ProjectArgs.builder()        \n            .displayName(\"Test N9 Terraform\")\n            .description(\"An example N9 Terraform project\")\n            .build());\n\n        var thisService = new Service(\"thisService\", ServiceArgs.builder()        \n            .project(thisProject.name())\n            .displayName(thisProject.displayName().applyValue(displayName -\u003e String.format(\"%s Front Page\", displayName)))\n            .description(\"Front page service\")\n            .build());\n\n        var thisSlo = new Slo(\"thisSlo\", SloArgs.builder()        \n            .service(thisService.name())\n            .budgetingMethod(\"Occurrences\")\n            .project(thisProject.name())\n            .labels(            \n                SloLabelArgs.builder()\n                    .key(\"env\")\n                    .values(                    \n                        \"dev\",\n                        \"prod\")\n                    .build(),\n                SloLabelArgs.builder()\n                    .key(\"team\")\n                    .values(\"red\")\n                    .build())\n            .attachments(            \n                SloAttachmentArgs.builder()\n                    .utl(\"https://www.nobl9.com/\")\n                    .displayName(\"SLO provider\")\n                    .build(),\n                SloAttachmentArgs.builder()\n                    .utl(\"https://duckduckgo.com/\")\n                    .displayName(\"Nice search engine\")\n                    .build())\n            .alertPolicies(\"foo-front-page-latency\")\n            .timeWindow(SloTimeWindowArgs.builder()\n                .unit(\"Day\")\n                .count(30)\n                .isRolling(true)\n                .build())\n            .objectives(SloObjectiveArgs.builder()\n                .name(\"tf-objective-1\")\n                .target(0.99)\n                .displayName(\"OK\")\n                .value(2000)\n                .op(\"gte\")\n                .rawMetrics(SloObjectiveRawMetricArgs.builder()\n                    .queries(SloObjectiveRawMetricQueryArgs.builder()\n                        .prometheuses(SloObjectiveRawMetricQueryPrometheusArgs.builder()\n                            .promql(\"\"\"\n          latency_west_c7{code=\"ALL\",instance=\"localhost:3000\",job=\"prometheus\",service=\"globacount\"}\n                            \"\"\")\n                            .build())\n                        .build())\n                    .build())\n                .build())\n            .indicator(SloIndicatorArgs.builder()\n                .name(\"test-terraform-prom-agent\")\n                .build())\n            .build());\n\n        var thisIndex_sloSlo = new Slo(\"thisIndex/sloSlo\", SloArgs.builder()        \n            .service(thisService.name())\n            .budgetingMethod(\"Occurrences\")\n            .project(thisProject.name())\n            .timeWindow(SloTimeWindowArgs.builder()\n                .unit(\"Day\")\n                .count(30)\n                .isRolling(true)\n                .build())\n            .objectives(SloObjectiveArgs.builder()\n                .name(\"tf-objective-1\")\n                .target(0.99)\n                .displayName(\"OK\")\n                .value(1)\n                .countMetrics(SloObjectiveCountMetricArgs.builder()\n                    .incremental(true)\n                    .goods(SloObjectiveCountMetricGoodArgs.builder()\n                        .prometheuses(SloObjectiveCountMetricGoodPrometheusArgs.builder()\n                            .promql(\"1.0\")\n                            .build())\n                        .build())\n                    .totals(SloObjectiveCountMetricTotalArgs.builder()\n                        .prometheuses(SloObjectiveCountMetricTotalPrometheusArgs.builder()\n                            .promql(\"1.0\")\n                            .build())\n                        .build())\n                    .build())\n                .build())\n            .indicator(SloIndicatorArgs.builder()\n                .name(\"test-terraform-prom-agent\")\n                .build())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  thisProject:\n    type: nobl9:Project\n    properties:\n      displayName: Test N9 Terraform\n      description: An example N9 Terraform project\n  thisService:\n    type: nobl9:Service\n    properties:\n      project: ${thisProject.name}\n      displayName: ${thisProject.displayName} Front Page\n      description: Front page service\n  thisSlo:\n    type: nobl9:Slo\n    properties:\n      service: ${thisService.name}\n      budgetingMethod: Occurrences\n      project: ${thisProject.name}\n      labels:\n        - key: env\n          values:\n            - dev\n            - prod\n        - key: team\n          values:\n            - red\n      attachments:\n        - utl: https://www.nobl9.com/\n          displayName: SLO provider\n        - utl: https://duckduckgo.com/\n          displayName: Nice search engine\n      alertPolicies:\n        - foo-front-page-latency\n      timeWindow:\n        unit: Day\n        count: 30\n        isRolling: true\n      objectives:\n        - name: tf-objective-1\n          target: 0.99\n          displayName: OK\n          value: 2000\n          op: gte\n          rawMetrics:\n            - queries:\n                - prometheuses:\n                    - promql: |2\n                                  latency_west_c7{code=\"ALL\",instance=\"localhost:3000\",job=\"prometheus\",service=\"globacount\"}\n      indicator:\n        name: test-terraform-prom-agent\n  thisIndex/sloSlo:\n    type: nobl9:Slo\n    properties:\n      service: ${thisService.name}\n      budgetingMethod: Occurrences\n      project: ${thisProject.name}\n      timeWindow:\n        unit: Day\n        count: 30\n        isRolling: true\n      objectives:\n        - name: tf-objective-1\n          target: 0.99\n          displayName: OK\n          value: 1\n          countMetrics:\n            - incremental: true\n              goods:\n                - prometheuses:\n                    - promql: 1.0\n              totals:\n                - prometheuses:\n                    - promql: 1.0\n      indicator:\n        name: test-terraform-prom-agent\n```\n\n{{% /example %}}\n{{% /examples %}}\n## Nobl9 Official Documentation\n\nhttps://docs.nobl9.com/SLOs_as_code/?_highlight=slo\n",
            "properties": {
                "alertPolicies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Alert Policies attached to SLO\n"
                },
                "attachments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloAttachment:SloAttachment"
                    },
                    "deprecationMessage": "\"attachments\" argument is deprecated use \"attachment\" instead"
                },
                "budgetingMethod": {
                    "type": "string",
                    "description": "Method which will be use to calculate budget\n"
                },
                "composite": {
                    "$ref": "#/types/nobl9:index/SloComposite:SloComposite",
                    "description": "[Composite SLO documentation](https://docs.nobl9.com/yaml-guide/#slo)\n"
                },
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "indicator": {
                    "$ref": "#/types/nobl9:index/SloIndicator:SloIndicator",
                    "description": "\n"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloLabel:SloLabel"
                    },
                    "description": "[Labels](https://docs.nobl9.com/Features/labels/) containing a single key and a list of values.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "objectives": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjective:SloObjective"
                    },
                    "description": "[Objectives documentation](https://docs.nobl9.com/yaml-guide#objective)\n"
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n"
                },
                "service": {
                    "type": "string",
                    "description": "Name of the service\n"
                },
                "timeWindow": {
                    "$ref": "#/types/nobl9:index/SloTimeWindow:SloTimeWindow",
                    "description": "\n"
                }
            },
            "required": [
                "budgetingMethod",
                "indicator",
                "name",
                "objectives",
                "project",
                "service",
                "timeWindow"
            ],
            "inputProperties": {
                "alertPolicies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Alert Policies attached to SLO\n"
                },
                "attachments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloAttachment:SloAttachment"
                    },
                    "deprecationMessage": "\"attachments\" argument is deprecated use \"attachment\" instead"
                },
                "budgetingMethod": {
                    "type": "string",
                    "description": "Method which will be use to calculate budget\n"
                },
                "composite": {
                    "$ref": "#/types/nobl9:index/SloComposite:SloComposite",
                    "description": "[Composite SLO documentation](https://docs.nobl9.com/yaml-guide/#slo)\n"
                },
                "description": {
                    "type": "string",
                    "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "User-friendly display name of the resource.\n"
                },
                "indicator": {
                    "$ref": "#/types/nobl9:index/SloIndicator:SloIndicator",
                    "description": "\n"
                },
                "labels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloLabel:SloLabel"
                    },
                    "description": "[Labels](https://docs.nobl9.com/Features/labels/) containing a single key and a list of values.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "objectives": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/nobl9:index/SloObjective:SloObjective"
                    },
                    "description": "[Objectives documentation](https://docs.nobl9.com/yaml-guide#objective)\n"
                },
                "project": {
                    "type": "string",
                    "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                    "willReplaceOnChanges": true
                },
                "service": {
                    "type": "string",
                    "description": "Name of the service\n"
                },
                "timeWindow": {
                    "$ref": "#/types/nobl9:index/SloTimeWindow:SloTimeWindow",
                    "description": "\n"
                }
            },
            "requiredInputs": [
                "budgetingMethod",
                "indicator",
                "objectives",
                "project",
                "service",
                "timeWindow"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Slo resources.\n",
                "properties": {
                    "alertPolicies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Alert Policies attached to SLO\n"
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nobl9:index/SloAttachment:SloAttachment"
                        },
                        "deprecationMessage": "\"attachments\" argument is deprecated use \"attachment\" instead"
                    },
                    "budgetingMethod": {
                        "type": "string",
                        "description": "Method which will be use to calculate budget\n"
                    },
                    "composite": {
                        "$ref": "#/types/nobl9:index/SloComposite:SloComposite",
                        "description": "[Composite SLO documentation](https://docs.nobl9.com/yaml-guide/#slo)\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Optional description of the resource. Here, you can add details about who is responsible for the integration (team/owner) or the purpose of creating it.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "User-friendly display name of the resource.\n"
                    },
                    "indicator": {
                        "$ref": "#/types/nobl9:index/SloIndicator:SloIndicator",
                        "description": "\n"
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nobl9:index/SloLabel:SloLabel"
                        },
                        "description": "[Labels](https://docs.nobl9.com/Features/labels/) containing a single key and a list of values.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Unique name of the resource, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "objectives": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/nobl9:index/SloObjective:SloObjective"
                        },
                        "description": "[Objectives documentation](https://docs.nobl9.com/yaml-guide#objective)\n"
                    },
                    "project": {
                        "type": "string",
                        "description": "Name of the Nobl9 project the resource sits in, must conform to the naming convention from [DNS RFC1123](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).\n",
                        "willReplaceOnChanges": true
                    },
                    "service": {
                        "type": "string",
                        "description": "Name of the service\n"
                    },
                    "timeWindow": {
                        "$ref": "#/types/nobl9:index/SloTimeWindow:SloTimeWindow",
                        "description": "\n"
                    }
                },
                "type": "object"
            }
        }
    }
}